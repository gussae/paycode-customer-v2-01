#Note, the primary key should be the same as the cognito username and passed as sub:username in the JWT  (we do not auto generated ID here to avoid reverse lookup each time the user logs in to find out the app layer username and match it with the cognito username)

#Inline auth is necessary to block a user from editing the owner field , which is auto generated by the system

#using username instead of auto generated IDs for User and Profile to minimize unnecessary calls to the be
type User @model @auth(rules: [{ allow: owner, ownerField: "username" }]) {
  username: String!
    @primaryKey
    @auth(
      rules: [
        {
          allow: owner
          ownerField: "username"
          operations: [create, read, delete]
        }
      ]
    )
  email: String!
  document: [Document] @hasMany
  profile: Profile @hasOne
  notifications: [Notification] @hasMany
}

type Profile @model @auth(rules: [{ allow: owner, ownerField: "username" }]) {
  username: String!
    @primaryKey
    @auth(
      rules: [
        {
          allow: owner
          ownerField: "username"
          operations: [create, read, delete]
        }
      ]
    )
  bio: String
  user: User @belongsTo(fields: ["username"])
}




