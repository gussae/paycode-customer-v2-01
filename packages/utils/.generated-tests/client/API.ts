/**
 * Generated by orval v6.25.0 üç∫
 * Do not edit manually.
 * PayCodeProxy API
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type PostPayment202 = {
  /** Unique identifier for the payment. */
  id?: string;
  /** Status of the payment operation. */
  status?: string;
};

export type PostPaymentBody = {
  /** Amount to be paid. */
  amount?: string;
  /** The username initiating the payment. */
  username?: string;
};

export type GetTransactionById200 = {
  /** Transaction amount. */
  amount?: string;
  /** Date when the transaction occurred. */
  date?: string;
  /** Unique identifier for the transaction. */
  id?: string;
  /** Current status of the transaction. */
  status?: string;
};

export type GetTransactionByIdParams = {
id: string;
username: string;
};

export type GetTransactions200Item = {
  /** Transaction amount. */
  amount?: string;
  /** Date when the transaction occurred. */
  date?: string;
  /** Unique identifier for the transaction. */
  id?: string;
  /** Current status of the transaction. */
  status?: string;
};

export type GetTransactionsParams = {
username: string;
};

export type GetBalance200 = {
  /** The current balance for the specified username. */
  balance?: number;
};

export type GetBalanceParams = {
username: string;
};





  /**
 * @summary Get balance for a user
 */
export const getBalance = <TData = AxiosResponse<GetBalance200>>(
    params: GetBalanceParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/balance`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Get transactions for a user
 */
export const getTransactions = <TData = AxiosResponse<GetTransactions200Item[]>>(
    params: GetTransactionsParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/transactions`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Get transaction by ID and username
 */
export const getTransactionById = <TData = AxiosResponse<GetTransactionById200>>(
    params: GetTransactionByIdParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/transaction`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Post a payment
 */
export const postPayment = <TData = AxiosResponse<PostPayment202>>(
    postPaymentBody: PostPaymentBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/payment`,
      postPaymentBody,options
    );
  }

export type GetBalanceResult = AxiosResponse<GetBalance200>
export type GetTransactionsResult = AxiosResponse<GetTransactions200Item[]>
export type GetTransactionByIdResult = AxiosResponse<GetTransactionById200>
export type PostPaymentResult = AxiosResponse<PostPayment202>

export const getAxiosInstance = () => axios;
