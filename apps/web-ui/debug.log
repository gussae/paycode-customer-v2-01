
> @paycode-customer-v2/web-ui@0.0.1 prebuild
> node scripts/prebuild.js

Updated .env
{
  configurationJson: '{"aws_appsync_graphqlEndpoint":"https://anytn6cq3ja6dhspw6qh62hl3y.appsync-api.us-west-2.amazonaws.com/graphql","aws_user_pools_id":"us-west-2_GwWa3hP5B","aws_user_pools_web_client_id":"6rndtlsj5pkotcds0kjuqlm5il","aws_project_region":"us-west-2","aws_cognito_identity_pool_id":"us-west-2:880309ec-e484-44ba-a7c6-a2a6c115ba24","aws_cognito_region":"us-west-2","aws_appsync_region":"us-west-2","aws_appsync_authenticationType":"AMAZON_COGNITO_USER_POOLS","paycode_proxy_api_url":"https://qf3aqz9bf0.execute-api.us-west-2.amazonaws.com/dev"}'
}

> @paycode-customer-v2/web-ui@0.0.1 build
> vite build --debug

[36mvite v5.1.4 [32mbuilding for production...[36m[39m
____9999999____ {
  code: '<!doctype html>\n' +
    '<html lang="en">\n' +
    '  <head>\n' +
    '    <meta charset="UTF-8" />\n' +
    '    <link rel="icon" type="image/svg+xml" href="/vite.svg" />\n' +
    '    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n' +
    '    <title>Vite + React</title>\n' +
    '  </head>\n' +
    '  <body>\n' +
    '    <div id="root"></div>\n' +
    '    <script type="module" src="/src/main.jsx"></script>\n' +
    '  </body>\n' +
    '</html>\n'
} [Function: logger]
transforming...
____9999999____ {
  code: '__VITE_IS_MODERN__&&(function polyfill() {\n' +
    "    const relList = document.createElement('link').relList;\n" +
    "    if (relList && relList.supports && relList.supports('modulepreload')) {\n" +
    '        return;\n' +
    '    }\n' +
    `    for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {\n` +
    '        processPreload(link);\n' +
    '    }\n' +
    '    new MutationObserver((mutations) => {\n' +
    '        for (const mutation of mutations) {\n' +
    "            if (mutation.type !== 'childList') {\n" +
    '                continue;\n' +
    '            }\n' +
    '            for (const node of mutation.addedNodes) {\n' +
    "                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n" +
    '                    processPreload(node);\n' +
    '            }\n' +
    '        }\n' +
    '    }).observe(document, { childList: true, subtree: true });\n' +
    '    function getFetchOpts(link) {\n' +
    '        const fetchOpts = {};\n' +
    '        if (link.integrity)\n' +
    '            fetchOpts.integrity = link.integrity;\n' +
    '        if (link.referrerPolicy)\n' +
    '            fetchOpts.referrerPolicy = link.referrerPolicy;\n' +
    "        if (link.crossOrigin === 'use-credentials')\n" +
    "            fetchOpts.credentials = 'include';\n" +
    "        else if (link.crossOrigin === 'anonymous')\n" +
    "            fetchOpts.credentials = 'omit';\n" +
    '        else\n' +
    "            fetchOpts.credentials = 'same-origin';\n" +
    '        return fetchOpts;\n' +
    '    }\n' +
    '    function processPreload(link) {\n' +
    '        if (link.ep)\n' +
    '            // ep marker = processed\n' +
    '            return;\n' +
    '        link.ep = true;\n' +
    '        // prepopulate the load record\n' +
    '        const fetchOpts = getFetchOpts(link);\n' +
    '        fetch(link.href, fetchOpts);\n' +
    '    }\n' +
    '}());',
  moduleSideEffects: true
} [Function: logger]
____9999999____ {
  code: "import React from 'react';\n" +
    "import ReactDOM from 'react-dom/client';\n" +
    "import App from './App.jsx';\n" +
    "import './index.css';\n" +
    "import { Amplify } from 'aws-amplify';\n" +
    "import amplifyBeConfig from './amplify-be.config.json';\n" +
    '\n' +
    'Amplify.configure(amplifyBeConfig);\n' +
    '\n' +
    "ReactDOM.createRoot(document.getElementById('root')).render(\n" +
    '  <React.StrictMode>\n' +
    '    <App />\n' +
    '  </React.StrictMode>,\n' +
    ');\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    "  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('./cjs/react-jsx-runtime.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    "  module.exports = require('./cjs/react.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('./cjs/react.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import './App.css';\n" +
    "import Home from './Home';\n" +
    "import { Authenticator } from '@aws-amplify/ui-react';\n" +
    '\n' +
    'function App() {\n' +
    '  return (\n' +
    '    <Authenticator>\n' +
    '      <Home />\n' +
    '    </Authenticator>\n' +
    '  );\n' +
    '}\n' +
    '\n' +
    'export default App;\n'
} [Function: logger]
____9999999____ {
  code: ':root {\n' +
    '  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;\n' +
    '  line-height: 1.5;\n' +
    '  font-weight: 400;\n' +
    '\n' +
    '  color-scheme: light dark;\n' +
    '  color: rgba(255, 255, 255, 0.87);\n' +
    '  background-color: #242424;\n' +
    '\n' +
    '  font-synthesis: none;\n' +
    '  text-rendering: optimizeLegibility;\n' +
    '  -webkit-font-smoothing: antialiased;\n' +
    '  -moz-osx-font-smoothing: grayscale;\n' +
    '}\n' +
    '\n' +
    'a {\n' +
    '  font-weight: 500;\n' +
    '  color: #646cff;\n' +
    '  text-decoration: inherit;\n' +
    '}\n' +
    'a:hover {\n' +
    '  color: #535bf2;\n' +
    '}\n' +
    '\n' +
    'body {\n' +
    '  margin: 0;\n' +
    '  display: flex;\n' +
    '  place-items: center;\n' +
    '  min-width: 320px;\n' +
    '  min-height: 100vh;\n' +
    '}\n' +
    '\n' +
    'h1 {\n' +
    '  font-size: 3.2em;\n' +
    '  line-height: 1.1;\n' +
    '}\n' +
    '\n' +
    'button {\n' +
    '  border-radius: 8px;\n' +
    '  border: 1px solid transparent;\n' +
    '  padding: 0.6em 1.2em;\n' +
    '  font-size: 1em;\n' +
    '  font-weight: 500;\n' +
    '  font-family: inherit;\n' +
    '  background-color: #1a1a1a;\n' +
    '  cursor: pointer;\n' +
    '  transition: border-color 0.25s;\n' +
    '}\n' +
    'button:hover {\n' +
    '  border-color: #646cff;\n' +
    '}\n' +
    'button:focus,\n' +
    'button:focus-visible {\n' +
    '  outline: 4px auto -webkit-focus-ring-color;\n' +
    '}\n' +
    '\n' +
    '@media (prefers-color-scheme: light) {\n' +
    '  :root {\n' +
    '    color: #213547;\n' +
    '    background-color: #ffffff;\n' +
    '  }\n' +
    '  a:hover {\n' +
    '    color: #747bff;\n' +
    '  }\n' +
    '  button {\n' +
    '    background-color: #f9f9f9;\n' +
    '  }\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "export { DefaultAmplify as Amplify } from './initSingleton.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "var m = require('react-dom');\n" +
    "if (process.env.NODE_ENV === 'production') {\n" +
    '  exports.createRoot = m.createRoot;\n' +
    '  exports.hydrateRoot = m.hydrateRoot;\n' +
    '} else {\n' +
    '  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n' +
    '  exports.createRoot = function(c, o) {\n' +
    '    i.usingClientEntryPoint = true;\n' +
    '    try {\n' +
    '      return m.createRoot(c, o);\n' +
    '    } finally {\n' +
    '      i.usingClientEntryPoint = false;\n' +
    '    }\n' +
    '  };\n' +
    '  exports.hydrateRoot = function(c, h, o) {\n' +
    '    i.usingClientEntryPoint = true;\n' +
    '    try {\n' +
    '      return m.hydrateRoot(c, h, o);\n' +
    '    } finally {\n' +
    '      i.usingClientEntryPoint = false;\n' +
    '    }\n' +
    '  };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '{"aws_appsync_graphqlEndpoint":"https://anytn6cq3ja6dhspw6qh62hl3y.appsync-api.us-west-2.amazonaws.com/graphql","aws_user_pools_id":"us-west-2_GwWa3hP5B","aws_user_pools_web_client_id":"6rndtlsj5pkotcds0kjuqlm5il","aws_project_region":"us-west-2","aws_cognito_identity_pool_id":"us-west-2:880309ec-e484-44ba-a7c6-a2a6c115ba24","aws_cognito_region":"us-west-2","aws_appsync_region":"us-west-2","aws_appsync_authenticationType":"AMAZON_COGNITO_USER_POOLS","paycode_proxy_api_url":"https://qf3aqz9bf0.execute-api.us-west-2.amazonaws.com/dev"}'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, CookieStorage, defaultStorage } from '@aws-amplify/core';\n" +
    "import { parseAWSExports } from '@aws-amplify/core/internals/utils';\n" +
    "import { cognitoUserPoolsTokenProvider, cognitoCredentialsProvider } from '@aws-amplify/auth/cognito';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const DefaultAmplify = {\n' +
    '    /**\n' +
    '     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n' +
    '     *\n' +
    '     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n' +
    '     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n' +
    '     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n' +
    '     *\n' +
    '     * @example\n' +
    "     * import config from './amplifyconfiguration.json';\n" +
    '     *\n' +
    '     * Amplify.configure(config);\n' +
    '     */\n' +
    '    configure(resourceConfig, libraryOptions) {\n' +
    '        let resolvedResourceConfig;\n' +
    "        if (Object.keys(resourceConfig).some(key => key.startsWith('aws_'))) {\n" +
    '            resolvedResourceConfig = parseAWSExports(resourceConfig);\n' +
    '        }\n' +
    '        else {\n' +
    '            resolvedResourceConfig = resourceConfig;\n' +
    '        }\n' +
    '        // If no Auth config is provided, no special handling will be required, configure as is.\n' +
    '        // Otherwise, we can assume an Auth config is provided from here on.\n' +
    '        if (!resolvedResourceConfig.Auth) {\n' +
    '            Amplify.configure(resolvedResourceConfig, libraryOptions);\n' +
    '            return;\n' +
    '        }\n' +
    '        // If Auth options are provided, always just configure as is.\n' +
    '        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n' +
    '        if (libraryOptions?.Auth) {\n' +
    '            Amplify.configure(resolvedResourceConfig, libraryOptions);\n' +
    '            return;\n' +
    '        }\n' +
    '        // If no Auth libraryOptions were previously configured, then always add default providers.\n' +
    '        if (!Amplify.libraryOptions.Auth) {\n' +
    '            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n' +
    '            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n' +
    '            // TODO: allow configure with a public interface\n' +
    '            libraryOptions?.ssr\n' +
    "                ? new CookieStorage({ sameSite: 'lax' })\n" +
    '                : defaultStorage);\n' +
    '            Amplify.configure(resolvedResourceConfig, {\n' +
    '                ...libraryOptions,\n' +
    '                Auth: {\n' +
    '                    tokenProvider: cognitoUserPoolsTokenProvider,\n' +
    '                    credentialsProvider: cognitoCredentialsProvider,\n' +
    '                },\n' +
    '            });\n' +
    '            return;\n' +
    '        }\n' +
    '        // At this point, Auth libraryOptions would have been previously configured and no overriding\n' +
    '        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n' +
    '        if (libraryOptions) {\n' +
    '            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n' +
    '            if (libraryOptions.ssr !== undefined) {\n' +
    '                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n' +
    '                // TODO: allow configure with a public interface\n' +
    '                libraryOptions.ssr\n' +
    "                    ? new CookieStorage({ sameSite: 'lax' })\n" +
    '                    : defaultStorage);\n' +
    '            }\n' +
    '            Amplify.configure(resolvedResourceConfig, {\n' +
    '                Auth: Amplify.libraryOptions.Auth,\n' +
    '                ...libraryOptions,\n' +
    '            });\n' +
    '            return;\n' +
    '        }\n' +
    '        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n' +
    '        // configured libraryOptions.\n' +
    '        Amplify.configure(resolvedResourceConfig);\n' +
    '    },\n' +
    '    /**\n' +
    '     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n' +
    '     * `Amplify.configure`.\n' +
    '     *\n' +
    '     * @returns An {@link ResourcesConfig} object.\n' +
    '     */\n' +
    '    getConfig() {\n' +
    '        return Amplify.getConfig();\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { DefaultAmplify };\n' +
    '//# sourceMappingURL=initSingleton.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * react-jsx-runtime.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    `'use strict';var f=require("react"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\n` +
    'function q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=""+g);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n'
} [Function: logger]
____9999999____ {
  code: "export { Hub } from './Hub/index.mjs';\n" +
    "export { decodeJWT } from './singleton/Auth/utils/index.mjs';\n" +
    "export { Amplify, AmplifyClass as AmplifyClassV6 } from './singleton/Amplify.mjs';\n" +
    "export { fetchAuthSession } from './singleton/apis/fetchAuthSession.mjs';\n" +
    "export { clearCredentials } from './singleton/apis/clearCredentials.mjs';\n" +
    "export { getId } from './awsClients/cognitoIdentity/getId.mjs';\n" +
    "export { getCredentialsForIdentity } from './awsClients/cognitoIdentity/getCredentialsForIdentity.mjs';\n" +
    "export { defaultStorage, sessionStorage, sharedInMemoryStorage } from './storage/index.mjs';\n" +
    "export { Cache } from './Cache/index.mjs';\n" +
    "export { I18n } from './I18n/index.mjs';\n" +
    "export { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\n" +
    "export { ServiceWorkerClass as ServiceWorker } from './ServiceWorker/ServiceWorker.mjs';\n" +
    "export { CookieStorage } from './storage/CookieStorage.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { default as WordArray } from './utils/WordArray.mjs';\n" +
    "export { generateRandomString } from './utils/generateRandomString.mjs';\n" +
    "import './utils/getClientInfo/getClientInfo.mjs';\n" +
    "export { isBrowser } from './utils/isBrowser.mjs';\n" +
    "export { isWebWorker } from './utils/isWebWorker.mjs';\n" +
    "export { NonRetryableError } from './utils/retry/NonRetryableError.mjs';\n" +
    "export { isNonRetryableError } from './utils/retry/isNonRetryableError.mjs';\n" +
    "export { jitteredBackoff } from './utils/retry/jitteredBackoff.mjs';\n" +
    "export { jitteredExponentialRetry } from './utils/retry/jitteredExponentialRetry.mjs';\n" +
    "export { retry } from './utils/retry/retry.mjs';\n" +
    "export { urlSafeDecode } from './utils/urlSafeDecode.mjs';\n" +
    "export { urlSafeEncode } from './utils/urlSafeEncode.mjs';\n" +
    "export { deDupeAsyncFunction } from './utils/deDupeAsyncFunction.mjs';\n" +
    "export { parseAWSExports } from './parseAWSExports.mjs';\n" +
    "export { ADD_OAUTH_LISTENER } from './singleton/constants.mjs';\n" +
    "export { amplifyUuid } from './utils/amplifyUuid/index.mjs';\n" +
    "export { AmplifyUrl, AmplifyUrlSearchParams } from './utils/amplifyUrl/index.mjs';\n" +
    "export { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT } from './singleton/Auth/utils/index.mjs';\n" +
    "export { isTokenExpired } from './singleton/Auth/index.mjs';\n" +
    "export { Signer } from './Signer/Signer.mjs';\n" +
    "export { haveCredentialsChanged } from './utils/haveCredentialsChanged.mjs';\n" +
    "export { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject } from './Platform/index.mjs';\n" +
    "export { AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction } from './Platform/types.mjs';\n" +
    "export { setCustomUserAgent } from './Platform/customUserAgent.mjs';\n" +
    "export { AmplifyError } from './errors/AmplifyError.mjs';\n" +
    "export { ApiError } from './errors/APIError.mjs';\n" +
    "export { createAssertionFunction } from './errors/createAssertionFunction.mjs';\n" +
    "export { PlatformNotSupportedError } from './errors/PlatformNotSupportedError.mjs';\n" +
    "import './errors/errorHelpers.mjs';\n" +
    "export { AmplifyErrorCode } from './types/errors.mjs';\n" +
    "export { BackgroundProcessManager } from './BackgroundProcessManager/BackgroundProcessManager.mjs';\n" +
    "export { Mutex } from './Mutex/Mutex.mjs';\n" +
    "export { Reachability } from './Reachability/Reachability.mjs';\n" +
    "export { USER_AGENT_HEADER } from './constants.mjs';\n" +
    "export { fetchAuthSession } from './singleton/apis/internal/fetchAuthSession.mjs';\n" +
    "export { AMPLIFY_SYMBOL, HubInternal } from './Hub/index.mjs';\n" +
    "export { base64Decoder } from './utils/convert/base64/base64Decoder.mjs';\n" +
    "export { base64Encoder } from './utils/convert/base64/base64Encoder.mjs';\n" +
    "export { getCrypto } from './utils/globalHelpers/index.mjs';\n" +
    "export { cryptoSecureRandomInt } from './utils/cryptoSecureRandomInt.mjs';\n" +
    "export { sessionListener } from './utils/sessionListener/index.mjs';\n" +
    "export { SESSION_START_EVENT, SESSION_STOP_EVENT } from './utils/sessionListener/constants.mjs';\n" +
    '//# sourceMappingURL=libraryUtils.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { signUp } from './apis/signUp.mjs';\n" +
    "export { resetPassword } from './apis/resetPassword.mjs';\n" +
    "export { confirmResetPassword } from './apis/confirmResetPassword.mjs';\n" +
    "export { signIn } from './apis/signIn.mjs';\n" +
    "export { resendSignUpCode } from './apis/resendSignUpCode.mjs';\n" +
    "export { confirmSignUp } from './apis/confirmSignUp.mjs';\n" +
    "export { confirmSignIn } from './apis/confirmSignIn.mjs';\n" +
    "export { updateMFAPreference } from './apis/updateMFAPreference.mjs';\n" +
    "export { fetchMFAPreference } from './apis/fetchMFAPreference.mjs';\n" +
    "export { verifyTOTPSetup } from './apis/verifyTOTPSetup.mjs';\n" +
    "export { updatePassword } from './apis/updatePassword.mjs';\n" +
    "export { setUpTOTP } from './apis/setUpTOTP.mjs';\n" +
    "export { updateUserAttributes } from './apis/updateUserAttributes.mjs';\n" +
    "export { updateUserAttribute } from './apis/updateUserAttribute.mjs';\n" +
    "export { getCurrentUser } from './apis/getCurrentUser.mjs';\n" +
    "export { confirmUserAttribute } from './apis/confirmUserAttribute.mjs';\n" +
    "export { signInWithRedirect } from './apis/signInWithRedirect.mjs';\n" +
    "export { fetchUserAttributes } from './apis/fetchUserAttributes.mjs';\n" +
    "export { signOut } from './apis/signOut.mjs';\n" +
    "export { sendUserAttributeVerificationCode } from './apis/sendUserAttributeVerificationCode.mjs';\n" +
    "export { deleteUserAttributes } from './apis/deleteUserAttributes.mjs';\n" +
    "export { deleteUser } from './apis/deleteUser.mjs';\n" +
    "export { rememberDevice } from './apis/rememberDevice.mjs';\n" +
    "export { forgetDevice } from './apis/forgetDevice.mjs';\n" +
    "export { fetchDevices } from './apis/fetchDevices.mjs';\n" +
    "export { autoSignIn } from './apis/autoSignIn.mjs';\n" +
    "export { cognitoCredentialsProvider } from './credentialsProvider/index.mjs';\n" +
    "export { refreshAuthTokens } from './utils/refreshAuthTokens.mjs';\n" +
    "export { DefaultTokenStore } from './tokenProvider/TokenStore.mjs';\n" +
    "export { TokenOrchestrator } from './tokenProvider/TokenOrchestrator.mjs';\n" +
    "export { cognitoUserPoolsTokenProvider } from './tokenProvider/tokenProvider.mjs';\n" +
    "export { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider/credentialsProvider.mjs';\n" +
    "export { DefaultIdentityIdStore } from './credentialsProvider/IdentityIdStore.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    'function checkDCE() {\n' +
    '  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n' +
    '  if (\n' +
    "    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n" +
    "    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n" +
    '  ) {\n' +
    '    return;\n' +
    '  }\n' +
    "  if (process.env.NODE_ENV !== 'production') {\n" +
    '    // This branch is unreachable because this function is only called\n' +
    '    // in production, but the condition is true only in development.\n' +
    "    // Therefore if the branch is still here, dead code elimination wasn't\n" +
    '    // properly applied.\n' +
    "    // Don't change the message. React DevTools relies on it. Also make sure\n" +
    "    // this message doesn't occur elsewhere in this function, or it will cause\n" +
    '    // a false positive.\n' +
    "    throw new Error('^_^');\n" +
    '  }\n' +
    '  try {\n' +
    "    // Verify that the code above has been dead code eliminated (DCE'd).\n" +
    '    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n' +
    '  } catch (err) {\n' +
    "    // DevTools shouldn't crash React, no matter what.\n" +
    '    // We should still report in case we break this code.\n' +
    '    console.error(err);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    '  // DCE check should happen before ReactDOM bundle executes so that\n' +
    '  // DevTools can report bad minification during injection.\n' +
    '  checkDCE();\n' +
    "  module.exports = require('./cjs/react-dom.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('./cjs/react-dom.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * react.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    `'use strict';var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}\n` +
    'var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\n' +
    'E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\n' +
    'H.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\n' +
    'function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\n' +
    'function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\n' +
    'function R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=\n' +
    'a[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}\n' +
    'function S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\n' +
    'var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;\n' +
    'exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\n' +
    'exports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\n' +
    'for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\n' +
    'exports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};\n' +
    'exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\n' +
    'exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\n' +
    'exports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";\n'
} [Function: logger]
____9999999____ {
  code: "import { useEffect, useState } from 'react';\n" +
    "import { getProxyApiAdapter } from './utils';\n" +
    "import { getCurrentUser } from 'aws-amplify/auth';\n" +
    '\n' +
    "import './home.css';\n" +
    '\n' +
    "import { Card, Heading, Loader } from '@aws-amplify/ui-react';\n" +
    '\n' +
    'function Home() {\n' +
    '  const [balance, setBalance] = useState(null);\n' +
    "  const [accountId, setAccountId] = useState('');\n" +
    "  const [username, setUsername] = useState('');\n" +
    '  useEffect(() => {\n' +
    '    const init = async () => {\n' +
    '      await getUsername();\n' +
    "      setAccountId('987654321');\n" +
    '    };\n' +
    '    init();\n' +
    '  }, []);\n' +
    '\n' +
    '  useEffect(() => {\n' +
    '    if (username) {\n' +
    '      fetchBalance();\n' +
    '    }\n' +
    '  }, [username]); //Watch changes to username\n' +
    '\n' +
    '  async function getUsername() {\n' +
    '    try {\n' +
    '      const user = await getCurrentUser();\n' +
    '      setUsername(user.username);\n' +
    '    } catch (error) {\n' +
    `      console.error("Error fetching user's username:", error);\n` +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  async function fetchBalance() {\n' +
    '    try {\n' +
    '      const proxyApi = await getProxyApiAdapter();\n' +
    '      const result = await proxyApi.getBalance({ username });\n' +
    '      if (result.data) {\n' +
    '        const balanceResponse = result.data.balance;\n' +
    '        console.log(999, { balanceResponse });\n' +
    "        const formattedBalance = `$${balanceResponse.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n" +
    '        setBalance(formattedBalance);\n' +
    '      } else {\n' +
    "        console.error('No balance data received');\n" +
    "        setBalance('Error');\n" +
    '      }\n' +
    '    } catch (error) {\n' +
    "      console.error('Error fetching balance:', error);\n" +
    "      setBalance('Error');\n" +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return (\n' +
    '    <div className="root-view main-view home">\n' +
    '      <Card variation="elevated">\n' +
    '        <Heading level={4}>Account Summary</Heading>\n' +
    '        <div className="accounts">\n' +
    '          <div className="labels">\n' +
    '            <div>Account Number</div>\n' +
    '            <div>Account Name</div>\n' +
    '            <div>Currency</div>\n' +
    '            <div>Current Balance</div>\n' +
    '          </div>\n' +
    '\n' +
    '          <div className="account">\n' +
    '            <div>\n' +
    '              <a>{accountId}</a>\n' +
    '            </div>\n' +
    '            <div>{username}</div>\n' +
    '            <div>CAD</div>\n' +
    '            <div>{balance ? balance : <Loader />}</div>\n' +
    '          </div>\n' +
    '\n' +
    '          <div className="totals">\n' +
    '            <div className="label">Totals</div>\n' +
    '            <div className="figure">{balance ? balance : <Loader />}</div>\n' +
    '          </div>\n' +
    '        </div>\n' +
    '      </Card>\n' +
    '    </div>\n' +
    '  );\n' +
    '}\n' +
    '\n' +
    'export default Home;\n'
} [Function: logger]
____9999999____ {
  code: '#root {\n' +
    '  max-width: 1280px;\n' +
    '  margin: 0 auto;\n' +
    '  padding: 2rem;\n' +
    '  text-align: center;\n' +
    '}\n' +
    '\n' +
    '.logo {\n' +
    '  height: 6em;\n' +
    '  padding: 1.5em;\n' +
    '  will-change: filter;\n' +
    '  transition: filter 300ms;\n' +
    '}\n' +
    '.logo:hover {\n' +
    '  filter: drop-shadow(0 0 2em #646cffaa);\n' +
    '}\n' +
    '.logo.react:hover {\n' +
    '  filter: drop-shadow(0 0 2em #61dafbaa);\n' +
    '}\n' +
    '\n' +
    '@keyframes logo-spin {\n' +
    '  from {\n' +
    '    transform: rotate(0deg);\n' +
    '  }\n' +
    '  to {\n' +
    '    transform: rotate(360deg);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '@media (prefers-reduced-motion: no-preference) {\n' +
    '  a:nth-of-type(2) .logo {\n' +
    '    animation: logo-spin infinite 20s linear;\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '.card {\n' +
    '  padding: 2em;\n' +
    '}\n' +
    '\n' +
    '.read-the-docs {\n' +
    '  color: #888;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import * as index from './components/index.mjs';\n" +
    'export { index as components };\n' +
    "export { useTheme } from './hooks/useTheme.mjs';\n" +
    "export { useBreakpointValue } from './hooks/useBreakpointValue.mjs';\n" +
    "import * as index$1 from './primitives/index.mjs';\n" +
    'export { index$1 as primitives };\n' +
    "export { createTheme, defaultDarkModeOverride, defaultTheme, translations } from '@aws-amplify/ui';\n" +
    "export { default as AccountSettings } from './components/AccountSettings/AccountSettings.mjs';\n" +
    "export { Authenticator } from './components/Authenticator/Authenticator.mjs';\n" +
    "export { withAuthenticator } from './components/Authenticator/withAuthenticator.mjs';\n" +
    "export { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "export { ThemeProvider } from './components/ThemeProvider/ThemeProvider.mjs';\n" +
    "export { IconsProvider } from './primitives/Icon/context/IconsProvider.mjs';\n" +
    "export { Alert } from './primitives/Alert/Alert.mjs';\n" +
    "export { Autocomplete } from './primitives/Autocomplete/Autocomplete.mjs';\n" +
    "export { Badge } from './primitives/Badge/Badge.mjs';\n" +
    "export { Breadcrumbs } from './primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "export { Button } from './primitives/Button/Button.mjs';\n" +
    "export { ButtonGroup } from './primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "export { Card } from './primitives/Card/Card.mjs';\n" +
    "export { CheckboxField } from './primitives/CheckboxField/CheckboxField.mjs';\n" +
    "export { Collection } from './primitives/Collection/Collection.mjs';\n" +
    "export { Divider } from './primitives/Divider/Divider.mjs';\n" +
    "export { DropZone } from './primitives/DropZone/DropZone.mjs';\n" +
    "export { Accordion } from './primitives/Accordion/Accordion.mjs';\n" +
    "export { FieldGroupIcon } from './primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "export { FieldGroupIconButton } from './primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "export { Fieldset } from './primitives/Fieldset/Fieldset.mjs';\n" +
    "export { Flex } from './primitives/Flex/Flex.mjs';\n" +
    "export { Grid } from './primitives/Grid/Grid.mjs';\n" +
    "export { Heading } from './primitives/Heading/Heading.mjs';\n" +
    "export { HighlightMatch } from './primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "export { Icon } from './primitives/Icon/Icon.mjs';\n" +
    "export { Image } from './primitives/Image/Image.mjs';\n" +
    "export { Input } from './primitives/Input/Input.mjs';\n" +
    "export { Label } from './primitives/Label/Label.mjs';\n" +
    "export { Link } from './primitives/Link/Link.mjs';\n" +
    "export { Loader } from './primitives/Loader/Loader.mjs';\n" +
    "export { Menu } from './primitives/Menu/Menu.mjs';\n" +
    "export { MenuButton } from './primitives/Menu/MenuButton.mjs';\n" +
    "export { MenuItem } from './primitives/Menu/MenuItem.mjs';\n" +
    "export { Message } from './primitives/Message/Message.mjs';\n" +
    "export { Pagination } from './primitives/Pagination/Pagination.mjs';\n" +
    "export { PasswordField } from './primitives/PasswordField/PasswordField.mjs';\n" +
    "export { PhoneNumberField } from './primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "export { Placeholder } from './primitives/Placeholder/Placeholder.mjs';\n" +
    "export { Radio } from './primitives/Radio/Radio.mjs';\n" +
    "export { RadioGroupField } from './primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "export { Rating } from './primitives/Rating/Rating.mjs';\n" +
    "export { ScrollView } from './primitives/ScrollView/ScrollView.mjs';\n" +
    "export { SearchField } from './primitives/SearchField/SearchField.mjs';\n" +
    "export { SelectField } from './primitives/SelectField/SelectField.mjs';\n" +
    "export { SliderField } from './primitives/SliderField/SliderField.mjs';\n" +
    "export { StepperField } from './primitives/StepperField/StepperField.mjs';\n" +
    "export { SwitchField } from './primitives/SwitchField/SwitchField.mjs';\n" +
    "export { Tabs } from './primitives/Tabs/Tabs.mjs';\n" +
    "export { Text } from './primitives/Text/Text.mjs';\n" +
    "export { TextAreaField } from './primitives/TextAreaField/TextAreaField.mjs';\n" +
    "export { TextField } from './primitives/TextField/TextField.mjs';\n" +
    "export { ToggleButton } from './primitives/ToggleButton/ToggleButton.mjs';\n" +
    "export { ToggleButtonGroup } from './primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "export { View } from './primitives/View/View.mjs';\n" +
    "export { VisuallyHidden } from './primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "export { Table } from './primitives/Table/Table.mjs';\n" +
    "export { TableBody } from './primitives/Table/TableBody.mjs';\n" +
    "export { TableCell } from './primitives/Table/TableCell.mjs';\n" +
    "export { TableFoot } from './primitives/Table/TableFoot.mjs';\n" +
    "export { TableHead } from './primitives/Table/TableHead.mjs';\n" +
    "export { TableRow } from './primitives/Table/TableRow.mjs';\n" +
    "export { usePagination } from './primitives/Pagination/usePagination.mjs';\n" +
    "export { ComponentPropsToStylePropsMap, ComponentPropsToStylePropsMapKeys } from './primitives/types/style.mjs';\n"
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    "import { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\n" +
    "import { AmplifyError } from '../errors/AmplifyError.mjs';\n" +
    "import '../types/errors.mjs';\n" +
    "import '../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n" +
    "    ? Symbol('amplify_default')\n" +
    "    : '@@amplify_default');\n" +
    "const logger = new ConsoleLogger('Hub');\n" +
    'class HubClass {\n' +
    '    constructor(name) {\n' +
    '        this.listeners = new Map();\n' +
    '        this.protectedChannels = [\n' +
    "            'core',\n" +
    "            'auth',\n" +
    "            'api',\n" +
    "            'analytics',\n" +
    "            'interactions',\n" +
    "            'pubsub',\n" +
    "            'storage',\n" +
    "            'ui',\n" +
    "            'xr',\n" +
    '        ];\n' +
    '        this.name = name;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Used internally to remove a Hub listener.\n' +
    '     *\n' +
    '     * @remarks\n' +
    '     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n' +
    '     */\n' +
    '    _remove(channel, listener) {\n' +
    '        const holder = this.listeners.get(channel);\n' +
    '        if (!holder) {\n' +
    '            logger.warn(`No listeners for ${channel}`);\n' +
    '            return;\n' +
    '        }\n' +
    '        this.listeners.set(channel, [\n' +
    '            ...holder.filter(({ callback }) => callback !== listener),\n' +
    '        ]);\n' +
    '    }\n' +
    '    dispatch(channel, payload, source, ampSymbol) {\n' +
    "        if (typeof channel === 'string' &&\n" +
    '            this.protectedChannels.indexOf(channel) > -1) {\n' +
    '            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n' +
    '            if (!hasAccess) {\n' +
    '                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n' +
    '            }\n' +
    '        }\n' +
    '        const capsule = {\n' +
    '            channel,\n' +
    '            payload: { ...payload },\n' +
    '            source,\n' +
    '            patternInfo: [],\n' +
    '        };\n' +
    '        try {\n' +
    '            this._toListeners(capsule);\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            logger.error(e);\n' +
    '        }\n' +
    '    }\n' +
    "    listen(channel, callback, listenerName = 'noname') {\n" +
    '        let cb;\n' +
    "        if (typeof callback !== 'function') {\n" +
    '            throw new AmplifyError({\n' +
    '                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n' +
    "                message: 'No callback supplied to Hub',\n" +
    '            });\n' +
    '        }\n' +
    '        else {\n' +
    '            // Needs to be casted as a more generic type\n' +
    '            cb = callback;\n' +
    '        }\n' +
    '        let holder = this.listeners.get(channel);\n' +
    '        if (!holder) {\n' +
    '            holder = [];\n' +
    '            this.listeners.set(channel, holder);\n' +
    '        }\n' +
    '        holder.push({\n' +
    '            name: listenerName,\n' +
    '            callback: cb,\n' +
    '        });\n' +
    '        return () => {\n' +
    '            this._remove(channel, cb);\n' +
    '        };\n' +
    '    }\n' +
    '    _toListeners(capsule) {\n' +
    '        const { channel, payload } = capsule;\n' +
    '        const holder = this.listeners.get(channel);\n' +
    '        if (holder) {\n' +
    '            holder.forEach(listener => {\n' +
    '                logger.debug(`Dispatching to ${channel} with `, payload);\n' +
    '                try {\n' +
    '                    listener.callback(capsule);\n' +
    '                }\n' +
    '                catch (e) {\n' +
    '                    logger.error(e);\n' +
    '                }\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '}\n' +
    '/* We export a __default__ instance of HubClass to use it as a\n' +
    'pseudo Singleton for the main messaging bus, however you can still create\n' +
    'your own instance of HubClass() for a separate "private bus" of events. */\n' +
    "const Hub = new HubClass('__default__');\n" +
    '/**\n' +
    ' * @internal\n' +
    ' *\n' +
    ' * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n' +
    ' *\n' +
    ' */\n' +
    "const HubInternal = new HubClass('internal-hub');\n" +
    '\n' +
    'export { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '../Amplify.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function clearCredentials() {\n' +
    '    return Amplify.Auth.clearCredentials();\n' +
    '}\n' +
    '\n' +
    'export { clearCredentials };\n' +
    '//# sourceMappingURL=clearCredentials.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { base64Decoder } from '../../../utils/convert/base64/base64Decoder.mjs';\n" +
    "import '../../../types/errors.mjs';\n" +
    "import '../../../errors/errorHelpers.mjs';\n" +
    "import { assert, AuthConfigurationErrorCode } from './errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function assertTokenProviderConfig(cognitoConfig) {\n' +
    '    let assertionValid = true; // assume valid until otherwise proveed\n' +
    '    if (!cognitoConfig) {\n' +
    '        assertionValid = false;\n' +
    '    }\n' +
    '    else {\n' +
    '        assertionValid =\n' +
    '            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n' +
    '    }\n' +
    '    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n' +
    '}\n' +
    'function assertOAuthConfig(cognitoConfig) {\n' +
    '    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n' +
    '        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n' +
    '        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n' +
    '        !!cognitoConfig?.loginWith?.oauth?.responseType;\n' +
    '    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n' +
    '}\n' +
    'function assertIdentityPoolIdConfig(cognitoConfig) {\n' +
    '    const validConfig = !!cognitoConfig?.identityPoolId;\n' +
    '    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n' +
    '}\n' +
    'function decodeJWT(token) {\n' +
    "    const tokenParts = token.split('.');\n" +
    '    if (tokenParts.length !== 3) {\n' +
    "        throw new Error('Invalid token');\n" +
    '    }\n' +
    '    try {\n' +
    '        const base64WithUrlSafe = tokenParts[1];\n' +
    "        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n" +
    '        const jsonStr = decodeURIComponent(base64Decoder\n' +
    '            .convert(base64)\n' +
    "            .split('')\n" +
    '            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n' +
    "            .join(''));\n" +
    '        const payload = JSON.parse(jsonStr);\n' +
    '        return {\n' +
    '            toString: () => token,\n' +
    '            payload,\n' +
    '        };\n' +
    '    }\n' +
    '    catch (err) {\n' +
    "        throw new Error('Invalid token payload');\n" +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '../Amplify.mjs';\n" +
    "import { fetchAuthSession as fetchAuthSession$1 } from './internal/fetchAuthSession.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const fetchAuthSession = (options) => {\n' +
    '    return fetchAuthSession$1(Amplify, options);\n' +
    '};\n' +
    '\n' +
    'export { fetchAuthSession };\n' +
    '//# sourceMappingURL=fetchAuthSession.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { DefaultStorage } from './DefaultStorage.mjs';\n" +
    "import { InMemoryStorage } from './InMemoryStorage.mjs';\n" +
    "import { KeyValueStorage } from './KeyValueStorage.mjs';\n" +
    "import { SessionStorage } from './SessionStorage.mjs';\n" +
    "export { CookieStorage } from './CookieStorage.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const defaultStorage = new DefaultStorage();\n' +
    'const sessionStorage = new SessionStorage();\n' +
    'const sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n' +
    '\n' +
    'export { defaultStorage, sessionStorage, sharedInMemoryStorage };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Hub, AMPLIFY_SYMBOL } from '../Hub/index.mjs';\n" +
    "import { parseAWSExports } from '../parseAWSExports.mjs';\n" +
    "import '../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../utils/retry/retry.mjs';\n" +
    "import { deepFreeze } from '../utils/deepFreeze.mjs';\n" +
    "import { AuthClass } from './Auth/index.mjs';\n" +
    "import { ADD_OAUTH_LISTENER } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class AmplifyClass {\n' +
    '    constructor() {\n' +
    '        this.oAuthListener = undefined;\n' +
    '        this.resourcesConfig = {};\n' +
    '        this.libraryOptions = {};\n' +
    '        this.Auth = new AuthClass();\n' +
    '    }\n' +
    '    /**\n' +
    '     * Configures Amplify for use with your back-end resources.\n' +
    '     *\n' +
    '     * @remarks\n' +
    '     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n' +
    '     * provided values will be used after configuration.\n' +
    '     *\n' +
    '     * @remarks\n' +
    '     * `configure` can be used to specify additional library options where available for supported categories.\n' +
    '     *\n' +
    '     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n' +
    '     * @param libraryOptions - Additional options for customizing the behavior of the library.\n' +
    '     */\n' +
    '    configure(resourcesConfig, libraryOptions) {\n' +
    '        let resolvedResourceConfig;\n' +
    "        if (Object.keys(resourcesConfig).some(key => key.startsWith('aws_'))) {\n" +
    '            resolvedResourceConfig = parseAWSExports(resourcesConfig);\n' +
    '        }\n' +
    '        else {\n' +
    '            resolvedResourceConfig = resourcesConfig;\n' +
    '        }\n' +
    '        this.resourcesConfig = resolvedResourceConfig;\n' +
    '        if (libraryOptions) {\n' +
    '            this.libraryOptions = libraryOptions;\n' +
    '        }\n' +
    '        // Make resource config immutable\n' +
    '        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n' +
    '        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n' +
    "        Hub.dispatch('core', {\n" +
    "            event: 'configure',\n" +
    '            data: this.resourcesConfig,\n' +
    "        }, 'Configure', AMPLIFY_SYMBOL);\n" +
    '        this.notifyOAuthListener();\n' +
    '    }\n' +
    '    /**\n' +
    '     * Provides access to the current back-end resource configuration for the Library.\n' +
    '     *\n' +
    '     * @returns Returns the immutable back-end resource configuration.\n' +
    '     */\n' +
    '    getConfig() {\n' +
    '        return this.resourcesConfig;\n' +
    '    }\n' +
    '    /** @internal */\n' +
    '    [ADD_OAUTH_LISTENER](listener) {\n' +
    '        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n' +
    '            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n' +
    '            listener(this.resourcesConfig.Auth?.Cognito);\n' +
    '        }\n' +
    '        else {\n' +
    '            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n' +
    '            this.oAuthListener = listener;\n' +
    '        }\n' +
    '    }\n' +
    '    notifyOAuthListener() {\n' +
    '        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n' +
    '            !this.oAuthListener) {\n' +
    '            return;\n' +
    '        }\n' +
    '        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n' +
    '        // the listener should only be notified once with a valid oauth config\n' +
    '        this.oAuthListener = undefined;\n' +
    '    }\n' +
    '}\n' +
    '/**\n' +
    ' * The `Amplify` utility is used to configure the library.\n' +
    ' *\n' +
    ' * @remarks\n' +
    ' * `Amplify` is responsible for orchestrating cross-category communication within the library.\n' +
    ' */\n' +
    'const Amplify = new AmplifyClass();\n' +
    '\n' +
    'export { Amplify, AmplifyClass };\n' +
    '//# sourceMappingURL=Amplify.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import '../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../utils/retry/retry.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import { parseMetadata } from '../../clients/serde/responseInfo.mjs';\n" +
    "import { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\n" +
    "import { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\n" +
    "import { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getIdSerializer = (input, endpoint) => {\n' +
    "    const headers = getSharedHeaders('GetId');\n" +
    '    const body = JSON.stringify(input);\n' +
    '    return buildHttpRpcRequest(endpoint, headers, body);\n' +
    '};\n' +
    'const getIdDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = await parseJsonError(response);\n' +
    '        throw error;\n' +
    '    }\n' +
    '    else {\n' +
    '        const body = await parseJsonBody(response);\n' +
    '        return {\n' +
    '            IdentityId: body.IdentityId,\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\n' +
    '\n' +
    'export { getId };\n' +
    '//# sourceMappingURL=getId.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageCache } from './StorageCache.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const Cache = new StorageCache();\n' +
    '\n' +
    'export { Cache };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import '../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../utils/retry/retry.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import { parseMetadata } from '../../clients/serde/responseInfo.mjs';\n" +
    "import { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\n" +
    "import { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\n" +
    "import { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getCredentialsForIdentitySerializer = (input, endpoint) => {\n' +
    "    const headers = getSharedHeaders('GetCredentialsForIdentity');\n" +
    '    const body = JSON.stringify(input);\n' +
    '    return buildHttpRpcRequest(endpoint, headers, body);\n' +
    '};\n' +
    'const getCredentialsForIdentityDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = await parseJsonError(response);\n' +
    '        throw error;\n' +
    '    }\n' +
    '    else {\n' +
    '        const body = await parseJsonBody(response);\n' +
    '        return {\n' +
    '            IdentityId: body.IdentityId,\n' +
    '            Credentials: deserializeCredentials(body.Credentials),\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    'const deserializeCredentials = ({ AccessKeyId, SecretKey, SessionToken, Expiration, } = {}) => {\n' +
    '    return {\n' +
    '        AccessKeyId,\n' +
    '        SecretKey,\n' +
    '        SessionToken,\n' +
    '        Expiration: Expiration && new Date(Expiration * 1000),\n' +
    '    };\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\n' +
    '\n' +
    'export { getCredentialsForIdentity };\n' +
    '//# sourceMappingURL=getCredentialsForIdentity.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    "import { I18n as I18n$1 } from './I18n.mjs';\n" +
    "import { assert, I18nErrorCode } from './errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('I18n');\n" +
    'let _config = { language: null };\n' +
    'let _i18n = null;\n' +
    '/**\n' +
    ' * Export I18n APIs\n' +
    ' */\n' +
    'class I18n {\n' +
    '    /**\n' +
    '     * @static\n' +
    '     * @method\n' +
    '     * Configure I18n part\n' +
    '     * @param {Object} config - Configuration of the I18n\n' +
    '     */\n' +
    '    static configure(config) {\n' +
    "        logger.debug('configure I18n');\n" +
    '        if (!config) {\n' +
    '            return _config;\n' +
    '        }\n' +
    '        _config = Object.assign({}, _config, config.I18n || config);\n' +
    '        I18n.createInstance();\n' +
    '        return _config;\n' +
    '    }\n' +
    '    static getModuleName() {\n' +
    "        return 'I18n';\n" +
    '    }\n' +
    '    /**\n' +
    '     * @static\n' +
    '     * @method\n' +
    '     * Create an instance of I18n for the library\n' +
    '     */\n' +
    '    static createInstance() {\n' +
    "        logger.debug('create I18n instance');\n" +
    '        if (_i18n) {\n' +
    '            return;\n' +
    '        }\n' +
    '        _i18n = new I18n$1();\n' +
    '    }\n' +
    '    /**\n' +
    '     * @static @method\n' +
    '     * Explicitly setting language\n' +
    '     * @param {String} lang\n' +
    '     */\n' +
    '    static setLanguage(lang) {\n' +
    '        I18n.checkConfig();\n' +
    '        assert(!!_i18n, I18nErrorCode.NotConfigured);\n' +
    '        _i18n.setLanguage(lang);\n' +
    '    }\n' +
    '    /**\n' +
    '     * @static @method\n' +
    '     * Get value\n' +
    '     * @param {String} key\n' +
    '     * @param {String} defVal - Default value\n' +
    '     */\n' +
    '    static get(key, defVal) {\n' +
    '        if (!I18n.checkConfig()) {\n' +
    "            return typeof defVal === 'undefined' ? key : defVal;\n" +
    '        }\n' +
    '        assert(!!_i18n, I18nErrorCode.NotConfigured);\n' +
    '        return _i18n.get(key, defVal);\n' +
    '    }\n' +
    '    /**\n' +
    '     * @static\n' +
    '     * @method\n' +
    '     * Add vocabularies for one language\n' +
    '     * @param {String} language - Language of the dictionary\n' +
    '     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n' +
    '     */\n' +
    '    static putVocabulariesForLanguage(language, vocabularies) {\n' +
    '        I18n.checkConfig();\n' +
    '        assert(!!_i18n, I18nErrorCode.NotConfigured);\n' +
    '        _i18n.putVocabulariesForLanguage(language, vocabularies);\n' +
    '    }\n' +
    '    /**\n' +
    '     * @static\n' +
    '     * @method\n' +
    '     * Add vocabularies for one language\n' +
    '     * @param {Object} vocabularies - Object that has language as key,\n' +
    '     *                                vocabularies of each language as value\n' +
    '     */\n' +
    '    static putVocabularies(vocabularies) {\n' +
    '        I18n.checkConfig();\n' +
    '        assert(!!_i18n, I18nErrorCode.NotConfigured);\n' +
    '        _i18n.putVocabularies(vocabularies);\n' +
    '    }\n' +
    '    static checkConfig() {\n' +
    '        if (!_i18n) {\n' +
    '            I18n.createInstance();\n' +
    '        }\n' +
    '        return true;\n' +
    '    }\n' +
    '}\n' +
    '// Create an instance of I18n in the static class\n' +
    'I18n.createInstance();\n' +
    '\n' +
    'export { I18n };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\n" +
    "import { LogType } from './types.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const LOG_LEVELS = {\n' +
    '    VERBOSE: 1,\n' +
    '    DEBUG: 2,\n' +
    '    INFO: 3,\n' +
    '    WARN: 4,\n' +
    '    ERROR: 5,\n' +
    '    NONE: 6,\n' +
    '};\n' +
    '/**\n' +
    ' * Write logs\n' +
    ' * @class Logger\n' +
    ' */\n' +
    'class ConsoleLogger {\n' +
    '    /**\n' +
    '     * @constructor\n' +
    '     * @param {string} name - Name of the logger\n' +
    '     */\n' +
    '    constructor(name, level = LogType.WARN) {\n' +
    '        this.name = name;\n' +
    '        this.level = level;\n' +
    '        this._pluggables = [];\n' +
    '    }\n' +
    '    _padding(n) {\n' +
    "        return n < 10 ? '0' + n : '' + n;\n" +
    '    }\n' +
    '    _ts() {\n' +
    '        const dt = new Date();\n' +
    "        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n" +
    "            '.' +\n" +
    '            dt.getMilliseconds());\n' +
    '    }\n' +
    '    configure(config) {\n' +
    '        if (!config)\n' +
    '            return this._config;\n' +
    '        this._config = config;\n' +
    '        return this._config;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {LogType|string} type - log type, default INFO\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    _log(type, ...msg) {\n' +
    '        let loggerLevelName = this.level;\n' +
    '        if (ConsoleLogger.LOG_LEVEL) {\n' +
    '            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n' +
    '        }\n' +
    "        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n" +
    '            loggerLevelName = window.LOG_LEVEL;\n' +
    '        }\n' +
    '        const loggerLevel = LOG_LEVELS[loggerLevelName];\n' +
    '        const typeLevel = LOG_LEVELS[type];\n' +
    '        if (!(typeLevel >= loggerLevel)) {\n' +
    '            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n' +
    '            return;\n' +
    '        }\n' +
    '        let log = console.log.bind(console);\n' +
    '        if (type === LogType.ERROR && console.error) {\n' +
    '            log = console.error.bind(console);\n' +
    '        }\n' +
    '        if (type === LogType.WARN && console.warn) {\n' +
    '            log = console.warn.bind(console);\n' +
    '        }\n' +
    '        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n' +
    "        let message = '';\n" +
    "        if (msg.length === 1 && typeof msg[0] === 'string') {\n" +
    '            message = `${prefix} - ${msg[0]}`;\n' +
    '            log(message);\n' +
    '        }\n' +
    '        else if (msg.length === 1) {\n' +
    '            message = `${prefix} ${msg[0]}`;\n' +
    '            log(prefix, msg[0]);\n' +
    '        }\n' +
    "        else if (typeof msg[0] === 'string') {\n" +
    '            let obj = msg.slice(1);\n' +
    '            if (obj.length === 1) {\n' +
    '                obj = obj[0];\n' +
    '            }\n' +
    '            message = `${prefix} - ${msg[0]} ${obj}`;\n' +
    '            log(`${prefix} - ${msg[0]}`, obj);\n' +
    '        }\n' +
    '        else {\n' +
    '            message = `${prefix} ${msg}`;\n' +
    '            log(prefix, msg);\n' +
    '        }\n' +
    '        for (const plugin of this._pluggables) {\n' +
    '            const logEvent = { message, timestamp: Date.now() };\n' +
    '            plugin.pushLogs([logEvent]);\n' +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write General log. Default to INFO\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    log(...msg) {\n' +
    '        this._log(LogType.INFO, ...msg);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write INFO log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    info(...msg) {\n' +
    '        this._log(LogType.INFO, ...msg);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write WARN log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    warn(...msg) {\n' +
    '        this._log(LogType.WARN, ...msg);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write ERROR log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    error(...msg) {\n' +
    '        this._log(LogType.ERROR, ...msg);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write DEBUG log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    debug(...msg) {\n' +
    '        this._log(LogType.DEBUG, ...msg);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Write VERBOSE log\n' +
    '     * @method\n' +
    '     * @memeberof Logger\n' +
    '     * @param {string|object} msg - Logging message or object\n' +
    '     */\n' +
    '    verbose(...msg) {\n' +
    '        this._log(LogType.VERBOSE, ...msg);\n' +
    '    }\n' +
    '    addPluggable(pluggable) {\n' +
    '        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n' +
    '            this._pluggables.push(pluggable);\n' +
    '            pluggable.configure(this._config);\n' +
    '        }\n' +
    '    }\n' +
    '    listPluggables() {\n' +
    '        return this._pluggables;\n' +
    '    }\n' +
    '}\n' +
    'ConsoleLogger.LOG_LEVEL = null;\n' +
    '\n' +
    'export { ConsoleLogger };\n' +
    '//# sourceMappingURL=ConsoleLogger.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import JsCookie from 'js-cookie';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class CookieStorage {\n' +
    '    constructor(data = {}) {\n' +
    '        const { path, domain, expires, sameSite, secure } = data;\n' +
    '        this.domain = domain;\n' +
    "        this.path = path || '/';\n" +
    "        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n" +
    '            ? expires\n' +
    '            : 365;\n' +
    "        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n" +
    '            ? secure\n' +
    '            : true;\n' +
    "        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n" +
    "            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n" +
    `                throw new Error('The sameSite value of cookieStorage must be "lax", "strict" or "none".');\n` +
    '            }\n' +
    "            if (sameSite === 'none' && !this.secure) {\n" +
    "                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n" +
    '            }\n' +
    '            this.sameSite = sameSite;\n' +
    '        }\n' +
    '    }\n' +
    '    async setItem(key, value) {\n' +
    '        JsCookie.set(key, value, this.getData());\n' +
    '    }\n' +
    '    async getItem(key) {\n' +
    '        const item = JsCookie.get(key);\n' +
    '        return item ?? null;\n' +
    '    }\n' +
    '    async removeItem(key) {\n' +
    '        JsCookie.remove(key, this.getData());\n' +
    '    }\n' +
    '    async clear() {\n' +
    '        const cookie = JsCookie.get();\n' +
    '        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n' +
    '        await Promise.all(promises);\n' +
    '    }\n' +
    '    getData() {\n' +
    '        return {\n' +
    '            path: this.path,\n' +
    '            expires: this.expires,\n' +
    '            domain: this.domain,\n' +
    '            secure: this.secure,\n' +
    '            ...(this.sameSite && { sameSite: this.sameSite }),\n' +
    '        };\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { CookieStorage };\n' +
    '//# sourceMappingURL=CookieStorage.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    "import '../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import { isBrowser } from '../utils/isBrowser.mjs';\n" +
    "import '../utils/retry/retry.mjs';\n" +
    "import { AmplifyError } from '../errors/AmplifyError.mjs';\n" +
    "import '../types/errors.mjs';\n" +
    "import '../errors/errorHelpers.mjs';\n" +
    "import 'uuid';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import '../awsClients/pinpoint/base.mjs';\n" +
    "import '../awsClients/pinpoint/errorHelpers.mjs';\n" +
    "import '../Cache/index.mjs';\n" +
    "import { record } from '../providers/pinpoint/apis/record.mjs';\n" +
    "import '../providers/pinpoint/utils/PinpointEventBuffer.mjs';\n" +
    "import '../providers/pinpoint/types/errors.mjs';\n" +
    "import { Amplify } from '../singleton/Amplify.mjs';\n" +
    "import { fetchAuthSession } from '../singleton/apis/fetchAuthSession.mjs';\n" +
    "import { assert, ServiceWorkerErrorCode } from './errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Provides a means to registering a service worker in the browser\n' +
    ' * and communicating with it via postMessage events.\n' +
    ' * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/\n' +
    ' *\n' +
    ' * postMessage events are currently not supported in all browsers. See:\n' +
    ' * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\n' +
    ' *\n' +
    ' * At the minmum this class will register the service worker and listen\n' +
    ' * and attempt to dispatch messages on state change and record analytics\n' +
    ' * events based on the service worker lifecycle.\n' +
    ' */\n' +
    'class ServiceWorkerClass {\n' +
    '    constructor() {\n' +
    '        // The AWS Amplify logger\n' +
    "        this._logger = new ConsoleLogger('ServiceWorker');\n" +
    '    }\n' +
    '    /**\n' +
    '     * Get the currently active service worker\n' +
    '     */\n' +
    '    get serviceWorker() {\n' +
    '        assert(this._serviceWorker !== undefined, ServiceWorkerErrorCode.UndefinedInstance);\n' +
    '        return this._serviceWorker;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Register the service-worker.js file in the browser\n' +
    '     * Make sure the service-worker.js is part of the build\n' +
    '     * for example with Angular, modify the angular-cli.json file\n' +
    '     * and add to "assets" array "service-worker.js"\n' +
    '     * @param {string} filePath Service worker file. Defaults to "/service-worker.js"\n' +
    '     * @param {string} scope The service worker scope. Defaults to "/"\n' +
    '     *  - API Doc: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\n' +
    '     * @returns {Promise}\n' +
    '     *\t- resolve(ServiceWorkerRegistration)\n' +
    '     *\t- reject(Error)\n' +
    '     **/\n' +
    "    register(filePath = '/service-worker.js', scope = '/') {\n" +
    '        this._logger.debug(`registering ${filePath}`);\n' +
    '        this._logger.debug(`registering service worker with scope ${scope}`);\n' +
    '        return new Promise((resolve, reject) => {\n' +
    "            if (navigator && 'serviceWorker' in navigator) {\n" +
    '                navigator.serviceWorker\n' +
    '                    .register(filePath, {\n' +
    '                    scope,\n' +
    '                })\n' +
    '                    .then(registration => {\n' +
    '                    if (registration.installing) {\n' +
    '                        this._serviceWorker = registration.installing;\n' +
    '                    }\n' +
    '                    else if (registration.waiting) {\n' +
    '                        this._serviceWorker = registration.waiting;\n' +
    '                    }\n' +
    '                    else if (registration.active) {\n' +
    '                        this._serviceWorker = registration.active;\n' +
    '                    }\n' +
    '                    this._registration = registration;\n' +
    '                    this._setupListeners();\n' +
    '                    this._logger.debug(`Service Worker Registration Success: ${registration}`);\n' +
    '                    resolve(registration);\n' +
    '                })\n' +
    '                    .catch(error => {\n' +
    '                    this._logger.debug(`Service Worker Registration Failed ${error}`);\n' +
    '                    reject(new AmplifyError({\n' +
    '                        name: ServiceWorkerErrorCode.Unavailable,\n' +
    "                        message: 'Service Worker not available',\n" +
    '                        underlyingError: error,\n' +
    '                    }));\n' +
    '                });\n' +
    '            }\n' +
    '            else {\n' +
    '                reject(new AmplifyError({\n' +
    '                    name: ServiceWorkerErrorCode.Unavailable,\n' +
    "                    message: 'Service Worker not available',\n" +
    '                }));\n' +
    '            }\n' +
    '        });\n' +
    '    }\n' +
    '    /**\n' +
    '     * Enable web push notifications. If not subscribed, a new subscription will\n' +
    '     * be created and registered.\n' +
    '     * \tTest Push Server: https://web-push-codelab.glitch.me/\n' +
    '     * \tPush Server Libraries: https://github.com/web-push-libs/\n' +
    '     * \tAPI Doc: https://developers.google.com/web/fundamentals/codelabs/push-notifications/\n' +
    '     * @param publicKey\n' +
    '     * @returns {Promise}\n' +
    '     * \t- resolve(PushSubscription)\n' +
    '     *  - reject(Error)\n' +
    '     */\n' +
    '    enablePush(publicKey) {\n' +
    '        assert(this._registration !== undefined, ServiceWorkerErrorCode.UndefinedRegistration);\n' +
    '        this._publicKey = publicKey;\n' +
    '        return new Promise((resolve, reject) => {\n' +
    '            if (isBrowser()) {\n' +
    '                assert(this._registration !== undefined, ServiceWorkerErrorCode.UndefinedRegistration);\n' +
    '                this._registration.pushManager.getSubscription().then(subscription => {\n' +
    '                    if (subscription) {\n' +
    '                        this._subscription = subscription;\n' +
    '                        this._logger.debug(`User is subscribed to push: ${JSON.stringify(subscription)}`);\n' +
    '                        resolve(subscription);\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        this._logger.debug(`User is NOT subscribed to push`);\n' +
    '                        return this._registration.pushManager.subscribe({\n' +
    '                            userVisibleOnly: true,\n' +
    '                            applicationServerKey: this._urlB64ToUint8Array(publicKey),\n' +
    '                        })\n' +
    '                            .then(pushManagerSubscription => {\n' +
    '                            this._subscription = pushManagerSubscription;\n' +
    '                            this._logger.debug(`User subscribed: ${JSON.stringify(pushManagerSubscription)}`);\n' +
    '                            resolve(pushManagerSubscription);\n' +
    '                        })\n' +
    '                            .catch(error => {\n' +
    '                            this._logger.error(error);\n' +
    '                        });\n' +
    '                    }\n' +
    '                });\n' +
    '            }\n' +
    '            else {\n' +
    '                reject(new AmplifyError({\n' +
    '                    name: ServiceWorkerErrorCode.Unavailable,\n' +
    "                    message: 'Service Worker not available',\n" +
    '                }));\n' +
    '            }\n' +
    '        });\n' +
    '    }\n' +
    '    /**\n' +
    '     * Convert a base64 encoded string to a Uint8 array for the push server key\n' +
    '     * @param base64String\n' +
    '     */\n' +
    '    _urlB64ToUint8Array(base64String) {\n' +
    "        const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n" +
    '        const base64 = (base64String + padding)\n' +
    "            .replace(/-/g, '+')\n" +
    "            .replace(/_/g, '/');\n" +
    '        const rawData = window.atob(base64);\n' +
    '        const outputArray = new Uint8Array(rawData.length);\n' +
    '        for (let i = 0; i < rawData.length; ++i) {\n' +
    '            outputArray[i] = rawData.charCodeAt(i);\n' +
    '        }\n' +
    '        return outputArray;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Send a message to the service worker. The service worker needs\n' +
    "     * to implement `self.addEventListener('message') to handle the\n" +
    '     * message. This ***currently*** does not work in Safari or IE.\n' +
    '     * @param {object | string} message An arbitrary JSON object or string message to send to the service worker\n' +
    '     *\t- see: https://developer.mozilla.org/en-US/docs/Web/API/Transferable\n' +
    '     * @returns {Promise}\n' +
    '     **/\n' +
    '    send(message) {\n' +
    '        if (this._serviceWorker) {\n' +
    "            this._serviceWorker.postMessage(typeof message === 'object' ? JSON.stringify(message) : message);\n" +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * Listen for service worker state change and message events\n' +
    '     * https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/state\n' +
    '     **/\n' +
    '    _setupListeners() {\n' +
    "        this.serviceWorker.addEventListener('statechange', async () => {\n" +
    '            const currentState = this.serviceWorker.state;\n' +
    '            this._logger.debug(`ServiceWorker statechange: ${currentState}`);\n' +
    '            const { appId, region, bufferSize, flushInterval, flushSize, resendLimit, } = Amplify.getConfig().Analytics?.Pinpoint ?? {};\n' +
    '            const { credentials } = await fetchAuthSession();\n' +
    '            if (appId && region && credentials) {\n' +
    '                // Pinpoint is configured, record an event\n' +
    '                record({\n' +
    '                    appId,\n' +
    '                    region,\n' +
    "                    category: 'Core',\n" +
    '                    credentials,\n' +
    '                    bufferSize,\n' +
    '                    flushInterval,\n' +
    '                    flushSize,\n' +
    '                    resendLimit,\n' +
    '                    event: {\n' +
    "                        name: 'ServiceWorker',\n" +
    '                        attributes: {\n' +
    '                            state: currentState,\n' +
    '                        },\n' +
    '                    },\n' +
    '                });\n' +
    '            }\n' +
    '        });\n' +
    "        this.serviceWorker.addEventListener('message', event => {\n" +
    '            this._logger.debug(`ServiceWorker message event: ${event}`);\n' +
    '        });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { ServiceWorkerClass };\n' +
    '//# sourceMappingURL=ServiceWorker.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { cryptoSecureRandomInt } from './cryptoSecureRandomInt.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Hex encoding strategy.\n' +
    ' * Converts a word array to a hex string.\n' +
    ' * @param {WordArray} wordArray The word array.\n' +
    ' * @return {string} The hex string.\n' +
    ' * @static\n' +
    ' */\n' +
    'function hexStringify(wordArray) {\n' +
    '    // Shortcuts\n' +
    '    const { words } = wordArray;\n' +
    '    const { sigBytes } = wordArray;\n' +
    '    // Convert\n' +
    '    const hexChars = [];\n' +
    '    for (let i = 0; i < sigBytes; i++) {\n' +
    '        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n' +
    '        hexChars.push((bite >>> 4).toString(16));\n' +
    '        hexChars.push((bite & 0x0f).toString(16));\n' +
    '    }\n' +
    "    return hexChars.join('');\n" +
    '}\n' +
    'class WordArray {\n' +
    '    constructor(words, sigBytes) {\n' +
    '        this.words = [];\n' +
    '        let Words = words;\n' +
    '        Words = this.words = Words || [];\n' +
    '        if (sigBytes !== undefined) {\n' +
    '            this.sigBytes = sigBytes;\n' +
    '        }\n' +
    '        else {\n' +
    '            this.sigBytes = Words.length * 4;\n' +
    '        }\n' +
    '    }\n' +
    '    random(nBytes) {\n' +
    '        const words = [];\n' +
    '        for (let i = 0; i < nBytes; i += 4) {\n' +
    '            words.push(cryptoSecureRandomInt());\n' +
    '        }\n' +
    '        return new WordArray(words, nBytes);\n' +
    '    }\n' +
    '    toString() {\n' +
    '        return hexStringify(this);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { WordArray as default };\n' +
    '//# sourceMappingURL=WordArray.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const generateRandomString = (length) => {\n' +
    "    const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n" +
    "    let result = '';\n" +
    '    for (let i = 0; i < length; i++) {\n' +
    '        result += STATE_CHARSET.charAt(Math.floor(Math.random() * STATE_CHARSET.length));\n' +
    '    }\n' +
    '    return result;\n' +
    '};\n' +
    '\n' +
    'export { generateRandomString };\n' +
    '//# sourceMappingURL=generateRandomString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n" +
    '\n' +
    'export { isBrowser };\n' +
    '//# sourceMappingURL=isBrowser.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('getClientInfo');\n" +
    'function getClientInfo() {\n' +
    "    if (typeof window === 'undefined') {\n" +
    '        return {};\n' +
    '    }\n' +
    '    return browserClientInfo();\n' +
    '}\n' +
    'function browserClientInfo() {\n' +
    "    if (typeof window === 'undefined') {\n" +
    "        logger.warn('No window object available to get browser client info');\n" +
    '        return {};\n' +
    '    }\n' +
    '    const nav = window.navigator;\n' +
    '    if (!nav) {\n' +
    "        logger.warn('No navigator object available to get browser client info');\n" +
    '        return {};\n' +
    '    }\n' +
    '    const { platform, product, vendor, userAgent, language } = nav;\n' +
    '    const type = getBrowserType(userAgent);\n' +
    '    const timezone = browserTimezone();\n' +
    '    return {\n' +
    '        platform,\n' +
    '        make: product || vendor,\n' +
    '        model: type.type,\n' +
    '        version: type.version,\n' +
    "        appVersion: [type.type, type.version].join('/'),\n" +
    '        language,\n' +
    '        timezone,\n' +
    '    };\n' +
    '}\n' +
    'function browserTimezone() {\n' +
    '    const tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n' +
    "    return tzMatch ? tzMatch[1] || '' : '';\n" +
    '}\n' +
    'function getBrowserType(userAgent) {\n' +
    '    // The latest user agents for Opera: https://www.whatismybrowser.com/guides/the-latest-user-agent/opera\n' +
    '    const operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (operaMatch) {\n' +
    '        return { type: operaMatch[1], version: operaMatch[2] };\n' +
    '    }\n' +
    '    // The latest user agents for Edge: https://www.whatismybrowser.com/guides/the-latest-user-agent/edge\n' +
    '    const ieMatch = /.+(Trident|Edge|Edg|EdgA|EdgiOS)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (ieMatch) {\n' +
    '        return { type: ieMatch[1], version: ieMatch[2] };\n' +
    '    }\n' +
    '    // The latest user agents for web browsers on Firefox and Chrome\n' +
    '    // https://www.whatismybrowser.com/guides/the-latest-user-agent/firefox\n' +
    '    // https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\n' +
    '    const cfMatch = /.+(Chrome|CriOS|Firefox|FxiOS)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (cfMatch) {\n' +
    '        return { type: cfMatch[1], version: cfMatch[2] };\n' +
    '    }\n' +
    '    // The latest user agents for Safari: https://www.whatismybrowser.com/guides/the-latest-user-agent/safari\n' +
    '    const sMatch = /.+(Safari)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (sMatch) {\n' +
    '        return { type: sMatch[1], version: sMatch[2] };\n' +
    '    }\n' +
    '    const awkMatch = /.+(AppleWebKit)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (awkMatch) {\n' +
    '        return { type: awkMatch[1], version: awkMatch[2] };\n' +
    '    }\n' +
    '    const anyMatch = /.*([A-Z]+)\\/([0-9.]+).*/i.exec(userAgent);\n' +
    '    if (anyMatch) {\n' +
    '        return { type: anyMatch[1], version: anyMatch[2] };\n' +
    '    }\n' +
    "    return { type: '', version: '' };\n" +
    '}\n' +
    '\n' +
    'export { getClientInfo };\n' +
    '//# sourceMappingURL=getClientInfo.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const isWebWorker = () => {\n' +
    "    if (typeof self === 'undefined') {\n" +
    '        return false;\n' +
    '    }\n' +
    '    const selfContext = self;\n' +
    "    return (typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n" +
    '        self instanceof selfContext.WorkerGlobalScope);\n' +
    '};\n' +
    '\n' +
    'export { isWebWorker };\n' +
    '//# sourceMappingURL=isWebWorker.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class NonRetryableError extends Error {\n' +
    '    constructor() {\n' +
    '        super(...arguments);\n' +
    '        this.nonRetryable = true;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { NonRetryableError };\n' +
    '//# sourceMappingURL=NonRetryableError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const isNonRetryableError = (obj) => {\n' +
    "    const key = 'nonRetryable';\n" +
    '    return obj && obj[key];\n' +
    '};\n' +
    '\n' +
    'export { isNonRetryableError };\n' +
    '//# sourceMappingURL=isNonRetryableError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { MAX_DELAY_MS } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @private\n' +
    ' * Internal use of Amplify only\n' +
    ' */\n' +
    'function jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n' +
    '    const BASE_TIME_MS = 100;\n' +
    '    const JITTER_FACTOR = 100;\n' +
    '    return attempt => {\n' +
    '        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n' +
    '        return delay > maxDelayMs ? false : delay;\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { jitteredBackoff };\n' +
    '//# sourceMappingURL=jitteredBackoff.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { MAX_DELAY_MS } from './constants.mjs';\n" +
    "import { jitteredBackoff } from './jitteredBackoff.mjs';\n" +
    "import { retry } from './retry.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @private\n' +
    ' * Internal use of Amplify only\n' +
    ' */\n' +
    'const jitteredExponentialRetry = (functionToRetry, args, maxDelayMs = MAX_DELAY_MS, onTerminate) => retry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n' +
    '\n' +
    'export { jitteredExponentialRetry };\n' +
    '//# sourceMappingURL=jitteredExponentialRetry.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function urlSafeDecode(hex) {\n' +
    '    const matchArr = hex.match(/.{2}/g) || [];\n' +
    "    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n" +
    '}\n' +
    '\n' +
    'export { urlSafeDecode };\n' +
    '//# sourceMappingURL=urlSafeDecode.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function urlSafeEncode(str) {\n' +
    '    return str\n' +
    "        .split('')\n" +
    "        .map(char => char.charCodeAt(0).toString(16).padStart(2, '0'))\n" +
    "        .join('');\n" +
    '}\n' +
    '\n' +
    'export { urlSafeEncode };\n' +
    '//# sourceMappingURL=urlSafeEncode.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n" +
    '\n' +
    'export { ADD_OAUTH_LISTENER };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n" +
    "import { isNonRetryableError } from './isNonRetryableError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('retryUtil');\n" +
    '/**\n' +
    ' * @private\n' +
    ' * Internal use of Amplify only\n' +
    ' */\n' +
    'async function retry(functionToRetry, args, delayFn, onTerminate) {\n' +
    "    if (typeof functionToRetry !== 'function') {\n" +
    "        throw Error('functionToRetry must be a function');\n" +
    '    }\n' +
    '    // TODO(eslint): remove this linter suppression with refactoring.\n' +
    '    // eslint-disable-next-line no-async-promise-executor\n' +
    '    return new Promise(async (resolve, reject) => {\n' +
    '        let attempt = 0;\n' +
    '        let terminated = false;\n' +
    '        let timeout;\n' +
    '        let wakeUp = () => {\n' +
    '            // no-op\n' +
    '        }; // will be replaced with a resolver()\n' +
    '        // used after the loop if terminated while waiting for a timer.\n' +
    '        let lastError;\n' +
    '        onTerminate &&\n' +
    '            onTerminate.then(() => {\n' +
    '                // signal not to try anymore.\n' +
    '                terminated = true;\n' +
    "                // stop sleeping if we're sleeping.\n" +
    '                clearTimeout(timeout);\n' +
    '                wakeUp();\n' +
    '            });\n' +
    '        // TODO(eslint): remove this linter suppression with refactoring.\n' +
    '        // eslint-disable-next-line no-unmodified-loop-condition\n' +
    '        while (!terminated) {\n' +
    '            attempt++;\n' +
    '            logger.debug(`${functionToRetry.name} attempt #${attempt} with this vars: ${JSON.stringify(args)}`);\n' +
    '            try {\n' +
    '                resolve(await functionToRetry(...args));\n' +
    '                return;\n' +
    '            }\n' +
    '            catch (err) {\n' +
    '                lastError = err;\n' +
    '                logger.debug(`error on ${functionToRetry.name}`, err);\n' +
    '                if (isNonRetryableError(err)) {\n' +
    '                    logger.debug(`${functionToRetry.name} non retryable error`, err);\n' +
    '                    reject(err);\n' +
    '                    return;\n' +
    '                }\n' +
    '                const retryIn = delayFn(attempt, args, err);\n' +
    '                logger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n' +
    '                // we check `terminated` again here because it could have flipped\n' +
    '                // in the time it took `functionToRetry` to return.\n' +
    '                if (retryIn === false || terminated) {\n' +
    '                    reject(err);\n' +
    '                    return;\n' +
    '                }\n' +
    '                else {\n' +
    '                    await new Promise(_resolve => {\n' +
    '                        wakeUp = _resolve; // export wakeUp for onTerminate handling\n' +
    '                        timeout = setTimeout(wakeUp, retryIn);\n' +
    '                    });\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '        // reached if terminated while waiting for a timer.\n' +
    '        reject(lastError);\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { retry };\n' +
    '//# sourceMappingURL=retry.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const AmplifyUrl = URL;\n' +
    'const AmplifyUrlSearchParams = URLSearchParams;\n' +
    '\n' +
    'export { AmplifyUrl, AmplifyUrlSearchParams };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { v4 } from 'uuid';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const amplifyUuid = v4;\n' +
    '\n' +
    'export { amplifyUuid };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * returns in-flight promise if there is one\n' +
    ' *\n' +
    ' * @param asyncFunction - asyncFunction to be deduped.\n' +
    ' * @returns - the return type of the callback\n' +
    ' */\n' +
    'const deDupeAsyncFunction = (asyncFunction) => {\n' +
    '    let inflightPromise;\n' +
    '    return async (...args) => {\n' +
    '        if (inflightPromise)\n' +
    '            return inflightPromise;\n' +
    '        inflightPromise = new Promise((resolve, reject) => {\n' +
    '            asyncFunction(...args)\n' +
    '                .then(result => {\n' +
    '                resolve(result);\n' +
    '            })\n' +
    '                .catch(error => {\n' +
    '                reject(error);\n' +
    '            })\n' +
    '                .finally(() => {\n' +
    '                inflightPromise = undefined;\n' +
    '            });\n' +
    '        });\n' +
    '        return inflightPromise;\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { deDupeAsyncFunction };\n' +
    '//# sourceMappingURL=deDupeAsyncFunction.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\n" +
    "import { AmplifyError } from './errors/AmplifyError.mjs';\n" +
    "import './types/errors.mjs';\n" +
    "import './errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('parseAWSExports');\n" +
    'const authTypeMapping = {\n' +
    "    API_KEY: 'apiKey',\n" +
    "    AWS_IAM: 'iam',\n" +
    "    AMAZON_COGNITO_USER_POOLS: 'userPool',\n" +
    "    OPENID_CONNECT: 'oidc',\n" +
    "    NONE: 'none',\n" +
    "    AWS_LAMBDA: 'lambda',\n" +
    '    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n' +
    '    // Keeping it as a valid value until v7 to prevent breaking customers who might\n' +
    '    // be relying on it as a workaround.\n' +
    '    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n' +
    '    // TODO: @v7 remove next line\n' +
    "    LAMBDA: 'lambda',\n" +
    '};\n' +
    '/**\n' +
    ' * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n' +
    ' * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n' +
    ' *\n' +
    ' * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n' +
    ' *\n' +
    ' * @returns An object that conforms to the {@link ResourcesConfig} .\n' +
    ' */\n' +
    'const parseAWSExports = (config = {}) => {\n' +
    "    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n" +
    '        throw new AmplifyError({\n' +
    "            name: 'InvalidParameterException',\n" +
    "            message: 'Invalid config parameter.',\n" +
    "            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n" +
    '        });\n' +
    '    }\n' +
    '    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n' +
    '    const amplifyConfig = {};\n' +
    '    // Analytics\n' +
    '    if (aws_mobile_analytics_app_id) {\n' +
    '        amplifyConfig.Analytics = {\n' +
    '            Pinpoint: {\n' +
    '                appId: aws_mobile_analytics_app_id,\n' +
    '                region: aws_mobile_analytics_app_region,\n' +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    // Notifications\n' +
    '    const { InAppMessaging, Push } = Notifications ?? {};\n' +
    '    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n' +
    '        if (InAppMessaging?.AWSPinpoint) {\n' +
    '            const { appId, region } = InAppMessaging.AWSPinpoint;\n' +
    '            amplifyConfig.Notifications = {\n' +
    '                InAppMessaging: {\n' +
    '                    Pinpoint: {\n' +
    '                        appId,\n' +
    '                        region,\n' +
    '                    },\n' +
    '                },\n' +
    '            };\n' +
    '        }\n' +
    '        if (Push?.AWSPinpoint) {\n' +
    '            const { appId, region } = Push.AWSPinpoint;\n' +
    '            amplifyConfig.Notifications = {\n' +
    '                ...amplifyConfig.Notifications,\n' +
    '                PushNotification: {\n' +
    '                    Pinpoint: {\n' +
    '                        appId,\n' +
    '                        region,\n' +
    '                    },\n' +
    '                },\n' +
    '            };\n' +
    '        }\n' +
    '    }\n' +
    '    // Interactions\n' +
    '    if (Array.isArray(aws_bots_config)) {\n' +
    '        amplifyConfig.Interactions = {\n' +
    '            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n' +
    '        };\n' +
    '    }\n' +
    '    // API\n' +
    '    if (aws_appsync_graphqlEndpoint) {\n' +
    '        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n' +
    '        if (!defaultAuthMode) {\n' +
    '            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n' +
    '        }\n' +
    '        amplifyConfig.API = {\n' +
    '            GraphQL: {\n' +
    '                endpoint: aws_appsync_graphqlEndpoint,\n' +
    '                apiKey: aws_appsync_apiKey,\n' +
    '                region: aws_appsync_region,\n' +
    "                defaultAuthMode: defaultAuthMode ?? 'iam',\n" +
    '            },\n' +
    '        };\n' +
    '        if (modelIntrospection) {\n' +
    '            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n' +
    '        }\n' +
    '    }\n' +
    '    // Auth\n' +
    '    const mfaConfig = aws_cognito_mfa_configuration\n' +
    '        ? {\n' +
    '            status: aws_cognito_mfa_configuration &&\n' +
    '                aws_cognito_mfa_configuration.toLowerCase(),\n' +
    "            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n" +
    "            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n" +
    '        }\n' +
    '        : undefined;\n' +
    '    const passwordFormatConfig = aws_cognito_password_protection_settings\n' +
    '        ? {\n' +
    '            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n' +
    "            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n" +
    "            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n" +
    "            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n" +
    "            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n" +
    '        }\n' +
    '        : undefined;\n' +
    '    const mergedUserAttributes = Array.from(new Set([\n' +
    '        ...(aws_cognito_verification_mechanisms ?? []),\n' +
    '        ...(aws_cognito_signup_attributes ?? []),\n' +
    '    ]));\n' +
    '    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n' +
    '        ...attributes,\n' +
    '        // All user attributes generated by the CLI are required\n' +
    '        [key.toLowerCase()]: { required: true },\n' +
    '    }), {});\n' +
    "    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n" +
    "    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n" +
    '    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n' +
    '        amplifyConfig.Auth = {\n' +
    '            Cognito: {\n' +
    '                identityPoolId: aws_cognito_identity_pool_id,\n' +
    "                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n" +
    '                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n' +
    '                userAttributes,\n' +
    '                userPoolClientId: aws_user_pools_web_client_id,\n' +
    '                userPoolId: aws_user_pools_id,\n' +
    '                mfa: mfaConfig,\n' +
    '                passwordFormat: passwordFormatConfig,\n' +
    '                loginWith: {\n' +
    '                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n' +
    '                    email: loginWithEmailEnabled,\n' +
    '                    phone: loginWithPhoneEnabled,\n' +
    '                },\n' +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n' +
    '    const hasSocialProviderConfig = aws_cognito_social_providers\n' +
    '        ? aws_cognito_social_providers.length > 0\n' +
    '        : false;\n' +
    '    if (amplifyConfig.Auth && hasOAuthConfig) {\n' +
    '        amplifyConfig.Auth.Cognito.loginWith = {\n' +
    '            ...amplifyConfig.Auth.Cognito.loginWith,\n' +
    '            oauth: {\n' +
    '                ...getOAuthConfig(oauth),\n' +
    '                ...(hasSocialProviderConfig && {\n' +
    '                    providers: parseSocialProviders(aws_cognito_social_providers),\n' +
    '                }),\n' +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    // Storage\n' +
    '    if (aws_user_files_s3_bucket) {\n' +
    '        amplifyConfig.Storage = {\n' +
    '            S3: {\n' +
    '                bucket: aws_user_files_s3_bucket,\n' +
    '                region: aws_user_files_s3_bucket_region,\n' +
    '                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n' +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    // Geo\n' +
    '    if (geo) {\n' +
    '        const { amazon_location_service } = geo;\n' +
    '        amplifyConfig.Geo = amazon_location_service\n' +
    '            ? {\n' +
    '                LocationService: {\n' +
    '                    ...amazon_location_service,\n' +
    '                    searchIndices: amazon_location_service.search_indices,\n' +
    '                    region: amazon_location_service.region,\n' +
    '                },\n' +
    '            }\n' +
    '            : { ...geo };\n' +
    '    }\n' +
    '    // REST API\n' +
    '    if (aws_cloud_logic_custom) {\n' +
    '        amplifyConfig.API = {\n' +
    '            ...amplifyConfig.API,\n' +
    '            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n' +
    '                const { name, endpoint, region, service } = api;\n' +
    '                return {\n' +
    '                    ...acc,\n' +
    '                    [name]: {\n' +
    '                        endpoint,\n' +
    '                        ...(service ? { service } : undefined),\n' +
    '                        ...(region ? { region } : undefined),\n' +
    '                    },\n' +
    '                };\n' +
    '            }, {}),\n' +
    '        };\n' +
    '    }\n' +
    '    // Predictions\n' +
    '    if (predictions) {\n' +
    '        // map VoiceId from speechGenerator defaults to voiceId\n' +
    '        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n' +
    '        amplifyConfig.Predictions = voiceId\n' +
    '            ? {\n' +
    '                ...predictions,\n' +
    '                convert: {\n' +
    '                    ...predictions.convert,\n' +
    '                    speechGenerator: {\n' +
    '                        ...predictions.convert.speechGenerator,\n' +
    '                        defaults: { voiceId },\n' +
    '                    },\n' +
    '                },\n' +
    '            }\n' +
    '            : predictions;\n' +
    '    }\n' +
    '    return amplifyConfig;\n' +
    '};\n' +
    "const getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\n" +
    'const getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n' +
    '    domain,\n' +
    '    scopes: scope,\n' +
    '    redirectSignIn: getRedirectUrl(redirectSignIn),\n' +
    '    redirectSignOut: getRedirectUrl(redirectSignOut),\n' +
    '    responseType,\n' +
    '});\n' +
    'const parseSocialProviders = (aws_cognito_social_providers) => {\n' +
    '    return aws_cogni'... 264 more characters
} [Function: logger]
____9999999____ {
  code: 'function isTokenExpired({ expiresAt, clockDrift, }) {\n' +
    '    const currentTime = Date.now();\n' +
    '    return currentTime + clockDrift > expiresAt;\n' +
    '}\n' +
    'class AuthClass {\n' +
    '    /**\n' +
    '     * Configure Auth category\n' +
    '     *\n' +
    '     * @internal\n' +
    '     *\n' +
    '     * @param authResourcesConfig - Resources configurations required by Auth providers.\n' +
    '     * @param authOptions - Client options used by library\n' +
    '     *\n' +
    '     * @returns void\n' +
    '     */\n' +
    '    configure(authResourcesConfig, authOptions) {\n' +
    '        this.authConfig = authResourcesConfig;\n' +
    '        this.authOptions = authOptions;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n' +
    '     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n' +
    '     * with `{ forceRefresh: true }` input.\n' +
    '     *\n' +
    '     * @param options - Options configuring the fetch behavior.\n' +
    '     *\n' +
    '     * @returns Promise of current auth session {@link AuthSession}.\n' +
    '     */\n' +
    '    async fetchAuthSession(options = {}) {\n' +
    '        let credentialsAndIdentityId;\n' +
    '        let userSub;\n' +
    '        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n' +
    '        const tokens = await this.getTokens(options);\n' +
    '        if (tokens) {\n' +
    '            userSub = tokens.accessToken?.payload?.sub;\n' +
    '            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n' +
    '            credentialsAndIdentityId =\n' +
    '                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n' +
    '                    authConfig: this.authConfig,\n' +
    '                    tokens,\n' +
    '                    authenticated: true,\n' +
    '                    forceRefresh: options.forceRefresh,\n' +
    '                });\n' +
    '        }\n' +
    '        else {\n' +
    '            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n' +
    '            credentialsAndIdentityId =\n' +
    '                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n' +
    '                    authConfig: this.authConfig,\n' +
    '                    authenticated: false,\n' +
    '                    forceRefresh: options.forceRefresh,\n' +
    '                });\n' +
    '        }\n' +
    '        return {\n' +
    '            tokens,\n' +
    '            credentials: credentialsAndIdentityId?.credentials,\n' +
    '            identityId: credentialsAndIdentityId?.identityId,\n' +
    '            userSub,\n' +
    '        };\n' +
    '    }\n' +
    '    async clearCredentials() {\n' +
    '        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n' +
    '    }\n' +
    '    async getTokens(options) {\n' +
    '        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { AuthClass, isTokenExpired };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { signRequest } from '../clients/middleware/signing/signer/signatureV4/signRequest.mjs';\n" +
    "import { presignUrl } from '../clients/middleware/signing/signer/signatureV4/presignUrl.mjs';\n" +
    "import { TOKEN_QUERY_PARAM } from '../clients/middleware/signing/signer/signatureV4/constants.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import { AmplifyUrl } from '../utils/amplifyUrl/index.mjs';\n" +
    "import { DateUtils } from './DateUtils.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const IOT_SERVICE_NAME = 'iotdevicegateway';\n" +
    '// Best practice regex to parse the service and region from an AWS endpoint\n' +
    'const AWS_ENDPOINT_REGEX = /([^.]+)\\.(?:([^.]*)\\.)?amazonaws\\.com(.cn)?$/;\n' +
    '/**\n' +
    ' * This class is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n' +
    ' * `clients/middleware/signing/signer/signatureV4`.\n' +
    ' *\n' +
    ' * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' * @deprecated\n' +
    ' */\n' +
    'class Signer {\n' +
    '    /**\n' +
    "    * Sign a HTTP request, add 'Authorization' header to request param\n" +
    '    * @method sign\n' +
    '    * @memberof Signer\n' +
    '    * @static\n' +
    '    *\n' +
    '    * @param {object} request - HTTP request object\n' +
    '    <pre>\n' +
    '    request: {\n' +
    '        method: GET | POST | PUT ...\n' +
    '        url: ...,\n' +
    '        headers: {\n' +
    '            header1: ...\n' +
    '        },\n' +
    '        data: data\n' +
    '    }\n' +
    '    </pre>\n' +
    '    * @param {object} access_info - AWS access credential info\n' +
    '    <pre>\n' +
    '    access_info: {\n' +
    '        access_key: ...,\n' +
    '        secret_key: ...,\n' +
    '        session_token: ...\n' +
    '    }\n' +
    '    </pre>\n' +
    '    * @param {object} [service_info] - AWS service type and region, optional,\n' +
    '    *                                  if not provided then parse out from url\n' +
    '    <pre>\n' +
    '    service_info: {\n' +
    '        service: ...,\n' +
    '        region: ...\n' +
    '    }\n' +
    '    </pre>\n' +
    '    *\n' +
    '    * @returns {object} Signed HTTP request\n' +
    '    */\n' +
    '    static sign(request, accessInfo, serviceInfo) {\n' +
    '        request.headers = request.headers || {};\n' +
    '        if (request.body && !request.data) {\n' +
    `            throw new Error('The attribute "body" was found on the request object. Please use the attribute "data" instead.');\n` +
    '        }\n' +
    '        const requestToSign = {\n' +
    '            ...request,\n' +
    '            body: request.data,\n' +
    '            url: new AmplifyUrl(request.url),\n' +
    '        };\n' +
    '        const options = getOptions(requestToSign, accessInfo, serviceInfo);\n' +
    '        const signedRequest = signRequest(requestToSign, options);\n' +
    '        // Prior to using `signRequest`, Signer accepted urls as strings and outputted urls as string. Coerce the property\n' +
    '        // back to a string so as not to disrupt consumers of Signer.\n' +
    '        signedRequest.url = signedRequest.url.toString();\n' +
    '        // HTTP headers should be case insensitive but, to maintain parity with the previous Signer implementation and\n' +
    '        // limit the impact of this implementation swap, replace lowercased headers with title cased ones.\n' +
    '        signedRequest.headers.Authorization = signedRequest.headers.authorization;\n' +
    "        signedRequest.headers['X-Amz-Security-Token'] =\n" +
    "            signedRequest.headers['x-amz-security-token'];\n" +
    '        delete signedRequest.headers.authorization;\n' +
    "        delete signedRequest.headers['x-amz-security-token'];\n" +
    '        return signedRequest;\n' +
    '    }\n' +
    '    static signUrl(urlOrRequest, accessInfo, serviceInfo, expiration) {\n' +
    "        const urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n" +
    "        const method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n" +
    "        const body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n" +
    '        const presignable = {\n' +
    '            body,\n' +
    '            method,\n' +
    '            url: new AmplifyUrl(urlToSign),\n' +
    '        };\n' +
    '        const options = getOptions(presignable, accessInfo, serviceInfo, expiration);\n' +
    '        const signedUrl = presignUrl(presignable, options);\n' +
    '        if (accessInfo.session_token &&\n' +
    '            !sessionTokenRequiredInSigning(options.signingService)) {\n' +
    '            signedUrl.searchParams.append(TOKEN_QUERY_PARAM, accessInfo.session_token);\n' +
    '        }\n' +
    '        return signedUrl.toString();\n' +
    '    }\n' +
    '}\n' +
    'const getOptions = (request, accessInfo, serviceInfo, expiration) => {\n' +
    '    const { access_key, secret_key, session_token } = accessInfo ?? {};\n' +
    '    const { region: urlRegion, service: urlService } = parseServiceInfo(request.url);\n' +
    '    const { region = urlRegion, service = urlService } = serviceInfo ?? {};\n' +
    '    const credentials = {\n' +
    '        accessKeyId: access_key,\n' +
    '        secretAccessKey: secret_key,\n' +
    '        ...(sessionTokenRequiredInSigning(service)\n' +
    '            ? { sessionToken: session_token }\n' +
    '            : {}),\n' +
    '    };\n' +
    '    return {\n' +
    '        credentials,\n' +
    '        signingDate: DateUtils.getDateWithClockOffset(),\n' +
    '        signingRegion: region,\n' +
    '        signingService: service,\n' +
    '        ...(expiration && { expiration }),\n' +
    '    };\n' +
    '};\n' +
    'const parseServiceInfo = (url) => {\n' +
    '    const { host } = url;\n' +
    '    const matched = host.match(AWS_ENDPOINT_REGEX) ?? [];\n' +
    '    let parsed = matched.slice(1, 3);\n' +
    "    if (parsed[1] === 'es') {\n" +
    '        // Elastic Search\n' +
    '        parsed = parsed.reverse();\n' +
    '    }\n' +
    '    return {\n' +
    '        service: parsed[0],\n' +
    '        region: parsed[1],\n' +
    '    };\n' +
    '};\n' +
    '// IoT service does not allow the session token in the canonical request\n' +
    '// https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n' +
    'const sessionTokenRequiredInSigning = (service) => service !== IOT_SERVICE_NAME;\n' +
    '\n' +
    'export { Signer };\n' +
    '//# sourceMappingURL=Signer.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Utility for determining if credentials have changed.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const haveCredentialsChanged = (cachedCredentials, credentials) => {\n' +
    '    return (cachedCredentials.accessKeyId !== credentials.accessKeyId ||\n' +
    '        cachedCredentials.sessionToken !== credentials.sessionToken ||\n' +
    '        cachedCredentials.secretAccessKey !== credentials.secretAccessKey);\n' +
    '};\n' +
    '\n' +
    'export { haveCredentialsChanged };\n' +
    '//# sourceMappingURL=haveCredentialsChanged.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Framework } from './types.mjs';\n" +
    "import { version } from './version.mjs';\n" +
    "import { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\n" +
    "import { getCustomUserAgent } from './customUserAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const BASE_USER_AGENT = `aws-amplify`;\n' +
    'class PlatformBuilder {\n' +
    '    constructor() {\n' +
    '        this.userAgent = `${BASE_USER_AGENT}/${version}`;\n' +
    '    }\n' +
    '    get framework() {\n' +
    '        return detectFramework();\n' +
    '    }\n' +
    '    get isReactNative() {\n' +
    '        return (this.framework === Framework.ReactNative ||\n' +
    '            this.framework === Framework.Expo);\n' +
    '    }\n' +
    '    observeFrameworkChanges(fcn) {\n' +
    '        observeFrameworkChanges(fcn);\n' +
    '    }\n' +
    '}\n' +
    'const Platform = new PlatformBuilder();\n' +
    'const getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n' +
    '    const userAgent = [[BASE_USER_AGENT, version]];\n' +
    '    if (category) {\n' +
    '        userAgent.push([category, action]);\n' +
    '    }\n' +
    "    userAgent.push(['framework', detectFramework()]);\n" +
    '    if (category && action) {\n' +
    '        const customState = getCustomUserAgent(category, action);\n' +
    '        if (customState) {\n' +
    '            customState.forEach(state => {\n' +
    '                userAgent.push(state);\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    return userAgent;\n' +
    '};\n' +
    'const getAmplifyUserAgent = (customUserAgentDetails) => {\n' +
    '    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n' +
    '    const userAgentString = userAgent\n' +
    '        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n' +
    "        .join(' ');\n" +
    '    return userAgentString;\n' +
    '};\n' +
    '\n' +
    'export { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var Framework;\n' +
    '(function (Framework) {\n' +
    '    // < 100 - Web frameworks\n' +
    '    Framework["WebUnknown"] = "0";\n' +
    '    Framework["React"] = "1";\n' +
    '    Framework["NextJs"] = "2";\n' +
    '    Framework["Angular"] = "3";\n' +
    '    Framework["VueJs"] = "4";\n' +
    '    Framework["Nuxt"] = "5";\n' +
    '    Framework["Svelte"] = "6";\n' +
    '    // 100s - Server side frameworks\n' +
    '    Framework["ServerSideUnknown"] = "100";\n' +
    '    Framework["ReactSSR"] = "101";\n' +
    '    Framework["NextJsSSR"] = "102";\n' +
    '    Framework["AngularSSR"] = "103";\n' +
    '    Framework["VueJsSSR"] = "104";\n' +
    '    Framework["NuxtSSR"] = "105";\n' +
    '    Framework["SvelteSSR"] = "106";\n' +
    '    // 200s - Mobile framework\n' +
    '    Framework["ReactNative"] = "201";\n' +
    '    Framework["Expo"] = "202";\n' +
    '})(Framework || (Framework = {}));\n' +
    'var Category;\n' +
    '(function (Category) {\n' +
    '    Category["API"] = "api";\n' +
    '    Category["Auth"] = "auth";\n' +
    '    Category["Analytics"] = "analytics";\n' +
    '    Category["DataStore"] = "datastore";\n' +
    '    Category["Geo"] = "geo";\n' +
    '    Category["InAppMessaging"] = "inappmessaging";\n' +
    '    Category["Interactions"] = "interactions";\n' +
    '    Category["Predictions"] = "predictions";\n' +
    '    Category["PubSub"] = "pubsub";\n' +
    '    Category["PushNotification"] = "pushnotification";\n' +
    '    Category["Storage"] = "storage";\n' +
    '})(Category || (Category = {}));\n' +
    'var AnalyticsAction;\n' +
    '(function (AnalyticsAction) {\n' +
    '    AnalyticsAction["Record"] = "1";\n' +
    '    AnalyticsAction["IdentifyUser"] = "2";\n' +
    '})(AnalyticsAction || (AnalyticsAction = {}));\n' +
    'var ApiAction;\n' +
    '(function (ApiAction) {\n' +
    '    ApiAction["GraphQl"] = "1";\n' +
    '    ApiAction["Get"] = "2";\n' +
    '    ApiAction["Post"] = "3";\n' +
    '    ApiAction["Put"] = "4";\n' +
    '    ApiAction["Patch"] = "5";\n' +
    '    ApiAction["Del"] = "6";\n' +
    '    ApiAction["Head"] = "7";\n' +
    '})(ApiAction || (ApiAction = {}));\n' +
    'var AuthAction;\n' +
    '(function (AuthAction) {\n' +
    '    AuthAction["SignUp"] = "1";\n' +
    '    AuthAction["ConfirmSignUp"] = "2";\n' +
    '    AuthAction["ResendSignUpCode"] = "3";\n' +
    '    AuthAction["SignIn"] = "4";\n' +
    '    AuthAction["FetchMFAPreference"] = "6";\n' +
    '    AuthAction["UpdateMFAPreference"] = "7";\n' +
    '    AuthAction["SetUpTOTP"] = "10";\n' +
    '    AuthAction["VerifyTOTPSetup"] = "11";\n' +
    '    AuthAction["ConfirmSignIn"] = "12";\n' +
    '    AuthAction["DeleteUserAttributes"] = "15";\n' +
    '    AuthAction["DeleteUser"] = "16";\n' +
    '    AuthAction["UpdateUserAttributes"] = "17";\n' +
    '    AuthAction["FetchUserAttributes"] = "18";\n' +
    '    AuthAction["ConfirmUserAttribute"] = "22";\n' +
    '    AuthAction["SignOut"] = "26";\n' +
    '    AuthAction["UpdatePassword"] = "27";\n' +
    '    AuthAction["ResetPassword"] = "28";\n' +
    '    AuthAction["ConfirmResetPassword"] = "29";\n' +
    '    AuthAction["FederatedSignIn"] = "30";\n' +
    '    AuthAction["RememberDevice"] = "32";\n' +
    '    AuthAction["ForgetDevice"] = "33";\n' +
    '    AuthAction["FetchDevices"] = "34";\n' +
    '    AuthAction["SendUserAttributeVerificationCode"] = "35";\n' +
    '    AuthAction["SignInWithRedirect"] = "36";\n' +
    '})(AuthAction || (AuthAction = {}));\n' +
    'var DataStoreAction;\n' +
    '(function (DataStoreAction) {\n' +
    '    DataStoreAction["Subscribe"] = "1";\n' +
    '    DataStoreAction["GraphQl"] = "2";\n' +
    '})(DataStoreAction || (DataStoreAction = {}));\n' +
    'var GeoAction;\n' +
    '(function (GeoAction) {\n' +
    '    GeoAction["SearchByText"] = "0";\n' +
    '    GeoAction["SearchByCoordinates"] = "1";\n' +
    '    GeoAction["SearchForSuggestions"] = "2";\n' +
    '    GeoAction["SearchByPlaceId"] = "3";\n' +
    '    GeoAction["SaveGeofences"] = "4";\n' +
    '    GeoAction["GetGeofence"] = "5";\n' +
    '    GeoAction["ListGeofences"] = "6";\n' +
    '    GeoAction["DeleteGeofences"] = "7";\n' +
    '})(GeoAction || (GeoAction = {}));\n' +
    'var InAppMessagingAction;\n' +
    '(function (InAppMessagingAction) {\n' +
    '    InAppMessagingAction["SyncMessages"] = "1";\n' +
    '    InAppMessagingAction["IdentifyUser"] = "2";\n' +
    '    InAppMessagingAction["NotifyMessageInteraction"] = "3";\n' +
    '})(InAppMessagingAction || (InAppMessagingAction = {}));\n' +
    'var InteractionsAction;\n' +
    '(function (InteractionsAction) {\n' +
    '    InteractionsAction["None"] = "0";\n' +
    '})(InteractionsAction || (InteractionsAction = {}));\n' +
    'var PredictionsAction;\n' +
    '(function (PredictionsAction) {\n' +
    '    PredictionsAction["Convert"] = "1";\n' +
    '    PredictionsAction["Identify"] = "2";\n' +
    '    PredictionsAction["Interpret"] = "3";\n' +
    '})(PredictionsAction || (PredictionsAction = {}));\n' +
    'var PubSubAction;\n' +
    '(function (PubSubAction) {\n' +
    '    PubSubAction["Subscribe"] = "1";\n' +
    '})(PubSubAction || (PubSubAction = {}));\n' +
    'var PushNotificationAction;\n' +
    '(function (PushNotificationAction) {\n' +
    '    PushNotificationAction["InitializePushNotifications"] = "1";\n' +
    '    PushNotificationAction["IdentifyUser"] = "2";\n' +
    '})(PushNotificationAction || (PushNotificationAction = {}));\n' +
    'var StorageAction;\n' +
    '(function (StorageAction) {\n' +
    '    StorageAction["UploadData"] = "1";\n' +
    '    StorageAction["DownloadData"] = "2";\n' +
    '    StorageAction["List"] = "3";\n' +
    '    StorageAction["Copy"] = "4";\n' +
    '    StorageAction["Remove"] = "5";\n' +
    '    StorageAction["GetProperties"] = "6";\n' +
    '    StorageAction["GetUrl"] = "7";\n' +
    '})(StorageAction || (StorageAction = {}));\n' +
    '\n' +
    'export { AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Maintains custom user-agent state set by external consumers.\n' +
    'const customUserAgentState = {};\n' +
    '/**\n' +
    ' * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n' +
    ' * clean up any custom state set with this API.\n' +
    ' *\n' +
    ' * @note\n' +
    ' * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n' +
    ' * particular API being used.\n' +
    ' *\n' +
    ' * @note\n' +
    ' * This utility IS NOT compatible with SSR.\n' +
    ' *\n' +
    ' * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n' +
    ' */\n' +
    'const setCustomUserAgent = (input) => {\n' +
    '    // Save custom user-agent state & increment reference counter\n' +
    '    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n' +
    '    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n' +
    '        ...acc,\n' +
    '        [api]: {\n' +
    '            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n' +
    '            additionalDetails: input.additionalDetails,\n' +
    '        },\n' +
    '    }), customUserAgentState[input.category] ?? {});\n' +
    '    // Callback that cleans up state for APIs recorded by this call\n' +
    '    let cleanUpCallbackCalled = false;\n' +
    '    const cleanUpCallback = () => {\n' +
    '        // Only allow the cleanup callback to be called once\n' +
    '        if (cleanUpCallbackCalled) {\n' +
    '            return;\n' +
    '        }\n' +
    '        cleanUpCallbackCalled = true;\n' +
    '        input.apis.forEach(api => {\n' +
    '            const apiRefCount = customUserAgentState[input.category][api].refCount;\n' +
    '            if (apiRefCount > 1) {\n' +
    '                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n' +
    '            }\n' +
    '            else {\n' +
    '                delete customUserAgentState[input.category][api];\n' +
    '                // Clean up category if no more APIs set\n' +
    '                if (!Object.keys(customUserAgentState[input.category]).length) {\n' +
    '                    delete customUserAgentState[input.category];\n' +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    };\n' +
    '    return cleanUpCallback;\n' +
    '};\n' +
    'const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n' +
    '\n' +
    'export { getCustomUserAgent, setCustomUserAgent };\n' +
    '//# sourceMappingURL=customUserAgent.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class AmplifyError extends Error {\n' +
    '    /**\n' +
    '     *  Constructs an AmplifyError.\n' +
    '     *\n' +
    '     * @param message text that describes the main problem.\n' +
    '     * @param underlyingError the underlying cause of the error.\n' +
    '     * @param recoverySuggestion suggestion to recover from the error.\n' +
    '     *\n' +
    '     */\n' +
    '    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n' +
    '        super(message);\n' +
    '        this.name = name;\n' +
    '        this.underlyingError = underlyingError;\n' +
    '        this.recoverySuggestion = recoverySuggestion;\n' +
    '        // Hack for making the custom error class work when transpiled to es5\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = AmplifyError;\n' +
    '        Object.setPrototypeOf(this, AmplifyError.prototype);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { AmplifyError };\n' +
    '//# sourceMappingURL=AmplifyError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyError } from './AmplifyError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n' +
    '    const { message, recoverySuggestion } = errorMap[name];\n' +
    '    if (!assertion) {\n' +
    '        throw new AssertionError({\n' +
    '            name,\n' +
    '            message: additionalContext\n' +
    '                ? `${message} ${additionalContext}`\n' +
    '                : message,\n' +
    '            recoverySuggestion,\n' +
    '        });\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { createAssertionFunction };\n' +
    '//# sourceMappingURL=createAssertionFunction.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyError } from './AmplifyError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Error class for errors that associated with unsuccessful HTTP responses.\n' +
    " * It's throw by API category REST API handlers and GraphQL query handlers for now.\n" +
    ' */\n' +
    'class ApiError extends AmplifyError {\n' +
    '    /**\n' +
    '     * The unwrapped HTTP response causing the given API error.\n' +
    '     */\n' +
    '    get response() {\n' +
    '        return this._response\n' +
    '            ? replicateApiErrorResponse(this._response)\n' +
    '            : undefined;\n' +
    '    }\n' +
    '    constructor(params) {\n' +
    '        super(params);\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = ApiError;\n' +
    '        Object.setPrototypeOf(this, ApiError.prototype);\n' +
    '        if (params.response) {\n' +
    '            this._response = params.response;\n' +
    '        }\n' +
    '    }\n' +
    '}\n' +
    'const replicateApiErrorResponse = (response) => ({\n' +
    '    ...response,\n' +
    '    headers: { ...response.headers },\n' +
    '});\n' +
    '\n' +
    'export { ApiError };\n' +
    '//# sourceMappingURL=APIError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyErrorCode } from '../types/errors.mjs';\n" +
    "import { AmplifyError } from './AmplifyError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class PlatformNotSupportedError extends AmplifyError {\n' +
    '    constructor() {\n' +
    '        super({\n' +
    '            name: AmplifyErrorCode.PlatformNotSupported,\n' +
    "            message: 'Function not supported on current platform',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { PlatformNotSupportedError };\n' +
    '//# sourceMappingURL=PlatformNotSupportedError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var AmplifyErrorCode;\n' +
    '(function (AmplifyErrorCode) {\n' +
    '    AmplifyErrorCode["NoEndpointId"] = "NoEndpointId";\n' +
    '    AmplifyErrorCode["PlatformNotSupported"] = "PlatformNotSupported";\n' +
    '    AmplifyErrorCode["Unknown"] = "Unknown";\n' +
    '})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n' +
    '\n' +
    'export { AmplifyErrorCode };\n' +
    '//# sourceMappingURL=errors.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyErrorCode } from '../types/errors.mjs';\n" +
    "import { createAssertionFunction } from './createAssertionFunction.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const amplifyErrorMap = {\n' +
    '    [AmplifyErrorCode.NoEndpointId]: {\n' +
    "        message: 'Endpoint ID was not found and was unable to be created.',\n" +
    '    },\n' +
    '    [AmplifyErrorCode.PlatformNotSupported]: {\n' +
    "        message: 'Function not supported on current platform.',\n" +
    '    },\n' +
    '    [AmplifyErrorCode.Unknown]: {\n' +
    "        message: 'An unknown error occurred.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(amplifyErrorMap);\n' +
    '\n' +
    'export { assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Logging constants\n' +
    "const AWS_CLOUDWATCH_CATEGORY = 'Logging';\n" +
    "const USER_AGENT_HEADER = 'x-amz-user-agent';\n" +
    '// Error exception code constants\n' +
    "const NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n" +
    '\n' +
    'export { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const fetchAuthSession = (amplify, options) => {\n' +
    '    return amplify.Auth.fetchAuthSession(options);\n' +
    '};\n' +
    '\n' +
    'export { fetchAuthSession };\n' +
    '//# sourceMappingURL=fetchAuthSession.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getAtob } from '../../globalHelpers/index.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const base64Decoder = {\n' +
    '    convert(input) {\n' +
    '        return getAtob()(input);\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { base64Decoder };\n' +
    '//# sourceMappingURL=base64Decoder.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { BackgroundManagerNotOpenError } from './BackgroundManagerNotOpenError.mjs';\n" +
    "import { BackgroundProcessManagerState } from './types.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @private For internal Amplify use.\n' +
    ' *\n' +
    ' * Creates a new scope for promises, observables, and other types of work or\n' +
    ' * processes that may be running in the background. This manager provides\n' +
    ' * an singular entrypoint to request termination and await completion.\n' +
    ' *\n' +
    ' * As work completes on its own prior to close, the manager removes them\n' +
    ' * from the registry to avoid holding references to completed jobs.\n' +
    ' */\n' +
    'class BackgroundProcessManager {\n' +
    '    constructor() {\n' +
    '        /**\n' +
    '         * A string indicating whether the manager is accepting new work ("Open"),\n' +
    '         * waiting for work to complete ("Closing"), or fully done with all\n' +
    '         * submitted work and *not* accepting new jobs ("Closed").\n' +
    '         */\n' +
    '        this._state = BackgroundProcessManagerState.Open;\n' +
    '        /**\n' +
    "         * The list of outstanding jobs we'll need to wait for upon `close()`\n" +
    '         */\n' +
    '        this.jobs = new Set();\n' +
    '    }\n' +
    '    add(jobOrDescription, optionalDescription) {\n' +
    '        let job;\n' +
    '        let description;\n' +
    "        if (typeof jobOrDescription === 'string') {\n" +
    '            job = undefined;\n' +
    '            description = jobOrDescription;\n' +
    '        }\n' +
    '        else {\n' +
    '            job = jobOrDescription;\n' +
    '            description = optionalDescription;\n' +
    '        }\n' +
    '        const error = this.closedFailure(description);\n' +
    '        if (error)\n' +
    '            return error;\n' +
    '        if (job === undefined) {\n' +
    '            return this.addHook(description);\n' +
    '        }\n' +
    "        else if (typeof job === 'function') {\n" +
    '            return this.addFunction(job, description);\n' +
    '        }\n' +
    '        else if (job instanceof BackgroundProcessManager) {\n' +
    '            this.addManager(job, description);\n' +
    '        }\n' +
    '        else {\n' +
    "            throw new Error('If `job` is provided, it must be an Observable, Function, or BackgroundProcessManager.');\n" +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    "     * Adds a **cleaner** function that doesn't immediately get executed.\n" +
    '     * Instead, the caller gets a **terminate** function back. The *cleaner* is\n' +
    '     * invoked only once the mananger *closes* or the returned **terminate**\n' +
    '     * function is called.\n' +
    '     *\n' +
    '     * @param clean The cleanup function.\n' +
    '     * @param description Optional description to help identify pending jobs.\n' +
    '     * @returns A terminate function.\n' +
    '     */\n' +
    '    addCleaner(clean, description) {\n' +
    '        const { resolve, onTerminate } = this.addHook(description);\n' +
    '        const proxy = async () => {\n' +
    '            await clean();\n' +
    '            resolve();\n' +
    '        };\n' +
    '        onTerminate.then(proxy);\n' +
    '        return proxy;\n' +
    '    }\n' +
    '    addFunction(job, description) {\n' +
    '        // the function we call when we want to try to terminate this job.\n' +
    '        let terminate;\n' +
    '        // the promise the job can opt into listening to for termination.\n' +
    '        const onTerminate = new Promise(resolve => {\n' +
    '            terminate = resolve;\n' +
    '        });\n' +
    '        // finally! start the job.\n' +
    '        const jobResult = job(onTerminate);\n' +
    '        // depending on what the job gives back, register the result\n' +
    '        // so we can monitor for completion.\n' +
    "        if (typeof jobResult?.then === 'function') {\n" +
    '            this.registerPromise(jobResult, terminate, description);\n' +
    '        }\n' +
    "        // At the end of the day, or you know, method call, it doesn't matter\n" +
    '        // what the return value is at all; we just pass it through to the\n' +
    '        // caller.\n' +
    '        return jobResult;\n' +
    '    }\n' +
    '    addManager(manager, description) {\n' +
    '        this.addCleaner(async () => manager.close(), description);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Creates and registers a fabricated job for processes that need to operate\n' +
    '     * with callbacks/hooks. The returned `resolve` and `reject`\n' +
    '     * functions can be used to signal the job is done successfully or not.\n' +
    '     * The returned `onTerminate` is a promise that will resolve when the\n' +
    '     * manager is requesting the termination of the job.\n' +
    '     *\n' +
    '     * @param description Optional description to help identify pending jobs.\n' +
    '     * @returns `{ resolve, reject, onTerminate }`\n' +
    '     */\n' +
    '    addHook(description) {\n' +
    "        // the resolve/reject functions we'll provide to the caller to signal\n" +
    '        // the state of the job.\n' +
    '        let promiseResolve;\n' +
    '        let promiseReject;\n' +
    "        // the underlying promise we'll use to manage it, pretty much like\n" +
    '        // any other promise.\n' +
    '        const promise = new Promise((resolve, reject) => {\n' +
    '            promiseResolve = resolve;\n' +
    '            promiseReject = reject;\n' +
    '        });\n' +
    '        // the function we call when we want to try to terminate this job.\n' +
    '        let terminate;\n' +
    '        // the promise the job can opt into listening to for termination.\n' +
    '        const onTerminate = new Promise(resolve => {\n' +
    '            terminate = resolve;\n' +
    '        });\n' +
    '        this.registerPromise(promise, terminate, description);\n' +
    '        return {\n' +
    '            resolve: promiseResolve,\n' +
    '            reject: promiseReject,\n' +
    '            onTerminate,\n' +
    '        };\n' +
    '    }\n' +
    '    /**\n' +
    '     * Adds a Promise based job to the list of jobs for monitoring and listens\n' +
    '     * for either a success or failure, upon which the job is considered "done"\n' +
    '     * and removed from the registry.\n' +
    '     *\n' +
    '     * @param promise A promise that is on its way to being returned to a\n' +
    '     * caller, which needs to be tracked as a background job.\n' +
    '     * @param terminate The termination function to register, which can be\n' +
    '     * invoked to request the job stop.\n' +
    '     * @param description Optional description to help identify pending jobs.\n' +
    '     */\n' +
    '    registerPromise(promise, terminate, description) {\n' +
    '        const jobEntry = { promise, terminate, description };\n' +
    '        this.jobs.add(jobEntry);\n' +
    '        // in all of my testing, it is safe to multi-subscribe to a promise.\n' +
    "        // so, rather than create another layer of promising, we're just going\n" +
    "        // to hook into the promise we already have, and when it's done\n" +
    '        // (successfully or not), we no longer need to wait for it upon close.\n' +
    '        //\n' +
    '        // sorry this is a bit hand-wavy:\n' +
    '        //\n' +
    '        // i believe we use `.then` and `.catch` instead of `.finally` because\n' +
    '        // `.finally` is invoked in a different order in the sequence, and this\n' +
    '        // breaks assumptions throughout and causes failures.\n' +
    '        promise\n' +
    '            .then(() => {\n' +
    '            this.jobs.delete(jobEntry);\n' +
    '        })\n' +
    '            .catch(() => {\n' +
    '            this.jobs.delete(jobEntry);\n' +
    '        });\n' +
    '    }\n' +
    '    /**\n' +
    '     * The number of jobs being waited on.\n' +
    '     *\n' +
    "     * We don't use this for anything. It's just informational for the caller,\n" +
    '     * and can be used in logging and testing.\n' +
    '     *\n' +
    '     * @returns the number of jobs.\n' +
    '     */\n' +
    '    get length() {\n' +
    '        return this.jobs.size;\n' +
    '    }\n' +
    '    /**\n' +
    '     * The execution state of the manager. One of:\n' +
    '     *\n' +
    '     * 1. "Open" -> Accepting new jobs\n' +
    '     * 1. "Closing" -> Not accepting new work. Waiting for jobs to complete.\n' +
    '     * 1. "Closed" -> Not accepting new work. All submitted jobs are complete.\n' +
    '     */\n' +
    '    get state() {\n' +
    '        return this._state;\n' +
    '    }\n' +
    '    /**\n' +
    '     * The registered `description` of all still-pending jobs.\n' +
    '     *\n' +
    '     * @returns descriptions as an array.\n' +
    '     */\n' +
    '    get pending() {\n' +
    '        return Array.from(this.jobs).map(job => job.description);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Whether the manager is accepting new jobs.\n' +
    '     */\n' +
    '    get isOpen() {\n' +
    '        return this._state === BackgroundProcessManagerState.Open;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Whether the manager is rejecting new work, but still waiting for\n' +
    '     * submitted work to complete.\n' +
    '     */\n' +
    '    get isClosing() {\n' +
    '        return this._state === BackgroundProcessManagerState.Closing;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Whether the manager is rejecting work and done waiting for submitted\n' +
    '     * work to complete.\n' +
    '     */\n' +
    '    get isClosed() {\n' +
    '        return this._state === BackgroundProcessManagerState.Closed;\n' +
    '    }\n' +
    '    closedFailure(description) {\n' +
    '        if (!this.isOpen) {\n' +
    '            return Promise.reject(new BackgroundManagerNotOpenError([\n' +
    '                `The manager is ${this.state}.`,\n' +
    '                `You tried to add "${description}".`,\n' +
    '                `Pending jobs: [\\n${this.pending\n' +
    "                    .map(t => '    ' + t)\n" +
    "                    .join(',\\n')}\\n]`,\n" +
    "            ].join('\\n')));\n" +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * Signals jobs to stop (for those that accept interruptions) and waits\n' +
    '     * for confirmation that jobs have stopped.\n' +
    '     *\n' +
    '     * This immediately puts the manager into a closing state and just begins\n' +
    '     * to reject new work. After all work in the manager is complete, the\n' +
    '     * manager goes into a `Completed` state and `close()` returns.\n' +
    '     *\n' +
    '     * This call is idempotent.\n' +
    '     *\n' +
    '     * If the manager is already closing or closed, `finalCleaup` is not executed.\n' +
    '     *\n' +
    '     * @param onClosed\n' +
    "     * @returns The settled results of each still-running job's promise. If the\n" +
    '     * manager is already closed, this will contain the results as of when the\n' +
    "     * manager's `close()` was called in an `Open` state.\n" +
    '     */\n' +
    '    async close() {\n' +
    '        if (this.isOpen) {\n' +
    '            this._state = BackgroundProcessManagerState.Closing;\n' +
    '            for (const job of Array.from(this.jobs)) {\n' +
    '                try {\n' +
    '                    job.terminate();\n' +
    '                }\n' +
    '                catch (error) {\n' +
    "                    // Due to potential races with a job's natural completion, it's\n" +
    '                    // reasonable to expect the termination call to fail. Hence,\n' +
    '                    // not logging as an error.\n' +
    '                    console.warn(`Failed to send termination signal to job. Error: ${error.message}`, job);\n' +
    '                }\n' +
    '            }\n' +
    '            // Use `allSettled()` because we want to wait for all to finish. We do\n' +
    '            // not want to stop waiting if there is a failure.\n' +
    '            this._closingPromise = Promise.allSe'... 858 more characters
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/*!\n' +
    ' * The MIT License (MIT)\n' +
    ' *\n' +
    ' * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n' +
    ' *\n' +
    ' * Permission is hereby granted, free of charge, to any person obtaining a copy\n' +
    ' * of this software and associated documentation files (the "Software"), to deal\n' +
    ' * in the Software without restriction, including without limitation the rights\n' +
    ' * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n' +
    ' * copies of the Software, and to permit persons to whom the Software is\n' +
    ' * furnished to do so, subject to the following conditions:\n' +
    ' *\n' +
    ' * The above copyright notice and this permission notice shall be included in\n' +
    ' * all copies or substantial portions of the Software.\n' +
    ' *\n' +
    ' * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
    ' * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
    ' * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
    ' * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
    ' * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
    ' * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n' +
    ' * THE SOFTWARE.\n' +
    ' */\n' +
    'class Mutex {\n' +
    '    constructor() {\n' +
    '        this._queue = [];\n' +
    '        this._pending = false;\n' +
    '    }\n' +
    '    isLocked() {\n' +
    '        return this._pending;\n' +
    '    }\n' +
    '    acquire() {\n' +
    '        const ticket = new Promise(resolve => this._queue.push(resolve));\n' +
    '        if (!this._pending) {\n' +
    '            this._dispatchNext();\n' +
    '        }\n' +
    '        return ticket;\n' +
    '    }\n' +
    '    runExclusive(callback) {\n' +
    '        return this.acquire().then(release => {\n' +
    '            let result;\n' +
    '            try {\n' +
    '                result = callback();\n' +
    '            }\n' +
    '            catch (e) {\n' +
    '                release();\n' +
    '                throw e;\n' +
    '            }\n' +
    '            return Promise.resolve(result).then((x) => {\n' +
    '                release();\n' +
    '                return x;\n' +
    '            }, e => {\n' +
    '                release();\n' +
    '                throw e;\n' +
    '            });\n' +
    '        });\n' +
    '    }\n' +
    '    _dispatchNext() {\n' +
    '        if (this._queue.length > 0) {\n' +
    '            this._pending = true;\n' +
    '            this._queue.shift()(this._dispatchNext.bind(this));\n' +
    '        }\n' +
    '        else {\n' +
    '            this._pending = false;\n' +
    '        }\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { Mutex };\n' +
    '//# sourceMappingURL=Mutex.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { from, Observable } from 'rxjs';\n" +
    "import '../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import { isWebWorker } from '../utils/isWebWorker.mjs';\n" +
    "import '../utils/retry/retry.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class Reachability {\n' +
    '    networkMonitor(_) {\n' +
    '        const globalObj = isWebWorker()\n' +
    '            ? self\n' +
    "            : typeof window !== 'undefined' && window;\n" +
    '        if (!globalObj) {\n' +
    '            return from([{ online: true }]);\n' +
    '        }\n' +
    '        return new Observable(observer => {\n' +
    '            observer.next({ online: globalObj.navigator.onLine });\n' +
    '            const notifyOnline = () => {\n' +
    '                observer.next({ online: true });\n' +
    '            };\n' +
    '            const notifyOffline = () => {\n' +
    '                observer.next({ online: false });\n' +
    '            };\n' +
    "            globalObj.addEventListener('online', notifyOnline);\n" +
    "            globalObj.addEventListener('offline', notifyOffline);\n" +
    '            Reachability._observers.push(observer);\n' +
    '            return () => {\n' +
    "                globalObj.removeEventListener('online', notifyOnline);\n" +
    "                globalObj.removeEventListener('offline', notifyOffline);\n" +
    '                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n' +
    '            };\n' +
    '        });\n' +
    '    }\n' +
    '    // expose observers to simulate offline mode for integration testing\n' +
    '    static _observerOverride(status) {\n' +
    '        for (const observer of this._observers) {\n' +
    '            if (observer.closed) {\n' +
    '                this._observers = this._observers.filter(_observer => _observer !== observer);\n' +
    '                continue;\n' +
    '            }\n' +
    '            observer?.next && observer.next(status);\n' +
    '        }\n' +
    '    }\n' +
    '}\n' +
    'Reachability._observers = [];\n' +
    '\n' +
    'export { Reachability };\n' +
    '//# sourceMappingURL=Reachability.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getCrypto } from './globalHelpers/index.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/*\n' +
    ' * Cryptographically secure pseudorandom number generator\n' +
    ' * As Math.random() is cryptographically not safe to use\n' +
    ' */\n' +
    'function cryptoSecureRandomInt() {\n' +
    '    const crypto = getCrypto();\n' +
    '    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n' +
    '    return randomResult;\n' +
    '}\n' +
    '\n' +
    'export { cryptoSecureRandomInt };\n' +
    '//# sourceMappingURL=cryptoSecureRandomInt.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getBtoa } from '../../globalHelpers/index.mjs';\n" +
    "import { bytesToString } from './bytesToString.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const base64Encoder = {\n' +
    '    convert(input, { urlSafe } = { urlSafe: false }) {\n' +
    "        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n" +
    '        const encodedStr = getBtoa()(inputStr);\n' +
    '        // see details about the char replacing at https://datatracker.ietf.org/doc/html/rfc4648#section-5\n' +
    '        return urlSafe\n' +
    "            ? encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_')\n" +
    '            : encodedStr;\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { base64Encoder };\n' +
    '//# sourceMappingURL=base64Encoder.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Standard session start & stop event names\n' +
    "const SESSION_START_EVENT = '_session.start';\n" +
    "const SESSION_STOP_EVENT = '_session.stop';\n" +
    '\n' +
    'export { SESSION_START_EVENT, SESSION_STOP_EVENT };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { SessionListener } from './SessionListener.mjs';\n" +
    "export { SESSION_START_EVENT, SESSION_STOP_EVENT } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const sessionListener = new SessionListener();\n' +
    '\n' +
    'export { sessionListener };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyError } from '../../errors/AmplifyError.mjs';\n" +
    "import '../../types/errors.mjs';\n" +
    "import '../../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getCrypto = () => {\n' +
    "    if (typeof window === 'object' && typeof window.crypto === 'object') {\n" +
    '        return window.crypto;\n' +
    '    }\n' +
    '    // Next.js global polyfill\n' +
    "    if (typeof crypto === 'object') {\n" +
    '        return crypto;\n' +
    '    }\n' +
    '    throw new AmplifyError({\n' +
    "        name: 'MissingPolyfill',\n" +
    "        message: 'Cannot resolve the `crypto` function from the environment.',\n" +
    '    });\n' +
    '};\n' +
    'const getBtoa = () => {\n' +
    '    // browser\n' +
    "    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n" +
    '        return window.btoa;\n' +
    '    }\n' +
    '    // Next.js global polyfill\n' +
    "    if (typeof btoa === 'function') {\n" +
    '        return btoa;\n' +
    '    }\n' +
    '    throw new AmplifyError({\n' +
    "        name: 'Base64EncoderError',\n" +
    "        message: 'Cannot resolve the `btoa` function from the environment.',\n" +
    '    });\n' +
    '};\n' +
    'const getAtob = () => {\n' +
    '    // browser\n' +
    "    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n" +
    '        return window.atob;\n' +
    '    }\n' +
    '    // Next.js global polyfill\n' +
    "    if (typeof atob === 'function') {\n" +
    '        return atob;\n' +
    '    }\n' +
    '    throw new AmplifyError({\n' +
    "        name: 'Base64EncoderError',\n" +
    "        message: 'Cannot resolve the `atob` function from the environment.',\n" +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { getAtob, getBtoa, getCrypto };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { signUp as signUp$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { toAttributeType } from '../utils/apiHelpers.mjs';\n" +
    "import { setUsernameUsedForAutoSignIn, setAutoSignInStarted, isSignUpComplete, isAutoSignInStarted, autoSignInUserConfirmed, handleCodeAutoSignIn, autoSignInWhenUserIsConfirmedWithLink } from '../utils/signUpHelpers.mjs';\n" +
    "import { setAutoSignIn } from './autoSignIn.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Creates a user\n' +
    ' *\n' +
    ' * @param input - The SignUpInput object\n' +
    ' * @returns SignUpOutput\n' +
    ' * @throws service: {@link SignUpException } - Cognito service errors thrown during the sign-up process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signUp(input) {\n' +
    '    const { username, password, options } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    "    const signUpVerificationMethod = authConfig?.signUpVerificationMethod ?? 'code';\n" +
    '    const { clientMetadata, validationData, autoSignIn } = input.options ?? {};\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n' +
    '    assertValidationError(!!password, AuthValidationErrorCode.EmptySignUpPassword);\n' +
    "    const signInServiceOptions = typeof autoSignIn !== 'boolean' ? autoSignIn : undefined;\n" +
    '    const signInInput = {\n' +
    '        username,\n' +
    '        options: signInServiceOptions,\n' +
    '    };\n' +
    "    // if the authFlowType is 'CUSTOM_WITHOUT_SRP' then we don't include the password\n" +
    "    if (signInServiceOptions?.authFlowType !== 'CUSTOM_WITHOUT_SRP') {\n" +
    "        signInInput['password'] = password;\n" +
    '    }\n' +
    '    if (signInServiceOptions || autoSignIn === true) {\n' +
    '        setUsernameUsedForAutoSignIn(username);\n' +
    '        setAutoSignInStarted(true);\n' +
    '    }\n' +
    '    const clientOutput = await signUp$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.SignUp),\n' +
    '    }, {\n' +
    '        Username: username,\n' +
    '        Password: password,\n' +
    '        UserAttributes: options?.userAttributes && toAttributeType(options?.userAttributes),\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ValidationData: validationData && toAttributeType(validationData),\n' +
    '        ClientId: authConfig.userPoolClientId,\n' +
    '    });\n' +
    '    const { UserSub, CodeDeliveryDetails } = clientOutput;\n' +
    '    if (isSignUpComplete(clientOutput) && isAutoSignInStarted()) {\n' +
    '        setAutoSignIn(autoSignInUserConfirmed(signInInput));\n' +
    '        return {\n' +
    '            isSignUpComplete: true,\n' +
    '            nextStep: {\n' +
    "                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n" +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    else if (isSignUpComplete(clientOutput) && !isAutoSignInStarted()) {\n' +
    '        return {\n' +
    '            isSignUpComplete: true,\n' +
    '            nextStep: {\n' +
    "                signUpStep: 'DONE',\n" +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    else if (!isSignUpComplete(clientOutput) &&\n' +
    '        isAutoSignInStarted() &&\n' +
    "        signUpVerificationMethod === 'code') {\n" +
    '        handleCodeAutoSignIn(signInInput);\n' +
    '    }\n' +
    '    else if (!isSignUpComplete(clientOutput) &&\n' +
    '        isAutoSignInStarted() &&\n' +
    "        signUpVerificationMethod === 'link') {\n" +
    '        setAutoSignIn(autoSignInWhenUserIsConfirmedWithLink(signInInput));\n' +
    '        return {\n' +
    '            isSignUpComplete: false,\n' +
    '            nextStep: {\n' +
    "                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n" +
    '                codeDeliveryDetails: {\n' +
    '                    deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n' +
    '                    destination: CodeDeliveryDetails?.Destination,\n' +
    '                    attributeName: CodeDeliveryDetails?.AttributeName,\n' +
    '                },\n' +
    '            },\n' +
    '            userId: UserSub,\n' +
    '        };\n' +
    '    }\n' +
    '    return {\n' +
    '        isSignUpComplete: false,\n' +
    '        nextStep: {\n' +
    "            signUpStep: 'CONFIRM_SIGN_UP',\n" +
    '            codeDeliveryDetails: {\n' +
    '                deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n' +
    '                destination: CodeDeliveryDetails?.Destination,\n' +
    '                attributeName: CodeDeliveryDetails?.AttributeName,\n' +
    '            },\n' +
    '        },\n' +
    '        userId: UserSub,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { signUp };\n' +
    '//# sourceMappingURL=signUp.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { forgotPassword } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getUserContextData } from '../utils/userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Resets a user's password.\n" +
    ' *\n' +
    ' * @param input -  The ResetPasswordInput object.\n' +
    ' * @returns ResetPasswordOutput\n' +
    ' * @throws -{@link ForgotPasswordException }\n' +
    ' * Thrown due to an invalid confirmation code or password.\n' +
    ' * @throws -{@link AuthValidationErrorCode }\n' +
    ' * Thrown due to an empty username.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' **/\n' +
    'async function resetPassword(input) {\n' +
    '    const username = input.username;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { userPoolClientId, userPoolId } = authConfig;\n' +
    '    const clientMetadata = input.options?.clientMetadata;\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const res = await forgotPassword({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword),\n' +
    '    }, {\n' +
    '        Username: username,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: authConfig.userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    });\n' +
    '    const codeDeliveryDetails = res.CodeDeliveryDetails;\n' +
    '    return {\n' +
    '        isPasswordReset: false,\n' +
    '        nextStep: {\n' +
    "            resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n" +
    '            codeDeliveryDetails: {\n' +
    '                deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n' +
    '                destination: codeDeliveryDetails?.Destination,\n' +
    '                attributeName: codeDeliveryDetails?.AttributeName,\n' +
    '            },\n' +
    '        },\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { resetPassword };\n' +
    '//# sourceMappingURL=resetPassword.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { confirmForgotPassword } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getUserContextData } from '../utils/userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Confirms the new password and verification code to reset the password.\n' +
    ' *\n' +
    ' * @param input -  The ConfirmResetPasswordInput object.\n' +
    ' * @throws -{@link ConfirmForgotPasswordException }\n' +
    ' * Thrown due to an invalid confirmation code or password.\n' +
    ' * @throws -{@link AuthValidationErrorCode }\n' +
    ' * Thrown due to an empty confirmation code, password or username.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function confirmResetPassword(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { userPoolClientId, userPoolId } = authConfig;\n' +
    '    const { username, newPassword } = input;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n' +
    '    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n' +
    '    const code = input.confirmationCode;\n' +
    '    assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n' +
    '    const metadata = input.options?.clientMetadata;\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    await confirmForgotPassword({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword),\n' +
    '    }, {\n' +
    '        Username: username,\n' +
    '        ConfirmationCode: code,\n' +
    '        Password: newPassword,\n' +
    '        ClientMetadata: metadata,\n' +
    '        ClientId: authConfig.userPoolClientId,\n' +
    '        UserContextData: UserContextData,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { confirmResetPassword };\n' +
    '//# sourceMappingURL=confirmResetPassword.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { signInWithCustomAuth } from './signInWithCustomAuth.mjs';\n" +
    "import { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth.mjs';\n" +
    "import { signInWithSRP } from './signInWithSRP.mjs';\n" +
    "import { signInWithUserPassword } from './signInWithUserPassword.mjs';\n" +
    "import { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs a user in\n' +
    ' *\n' +
    ' * @param input -  The SignInInput object\n' +
    ' * @returns SignInOutput\n' +
    ' * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n' +
    ' *  - Cognito service errors thrown during the sign-in process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signIn(input) {\n' +
    '    const authFlowType = input.options?.authFlowType;\n' +
    '    await assertUserNotAuthenticated();\n' +
    '    switch (authFlowType) {\n' +
    "        case 'USER_SRP_AUTH':\n" +
    '            return signInWithSRP(input);\n' +
    "        case 'USER_PASSWORD_AUTH':\n" +
    '            return signInWithUserPassword(input);\n' +
    "        case 'CUSTOM_WITHOUT_SRP':\n" +
    '            return signInWithCustomAuth(input);\n' +
    "        case 'CUSTOM_WITH_SRP':\n" +
    '            return signInWithCustomSRPAuth(input);\n' +
    '        default:\n' +
    '            return signInWithSRP(input);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { signIn };\n' +
    '//# sourceMappingURL=signIn.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { resendConfirmationCode } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getUserContextData } from '../utils/userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Resend the confirmation code while signing up\n' +
    ' *\n' +
    ' * @param input -  The ResendSignUpCodeInput object\n' +
    ' * @returns ResendSignUpCodeOutput\n' +
    ' * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function resendSignUpCode(input) {\n' +
    '    const username = input.username;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { userPoolClientId, userPoolId } = authConfig;\n' +
    '    const clientMetadata = input.options?.clientMetadata;\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const { CodeDeliveryDetails } = await resendConfirmationCode({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode),\n' +
    '    }, {\n' +
    '        Username: username,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: authConfig.userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    });\n' +
    '    const { DeliveryMedium, AttributeName, Destination } = {\n' +
    '        ...CodeDeliveryDetails,\n' +
    '    };\n' +
    '    return {\n' +
    '        destination: Destination,\n' +
    '        deliveryMedium: DeliveryMedium,\n' +
    '        attributeName: AttributeName\n' +
    '            ? AttributeName\n' +
    '            : undefined,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { resendSignUpCode };\n' +
    '//# sourceMappingURL=resendSignUpCode.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction, HubInternal } from '@aws-amplify/core/internals/utils';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { confirmSignUp as confirmSignUp$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { isAutoSignInStarted, isAutoSignInUserUsingConfirmSignUp, setAutoSignInStarted } from '../utils/signUpHelpers.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getUserContextData } from '../utils/userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Confirms a new user account.\n' +
    ' *\n' +
    ' * @param input -  The ConfirmSignUpInput object.\n' +
    ' * @returns ConfirmSignUpOutput\n' +
    ' * @throws -{@link ConfirmSignUpException }\n' +
    ' * Thrown due to an invalid confirmation code.\n' +
    ' * @throws -{@link AuthValidationErrorCode }\n' +
    ' * Thrown due to an empty confirmation code\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function confirmSignUp(input) {\n' +
    '    const { username, confirmationCode, options } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { userPoolId, userPoolClientId } = authConfig;\n' +
    '    const clientMetadata = options?.clientMetadata;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n' +
    '    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    await confirmSignUp$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp),\n' +
    '    }, {\n' +
    '        Username: username,\n' +
    '        ConfirmationCode: confirmationCode,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ForceAliasCreation: options?.forceAliasCreation,\n' +
    '        ClientId: authConfig.userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    });\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        try {\n' +
    '            const signUpOut = {\n' +
    '                isSignUpComplete: true,\n' +
    '                nextStep: {\n' +
    "                    signUpStep: 'DONE',\n" +
    '                },\n' +
    '            };\n' +
    '            if (!isAutoSignInStarted() ||\n' +
    '                !isAutoSignInUserUsingConfirmSignUp(username)) {\n' +
    '                return resolve(signUpOut);\n' +
    '            }\n' +
    "            const stopListener = HubInternal.listen('auth-internal', ({ payload }) => {\n" +
    '                switch (payload.event) {\n' +
    "                    case 'autoSignIn':\n" +
    '                        resolve({\n' +
    '                            isSignUpComplete: true,\n' +
    '                            nextStep: {\n' +
    "                                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n" +
    '                            },\n' +
    '                        });\n' +
    '                        setAutoSignInStarted(false);\n' +
    '                        stopListener();\n' +
    '                }\n' +
    '            });\n' +
    "            HubInternal.dispatch('auth-internal', {\n" +
    "                event: 'confirmSignUp',\n" +
    '                data: signUpOut,\n' +
    '            });\n' +
    '        }\n' +
    '        catch (error) {\n' +
    '            reject(error);\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { confirmSignUp };\n' +
    '//# sourceMappingURL=confirmSignUp.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { signInStore, setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { handleChallengeName, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\n" +
    "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Continues or completes the sign in process when required by the initial call to `signIn`.\n' +
    ' *\n' +
    ' * @param input -  The ConfirmSignInInput object\n' +
    ' * @returns ConfirmSignInOutput\n' +
    ' * @throws  -{@link VerifySoftwareTokenException }:\n' +
    ' * Thrown due to an invalid MFA token.\n' +
    ' * @throws  -{@link RespondToAuthChallengeException }:\n' +
    ' * Thrown due to an invalid auth challenge response.\n' +
    ' * @throws  -{@link AssociateSoftwareTokenException}:\n' +
    ' * Thrown due to a service error during the MFA setup process.\n' +
    ' * @throws  -{@link AuthValidationErrorCode }:\n' +
    ' * Thrown when `challengeResponse` is not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function confirmSignIn(input) {\n' +
    '    const { challengeResponse, options } = input;\n' +
    '    const { username, challengeName, signInSession, signInDetails } = signInStore.getState();\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const clientMetaData = options?.clientMetadata;\n' +
    '    assertValidationError(!!challengeResponse, AuthValidationErrorCode.EmptyChallengeResponse);\n' +
    '    if (!username || !challengeName || !signInSession)\n' +
    '        // TODO: remove this error message for production apps\n' +
    '        throw new AuthError({\n' +
    '            name: AuthErrorCodes.SignInException,\n' +
    '            message: `\n' +
    '\t\t\tAn error occurred during the sign in process. \n' +
    '\t\t\t\n' +
    '\t\t\tThis most likely occurred due to:\n' +
    '\t\t\t1. signIn was not called before confirmSignIn.\n' +
    '\t\t\t2. signIn threw an exception.\n' +
    '\t\t\t3. page was refreshed during the sign in flow.\n' +
    '\t\t\t`,\n' +
    "            recoverySuggestion: 'Make sure a successful call to signIn is made before calling confirmSignIn' +\n" +
    "                'and that the page is not refreshed until the sign in process is done.',\n" +
    '        });\n' +
    '    try {\n' +
    '        const { Session, ChallengeName, AuthenticationResult, ChallengeParameters, } = await handleChallengeName(username, challengeName, signInSession, challengeResponse, authConfig, tokenOrchestrator, clientMetaData, options);\n' +
    '        // sets up local state used during the sign-in process\n' +
    '        setActiveSignInState({\n' +
    '            signInSession: Session,\n' +
    '            username,\n' +
    '            challengeName: ChallengeName,\n' +
    '            signInDetails,\n' +
    '        });\n' +
    '        if (AuthenticationResult) {\n' +
    '            cleanActiveSignInState();\n' +
    '            await cacheCognitoTokens({\n' +
    '                username,\n' +
    '                ...AuthenticationResult,\n' +
    '                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n' +
    '                signInDetails,\n' +
    '            });\n' +
    '            await dispatchSignedInHubEvent();\n' +
    '            return {\n' +
    '                isSignedIn: true,\n' +
    "                nextStep: { signInStep: 'DONE' },\n" +
    '            };\n' +
    '        }\n' +
    '        return getSignInResult({\n' +
    '            challengeName: ChallengeName,\n' +
    '            challengeParameters: ChallengeParameters,\n' +
    '        });\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        assertServiceError(error);\n' +
    '        const result = getSignInResultFromError(error.name);\n' +
    '        if (result)\n' +
    '            return result;\n' +
    '        throw error;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { confirmSignIn };\n' +
    '//# sourceMappingURL=confirmSignIn.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { setUserMFAPreference } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Updates the MFA preference of the user.\n' +
    ' *\n' +
    ' * @param input - The UpdateMFAPreferenceInput object.\n' +
    ' * @throws -{@link SetUserMFAPreferenceException } - Service error thrown when the MFA preference cannot be updated.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function updateMFAPreference(input) {\n' +
    '    const { sms, totp } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await setUserMFAPreference({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateMFAPreference),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        SMSMfaSettings: getMFASettings(sms),\n' +
    '        SoftwareTokenMfaSettings: getMFASettings(totp),\n' +
    '    });\n' +
    '}\n' +
    'function getMFASettings(mfaPreference) {\n' +
    "    if (mfaPreference === 'DISABLED') {\n" +
    '        return {\n' +
    '            Enabled: false,\n' +
    '        };\n' +
    '    }\n' +
    "    else if (mfaPreference === 'PREFERRED') {\n" +
    '        return {\n' +
    '            Enabled: true,\n' +
    '            PreferredMfa: true,\n' +
    '        };\n' +
    '    }\n' +
    "    else if (mfaPreference === 'ENABLED') {\n" +
    '        return {\n' +
    '            Enabled: true,\n' +
    '        };\n' +
    '    }\n' +
    "    else if (mfaPreference === 'NOT_PREFERRED') {\n" +
    '        return {\n' +
    '            Enabled: true,\n' +
    '            PreferredMfa: false,\n' +
    '        };\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { getMFASettings, updateMFAPreference };\n' +
    '//# sourceMappingURL=updateMFAPreference.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getMFAType, getMFATypes } from '../utils/signInHelpers.mjs';\n" +
    "import { getUser } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Fetches the preferred MFA setting and enabled MFA settings for the user.\n' +
    ' *\n' +
    ' * @returns FetchMFAPreferenceOutput\n' +
    ' * @throws  -{@link GetUserException} : error thrown when the service fails to fetch MFA preference\n' +
    ' * and settings.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function fetchMFAPreference() {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const { PreferredMfaSetting, UserMFASettingList } = await getUser({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.FetchMFAPreference),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '    });\n' +
    '    return {\n' +
    '        preferred: getMFAType(PreferredMfaSetting),\n' +
    '        enabled: getMFATypes(UserMFASettingList),\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { fetchMFAPreference };\n' +
    '//# sourceMappingURL=fetchMFAPreference.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { verifySoftwareToken } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Verifies an OTP code retrieved from an associated authentication app.\n' +
    ' *\n' +
    ' * @param input - The VerifyTOTPSetupInput\n' +
    ' * @throws  -{@link VerifySoftwareTokenException }:\n' +
    ' * Thrown due to an invalid MFA token.\n' +
    ' * @throws  -{@link AuthValidationErrorCode }:\n' +
    ' * Thrown when `code` is not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function verifyTOTPSetup(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { code, options } = input;\n' +
    '    assertValidationError(!!code, AuthValidationErrorCode.EmptyVerifyTOTPSetupCode);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await verifySoftwareToken({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.VerifyTOTPSetup),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        UserCode: code,\n' +
    '        FriendlyDeviceName: options?.friendlyDeviceName,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { verifyTOTPSetup };\n' +
    '//# sourceMappingURL=verifyTOTPSetup.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { changePassword } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Updates user's password while authenticated.\n" +
    ' *\n' +
    ' * @param input - The UpdatePasswordInput object.\n' +
    ' * @throws - {@link ChangePasswordException} - Cognito service errors thrown when updating a password.\n' +
    ' * @throws - {@link AuthValidationErrorCode} - Validation errors thrown when oldPassword or newPassword are empty.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function updatePassword(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { oldPassword, newPassword } = input;\n' +
    '    assertValidationError(!!oldPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n' +
    '    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await changePassword({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.UpdatePassword),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        PreviousPassword: oldPassword,\n' +
    '        ProposedPassword: newPassword,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { updatePassword };\n' +
    '//# sourceMappingURL=updatePassword.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { SETUP_TOTP_EXCEPTION } from '../types/errors.mjs';\n" +
    "import { getTOTPSetupDetails } from '../utils/signInHelpers.mjs';\n" +
    "import { associateSoftwareToken } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Sets up TOTP for the user.\n' +
    ' *\n' +
    ' * @returns SetUpTOTPOutput\n' +
    ' * @throws -{@link AssociateSoftwareTokenException}\n' +
    ' * Thrown if a service occurs while setting up TOTP.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' **/\n' +
    'async function setUpTOTP() {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    "    const username = tokens.idToken?.payload['cognito:username'] ?? '';\n" +
    '    const { SecretCode } = await associateSoftwareToken({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.SetUpTOTP),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '    });\n' +
    '    if (!SecretCode) {\n' +
    '        // This should never happen.\n' +
    '        throw new AuthError({\n' +
    '            name: SETUP_TOTP_EXCEPTION,\n' +
    "            message: 'Failed to set up TOTP.',\n" +
    '        });\n' +
    '    }\n' +
    '    return getTOTPSetupDetails(SecretCode, JSON.stringify(username));\n' +
    '}\n' +
    '\n' +
    'export { setUpTOTP };\n' +
    '//# sourceMappingURL=setUpTOTP.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { updateUserAttributes as updateUserAttributes$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { toAttributeType } from '../utils/apiHelpers.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Updates user's attributes while authenticated.\n" +
    ' *\n' +
    ' * @param input - The UpdateUserAttributesInput object\n' +
    ' * @returns UpdateUserAttributesOutput\n' +
    ' * @throws - {@link UpdateUserAttributesException}\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'const updateUserAttributes = async (input) => {\n' +
    '    const { userAttributes, options } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    const clientMetadata = options?.clientMetadata;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const { CodeDeliveryDetailsList } = await updateUserAttributes$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        UserAttributes: toAttributeType(userAttributes),\n' +
    '    });\n' +
    '    return {\n' +
    '        ...getConfirmedAttributes(userAttributes),\n' +
    '        ...getUnConfirmedAttributes(CodeDeliveryDetailsList),\n' +
    '    };\n' +
    '};\n' +
    'function getConfirmedAttributes(attributes) {\n' +
    '    const confirmedAttributes = {};\n' +
    '    Object.keys(attributes)?.forEach(key => {\n' +
    '        confirmedAttributes[key] = {\n' +
    '            isUpdated: true,\n' +
    '            nextStep: {\n' +
    "                updateAttributeStep: 'DONE',\n" +
    '            },\n' +
    '        };\n' +
    '    });\n' +
    '    return confirmedAttributes;\n' +
    '}\n' +
    'function getUnConfirmedAttributes(codeDeliveryDetailsList) {\n' +
    '    const unConfirmedAttributes = {};\n' +
    '    codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n' +
    '        const { AttributeName, DeliveryMedium, Destination } = codeDeliveryDetails;\n' +
    '        if (AttributeName)\n' +
    '            unConfirmedAttributes[AttributeName] = {\n' +
    '                isUpdated: false,\n' +
    '                nextStep: {\n' +
    "                    updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n" +
    '                    codeDeliveryDetails: {\n' +
    '                        attributeName: AttributeName,\n' +
    '                        deliveryMedium: DeliveryMedium,\n' +
    '                        destination: Destination,\n' +
    '                    },\n' +
    '                },\n' +
    '            };\n' +
    '    });\n' +
    '    return unConfirmedAttributes;\n' +
    '}\n' +
    '\n' +
    'export { updateUserAttributes };\n' +
    '//# sourceMappingURL=updateUserAttributes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { updateUserAttributes } from './updateUserAttributes.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Updates user's attribute while authenticated.\n" +
    ' *\n' +
    ' * @param input - The UpdateUserAttributeInput object\n' +
    ' * @returns UpdateUserAttributeOutput\n' +
    ' * @throws - {@link UpdateUserAttributesException}\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'const updateUserAttribute = async (input) => {\n' +
    '    const { userAttribute: { attributeKey, value }, options, } = input;\n' +
    '    const output = await updateUserAttributes({\n' +
    '        userAttributes: { [attributeKey]: value },\n' +
    '        options,\n' +
    '    });\n' +
    '    return Object.values(output)[0];\n' +
    '};\n' +
    '\n' +
    'export { updateUserAttribute };\n' +
    '//# sourceMappingURL=updateUserAttribute.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { verifyUserAttribute } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Confirms a user attribute with the confirmation code.\n' +
    ' *\n' +
    ' * @param input -  The ConfirmUserAttributeInput object\n' +
    ' * @throws  -{@link AuthValidationErrorCode } -\n' +
    ' * Thrown when `confirmationCode` is not defined.\n' +
    ' * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function confirmUserAttribute(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { confirmationCode, userAttributeKey } = input;\n' +
    '    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await verifyUserAttribute({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        AttributeName: userAttributeKey,\n' +
    '        Code: confirmationCode,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { confirmUserAttribute };\n' +
    '//# sourceMappingURL=confirmUserAttribute.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '\n' +
    "export var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n" +
    '\n' +
    'export function getDefaultExportFromCjs (x) {\n' +
    "\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n" +
    '}\n' +
    '\n' +
    'export function getDefaultExportFromNamespaceIfPresent (n) {\n' +
    "\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n" +
    '}\n' +
    '\n' +
    'export function getDefaultExportFromNamespaceIfNotNamed (n) {\n' +
    "\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n" +
    '}\n' +
    '\n' +
    'export function getAugmentedNamespace(n) {\n' +
    '  if (n.__esModule) return n;\n' +
    '  var f = n.default;\n' +
    '\tif (typeof f == "function") {\n' +
    '\t\tvar a = function a () {\n' +
    '\t\t\tif (this instanceof a) {\n' +
    '        return Reflect.construct(f, arguments, this.constructor);\n' +
    '\t\t\t}\n' +
    '\t\t\treturn f.apply(this, arguments);\n' +
    '\t\t};\n' +
    '\t\ta.prototype = f.prototype;\n' +
    '  } else a = {};\n' +
    "  Object.defineProperty(a, '__esModule', {value: true});\n" +
    '\tObject.keys(n).forEach(function (k) {\n' +
    '\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n' +
    '\t\tObject.defineProperty(a, k, d.get ? d : {\n' +
    '\t\t\tenumerable: true,\n' +
    '\t\t\tget: function () {\n' +
    '\t\t\t\treturn n[k];\n' +
    '\t\t\t}\n' +
    '\t\t});\n' +
    '\t});\n' +
    '\treturn a;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var react = {exports: {}}; export {react as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/react/cjs/react.production.min.js";'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, assertOAuthConfig, urlSafeEncode, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '../utils/oauth/enableOAuthListener.mjs';\n" +
    "import { cognitoHostedUIIdentityProviderMap } from '../types/models.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { openAuthSession } from '../../../utils/openAuthSession.mjs';\n" +
    "import { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\n" +
    "import { generateCodeVerifier } from '../utils/oauth/generateCodeVerifier.mjs';\n" +
    "import { generateState } from '../utils/oauth/generateState.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import '../tokenProvider/tokenProvider.mjs';\n" +
    "import { getRedirectUrl } from '../utils/oauth/getRedirectUrl.mjs';\n" +
    "import { handleFailure } from '../utils/oauth/handleFailure.mjs';\n" +
    "import { completeOAuthFlow } from '../utils/oauth/completeOAuthFlow.mjs';\n" +
    "import { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\n" +
    "import { createOAuthError } from '../utils/oauth/createOAuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n' +
    ' *\n' +
    ' * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n' +
    ' *\n' +
    ' * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n' +
    ' * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n' +
    ' */\n' +
    'async function signInWithRedirect(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    assertOAuthConfig(authConfig);\n' +
    '    oAuthStore.setAuthConfig(authConfig);\n' +
    '    await assertUserNotAuthenticated();\n' +
    "    let provider = 'COGNITO'; // Default\n" +
    "    if (typeof input?.provider === 'string') {\n" +
    '        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n' +
    '    }\n' +
    '    else if (input?.provider?.custom) {\n' +
    '        provider = input.provider.custom;\n' +
    '    }\n' +
    '    return oauthSignIn({\n' +
    '        oauthConfig: authConfig.loginWith.oauth,\n' +
    '        clientId: authConfig.userPoolClientId,\n' +
    '        provider,\n' +
    '        customState: input?.customState,\n' +
    '        preferPrivateSession: input?.options?.preferPrivateSession,\n' +
    '    });\n' +
    '}\n' +
    'const oauthSignIn = async ({ oauthConfig, provider, clientId, customState, preferPrivateSession, }) => {\n' +
    '    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n' +
    '    const randomState = generateState();\n' +
    '    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n' +
    '    single-encodes/decodes url on first sign in and double-encodes/decodes url\n' +
    '    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n' +
    "    characters % or = which on further encoding becomes unsafe. '=' create issue\n" +
    '    for parsing query params.\n' +
    '    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n' +
    '    const state = customState\n' +
    '        ? `${randomState}-${urlSafeEncode(customState)}`\n' +
    '        : randomState;\n' +
    '    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n' +
    '    const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n' +
    '    oAuthStore.storeOAuthInFlight(true);\n' +
    '    oAuthStore.storeOAuthState(state);\n' +
    '    oAuthStore.storePKCE(value);\n' +
    '    const queryString = Object.entries({\n' +
    '        redirect_uri: redirectUri,\n' +
    '        response_type: responseType,\n' +
    '        client_id: clientId,\n' +
    '        identity_provider: provider,\n' +
    "        scope: scopes.join(' '),\n" +
    '        state,\n' +
    "        ...(responseType === 'code' && {\n" +
    '            code_challenge: toCodeChallenge(),\n' +
    '            code_challenge_method: method,\n' +
    '        }),\n' +
    '    })\n' +
    '        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n' +
    "        .join('&');\n" +
    '    // TODO(v6): use URL object instead\n' +
    '    const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n' +
    '    // the following is effective only in react-native as openAuthSession resolves only in react-native\n' +
    '    const { type, error, url } = (await openAuthSession(oAuthUrl)) ??\n' +
    '        {};\n' +
    '    try {\n' +
    "        if (type === 'error') {\n" +
    '            throw createOAuthError(String(error));\n' +
    '        }\n' +
    "        if (type === 'success' && url) {\n" +
    '            await completeOAuthFlow({\n' +
    '                currentUrl: url,\n' +
    '                clientId,\n' +
    '                domain,\n' +
    '                redirectUri,\n' +
    '                responseType,\n' +
    '                userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n' +
    '                preferPrivateSession,\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        await handleFailure(error);\n' +
    '        // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n' +
    '        throw error;\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { signInWithRedirect };\n' +
    '//# sourceMappingURL=signInWithRedirect.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { fetchUserAttributes as fetchUserAttributes$1 } from './internal/fetchUserAttributes.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Fetches the current user attributes while authenticated.\n' +
    ' *\n' +
    ' * @throws - {@link GetUserException} - Cognito service errors thrown when the service is not able to get the user.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'const fetchUserAttributes = () => {\n' +
    '    return fetchUserAttributes$1(Amplify);\n' +
    '};\n' +
    '\n' +
    'export { fetchUserAttributes };\n' +
    '//# sourceMappingURL=fetchUserAttributes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger, Amplify, clearCredentials, Hub, defaultStorage } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, assertOAuthConfig, AMPLIFY_SYMBOL, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { revokeToken, globalSignOut as globalSignOut$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokensWithRefreshToken, assertAuthTokens } from '../utils/types.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import { handleOAuthSignOut } from '../utils/oauth/handleOAuthSignOut.mjs';\n" +
    "import { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    "import { DefaultOAuthStore } from '../utils/signInWithRedirectStore.mjs';\n" +
    "import '../../../types/Auth.mjs';\n" +
    "import '../../../Errors.mjs';\n" +
    "import '../../../common/AuthErrorStrings.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('Auth');\n" +
    '/**\n' +
    ' * Signs a user out\n' +
    ' *\n' +
    ' * @param input - The SignOutInput object\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signOut(input) {\n' +
    '    const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(cognitoConfig);\n' +
    '    if (input?.global) {\n' +
    '        await globalSignOut(cognitoConfig);\n' +
    '    }\n' +
    '    else {\n' +
    '        await clientSignOut(cognitoConfig);\n' +
    '    }\n' +
    '    let hasOAuthConfig;\n' +
    '    try {\n' +
    '        assertOAuthConfig(cognitoConfig);\n' +
    '        hasOAuthConfig = true;\n' +
    '    }\n' +
    '    catch (err) {\n' +
    '        hasOAuthConfig = false;\n' +
    '    }\n' +
    '    if (hasOAuthConfig) {\n' +
    '        const oAuthStore = new DefaultOAuthStore(defaultStorage);\n' +
    '        oAuthStore.setAuthConfig(cognitoConfig);\n' +
    '        const { type } = (await handleOAuthSignOut(cognitoConfig, oAuthStore)) ?? {};\n' +
    "        if (type === 'error') {\n" +
    '            throw new AuthError({\n' +
    '                name: OAUTH_SIGNOUT_EXCEPTION,\n' +
    "                message: 'An error occurred when attempting to log out from OAuth provider.',\n" +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    else {\n' +
    '        // complete sign out\n' +
    '        tokenOrchestrator.clearTokens();\n' +
    '        await clearCredentials();\n' +
    "        Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '    }\n' +
    '}\n' +
    'async function clientSignOut(cognitoConfig) {\n' +
    '    try {\n' +
    '        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n' +
    '        assertAuthTokensWithRefreshToken(authTokens);\n' +
    '        if (isSessionRevocable(authTokens.accessToken)) {\n' +
    '            await revokeToken({\n' +
    '                region: getRegion(cognitoConfig.userPoolId),\n' +
    '                userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n' +
    '            }, {\n' +
    '                ClientId: cognitoConfig.userPoolClientId,\n' +
    '                Token: authTokens.refreshToken,\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    catch (err) {\n' +
    "        // this shouldn't throw\n" +
    "        logger.debug('Client signOut error caught but will proceed with token removal');\n" +
    '    }\n' +
    '}\n' +
    'async function globalSignOut(cognitoConfig) {\n' +
    '    try {\n' +
    '        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n' +
    '        assertAuthTokens(authTokens);\n' +
    '        await globalSignOut$1({\n' +
    '            region: getRegion(cognitoConfig.userPoolId),\n' +
    '            userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n' +
    '        }, {\n' +
    '            AccessToken: authTokens.accessToken.toString(),\n' +
    '        });\n' +
    '    }\n' +
    '    catch (err) {\n' +
    '        // it should not throw\n' +
    "        logger.debug('Global signOut error caught but will proceed with token removal');\n" +
    '    }\n' +
    '}\n' +
    'const isSessionRevocable = (token) => !!token?.payload?.origin_jti;\n' +
    '\n' +
    'export { signOut };\n' +
    '//# sourceMappingURL=signOut.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getUserAttributeVerificationCode } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Resends user's confirmation code when updating attributes while authenticated.\n" +
    ' *\n' +
    ' * @param input - The SendUserAttributeVerificationCodeInput object\n' +
    ' * @returns SendUserAttributeVerificationCodeOutput\n' +
    ' * @throws - {@link GetUserAttributeVerificationException}\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'const sendUserAttributeVerificationCode = async (input) => {\n' +
    '    const { userAttributeKey, options } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    const clientMetadata = options?.clientMetadata;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const { CodeDeliveryDetails } = await getUserAttributeVerificationCode({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        AttributeName: userAttributeKey,\n' +
    '    });\n' +
    '    const { DeliveryMedium, AttributeName, Destination } = {\n' +
    '        ...CodeDeliveryDetails,\n' +
    '    };\n' +
    '    return {\n' +
    '        destination: Destination,\n' +
    '        deliveryMedium: DeliveryMedium,\n' +
    '        attributeName: AttributeName,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { sendUserAttributeVerificationCode };\n' +
    '//# sourceMappingURL=sendUserAttributeVerificationCode.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { getCurrentUser as getCurrentUser$1 } from './internal/getCurrentUser.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Gets the current user from the idToken.\n' +
    ' *\n' +
    ' * @param input -  The GetCurrentUserInput object.\n' +
    ' * @returns GetCurrentUserOutput\n' +
    ' * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'const getCurrentUser = async () => {\n' +
    '    return getCurrentUser$1(Amplify);\n' +
    '};\n' +
    '\n' +
    'export { getCurrentUser };\n' +
    '//# sourceMappingURL=getCurrentUser.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { deleteUserAttributes as deleteUserAttributes$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Deletes user attributes.\n' +
    ' *\n' +
    ' * @param input -  The DeleteUserAttributesInput object\n' +
    ' * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function deleteUserAttributes(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { userAttributeKeys } = input;\n' +
    '    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await deleteUserAttributes$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        UserAttributeNames: userAttributeKeys,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { deleteUserAttributes };\n' +
    '//# sourceMappingURL=deleteUserAttributes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { deleteUser as deleteUser$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { signOut } from './signOut.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Deletes a user from the user pool while authenticated.\n' +
    ' *\n' +
    ' * @throws - {@link DeleteUserException}\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function deleteUser() {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession();\n' +
    '    assertAuthTokens(tokens);\n' +
    '    await deleteUser$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUser),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '    });\n' +
    '    await tokenOrchestrator.clearDeviceMetadata();\n' +
    '    await signOut();\n' +
    '}\n' +
    '\n' +
    'export { deleteUser };\n' +
    '//# sourceMappingURL=deleteUser.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { updateDeviceStatus } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Marks device as remembered while authenticated.\n' +
    ' *\n' +
    ' * @throws - {@link UpdateDeviceStatusException} - Cognito service errors thrown when\n' +
    ' * setting device status to remembered using an invalid device key.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function rememberDevice() {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession();\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata();\n' +
    '    assertDeviceMetadata(deviceMetadata);\n' +
    '    await updateDeviceStatus({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.RememberDevice),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        DeviceKey: deviceMetadata.deviceKey,\n' +
    "        DeviceRememberedStatus: 'remembered',\n" +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { rememberDevice };\n' +
    '//# sourceMappingURL=rememberDevice.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { forgetDevice as forgetDevice$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Forget a remembered device while authenticated.\n' +
    ' *\n' +
    ' * @param input - The ForgetDeviceInput object.\n' +
    ' * @throws - {@link ForgetDeviceException} - Cognito service errors thrown when\n' +
    ' * forgetting device with invalid device key\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function forgetDevice(input) {\n' +
    '    const { device: { id: externalDeviceKey } = { id: undefined } } = input ?? {};\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession();\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata();\n' +
    '    const currentDeviceKey = deviceMetadata?.deviceKey;\n' +
    '    if (!externalDeviceKey)\n' +
    '        assertDeviceMetadata(deviceMetadata);\n' +
    '    await forgetDevice$1({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ForgetDevice),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        DeviceKey: externalDeviceKey ?? currentDeviceKey,\n' +
    '    });\n' +
    '    if (!externalDeviceKey || externalDeviceKey === currentDeviceKey)\n' +
    '        await tokenOrchestrator.clearDeviceMetadata();\n' +
    '}\n' +
    '\n' +
    'export { forgetDevice };\n' +
    '//# sourceMappingURL=forgetDevice.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { listDevices } from '../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { assertAuthTokens } from '../utils/types.mjs';\n" +
    "import { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Cognito Documentation for max device\n' +
    '// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\n' +
    'const MAX_DEVICES = 60;\n' +
    '/**\n' +
    ' * Fetches devices that have been remembered using {@link rememberDevice}\n' +
    ' * for the currently authenticated user.\n' +
    ' *\n' +
    ' * @returns FetchDevicesOutput\n' +
    ' * @throws {@link ListDevicesException}\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function fetchDevices() {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession();\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const response = await listDevices({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.FetchDevices),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '        Limit: MAX_DEVICES,\n' +
    '    });\n' +
    '    return parseDevicesResponse(response.Devices ?? []);\n' +
    '}\n' +
    'const parseDevicesResponse = async (devices) => {\n' +
    "    return devices.map(({ DeviceKey: id = '', DeviceAttributes = [], DeviceCreateDate, DeviceLastModifiedDate, DeviceLastAuthenticatedDate, }) => {\n" +
    '        const attributes = DeviceAttributes.reduce((attrs, { Name, Value }) => {\n' +
    '            if (Name && Value) {\n' +
    '                attrs[Name] = Value;\n' +
    '            }\n' +
    '            return attrs;\n' +
    '        }, {});\n' +
    '        return {\n' +
    '            id,\n' +
    '            attributes,\n' +
    '            createDate: DeviceCreateDate\n' +
    '                ? new Date(DeviceCreateDate * 1000)\n' +
    '                : undefined,\n' +
    '            lastModifiedDate: DeviceLastModifiedDate\n' +
    '                ? new Date(DeviceLastModifiedDate * 1000)\n' +
    '                : undefined,\n' +
    '            lastAuthenticatedDate: DeviceLastAuthenticatedDate\n' +
    '                ? new Date(DeviceLastAuthenticatedDate * 1000)\n' +
    '                : undefined,\n' +
    '        };\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { fetchDevices };\n' +
    '//# sourceMappingURL=fetchDevices.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const initialAutoSignIn = async () => {\n' +
    '    throw new AuthError({\n' +
    '        name: AUTO_SIGN_IN_EXCEPTION,\n' +
    "        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n" +
    "        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n" +
    '    });\n' +
    '};\n' +
    '/**\n' +
    ' * Signs a user in automatically after finishing the sign-up process.\n' +
    ' *\n' +
    ' * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n' +
    ' * - User confirmed their account with a verification code sent to their phone or email (default option).\n' +
    ' * - User confirmed their account with a verification link sent to their phone or email. In order to\n' +
    ' * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n' +
    ' * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n' +
    ' * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```typescript\n' +
    ' *  Amplify.configure({\n' +
    ' *    Auth: {\n' +
    ' *     Cognito: {\n' +
    ' *    ...cognitoConfig,\n' +
    ' *    signUpVerificationMethod: "link" // the default value is "code"\n' +
    ' *   }\n' +
    ' *\t}});\n' +
    ' * ```\n' +
    ' *\n' +
    ' * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n' +
    ' * @returns The signInOutput.\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```typescript\n' +
    ' *  // handleSignUp.ts\n' +
    ' * async function handleSignUp(\n' +
    ' *   username:string,\n' +
    ' *   password:string\n' +
    ' * ){\n' +
    ' *   try {\n' +
    ' *     const { nextStep } = await signUp({\n' +
    ' *       username,\n' +
    ' *       password,\n' +
    ' *       options: {\n' +
    " *         userAttributes:{ email:'email@email.com'},\n" +
    ' *         autoSignIn: true // This enables the auto sign-in flow.\n' +
    ' *       },\n' +
    ' *     });\n' +
    ' *\n' +
    ' *     handleSignUpStep(nextStep);\n' +
    ' *\n' +
    ' *   } catch (error) {\n' +
    ' *     console.log(error);\n' +
    ' *   }\n' +
    ' * }\n' +
    ' *\n' +
    ' * // handleConfirmSignUp.ts\n' +
    ' * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n' +
    ' *   try {\n' +
    ' *     const { nextStep } = await confirmSignUp({\n' +
    ' *       username,\n' +
    ' *       confirmationCode,\n' +
    ' *     });\n' +
    ' *\n' +
    ' *     handleSignUpStep(nextStep);\n' +
    ' *   } catch (error) {\n' +
    ' *     console.log(error);\n' +
    ' *   }\n' +
    ' * }\n' +
    ' *\n' +
    ' * // signUpUtils.ts\n' +
    ' * async function handleSignUpStep( step: SignUpOutput["nextStep"]) {\n' +
    ' * switch (step.signUpStep) {\n' +
    ' *   case "CONFIRM_SIGN_UP":\n' +
    ' *\n' +
    ' *    // Redirect end-user to confirm-sign up screen.\n' +
    ' *\n' +
    ' *   case "COMPLETE_AUTO_SIGN_IN":\n' +
    ' *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n' +
    ' *     if (codeDeliveryDetails) {\n' +
    ' *      // Redirect user to confirm-sign-up with link screen.\n' +
    ' *     }\n' +
    ' *     const signInOutput = await autoSignIn();\n' +
    ' *   // handle sign-in steps\n' +
    ' * }\n' +
    ' *\n' +
    ' * ```\n' +
    ' */\n' +
    'let autoSignIn = initialAutoSignIn;\n' +
    '/**\n' +
    ' * Sets the context of autoSignIn at run time.\n' +
    ' * @internal\n' +
    ' */\n' +
    'function setAutoSignIn(callback) {\n' +
    '    autoSignIn = callback;\n' +
    '}\n' +
    '/**\n' +
    ' * Resets the context\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'function resetAutoSignIn() {\n' +
    '    autoSignIn = initialAutoSignIn;\n' +
    '}\n' +
    '\n' +
    'export { autoSignIn, resetAutoSignIn, setAutoSignIn };\n' +
    '//# sourceMappingURL=autoSignIn.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { DefaultIdentityIdStore } from './IdentityIdStore.mjs';\n" +
    "import { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider.mjs';\n" +
    "import { defaultStorage } from '@aws-amplify/core';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Cognito specific implmentation of the CredentialsProvider interface\n' +
    ' * that manages setting and getting of AWS Credentials.\n' +
    ' *\n' +
    ' * @throws configuration expections: {@link InvalidIdentityPoolIdException }\n' +
    ' *  - Auth errors that may arise from misconfiguration.\n' +
    ' * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n' +
    ' *\n' +
    ' */\n' +
    'const cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\n' +
    '\n' +
    'export { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\n" +
    "import { initiateAuth } from './clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from './clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokensWithRefreshToken } from './types.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { getUserContextData } from './userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n' +
    '    assertTokenProviderConfig(authConfig?.Cognito);\n' +
    '    const region = getRegion(authConfig.Cognito.userPoolId);\n' +
    '    assertAuthTokensWithRefreshToken(tokens);\n' +
    '    const refreshTokenString = tokens.refreshToken;\n' +
    '    const AuthParameters = {\n' +
    '        REFRESH_TOKEN: refreshTokenString,\n' +
    '    };\n' +
    '    if (tokens.deviceMetadata?.deviceKey) {\n' +
    "        AuthParameters['DEVICE_KEY'] = tokens.deviceMetadata.deviceKey;\n" +
    '    }\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId: authConfig.Cognito.userPoolId,\n' +
    '        userPoolClientId: authConfig.Cognito.userPoolClientId,\n' +
    '    });\n' +
    '    const { AuthenticationResult } = await initiateAuth({ region }, {\n' +
    '        ClientId: authConfig?.Cognito?.userPoolClientId,\n' +
    "        AuthFlow: 'REFRESH_TOKEN_AUTH',\n" +
    '        AuthParameters,\n' +
    '        UserContextData,\n' +
    '    });\n' +
    "    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n" +
    '    const idToken = AuthenticationResult?.IdToken\n' +
    '        ? decodeJWT(AuthenticationResult.IdToken)\n' +
    '        : undefined;\n' +
    '    const iat = accessToken.payload.iat;\n' +
    "    // This should never happen. If it does, it's a bug from the service.\n" +
    '    if (!iat) {\n' +
    '        throw new AuthError({\n' +
    "            name: 'iatNotFoundException',\n" +
    "            message: 'iat not found in access token',\n" +
    '        });\n' +
    '    }\n' +
    '    const clockDrift = iat * 1000 - new Date().getTime();\n' +
    '    return {\n' +
    '        accessToken,\n' +
    '        idToken,\n' +
    '        clockDrift,\n' +
    '        refreshToken: refreshTokenString,\n' +
    '        username,\n' +
    '    };\n' +
    '};\n' +
    'const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\n' +
    '\n' +
    'export { refreshAuthTokens };\n' +
    '//# sourceMappingURL=refreshAuthTokens.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n' +
    ' * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n' +
    ' * in-memory storage if not.\n' +
    ' */\n' +
    'const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\n' +
    'const tokenOrchestrator = cognitoUserPoolsTokenProvider.tokenOrchestrator;\n' +
    '\n' +
    'export { cognitoUserPoolsTokenProvider, tokenOrchestrator };\n' +
    '//# sourceMappingURL=tokenProvider.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '@aws-amplify/core';\n" +
    "import { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { IdentityIdStorageKeys } from './types.mjs';\n" +
    "import { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('DefaultIdentityIdStore');\n" +
    'class DefaultIdentityIdStore {\n' +
    '    setAuthConfig(authConfigParam) {\n' +
    '        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n' +
    '        this.authConfig = authConfigParam;\n' +
    "        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n" +
    '        return;\n' +
    '    }\n' +
    '    constructor(keyValueStorage) {\n' +
    '        this._authKeys = {};\n' +
    '        this.keyValueStorage = keyValueStorage;\n' +
    '    }\n' +
    '    async loadIdentityId() {\n' +
    '        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n' +
    '        try {\n' +
    '            if (!!this._primaryIdentityId) {\n' +
    '                return {\n' +
    '                    id: this._primaryIdentityId,\n' +
    "                    type: 'primary',\n" +
    '                };\n' +
    '            }\n' +
    '            else {\n' +
    '                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n' +
    '                if (!!storedIdentityId) {\n' +
    '                    return {\n' +
    '                        id: storedIdentityId,\n' +
    "                        type: 'guest',\n" +
    '                    };\n' +
    '                }\n' +
    '                return null;\n' +
    '            }\n' +
    '        }\n' +
    '        catch (err) {\n' +
    "            logger.log('Error getting stored IdentityId.', err);\n" +
    '            return null;\n' +
    '        }\n' +
    '    }\n' +
    '    async storeIdentityId(identity) {\n' +
    '        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n' +
    "        if (identity.type === 'guest') {\n" +
    '            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n' +
    '            // Clear in-memory storage of primary identityId\n' +
    '            this._primaryIdentityId = undefined;\n' +
    '        }\n' +
    '        else {\n' +
    '            this._primaryIdentityId = identity.id;\n' +
    '            // Clear locally stored guest id\n' +
    '            this.keyValueStorage.removeItem(this._authKeys.identityId);\n' +
    '        }\n' +
    '    }\n' +
    '    async clearIdentityId() {\n' +
    '        this._primaryIdentityId = undefined;\n' +
    '        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n' +
    '    }\n' +
    '}\n' +
    'const createKeysForAuthStorage = (provider, identifier) => {\n' +
    '    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n' +
    '};\n' +
    '\n' +
    'export { DefaultIdentityIdStore };\n' +
    '//# sourceMappingURL=IdentityIdStore.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { decodeJWT, assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthTokenStorageKeys } from './types.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { assert, TokenProviderErrorCode } from './errorHelpers.mjs';\n" +
    '\n' +
    'class DefaultTokenStore {\n' +
    '    constructor() {\n' +
    "        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n" +
    '    }\n' +
    '    getKeyValueStorage() {\n' +
    '        if (!this.keyValueStorage) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'KeyValueStorageNotFoundException',\n" +
    "                message: 'KeyValueStorage was not found in TokenStore',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.keyValueStorage;\n' +
    '    }\n' +
    '    setKeyValueStorage(keyValueStorage) {\n' +
    '        this.keyValueStorage = keyValueStorage;\n' +
    '    }\n' +
    '    setAuthConfig(authConfig) {\n' +
    '        this.authConfig = authConfig;\n' +
    '    }\n' +
    '    async loadTokens() {\n' +
    '        // TODO(v6): migration logic should be here\n' +
    '        // Reading V5 tokens old format\n' +
    '        try {\n' +
    '            const authKeys = await this.getAuthKeys();\n' +
    '            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n' +
    '            if (!accessTokenString) {\n' +
    '                throw new AuthError({\n' +
    "                    name: 'NoSessionFoundException',\n" +
    "                    message: 'Auth session was not found. Make sure to call signIn.',\n" +
    '                });\n' +
    '            }\n' +
    '            const accessToken = decodeJWT(accessTokenString);\n' +
    '            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n' +
    '            const idToken = itString ? decodeJWT(itString) : undefined;\n' +
    '            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n' +
    '                undefined;\n' +
    "            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n" +
    '            const clockDrift = Number.parseInt(clockDriftString);\n' +
    '            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n' +
    '            const tokens = {\n' +
    '                accessToken,\n' +
    '                idToken,\n' +
    '                refreshToken,\n' +
    '                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n' +
    '                clockDrift,\n' +
    '                username: await this.getLastAuthUser(),\n' +
    '            };\n' +
    '            if (signInDetails) {\n' +
    '                tokens.signInDetails = JSON.parse(signInDetails);\n' +
    '            }\n' +
    '            return tokens;\n' +
    '        }\n' +
    '        catch (err) {\n' +
    '            return null;\n' +
    '        }\n' +
    '    }\n' +
    '    async storeTokens(tokens) {\n' +
    '        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n' +
    '        await this.clearTokens();\n' +
    '        const lastAuthUser = tokens.username;\n' +
    '        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n' +
    '        const authKeys = await this.getAuthKeys();\n' +
    '        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n' +
    '        if (!!tokens.idToken) {\n' +
    '            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n' +
    '        }\n' +
    '        if (!!tokens.refreshToken) {\n' +
    '            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n' +
    '        }\n' +
    '        if (!!tokens.deviceMetadata) {\n' +
    '            if (tokens.deviceMetadata.deviceKey) {\n' +
    '                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n' +
    '            }\n' +
    '            if (tokens.deviceMetadata.deviceGroupKey) {\n' +
    '                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n' +
    '            }\n' +
    '            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n' +
    '        }\n' +
    '        if (!!tokens.signInDetails) {\n' +
    '            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n' +
    '        }\n' +
    '        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n' +
    '    }\n' +
    '    async clearTokens() {\n' +
    '        const authKeys = await this.getAuthKeys();\n' +
    '        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n' +
    '        await Promise.all([\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.idToken),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n' +
    '            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n' +
    '        ]);\n' +
    '    }\n' +
    '    async getDeviceMetadata(username) {\n' +
    '        const authKeys = await this.getAuthKeys(username);\n' +
    '        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n' +
    '        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n' +
    '        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n' +
    '        return !!randomPassword\n' +
    '            ? {\n' +
    '                deviceKey: deviceKey ?? undefined,\n' +
    '                deviceGroupKey: deviceGroupKey ?? undefined,\n' +
    '                randomPassword,\n' +
    '            }\n' +
    '            : null;\n' +
    '    }\n' +
    '    async clearDeviceMetadata(username) {\n' +
    '        const authKeys = await this.getAuthKeys(username);\n' +
    '        await Promise.all([\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n' +
    '            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n' +
    '        ]);\n' +
    '    }\n' +
    '    async getAuthKeys(username) {\n' +
    '        assertTokenProviderConfig(this.authConfig?.Cognito);\n' +
    '        const lastAuthUser = username ?? (await this.getLastAuthUser());\n' +
    '        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n' +
    '    }\n' +
    '    getLastAuthUserKey() {\n' +
    '        assertTokenProviderConfig(this.authConfig?.Cognito);\n' +
    '        const identifier = this.authConfig.Cognito.userPoolClientId;\n' +
    '        return `${this.name}.${identifier}.LastAuthUser`;\n' +
    '    }\n' +
    '    async getLastAuthUser() {\n' +
    '        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n' +
    "            'username';\n" +
    '        return lastAuthUser;\n' +
    '    }\n' +
    '}\n' +
    'const createKeysForAuthStorage = (provider, identifier) => {\n' +
    '    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n' +
    '};\n' +
    'function getAuthStorageKeys(authKeys) {\n' +
    '    const keys = Object.values({ ...authKeys });\n' +
    '    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n' +
    '        ...acc,\n' +
    '        [authKey]: `${prefix}.${identifier}.${authKey}`,\n' +
    '    }), {});\n' +
    '}\n' +
    '\n' +
    'export { DefaultTokenStore, createKeysForAuthStorage, getAuthStorageKeys };\n' +
    '//# sourceMappingURL=TokenStore.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { default as AccountSettings } from './AccountSettings/AccountSettings.mjs';\n" +
    "export { Authenticator } from './Authenticator/Authenticator.mjs';\n" +
    "export { withAuthenticator } from './Authenticator/withAuthenticator.mjs';\n" +
    "export { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "export { ThemeProvider } from './ThemeProvider/ThemeProvider.mjs';\n"
} [Function: logger]
____9999999____ {
  code: "import { Hub } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig, isTokenExpired, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class TokenOrchestrator {\n' +
    '    constructor() {\n' +
    '        this.waitForInflightOAuth = async () => { };\n' +
    '    }\n' +
    '    setAuthConfig(authConfig) {\n' +
    '        this.authConfig = authConfig;\n' +
    '    }\n' +
    '    setTokenRefresher(tokenRefresher) {\n' +
    '        this.tokenRefresher = tokenRefresher;\n' +
    '    }\n' +
    '    setAuthTokenStore(tokenStore) {\n' +
    '        this.tokenStore = tokenStore;\n' +
    '    }\n' +
    '    setWaitForInflightOAuth(waitForInflightOAuth) {\n' +
    '        this.waitForInflightOAuth = waitForInflightOAuth;\n' +
    '    }\n' +
    '    getTokenStore() {\n' +
    '        if (!this.tokenStore) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'EmptyTokenStoreException',\n" +
    "                message: 'TokenStore not set',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.tokenStore;\n' +
    '    }\n' +
    '    getTokenRefresher() {\n' +
    '        if (!this.tokenRefresher) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'EmptyTokenRefresherException',\n" +
    "                message: 'TokenRefresher not set',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.tokenRefresher;\n' +
    '    }\n' +
    '    async getTokens(options) {\n' +
    '        let tokens;\n' +
    '        try {\n' +
    '            assertTokenProviderConfig(this.authConfig?.Cognito);\n' +
    '        }\n' +
    '        catch (_err) {\n' +
    '            // Token provider not configured\n' +
    '            return null;\n' +
    '        }\n' +
    '        await this.waitForInflightOAuth();\n' +
    '        tokens = await this.getTokenStore().loadTokens();\n' +
    '        const username = await this.getTokenStore().getLastAuthUser();\n' +
    '        if (tokens === null) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        const idTokenExpired = !!tokens?.idToken &&\n' +
    '            isTokenExpired({\n' +
    '                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n' +
    '                clockDrift: tokens.clockDrift ?? 0,\n' +
    '            });\n' +
    '        const accessTokenExpired = isTokenExpired({\n' +
    '            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n' +
    '            clockDrift: tokens.clockDrift ?? 0,\n' +
    '        });\n' +
    '        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n' +
    '            tokens = await this.refreshTokens({\n' +
    '                tokens,\n' +
    '                username,\n' +
    '            });\n' +
    '            if (tokens === null) {\n' +
    '                return null;\n' +
    '            }\n' +
    '        }\n' +
    '        return {\n' +
    '            accessToken: tokens?.accessToken,\n' +
    '            idToken: tokens?.idToken,\n' +
    '            signInDetails: tokens?.signInDetails,\n' +
    '        };\n' +
    '    }\n' +
    '    async refreshTokens({ tokens, username, }) {\n' +
    '        try {\n' +
    '            const newTokens = await this.getTokenRefresher()({\n' +
    '                tokens,\n' +
    '                authConfig: this.authConfig,\n' +
    '                username,\n' +
    '            });\n' +
    '            await this.setTokens({ tokens: newTokens });\n' +
    "            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '            return newTokens;\n' +
    '        }\n' +
    '        catch (err) {\n' +
    '            return this.handleErrors(err);\n' +
    '        }\n' +
    '    }\n' +
    '    handleErrors(err) {\n' +
    '        assertServiceError(err);\n' +
    "        if (err.message !== 'Network error') {\n" +
    '            // TODO(v6): Check errors on client\n' +
    '            this.clearTokens();\n' +
    '        }\n' +
    "        Hub.dispatch('auth', {\n" +
    "            event: 'tokenRefresh_failure',\n" +
    '            data: { error: err },\n' +
    "        }, 'Auth', AMPLIFY_SYMBOL);\n" +
    "        if (err.name.startsWith('NotAuthorizedException')) {\n" +
    '            return null;\n' +
    '        }\n' +
    '        throw err;\n' +
    '    }\n' +
    '    async setTokens({ tokens }) {\n' +
    '        return this.getTokenStore().storeTokens(tokens);\n' +
    '    }\n' +
    '    async clearTokens() {\n' +
    '        return this.getTokenStore().clearTokens();\n' +
    '    }\n' +
    '    getDeviceMetadata(username) {\n' +
    '        return this.getTokenStore().getDeviceMetadata(username);\n' +
    '    }\n' +
    '    clearDeviceMetadata(username) {\n' +
    '        return this.getTokenStore().clearDeviceMetadata(username);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { TokenOrchestrator };\n' +
    '//# sourceMappingURL=TokenOrchestrator.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { cognitoIdentityIdProvider } from './IdentityIdProvider.mjs';\n" +
    "import { ConsoleLogger, getCredentialsForIdentity } from '@aws-amplify/core';\n" +
    "import { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertIdTokenInAuthTokens } from '../utils/types.mjs';\n" +
    "import { formLoginsMap } from './utils.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('CognitoCredentialsProvider');\n" +
    'const CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\n' +
    'class CognitoAWSCredentialsAndIdentityIdProvider {\n' +
    '    constructor(identityIdStore) {\n' +
    '        this._nextCredentialsRefresh = 0;\n' +
    '        this._identityIdStore = identityIdStore;\n' +
    '    }\n' +
    '    async clearCredentialsAndIdentityId() {\n' +
    "        logger.debug('Clearing out credentials and identityId');\n" +
    '        this._credentialsAndIdentityId = undefined;\n' +
    '        await this._identityIdStore.clearIdentityId();\n' +
    '    }\n' +
    '    async clearCredentials() {\n' +
    "        logger.debug('Clearing out in-memory credentials');\n" +
    '        this._credentialsAndIdentityId = undefined;\n' +
    '    }\n' +
    '    async getCredentialsAndIdentityId(getCredentialsOptions) {\n' +
    '        const isAuthenticated = getCredentialsOptions.authenticated;\n' +
    '        const tokens = getCredentialsOptions.tokens;\n' +
    '        const authConfig = getCredentialsOptions.authConfig;\n' +
    '        try {\n' +
    '            assertIdentityPoolIdConfig(authConfig?.Cognito);\n' +
    '        }\n' +
    '        catch {\n' +
    '            // No identity pool configured, skipping\n' +
    '            return;\n' +
    '        }\n' +
    '        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n' +
    '            // TODO(V6): return partial result like Native platforms\n' +
    '            return;\n' +
    '        }\n' +
    '        const forceRefresh = getCredentialsOptions.forceRefresh;\n' +
    '        const tokenHasChanged = this.hasTokenChanged(tokens);\n' +
    '        const identityId = await cognitoIdentityIdProvider({\n' +
    '            tokens,\n' +
    '            authConfig: authConfig.Cognito,\n' +
    '            identityIdStore: this._identityIdStore,\n' +
    '        });\n' +
    '        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n' +
    '        if (forceRefresh || tokenHasChanged) {\n' +
    '            this.clearCredentials();\n' +
    '        }\n' +
    '        if (!isAuthenticated) {\n' +
    '            return this.getGuestCredentials(identityId, authConfig.Cognito);\n' +
    '        }\n' +
    '        else {\n' +
    '            assertIdTokenInAuthTokens(tokens);\n' +
    '            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n' +
    '        }\n' +
    '    }\n' +
    '    async getGuestCredentials(identityId, authConfig) {\n' +
    "        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n" +
    '        if (this._credentialsAndIdentityId &&\n' +
    '            !this.isPastTTL() &&\n' +
    '            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n' +
    "            logger.info('returning stored credentials as they neither past TTL nor expired.');\n" +
    '            return this._credentialsAndIdentityId;\n' +
    '        }\n' +
    '        // Clear to discard if any authenticated credentials are set and start with a clean slate\n' +
    '        this.clearCredentials();\n' +
    '        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n' +
    '        // use identityId to obtain guest credentials\n' +
    '        // save credentials in-memory\n' +
    '        // No logins params should be passed for guest creds:\n' +
    '        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n' +
    '        const clientResult = await getCredentialsForIdentity({ region }, {\n' +
    '            IdentityId: identityId,\n' +
    '        });\n' +
    '        if (clientResult.Credentials &&\n' +
    '            clientResult.Credentials.AccessKeyId &&\n' +
    '            clientResult.Credentials.SecretKey) {\n' +
    '            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n' +
    '            const res = {\n' +
    '                credentials: {\n' +
    '                    accessKeyId: clientResult.Credentials.AccessKeyId,\n' +
    '                    secretAccessKey: clientResult.Credentials.SecretKey,\n' +
    '                    sessionToken: clientResult.Credentials.SessionToken,\n' +
    '                    expiration: clientResult.Credentials.Expiration,\n' +
    '                },\n' +
    '                identityId,\n' +
    '            };\n' +
    '            const identityIdRes = clientResult.IdentityId;\n' +
    '            if (identityIdRes) {\n' +
    '                res.identityId = identityIdRes;\n' +
    '                this._identityIdStore.storeIdentityId({\n' +
    '                    id: identityIdRes,\n' +
    "                    type: 'guest',\n" +
    '                });\n' +
    '            }\n' +
    '            this._credentialsAndIdentityId = {\n' +
    '                ...res,\n' +
    '                isAuthenticatedCreds: false,\n' +
    '            };\n' +
    '            return res;\n' +
    '        }\n' +
    '        else {\n' +
    '            throw new AuthError({\n' +
    "                name: 'CredentialsNotFoundException',\n" +
    '                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n' +
    '        if (this._credentialsAndIdentityId &&\n' +
    '            !this.isPastTTL() &&\n' +
    '            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n' +
    "            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n" +
    '            return this._credentialsAndIdentityId;\n' +
    '        }\n' +
    '        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n' +
    '        this.clearCredentials();\n' +
    '        const logins = authTokens.idToken\n' +
    '            ? formLoginsMap(authTokens.idToken.toString())\n' +
    '            : {};\n' +
    '        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n' +
    '        const clientResult = await getCredentialsForIdentity({ region }, {\n' +
    '            IdentityId: identityId,\n' +
    '            Logins: logins,\n' +
    '        });\n' +
    '        if (clientResult.Credentials &&\n' +
    '            clientResult.Credentials.AccessKeyId &&\n' +
    '            clientResult.Credentials.SecretKey) {\n' +
    '            const res = {\n' +
    '                credentials: {\n' +
    '                    accessKeyId: clientResult.Credentials.AccessKeyId,\n' +
    '                    secretAccessKey: clientResult.Credentials.SecretKey,\n' +
    '                    sessionToken: clientResult.Credentials.SessionToken,\n' +
    '                    expiration: clientResult.Credentials.Expiration,\n' +
    '                },\n' +
    '                identityId,\n' +
    '            };\n' +
    '            // Store the credentials in-memory along with the expiration\n' +
    '            this._credentialsAndIdentityId = {\n' +
    '                ...res,\n' +
    '                isAuthenticatedCreds: true,\n' +
    '                associatedIdToken: authTokens.idToken?.toString(),\n' +
    '            };\n' +
    '            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n' +
    '            const identityIdRes = clientResult.IdentityId;\n' +
    '            if (identityIdRes) {\n' +
    '                res.identityId = identityIdRes;\n' +
    '                this._identityIdStore.storeIdentityId({\n' +
    '                    id: identityIdRes,\n' +
    "                    type: 'primary',\n" +
    '                });\n' +
    '            }\n' +
    '            return res;\n' +
    '        }\n' +
    '        else {\n' +
    '            throw new AuthError({\n' +
    "                name: 'CredentialsException',\n" +
    '                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    isPastTTL() {\n' +
    '        return this._nextCredentialsRefresh === undefined\n' +
    '            ? true\n' +
    '            : this._nextCredentialsRefresh <= Date.now();\n' +
    '    }\n' +
    '    hasTokenChanged(tokens) {\n' +
    '        return (!!tokens &&\n' +
    '            !!this._credentialsAndIdentityId?.associatedIdToken &&\n' +
    '            tokens.idToken?.toString() !==\n' +
    '                this._credentialsAndIdentityId.associatedIdToken);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { CognitoAWSCredentialsAndIdentityIdProvider };\n' +
    '//# sourceMappingURL=credentialsProvider.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { createTheme } from '@aws-amplify/ui';\n" +
    "import { ThemeContext } from '../components/ThemeProvider/ThemeContext.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * Get current Theme object value from Amplify context.\n' +
    ' * Returns a default theme if context is not available\n' +
    ' */\n' +
    'const getThemeFromContext = (context) => {\n' +
    "    if (typeof context === 'undefined' || typeof context.theme === 'undefined') {\n" +
    '        return createTheme();\n' +
    '    }\n' +
    '    return context.theme;\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/theming)\n' +
    ' */\n' +
    'const useTheme = () => {\n' +
    '    const context = React.useContext(ThemeContext);\n' +
    '    return getThemeFromContext(context);\n' +
    '};\n' +
    '/**\n' +
    ' * Internal use only\n' +
    ' */\n' +
    'const useColorMode = () => {\n' +
    '    const context = React.useContext(ThemeContext);\n' +
    '    return context.colorMode;\n' +
    '};\n' +
    '\n' +
    'export { getThemeFromContext, useColorMode, useTheme };\n'
} [Function: logger]
____9999999____ {
  code: "export { Alert } from './Alert/Alert.mjs';\n" +
    "export { Autocomplete } from './Autocomplete/Autocomplete.mjs';\n" +
    "export { Badge } from './Badge/Badge.mjs';\n" +
    "export { Breadcrumbs } from './Breadcrumbs/Breadcrumbs.mjs';\n" +
    "export { Button } from './Button/Button.mjs';\n" +
    "export { ButtonGroup } from './ButtonGroup/ButtonGroup.mjs';\n" +
    "export { Card } from './Card/Card.mjs';\n" +
    "export { CheckboxField } from './CheckboxField/CheckboxField.mjs';\n" +
    "export { Collection } from './Collection/Collection.mjs';\n" +
    "export { Divider } from './Divider/Divider.mjs';\n" +
    "export { DropZone } from './DropZone/DropZone.mjs';\n" +
    "export { Accordion } from './Accordion/Accordion.mjs';\n" +
    "export { FieldGroupIcon } from './FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "export { FieldGroupIconButton } from './FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "export { Fieldset } from './Fieldset/Fieldset.mjs';\n" +
    "import './Fieldset/useFieldset.mjs';\n" +
    "export { Flex } from './Flex/Flex.mjs';\n" +
    "export { Grid } from './Grid/Grid.mjs';\n" +
    "export { Heading } from './Heading/Heading.mjs';\n" +
    "export { HighlightMatch } from './HighlightMatch/HighlightMatch.mjs';\n" +
    "export { Icon } from './Icon/Icon.mjs';\n" +
    "export { IconsProvider } from './Icon/context/IconsProvider.mjs';\n" +
    "import 'react';\n" +
    "import './Icon/context/IconsContext.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "export { View } from './View/View.mjs';\n" +
    "export { Image } from './Image/Image.mjs';\n" +
    "export { Input } from './Input/Input.mjs';\n" +
    "export { Label } from './Label/Label.mjs';\n" +
    "export { Link } from './Link/Link.mjs';\n" +
    "export { Loader } from './Loader/Loader.mjs';\n" +
    "export { Menu } from './Menu/Menu.mjs';\n" +
    "export { MenuButton } from './Menu/MenuButton.mjs';\n" +
    "export { MenuItem } from './Menu/MenuItem.mjs';\n" +
    "export { Message } from './Message/Message.mjs';\n" +
    "export { Pagination } from './Pagination/Pagination.mjs';\n" +
    "export { usePagination } from './Pagination/usePagination.mjs';\n" +
    "export { PasswordField } from './PasswordField/PasswordField.mjs';\n" +
    "export { PhoneNumberField } from './PhoneNumberField/PhoneNumberField.mjs';\n" +
    "export { Placeholder } from './Placeholder/Placeholder.mjs';\n" +
    "export { Radio } from './Radio/Radio.mjs';\n" +
    "export { RadioGroupField } from './RadioGroupField/RadioGroupField.mjs';\n" +
    "export { Rating } from './Rating/Rating.mjs';\n" +
    "export { ScrollView } from './ScrollView/ScrollView.mjs';\n" +
    "export { SearchField } from './SearchField/SearchField.mjs';\n" +
    "export { SelectField } from './SelectField/SelectField.mjs';\n" +
    "export { SliderField } from './SliderField/SliderField.mjs';\n" +
    "export { StepperField } from './StepperField/StepperField.mjs';\n" +
    "export { SwitchField } from './SwitchField/SwitchField.mjs';\n" +
    "export { Table } from './Table/Table.mjs';\n" +
    "export { TableBody } from './Table/TableBody.mjs';\n" +
    "export { TableCell } from './Table/TableCell.mjs';\n" +
    "export { TableFoot } from './Table/TableFoot.mjs';\n" +
    "export { TableHead } from './Table/TableHead.mjs';\n" +
    "export { TableRow } from './Table/TableRow.mjs';\n" +
    "export { Tabs } from './Tabs/Tabs.mjs';\n" +
    "export { Text } from './Text/Text.mjs';\n" +
    "export { TextAreaField } from './TextAreaField/TextAreaField.mjs';\n" +
    "export { TextField } from './TextField/TextField.mjs';\n" +
    "export { ToggleButton } from './ToggleButton/ToggleButton.mjs';\n" +
    "export { ToggleButtonGroup } from './ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "export { VisuallyHidden } from './VisuallyHidden/VisuallyHidden.mjs';\n" +
    "export { ComponentPropsToStylePropsMap, ComponentPropsToStylePropsMapKeys } from './types/style.mjs';\n"
} [Function: logger]
____9999999____ {
  code: "import ChangePassword from './ChangePassword/ChangePassword.mjs';\n" +
    "import DeleteUser from './DeleteUser/DeleteUser.mjs';\n" +
    '\n' +
    'var AccountSettings = { ChangePassword, DeleteUser };\n' +
    '\n' +
    'export { AccountSettings as default };\n'
} [Function: logger]
____9999999____ {
  code: "export { getActorContext, getActorState } from './helpers/authenticator/actor.mjs';\n" +
    "export { defaultAuthHubHandler, listenToAuthHub } from './helpers/authenticator/defaultAuthHubHandler.mjs';\n" +
    "export { getNextServiceContextFacade, getNextServiceFacade, getSendEventAliases, getServiceContextFacade, getServiceFacade } from './helpers/authenticator/facade.mjs';\n" +
    "export { ALLOWED_SPECIAL_CHARACTERS, NAVIGABLE_ROUTE_EVENT, defaultFormFieldOptions, emailRegex } from './helpers/authenticator/constants.mjs';\n" +
    "export { getErrors, getFormDataFromEvent, isAuthFieldWithDefaults, setFormOrder } from './helpers/authenticator/form.mjs';\n" +
    "export { censorAllButFirstAndLast, censorContactMethod, censorEmail, censorPhoneNumber, getTotpCodeURL, hasSpecialChars, isValidEmail, trimValues } from './helpers/authenticator/utils.mjs';\n" +
    "export { getCustomFormFields, getDefaultFormFields, getFormFields, getSortedFormFields, removeOrderKeys } from './helpers/authenticator/formFields/formFields.mjs';\n" +
    "export { DEFAULT_COUNTRY_CODE, defaultFormFieldsGetters, getAliasDefaultFormField } from './helpers/authenticator/formFields/defaults.mjs';\n" +
    "export { applyTranslation, getPrimaryAlias, sortFormFields } from './helpers/authenticator/formFields/utils.mjs';\n" +
    "export { authenticatorTextUtil } from './helpers/authenticator/textUtil.mjs';\n" +
    "export { changePassword, deleteUser } from './helpers/accountSettings/utils.mjs';\n" +
    "export { getDefaultConfirmPasswordValidators, getDefaultPasswordValidators, runFieldValidators } from './helpers/accountSettings/validator.mjs';\n" +
    "export { getLogger } from './helpers/utils.mjs';\n" +
    "export { countryDialCodes } from './i18n/country-dial-codes.mjs';\n" +
    "export { DefaultTexts, hasTranslation, translate, translations } from './i18n/translations.mjs';\n" +
    "export { createAuthenticatorMachine } from './machines/authenticator/index.mjs';\n" +
    "export { createTheme } from './theme/createTheme.mjs';\n" +
    "export { defaultTheme } from './theme/defaultTheme.mjs';\n" +
    "export { defaultDarkModeOverride, reactNativeDarkTokens } from './theme/defaultDarkModeOverride.mjs';\n" +
    "export { reactNativeTokens } from './theme/tokens/index.mjs';\n" +
    "export { cssNameTransform, isDesignToken, setupTokens } from './theme/utils.mjs';\n" +
    "export { FederatedIdentityProviders, UnverifiedContactMethodType } from './types/authenticator/user.mjs';\n" +
    "export { isUnverifiedContactMethodType } from './types/authenticator/utils.mjs';\n" +
    "export { LoginMechanismArray, authFieldsWithDefaults, isAuthFieldsWithDefaults, signUpFieldsWithDefault, signUpFieldsWithoutDefault } from './types/authenticator/attributes.mjs';\n" +
    "export { ComponentClassName } from './types/primitives/componentClassName.mjs';\n" +
    "export { setUserAgent } from './utils/setUserAgent/setUserAgent.mjs';\n" +
    "export { areEmptyArrays, areEmptyObjects, capitalize, classNameModifier, classNameModifierByFlag, groupLog, has, isEmpty, isEmptyObject, isFunction, isMap, isNil, isObject, isSet, isString, isTypedFunction, isUndefined, noop, sanitizeNamespaceImport, templateJoin } from './utils/utils.mjs';\n" +
    "export { classNames } from './utils/classNames.mjs';\n"
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    "import { useSetUserAgent, AuthenticatorProvider, useAuthenticator, useAuthenticatorInitMachine } from '@aws-amplify/ui-react-core';\n" +
    "import { VERSION } from '../../version.mjs';\n" +
    "import { useDeprecationWarning } from '../../hooks/useDeprecationWarning.mjs';\n" +
    "import { CustomComponentsContext } from './hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import '../../primitives/View/View.mjs';\n" +
    "import { Router } from './Router/Router.mjs';\n" +
    "import { SetupTotp } from './SetupTotp/SetupTotp.mjs';\n" +
    "import { SignIn } from './SignIn/SignIn.mjs';\n" +
    "import { SignUp } from './SignUp/SignUp.mjs';\n" +
    "import { ForceNewPassword } from './ForceNewPassword/ForceNewPassword.mjs';\n" +
    "import './ForgotPassword/ConfirmResetPassword.mjs';\n" +
    "import { ForgotPassword } from './ForgotPassword/ForgotPassword.mjs';\n" +
    "import { defaultComponents } from './hooks/useCustomComponents/defaultComponents.mjs';\n" +
    '\n' +
    '// `AuthenticatorInternal` exists to give access to the context returned via `useAuthenticator`,\n' +
    '// which allows the `Authenticator` to just return `children` if a user is authenticated.\n' +
    '// Once the `Provider` is removed from the `Authenticator` component and exported as\n' +
    '// `AuthenticatorProvider`, this component should be renamed to `Authenticator`.\n' +
    'function AuthenticatorInternal({ children, className, components: customComponents, formFields, hideSignUp, initialState, loginMechanisms, passwordSettings, signUpAttributes, services, socialProviders, variation, }) {\n' +
    '    useDeprecationWarning({\n' +
    "        message: 'The `passwordSettings` prop has been deprecated and will be removed in a future major version of Amplify UI.',\n" +
    '        // shouldWarn: !!passwordSettings,\n' +
    '        /**\n' +
    '         * @migration turn off until getConfig returns zero config\n' +
    '         */\n' +
    '        shouldWarn: false,\n' +
    '    });\n' +
    '    const { route, signOut, user } = useAuthenticator(({ route, signOut, user }) => [route, signOut, user]);\n' +
    '    useAuthenticatorInitMachine({\n' +
    '        initialState,\n' +
    '        loginMechanisms,\n' +
    '        passwordSettings,\n' +
    '        services,\n' +
    '        signUpAttributes,\n' +
    '        socialProviders,\n' +
    '        formFields,\n' +
    '    });\n' +
    '    const value = React.useMemo(() => ({ components: { ...defaultComponents, ...customComponents } }), [customComponents]);\n' +
    "    const isAuthenticatedRoute = route === 'authenticated' || route === 'signOut';\n" +
    '    if (isAuthenticatedRoute) {\n' +
    '        // `Authenticator` might not have user defined `children` for non SPA use cases.\n' +
    '        if (!children) {\n' +
    '            // @ts-ignore\n' +
    '            return null;\n' +
    '        }\n' +
    '        return (React.createElement(React.Fragment, null, isFunction(children)\n' +
    '            ? children({ signOut, user }) // children is a render prop\n' +
    '            : children));\n' +
    '    }\n' +
    '    return (React.createElement(CustomComponentsContext.Provider, { value: value },\n' +
    '        React.createElement(Router, { className: className, hideSignUp: hideSignUp, variation: variation })));\n' +
    '}\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator)\n' +
    ' */\n' +
    'function Authenticator(props) {\n' +
    '    useSetUserAgent({\n' +
    "        componentName: 'Authenticator',\n" +
    "        packageName: 'react',\n" +
    '        version: VERSION,\n' +
    '    });\n' +
    '    return (React.createElement(AuthenticatorProvider, null,\n' +
    '        React.createElement(AuthenticatorInternal, { ...props })));\n' +
    '}\n' +
    'Authenticator.Provider = AuthenticatorProvider;\n' +
    'Authenticator.ForgotPassword = ForgotPassword;\n' +
    'Authenticator.SetupTotp = SetupTotp;\n' +
    'Authenticator.SignIn = SignIn;\n' +
    'Authenticator.SignUp = SignUp;\n' +
    'Authenticator.ForceNewPassword = ForceNewPassword;\n' +
    '\n' +
    'export { Authenticator, AuthenticatorInternal };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { Authenticator } from './Authenticator.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator)\n' +
    ' */\n' +
    'function withAuthenticator(Component, options = {}) {\n' +
    "    const { variation = 'modal' } = options;\n" +
    '    return function WrappedWithAuthenticator(props) {\n' +
    '        return (React__default.createElement(Authenticator, { variation: variation, ...options }, (withAuthenticatorProps) => (React__default.createElement(Component, { ...props, ...withAuthenticatorProps }))));\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { withAuthenticator };\n'
} [Function: logger]
____9999999____ {
  code: "import { getValueAtCurrentBreakpoint } from '../primitives/shared/responsive/utils.mjs';\n" +
    "import { useBreakpoint } from '../primitives/shared/responsive/useBreakpoint.mjs';\n" +
    "import { useTheme } from './useTheme.mjs';\n" +
    "import { getStyleValue } from '../primitives/shared/getStyleValue.mjs';\n" +
    "import { isDesignToken, isString } from '@aws-amplify/ui';\n" +
    '\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/theming/responsive#usebreakpointvalue)\n' +
    ' */\n' +
    "const useBreakpointValue = (values, defaultBreakpoint = 'base', propKey) => {\n" +
    '    const { breakpoints: { values: breakpoints }, tokens, } = useTheme();\n' +
    '    const breakpoint = useBreakpoint({\n' +
    '        breakpoints,\n' +
    '        defaultBreakpoint,\n' +
    '    });\n' +
    '    const value = getValueAtCurrentBreakpoint({\n' +
    '        breakpoint,\n' +
    '        breakpoints,\n' +
    '        values,\n' +
    '    });\n' +
    '    if (isDesignToken(value) || isString(value)) {\n' +
    '        return getStyleValue({ value, propKey, tokens });\n' +
    '    }\n' +
    '    else {\n' +
    '        return value;\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { useBreakpointValue };\n'
} [Function: logger]
____9999999____ {
  code: "export { default as AuthenticatorProvider } from './Authenticator/context/AuthenticatorProvider.mjs';\n" +
    "import './Authenticator/context/AuthenticatorContext.mjs';\n" +
    "export { default as useAuthenticator } from './Authenticator/hooks/useAuthenticator/useAuthenticator.mjs';\n" +
    "export { default as useAuthenticatorRoute } from './Authenticator/hooks/useAuthenticatorRoute/useAuthenticatorRoute.mjs';\n" +
    "export { default as useAuthenticatorInitMachine } from './Authenticator/hooks/useAuthenticatorInitMachine/useAuthenticatorInitMachine.mjs';\n" +
    "export { isComponentRouteKey as isAuthenticatorComponentRouteKey, resolveAuthenticatorComponents } from './Authenticator/hooks/utils.mjs';\n" +
    "export { default as useField } from './components/FormCore/useField.mjs';\n" +
    "export { default as useForm } from './components/FormCore/useForm.mjs';\n" +
    "export { default as FormProvider } from './components/FormCore/FormProvider.mjs';\n" +
    "export { default as withFormProvider } from './components/FormCore/withFormProvider.mjs';\n" +
    "export { default as RenderNothing } from './components/RenderNothing/RenderNothing.mjs';\n" +
    "export { default as useDeprecationWarning } from './hooks/useDeprecationWarning.mjs';\n" +
    "export { default as useHasValueUpdated } from './hooks/useHasValueUpdated.mjs';\n" +
    "export { default as usePreviousValue } from './hooks/usePreviousValue.mjs';\n" +
    "export { default as useSetUserAgent } from './hooks/useSetUserAgent.mjs';\n" +
    "export { default as useTimeout } from './hooks/useTimeout.mjs';\n" +
    "export { default as createContextUtilities } from './utils/createContextUtilities.mjs';\n"
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * react-dom.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    '/*\n' +
    ' Modernizr 3.0.0pre (Custom Build) | MIT\n' +
    '*/\n' +
    `'use strict';var aa=require("react"),ca=require("scheduler");function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}\n` +
    'function ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\n' +
    'var ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n' +
    '{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\n' +
    'function qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n' +
    '"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n' +
    '["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n' +
    '["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n' +
    '"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,\n' +
    'sa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\n' +
    'z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\n' +
    'function ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\n' +
    'var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");\n' +
    'var Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||""}return"\\n"+La+a}var Na=!1;\n' +
    'function Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\\n"),\n' +
    'f=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}\n' +
    'function Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}\n' +
    'function Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\n' +
    'b.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\n' +
    'function Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";\n' +
    'case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}\n' +
    'function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\n' +
    'function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a'... 121737 more characters
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import * as RadixDirection from '@radix-ui/react-direction';\n" +
    "import { sanitizeNamespaceImport, createTheme } from '@aws-amplify/ui';\n" +
    "import { ThemeContext } from './ThemeContext.mjs';\n" +
    '\n' +
    "// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n" +
    '// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\n' +
    'const { DirectionProvider } = sanitizeNamespaceImport(RadixDirection);\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/theming)\n' +
    ' */\n' +
    "function ThemeProvider({ children, colorMode, direction = 'ltr', nonce, theme, }) {\n" +
    '    const value = React.useMemo(() => ({ theme: createTheme(theme), colorMode }), [theme, colorMode]);\n' +
    '    const { theme: { name, cssText }, } = value;\n' +
    '    return (React.createElement(ThemeContext.Provider, { value: value },\n' +
    '        React.createElement(DirectionProvider, { dir: direction },\n' +
    '            React.createElement("div", { "data-amplify-theme": name, "data-amplify-color-mode": colorMode, dir: direction }, children),\n' +
    '            typeof theme === \'undefined\' || /<\\/style/i.test(cssText) ? null : (React.createElement("style", { id: `amplify-theme-${name}`, \n' +
    '                // eslint-disable-next-line react/no-danger\n' +
    '                dangerouslySetInnerHTML: { __html: cssText }, nonce: nonce })))));\n' +
    '}\n' +
    '\n' +
    'export { ThemeProvider };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { IconsContext } from './IconsContext.mjs';\n" +
    '\n' +
    'function IconsProvider({ children, icons, }) {\n' +
    '    return (React.createElement(IconsContext.Provider, { value: icons }, children));\n' +
    '}\n' +
    '\n' +
    'export { IconsProvider };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction, classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { AlertIcon } from './AlertIcon.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { IconClose } from '../Icon/icons/IconClose.mjs';\n" +
    '\n' +
    'const AlertPrimitive = ({ buttonRef, children, className, dismissButtonLabel = ComponentText.Alert.dismissButtonLabel, hasIcon = true, heading, isDismissible = false, onDismiss, variation, ...rest }, ref) => {\n' +
    '    const [dismissed, setDismissed] = React.useState(false);\n' +
    "    const icons = useIcons('alert');\n" +
    '    const dismissAlert = React.useCallback(() => {\n' +
    '        setDismissed(!dismissed);\n' +
    '        if (isFunction(onDismiss)) {\n' +
    '            onDismiss();\n' +
    '        }\n' +
    '    }, [setDismissed, onDismiss, dismissed]);\n' +
    '    return !dismissed ? (React.createElement(Flex, { className: classNames(ComponentClassName.Alert, className, classNameModifier(ComponentClassName.Alert, variation)), ref: ref, role: "alert", ...rest },\n' +
    '        hasIcon && React.createElement(AlertIcon, { variation: variation, ariaHidden: true }),\n' +
    '        React.createElement(View, { flex: "1" },\n' +
    '            heading && (React.createElement(View, { className: ComponentClassName.AlertHeading }, heading)),\n' +
    '            React.createElement(View, { className: ComponentClassName.AlertBody }, children)),\n' +
    '        isDismissible && (React.createElement(Button, { ariaLabel: dismissButtonLabel, variation: "link", className: ComponentClassName.AlertDismiss, onClick: dismissAlert, ref: buttonRef }, icons?.close ?? React.createElement(IconClose, { "aria-hidden": "true" }))))) : null;\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/alert)\n' +
    ' */\n' +
    'const Alert = primitiveWithForwardRef(AlertPrimitive);\n' +
    "Alert.displayName = 'Alert';\n" +
    '\n' +
    'export { Alert };\n'
} [Function: logger]
____9999999____ {
  code: "import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { AutocompleteOption } from './AutocompleteOption.mjs';\n" +
    "import { AutocompleteMenu } from './AutocompleteMenu.mjs';\n" +
    "import { useAutocomplete } from './useAutocomplete.mjs';\n" +
    "import { HighlightMatch } from '../HighlightMatch/HighlightMatch.mjs';\n" +
    "import { SearchField } from '../SearchField/SearchField.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const AutocompletePrimitive = ({ className, defaultValue, value, isLoading = false, menuSlots = {}, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit, renderOption, testId, ...rest }, ref) => {\n' +
    '    const { activeOptionId, autocompleteId, composedValue, filteredOptions, handleOnBlur, handleOnClear, handleOnClick, handleOnChange, handleOnKeyDown, isControlled, isCustomFiltering, isMenuOpen, listboxId, menuId, optionBaseId, setActiveOption, setIsMenuOpen, setInternalValue, } = useAutocomplete({\n' +
    '        defaultValue,\n' +
    '        value,\n' +
    '        options,\n' +
    '        optionFilter,\n' +
    '        onBlur,\n' +
    '        onChange,\n' +
    '        onClear,\n' +
    '        onClick,\n' +
    '        onSelect,\n' +
    '        onSubmit,\n' +
    '    });\n' +
    '    const comboboxProps = {\n' +
    "        role: 'combobox',\n" +
    "        'aria-activedescendant': activeOptionId,\n" +
    "        'aria-autocomplete': 'list',\n" +
    "        'aria-controls': isMenuOpen ? menuId : undefined,\n" +
    "        'aria-expanded': isMenuOpen,\n" +
    "        'aria-haspopup': 'listbox',\n" +
    "        'aria-owns': isMenuOpen ? menuId : undefined,\n" +
    '    };\n' +
    '    const Options = filteredOptions.map((option, idx) => {\n' +
    '        const { id, label, ...rest } = option;\n' +
    '        const handleOnClick = () => {\n' +
    '            setIsMenuOpen(false);\n' +
    '            setActiveOption(null);\n' +
    '            if (!isControlled) {\n' +
    '                setInternalValue(label);\n' +
    '            }\n' +
    '            if (isFunction(onSelect)) {\n' +
    '                onSelect(option);\n' +
    '            }\n' +
    '        };\n' +
    '        // This is required. Mousedown event will fire a blur event by default\n' +
    '        // and so the menu will close before the click event on an option gets a chance to fire\n' +
    '        const handleOnMouseDown = (event) => {\n' +
    '            event.preventDefault();\n' +
    '        };\n' +
    '        const handleOnMouseMove = () => {\n' +
    '            setActiveOption(option);\n' +
    '        };\n' +
    '        const optionId = id ?? `${optionBaseId}-option-${idx}`;\n' +
    '        const isActive = optionId === activeOptionId;\n' +
    '        return (React.createElement(AutocompleteOption, { isActive: isActive, id: optionId, key: optionId, onClick: handleOnClick, onMouseDown: handleOnMouseDown, onMouseMove: handleOnMouseMove, ...rest }, isFunction(renderOption) ? (renderOption(option, composedValue)) : isCustomFiltering ? (label) : (React.createElement(HighlightMatch, { query: composedValue }, label))));\n' +
    '    });\n' +
    '    return (React.createElement(View, { className: classNames(ComponentClassName.Autocomplete, className), id: autocompleteId, testId: testId },\n' +
    '        React.createElement(SearchField, { hasSearchButton: false, hasSearchIcon: true, onBlur: handleOnBlur, onChange: handleOnChange, onClear: handleOnClear, onClick: handleOnClick, onKeyDown: handleOnKeyDown, ref: ref, value: composedValue, ...comboboxProps, ...rest }),\n' +
    '        isMenuOpen ? (React.createElement(AutocompleteMenu, { id: menuId, isLoading: isLoading, listboxId: listboxId, ...menuSlots }, Options)) : null));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/autocomplete)\n' +
    ' */\n' +
    'const Autocomplete = primitiveWithForwardRef(AutocompletePrimitive);\n' +
    "Autocomplete.displayName = 'Autocomplete';\n" +
    '\n' +
    'export { Autocomplete, AutocompletePrimitive };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const BadgePrimitive = ({ className, children, variation, size, ...rest }, ref) => {\n' +
    '    const componentClasses = classNames(ComponentClassName.Badge, className, classNameModifier(ComponentClassName.Badge, variation), classNameModifier(ComponentClassName.Badge, size));\n' +
    '    return (React.createElement(View, { as: "span", className: componentClasses, ref: ref, ...rest }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/badge)\n' +
    ' */\n' +
    'const Badge = primitiveWithForwardRef(BadgePrimitive);\n' +
    "Badge.displayName = 'Badge';\n" +
    '\n' +
    'export { Badge };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { BreadcrumbItem } from './BreadcrumbItem.mjs';\n" +
    "import { BreadcrumbLink } from './BreadcrumbLink.mjs';\n" +
    "import { BreadcrumbSeparator } from './BreadcrumbSeparator.mjs';\n" +
    "import { BreadcrumbContainer } from './BreadcrumbContainer.mjs';\n" +
    '\n' +
    'const BreadcrumbsPrimitive = ({ className, items, separator = React.createElement(BreadcrumbSeparator, null), ...rest }, ref) => {\n' +
    "    const ariaLabel = rest['aria-label'] ?? 'Breadcrumb';\n" +
    '    return (React.createElement(BreadcrumbContainer, { ...rest, "aria-label": ariaLabel, className: className, ref: ref }, items?.map(({ href, label }, idx) => {\n' +
    '        const isCurrent = items.length - 1 === idx;\n' +
    '        return (React.createElement(BreadcrumbItem, { key: `${href}${idx}` },\n' +
    '            React.createElement(BreadcrumbLink, { href: href, isCurrent: isCurrent }, label),\n' +
    '            isCurrent ? null : separator));\n' +
    '    })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/breadcrumbs)\n' +
    ' */\n' +
    'const Breadcrumbs = Object.assign(primitiveWithForwardRef(BreadcrumbsPrimitive), {\n' +
    '    Item: BreadcrumbItem,\n' +
    '    Link: BreadcrumbLink,\n' +
    '    Separator: BreadcrumbSeparator,\n' +
    '    Container: BreadcrumbContainer,\n' +
    '});\n' +
    "Breadcrumbs.displayName = 'Breadcrumbs';\n" +
    '\n' +
    'export { Breadcrumbs };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const CardPrimitive = ({ className, children, variation, ...rest }, ref) => {\n' +
    '    return (React.createElement(View, { className: classNames(ComponentClassName.Card, classNameModifier(ComponentClassName.Card, variation), className), ref: ref, ...rest }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/card)\n' +
    ' */\n' +
    'const Card = primitiveWithForwardRef(CardPrimitive);\n' +
    "Card.displayName = 'Card';\n" +
    '\n' +
    'export { Card };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Checkbox } from '../Checkbox/Checkbox.mjs';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { getTestId } from '../utils/getTestId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    '\n' +
    'const CheckboxFieldPrimitive = ({ className, errorMessage, hasError = false, labelHidden = false, labelPosition, testId, size, ...rest }, ref) => {\n' +
    '    const checkboxTestId = getTestId(testId, ComponentClassName.Checkbox);\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, ComponentClassName.CheckboxField, classNameModifier(ComponentClassName.Field, size), className), testId: testId },\n' +
    '        React.createElement(Checkbox, { hasError: hasError, labelHidden: labelHidden, testId: checkboxTestId, labelPosition: labelPosition, ref: ref, ...rest }),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/checkboxfield)\n' +
    ' */\n' +
    'const CheckboxField = primitiveWithForwardRef(CheckboxFieldPrimitive);\n' +
    "CheckboxField.displayName = 'CheckboxField';\n" +
    '\n' +
    'export { CheckboxField };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    "const DividerPrimitive = ({ className, orientation = 'horizontal', size, label, ...rest }, ref) => {\n" +
    '    const componentClasses = classNames(ComponentClassName.Divider, classNameModifier(ComponentClassName.Divider, orientation), classNameModifier(ComponentClassName.Divider, size), className);\n' +
    '    return (React.createElement(View, { "aria-orientation": orientation, as: "hr", className: componentClasses, "data-label": label, ref: ref, ...rest }));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/divider)\n' +
    ' */\n' +
    'const Divider = primitiveWithForwardRef(DividerPrimitive);\n' +
    "Divider.displayName = 'Divider';\n" +
    '\n' +
    'export { Divider };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { AccordionItem } from './AccordionItem.mjs';\n" +
    "import { AccordionContent } from './AccordionContent.mjs';\n" +
    "import { AccordionTrigger } from './AccordionTrigger.mjs';\n" +
    "import { AccordionIcon } from './AccordionIcon.mjs';\n" +
    "import { AccordionContainer } from './AccordionContainer.mjs';\n" +
    '\n' +
    'const AccordionPrimitive = ({ items, ...rest }, ref) => {\n' +
    '    return (React.createElement(AccordionContainer, { ref: ref, ...rest }, items?.map(({ content, trigger, value }) => (React.createElement(AccordionItem, { key: value, value: value },\n' +
    '        React.createElement(AccordionTrigger, null,\n' +
    '            trigger,\n' +
    '            React.createElement(AccordionIcon, null)),\n' +
    '        React.createElement(AccordionContent, null, content))))));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const Accordion = Object.assign(primitiveWithForwardRef(AccordionPrimitive), {\n' +
    '    Container: AccordionContainer,\n' +
    '    Content: AccordionContent,\n' +
    '    Icon: AccordionIcon,\n' +
    '    Item: AccordionItem,\n' +
    '    Trigger: AccordionTrigger,\n' +
    '});\n' +
    "Accordion.displayName = 'Accordion';\n" +
    '\n' +
    'export { Accordion };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { useDropZone } from './useDropZone.mjs';\n" +
    "import { DropZoneProvider } from './DropZoneProvider.mjs';\n" +
    "import { DropZoneContainer } from './DropZoneContainer.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { Accepted, Rejected, Default } from './DropZoneChildren.mjs';\n" +
    '\n' +
    'const DropZonePrimitive = ({ children, testId, isDisabled, acceptedFileTypes, onDropComplete, ...rest }, ref) => {\n' +
    '    const { dragState, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop, } = useDropZone({\n' +
    '        acceptedFileTypes,\n' +
    '        onDropComplete,\n' +
    '        ...rest,\n' +
    '    });\n' +
    '    return (React.createElement(DropZoneProvider, { value: dragState },\n' +
    '        React.createElement(DropZoneContainer, { ...rest, testId: testId, isDisabled: isDisabled, onDragStart: onDragStart, onDragEnter: onDragEnter, onDragLeave: onDragLeave, onDrop: onDrop, onDragOver: onDragOver, ref: ref }, children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/dropzone)\n' +
    ' */\n' +
    'const DropZone = Object.assign(primitiveWithForwardRef(DropZonePrimitive), {\n' +
    '    Accepted,\n' +
    '    Rejected,\n' +
    '    Default,\n' +
    '});\n' +
    "DropZone.displayName = 'DropZone';\n" +
    '\n' +
    'export { DropZone };\n'
} [Function: logger]
____9999999____ {
  code: "import { ComponentClassName, classNames } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import debounce from 'lodash/debounce.js';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Grid } from '../Grid/Grid.mjs';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    "import { Pagination } from '../Pagination/Pagination.mjs';\n" +
    "import { usePagination } from '../Pagination/usePagination.mjs';\n" +
    "import { SearchField } from '../SearchField/SearchField.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { strHasLength } from '../shared/utils.mjs';\n" +
    "import { getPageCount, getItemsAtPage, itemHasText } from './utils.mjs';\n" +
    '\n' +
    'const DEFAULT_PAGE_SIZE = 10;\n' +
    'const TYPEAHEAD_DELAY_MS = 300;\n' +
    "const ListCollection = ({ children, direction = 'column', items, ...rest }) => (React.createElement(Flex, { direction: direction, ...rest }, Array.isArray(items) ? items.map(children) : null));\n" +
    'const GridCollection = ({ children, items, ...rest }) => (React.createElement(Grid, { ...rest }, Array.isArray(items) ? items.map(children) : null));\n' +
    'const renderCollectionOrNoResultsFound = (collection, items, searchNoResultsFound) => {\n' +
    '    if (items.length) {\n' +
    '        return collection;\n' +
    '    }\n' +
    '    if (searchNoResultsFound) {\n' +
    '        return searchNoResultsFound;\n' +
    '    }\n' +
    '    return (React.createElement(Flex, { justifyContent: "center" },\n' +
    '        React.createElement(Text, null, ComponentText.Collection.searchNoResultsFound)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/collection)\n' +
    ' */\n' +
    "const Collection = ({ className, isSearchable, isPaginated, items, itemsPerPage = DEFAULT_PAGE_SIZE, searchFilter = itemHasText, searchLabel = ComponentText.Collection.searchButtonLabel, searchNoResultsFound, searchPlaceholder, type = 'list', testId, ...rest }) => {\n" +
    '    const [searchText, setSearchText] = React.useState();\n' +
    '    // eslint-disable-next-line react-hooks/exhaustive-deps\n' +
    '    const onSearch = React.useCallback(debounce(setSearchText, TYPEAHEAD_DELAY_MS), [setSearchText]);\n' +
    '    // Make sure that items are iterable\n' +
    '    items = Array.isArray(items) ? items : [];\n' +
    '    // Filter items by text\n' +
    '    if (isSearchable && strHasLength(searchText)) {\n' +
    '        items = items.filter((item) => searchFilter(item, searchText));\n' +
    '    }\n' +
    '    // Pagination\n' +
    '    const pagination = usePagination({\n' +
    '        totalPages: getPageCount(items.length, itemsPerPage),\n' +
    '    });\n' +
    '    if (isPaginated) {\n' +
    '        items = getItemsAtPage(items, pagination.currentPage, itemsPerPage);\n' +
    '    }\n' +
    "    const collection = type === 'list' ? (React.createElement(ListCollection, { className: ComponentClassName.CollectionItems, items: items, ...rest })) : type === 'grid' ? (React.createElement(GridCollection, { className: ComponentClassName.CollectionItems, items: items, ...rest })) : null;\n" +
    '    return (React.createElement(Flex, { testId: testId, className: classNames(ComponentClassName.Collection, className) },\n' +
    '        isSearchable ? (React.createElement(Flex, { className: ComponentClassName.CollectionSearch },\n' +
    "            React.createElement(SearchField, { label: searchLabel, placeholder: searchPlaceholder, onChange: (e) => onSearch(e.target.value), onClear: () => setSearchText('') }))) : null,\n" +
    '        renderCollectionOrNoResultsFound(collection, items, searchNoResultsFound),\n' +
    '        isPaginated ? (React.createElement(Flex, { className: ComponentClassName.CollectionPagination },\n' +
    '            React.createElement(Pagination, { ...pagination }))) : null));\n' +
    '};\n' +
    "Collection.displayName = 'Collection';\n" +
    '\n' +
    'export { Collection };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const FieldGroupIconPrimitive = ({ className, children, isVisible = true, excludeFromTabOrder = false, ...rest }, ref) => {\n' +
    '    return isVisible ? (React.createElement(View, { className: classNames(ComponentClassName.FieldGroupIcon, className), ref: ref, tabIndex: excludeFromTabOrder ? -1 : undefined, ...rest }, children)) : null;\n' +
    '};\n' +
    'const FieldGroupIcon = primitiveWithForwardRef(FieldGroupIconPrimitive);\n' +
    "FieldGroupIcon.displayName = 'FieldGroupIcon';\n" +
    '\n' +
    'export { FieldGroupIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { FieldGroupIcon } from './FieldGroupIcon.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const FieldGroupIconButtonPrimitive = ({ children, className, ...rest }, ref) => (React.createElement(FieldGroupIcon, { as: Button, className: classNames(ComponentClassName.FieldGroupIconButton, className), ref: ref, ...rest }, children));\n' +
    'const FieldGroupIconButton = primitiveWithForwardRef(FieldGroupIconButtonPrimitive);\n' +
    "FieldGroupIconButton.displayName = 'FieldGroupIconButton';\n" +
    '\n' +
    'export { FieldGroupIconButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const FlexPrimitive = ({ className, children, ...rest }, ref) => (React.createElement(View, { className: classNames(ComponentClassName.Flex, className), ref: ref, ...rest }, children));\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/flex)\n' +
    ' */\n' +
    'const Flex = primitiveWithForwardRef(FlexPrimitive);\n' +
    "Flex.displayName = 'Flex';\n" +
    '\n' +
    'export { Flex };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const GridPrimitive = ({ className, children, ...rest }, ref) => (React.createElement(View, { className: classNames(ComponentClassName.Grid, className), ref: ref, ...rest }, children));\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/grid)\n' +
    ' */\n' +
    'const Grid = primitiveWithForwardRef(GridPrimitive);\n' +
    "Grid.displayName = 'Grid';\n" +
    '\n' +
    'export { Grid };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const headingLevels = {\n' +
    "    1: 'h1',\n" +
    "    2: 'h2',\n" +
    "    3: 'h3',\n" +
    "    4: 'h4',\n" +
    "    5: 'h5',\n" +
    "    6: 'h6',\n" +
    '};\n' +
    "const HeadingPrimitive = ({ className, children, isTruncated, level = 6, ...rest }, ref) => (React.createElement(View, { as: headingLevels[level], className: classNames(ComponentClassName.Heading, classNameModifier(ComponentClassName.Heading, level), classNameModifierByFlag(ComponentClassName.Heading, 'truncated', isTruncated), className), ref: ref, ...rest }, children));\n" +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/heading)\n' +
    ' */\n' +
    'const Heading = primitiveWithForwardRef(HeadingPrimitive);\n' +
    "Heading.displayName = 'Heading';\n" +
    '\n' +
    'export { Heading };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    '\n' +
    "const ButtonGroupPrimitive = ({ className, children, role = 'group', size: _size, variation: _variation, ...rest }, ref) => (React.createElement(Flex, { className: classNames(ComponentClassName.ButtonGroup, className), role: role, ref: ref, ...rest }, React.Children.map(children, (child) => {\n" +
    '    if (React.isValidElement(child)) {\n' +
    '        const { size = _size, variation = _variation } = child.props;\n' +
    '        return React.cloneElement(child, { size, variation });\n' +
    '    }\n' +
    '    return child;\n' +
    '})));\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/button#buttongroup)\n' +
    ' */\n' +
    'const ButtonGroup = primitiveWithForwardRef(ButtonGroupPrimitive);\n' +
    "ButtonGroup.displayName = 'ButtonGroup';\n" +
    '\n' +
    'export { ButtonGroup };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { useFieldset, FieldsetContext } from './useFieldset.mjs';\n" +
    '\n' +
    "const FieldsetPrimitive = ({ children, className, isDisabled, legend, legendHidden, size, testId, variation = 'plain', ...rest }, ref) => {\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    // Fieldsets that are nested within a disabled Fieldset should\n' +
    '    // also be disabled.\n' +
    '    const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n' +
    '    const value = React.useMemo(() => ({\n' +
    '        isFieldsetDisabled: shouldBeDisabled,\n' +
    '    }), [shouldBeDisabled]);\n' +
    '    const fieldsetClasses = classNames(ComponentClassName.Fieldset, classNameModifier(ComponentClassName.Fieldset, variation), classNameModifier(ComponentClassName.Fieldset, size), className);\n' +
    '    const legendClasses = classNames(ComponentClassName.FieldsetLegend, classNameModifier(ComponentClassName.FieldsetLegend, size), {\n' +
    '        [ComponentClassName.VisuallyHidden]: legendHidden,\n' +
    '    });\n' +
    '    return (React.createElement(FieldsetContext.Provider, { value: value },\n' +
    '        React.createElement(Flex, { as: "fieldset", className: fieldsetClasses, ref: ref, disabled: shouldBeDisabled, testId: testId, ...rest },\n' +
    '            React.createElement(VisuallyHidden, { as: "legend" }, legend),\n' +
    '            React.createElement(View, { as: "div", "aria-hidden": "true", className: legendClasses }, legend),\n' +
    '            children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/fieldset)\n' +
    ' */\n' +
    'const Fieldset = primitiveWithForwardRef(FieldsetPrimitive);\n' +
    "Fieldset.displayName = 'Fieldset';\n" +
    '\n' +
    'export { Fieldset };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Loader } from '../Loader/Loader.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    "// These variations support colorThemes. 'undefined' accounts for our\n" +
    "// 'default' variation which is not named.\n" +
    "const supportedVariations = ['link', 'primary', undefined];\n" +
    "const ButtonPrimitive = ({ className, children, colorTheme, isFullWidth = false, isDisabled, isLoading, loadingText = '', size, type = 'button', variation, ...rest }, ref) => {\n" +
    '    // Creates our colorTheme modifier string based on if the variation\n' +
    '    // supports colorThemes and a colorTheme is used.\n' +
    '    const colorThemeModifier = supportedVariations.includes(variation) && colorTheme\n' +
    "        ? `${variation ?? 'outlined'}--${colorTheme}`\n" +
    '        : undefined;\n' +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    const shouldBeDisabled = isFieldsetDisabled\n' +
    '        ? isFieldsetDisabled\n' +
    "        : isDisabled ?? isLoading ?? rest['disabled'];\n" +
    "    const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size), classNameModifierByFlag(ComponentClassName.Button, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, 'loading', isLoading), classNameModifierByFlag(ComponentClassName.Button, 'fullwidth', isFullWidth), className);\n" +
    '    return (React.createElement(View, { ref: ref, as: "button", className: componentClasses, isDisabled: shouldBeDisabled, type: type, ...rest }, isLoading ? (React.createElement(Flex, { as: "span", className: ComponentClassName.ButtonLoaderWrapper },\n' +
    '        React.createElement(Loader, { size: size }),\n' +
    '        loadingText ? loadingText : null)) : (children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/button)\n' +
    ' */\n' +
    'const Button = primitiveWithForwardRef(ButtonPrimitive);\n' +
    "Button.displayName = 'Button';\n" +
    '\n' +
    'export { Button };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { strHasLength } from '../shared/utils.mjs';\n" +
    "import { getTestId } from '../utils/getTestId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const HighlightMatchPrimitive = ({ children, className, query, testId, ...rest }, ref) => {\n' +
    "    const matchTestId = getTestId(testId, 'match');\n" +
    '    const startIndex = children\n' +
    '        ?.toLocaleLowerCase()\n' +
    '        .indexOf(query?.toLocaleLowerCase());\n' +
    '    if (strHasLength(query) && startIndex !== -1) {\n' +
    '        const match = children.substring(startIndex, startIndex + query.length);\n' +
    '        return (React.createElement(View, { as: "span", className: classNames(className, ComponentClassName.HighlightMatch), testId: testId, ref: ref, ...rest },\n' +
    '            children.substring(0, startIndex),\n' +
    '            React.createElement(View, { as: "strong", className: ComponentClassName.HighlightMatchHighlighted, testId: matchTestId }, match),\n' +
    '            children.substring(startIndex + query.length)));\n' +
    '    }\n' +
    '    return (React.createElement(View, { as: "span", testId: testId }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/highlightmatch)\n' +
    ' */\n' +
    'const HighlightMatch = primitiveWithForwardRef(HighlightMatchPrimitive);\n' +
    "HighlightMatch.displayName = 'HighlightMatch';\n" +
    '\n' +
    'export { HighlightMatch, HighlightMatchPrimitive };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ImagePrimitive = ({ className, ...rest }, ref) => (React.createElement(View, { as: "img", ref: ref, className: classNames(ComponentClassName.Image, className), ...rest }));\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/image)\n' +
    ' */\n' +
    'const Image = primitiveWithForwardRef(ImagePrimitive);\n' +
    "Image.displayName = 'Image';\n" +
    '\n' +
    'export { Image };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const defaultViewBox = { minX: 0, minY: 0, width: 24, height: 24 };\n' +
    'const IconPrimitive = ({ className, \n' +
    '// as can be used to render other icon react components too\n' +
    "as = 'svg', fill = 'currentColor', pathData, viewBox = defaultViewBox, children, paths, ...rest }, ref) => {\n" +
    '    const minX = viewBox.minX ? viewBox.minX : defaultViewBox.minX;\n' +
    '    const minY = viewBox.minY ? viewBox.minY : defaultViewBox.minY;\n' +
    '    const width = viewBox.width ? viewBox.width : defaultViewBox.width;\n' +
    '    const height = viewBox.height ? viewBox.height : defaultViewBox.height;\n' +
    '    // An icon can be drawn in 3 ways:\n' +
    '    // 1. Pass it children which should be valid SVG elements\n' +
    '    // 2. Pass an array of path-like objects to `paths` prop\n' +
    '    // 3. Supply `pathData` for a simple icons\n' +
    '    let _children;\n' +
    '    if (children) {\n' +
    '        _children = children;\n' +
    '    }\n' +
    '    if (paths) {\n' +
    '        _children = paths.map((path, index) => React.createElement("path", { ...path, key: index }));\n' +
    '    }\n' +
    '    if (pathData) {\n' +
    '        _children = React.createElement("path", { d: pathData, fill: fill });\n' +
    '    }\n' +
    '    return (React.createElement(View, { as: as, className: classNames(ComponentClassName.Icon, className), ref: ref, viewBox: `${minX} ${minY} ${width} ${height}`, ...rest }, _children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/icon)\n' +
    ' */\n' +
    'const Icon = primitiveWithForwardRef(IconPrimitive);\n' +
    "Icon.displayName = 'Icon';\n" +
    '\n' +
    'export { Icon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const InputPrimitive = ({ autoComplete, checked, className, defaultChecked, defaultValue, id, isDisabled, isReadOnly, isRequired, size, type = 'text', hasError = false, value, variation, ...rest }, ref) => {\n" +
    "    const componentClasses = classNames(ComponentClassName.Input, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Input, variation), classNameModifierByFlag(ComponentClassName.Input, 'error', hasError), classNameModifier(ComponentClassName.Input, size), className);\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    return (React.createElement(View, { "aria-invalid": hasError, as: "input", autoComplete: autoComplete, checked: checked, className: componentClasses, defaultChecked: defaultChecked, defaultValue: defaultValue, isDisabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, id: id, readOnly: isReadOnly, ref: ref, required: isRequired, type: type, value: value, ...rest }));\n' +
    '};\n' +
    'const Input = primitiveWithForwardRef(InputPrimitive);\n' +
    "Input.displayName = 'Input';\n" +
    '\n' +
    'export { Input };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const LabelPrimitive = ({ children, className, visuallyHidden, ...rest }, ref) => {\n' +
    '    return (React.createElement(View, { as: "label", className: classNames(ComponentClassName.Label, className, {\n' +
    '            [ComponentClassName.VisuallyHidden]: visuallyHidden,\n' +
    '        }), ref: ref, ...rest }, children));\n' +
    '};\n' +
    'const Label = primitiveWithForwardRef(LabelPrimitive);\n' +
    "Label.displayName = 'Label';\n" +
    '\n' +
    'export { Label };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const LinkPrimitive = ({ as = 'a', children, className, isExternal, ...rest }, ref) => {\n" +
    "    return (React.createElement(View, { as: as, className: classNames(ComponentClassName.Link, className), ref: ref, rel: isExternal ? 'noopener noreferrer' : undefined, target: isExternal ? '_blank' : undefined, ...rest }, children));\n" +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/link)\n' +
    ' */\n' +
    'const Link = primitiveWithForwardRef(LinkPrimitive);\n' +
    "Link.displayName = 'Link';\n" +
    '\n' +
    'export { Link };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const LINEAR_EMPTY = 'linear-empty';\n" +
    "const LINEAR_FILLED = 'linear-filled';\n" +
    "const CIRCULAR_EMPTY = 'circular-empty';\n" +
    "const CIRCULAR_FILLED = 'circular-filled';\n" +
    '// radius + strokeWidth = 50\n' +
    'const CIRCULAR_STROKE_WIDTH = 8;\n' +
    'const RADIUS = 42;\n' +
    '// circumference = 2 * r * PI  (r = 42)\n' +
    'const CIRCUMFERENCE = 2 * RADIUS * Math.PI;\n' +
    'const LoaderPrimitive = ({ className, filledColor, emptyColor, size, variation, isDeterminate = false, isPercentageTextHidden = false, percentage = 0, ...rest }, ref) => {\n' +
    '    percentage = Math.min(percentage, 100);\n' +
    '    percentage = Math.max(percentage, 0);\n' +
    '    const percent = `${percentage}%`;\n' +
    "    const componentClasses = classNames(ComponentClassName.Loader, classNameModifier(ComponentClassName.Loader, size), classNameModifier(ComponentClassName.Loader, variation), classNameModifierByFlag(ComponentClassName.Loader, 'determinate', isDeterminate), className);\n" +
    '    const linearLoader = (React.createElement("g", null,\n' +
    '        React.createElement("line", { x1: "0", x2: "100%", y1: "50%", y2: "50%", style: { stroke: String(emptyColor) }, "data-testid": LINEAR_EMPTY }),\n' +
    `        React.createElement("line", { x1: "0", x2: isDeterminate ? percent : '100%', y1: "50%", y2: "50%", style: {\n` +
    '                // To get rid of the visible stroke linecap when percentage is 0\n' +
    '                stroke: isDeterminate && percentage === 0\n' +
    "                    ? 'none'\n" +
    '                    : filledColor\n' +
    '                        ? String(filledColor)\n' +
    '                        : undefined,\n' +
    '            }, "data-testid": LINEAR_FILLED }),\n' +
    '        isDeterminate ? (React.createElement("text", { "aria-live": "polite", className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null), \n' +
    '            // -1% offset makes the text position look nicest\n' +
    '            x: `${-1 + percentage}%`, y: "200%" }, percent)) : null));\n' +
    '    // r + stroke-width should add up to 50% to avoid overflow\n' +
    '    const circularLoader = (React.createElement("g", null,\n' +
    '        React.createElement("circle", { cx: "50%", cy: "50%", r: `${RADIUS}%`, strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`, style: { stroke: String(emptyColor) }, "data-testid": CIRCULAR_EMPTY }),\n' +
    '        React.createElement("circle", { cx: "50%", cy: "50%", r: `${RADIUS}%`, strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`, style: {\n' +
    '                stroke: String(filledColor),\n' +
    '                strokeDasharray: isDeterminate\n' +
    '                    ? `${CIRCUMFERENCE}% ${CIRCUMFERENCE}%`\n' +
    '                    : undefined,\n' +
    '                strokeDashoffset: isDeterminate\n' +
    '                    ? `${CIRCUMFERENCE - (CIRCUMFERENCE * percentage) / 100}%`\n' +
    '                    : undefined,\n' +
    '            }, "data-testid": CIRCULAR_FILLED }),\n' +
    '        isDeterminate ? (React.createElement("text", { "aria-live": "polite", className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null), \n' +
    '            // this x and y make text position look nicest\n' +
    '            x: "130%", y: "80%" }, percent)) : null));\n' +
    `    return (React.createElement(View, { as: "svg", className: componentClasses, ref: ref, role: "img", ...rest }, variation === 'linear' ? linearLoader : circularLoader));\n` +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/loader)\n' +
    ' */\n' +
    'const Loader = primitiveWithForwardRef(LoaderPrimitive);\n' +
    "Loader.displayName = 'Loader';\n" +
    '\n' +
    'export { CIRCULAR_EMPTY, CIRCULAR_FILLED, CIRCULAR_STROKE_WIDTH, CIRCUMFERENCE, LINEAR_EMPTY, LINEAR_FILLED, Loader, RADIUS };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { sanitizeNamespaceImport, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as Dropdown from '@radix-ui/react-dropdown-menu';\n" +
    "import { ButtonGroup } from '../ButtonGroup/ButtonGroup.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconMenu } from '../Icon/icons/IconMenu.mjs';\n" +
    "import { MenuButton } from './MenuButton.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n" +
    '// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\n' +
    'const { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent } = sanitizeNamespaceImport(Dropdown);\n' +
    "const MENU_TRIGGER_TEST_ID = 'amplify-menu-trigger-test-id';\n" +
    "const MENU_ITEMS_GROUP_TEST_ID = 'amplify-menu-items-group-test-id';\n" +
    "const MenuPrimitive = ({ menuAlign = 'start', children, className, isOpen, size, trigger, triggerClassName, ariaLabel, onOpenChange, ...rest }, ref) => {\n" +
    "    const icons = useIcons('menu');\n" +
    '    return (React.createElement(DropdownMenu, { onOpenChange: onOpenChange, open: isOpen },\n' +
    '        React.createElement(DropdownMenuTrigger, { asChild: true }, trigger ?? (React.createElement(MenuButton, { ariaLabel: ariaLabel, size: size, testId: MENU_TRIGGER_TEST_ID, className: classNames(ComponentClassName.MenuTrigger, triggerClassName) }, icons?.menu ?? React.createElement(IconMenu, null)))),\n' +
    '        React.createElement(DropdownMenuContent, { align: menuAlign, className: ComponentClassName.MenuWrapper },\n' +
    '            React.createElement(ButtonGroup, { className: classNames(ComponentClassName.MenuContent, className), ref: ref, size: size, testId: MENU_ITEMS_GROUP_TEST_ID, ...rest }, children))));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/menu)\n' +
    ' */\n' +
    'const Menu = primitiveWithForwardRef(MenuPrimitive);\n' +
    "Menu.displayName = 'Menu';\n" +
    '\n' +
    'export { MENU_ITEMS_GROUP_TEST_ID, MENU_TRIGGER_TEST_ID, Menu };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { useStyles } from '../shared/styleUtils.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/menu)\n' +
    ' */\n' +
    "const MenuButtonPrimitive = ({ ariaLabel, className, children, isDisabled, isLoading, size, style, type = 'button', variation, testId, ...rest }, ref) => {\n" +
    '    const { propStyles, nonStyleProps } = useStyles(rest, style);\n' +
    '    const componentClasses = classNames(ComponentClassName.Button, classNameModifier(ComponentClassName.Button, size), classNameModifier(ComponentClassName.Button, variation), className);\n' +
    '    return (React.createElement(Button, { ref: ref, className: componentClasses, disabled: isDisabled ?? isLoading, type: type, testId: testId, "aria-label": ariaLabel, style: propStyles, ...nonStyleProps }, children));\n' +
    '};\n' +
    'const MenuButton = primitiveWithForwardRef(MenuButtonPrimitive);\n' +
    "MenuButton.displayName = 'MenuButton';\n" +
    '\n' +
    'export { MenuButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { sanitizeNamespaceImport, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as Dropdown from '@radix-ui/react-dropdown-menu';\n" +
    "import { MenuButton } from './MenuButton.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n" +
    '// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\n' +
    'const { DropdownMenuItem } = sanitizeNamespaceImport(Dropdown);\n' +
    "const MENU_ITEM_TEST_ID = 'amplify-menu-item-test-id';\n" +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/menu)\n' +
    ' */\n' +
    'const MenuItemPrimitive = ({ children, className, ...rest }, ref) => {\n' +
    '    return (React.createElement(DropdownMenuItem, { asChild: true, ref: ref },\n' +
    '        React.createElement(MenuButton, { className: classNames(ComponentClassName.MenuItem, className), testId: MENU_ITEM_TEST_ID, ...rest, variation: "menu" // ensures `menu` variation is not overwritten\n' +
    '         }, children)));\n' +
    '};\n' +
    'const MenuItem = primitiveWithForwardRef(MenuItemPrimitive);\n' +
    "MenuItem.displayName = 'MenuItem';\n" +
    '\n' +
    'export { MENU_ITEM_TEST_ID, MenuItem };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { MessageHeading } from './MessageHeading.mjs';\n" +
    "import { MessageIcon } from './MessageIcon.mjs';\n" +
    "import { MessageDismiss } from './MessageDismiss.mjs';\n" +
    "import { MessageContent } from './MessageContent.mjs';\n" +
    "import { MessageContainer } from './MessageContainer.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const MessagePrimitive = ({ children, heading, dismissLabel, isDismissible, onDismiss, hasIcon = true, colorTheme = 'neutral', variation = 'filled', ...rest }, ref) => {\n" +
    '    return (React.createElement(MessageContainer, { colorTheme: colorTheme, variation: variation, ref: ref, ...rest },\n' +
    '        hasIcon ? React.createElement(MessageIcon, null) : null,\n' +
    '        React.createElement(MessageContent, null,\n' +
    '            heading ? React.createElement(MessageHeading, null, heading) : null,\n' +
    '            children),\n' +
    '        isDismissible ? (React.createElement(MessageDismiss, { onDismiss: onDismiss, dismissLabel: dismissLabel })) : null));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/message)\n' +
    ' */\n' +
    'const Message = primitiveWithForwardRef(MessagePrimitive);\n' +
    "Message.displayName = 'Message';\n" +
    '\n' +
    'export { Message };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { usePaginationItems } from './usePaginationItems.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const PaginationPrimitive = ({ className, currentPage = 1, totalPages, hasMorePages = false, siblingCount, currentPageLabel, pageLabel, previousLabel, nextLabel, onNext, onPrevious, onChange, ...rest }, ref) => {\n' +
    '    const paginationItems = usePaginationItems({\n' +
    '        currentPage,\n' +
    '        totalPages,\n' +
    '        hasMorePages,\n' +
    '        siblingCount,\n' +
    '        currentPageLabel,\n' +
    '        pageLabel,\n' +
    '        previousLabel,\n' +
    '        nextLabel,\n' +
    '        onNext,\n' +
    '        onPrevious,\n' +
    '        onChange,\n' +
    '    });\n' +
    '    return (React.createElement(View, { as: "nav", className: classNames(ComponentClassName.Pagination, className), ref: ref, ...rest },\n' +
    '        React.createElement(Flex, { as: "ol", justifyContent: "center", alignItems: "center", gap: "inherit" }, paginationItems)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/pagination)\n' +
    ' */\n' +
    'const Pagination = primitiveWithForwardRef(PaginationPrimitive);\n' +
    "Pagination.displayName = 'Pagination';\n" +
    '\n' +
    'export { Pagination };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { ShowPasswordButton } from './ShowPasswordButton.mjs';\n" +
    "import { TextField } from '../TextField/TextField.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const PasswordFieldPrimitive = ({ autoComplete = 'current-password', label, className, hideShowPassword = false, passwordIsHiddenLabel, passwordIsShownLabel, showPasswordButtonLabel, showPasswordButtonRef, size, hasError, ...rest }, ref) => {\n" +
    "    const [type, setType] = React.useState('password');\n" +
    '    const showPasswordOnClick = React.useCallback(() => {\n' +
    "        if (type === 'password') {\n" +
    "            setType('text');\n" +
    '        }\n' +
    '        else {\n' +
    "            setType('password');\n" +
    '        }\n' +
    '    }, [setType, type]);\n' +
    '    return (React.createElement(TextField, { autoComplete: autoComplete, outerEndComponent: hideShowPassword ? null : (React.createElement(ShowPasswordButton, { fieldType: type, onClick: showPasswordOnClick, passwordIsHiddenLabel: passwordIsHiddenLabel, passwordIsShownLabel: passwordIsShownLabel, ref: showPasswordButtonRef, size: size, showPasswordButtonLabel: showPasswordButtonLabel, hasError: hasError })), size: size, type: type, label: label, className: classNames(ComponentClassName.PasswordField, className), ref: ref, hasError: hasError, ...rest }));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/passwordfield)\n' +
    ' */\n' +
    'const PasswordField = primitiveWithForwardRef(PasswordFieldPrimitive);\n' +
    "PasswordField.displayName = 'PasswordField';\n" +
    '\n' +
    'export { PasswordField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { DialCodeSelect } from './DialCodeSelect.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { TextField } from '../TextField/TextField.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const PhoneNumberFieldPrimitive = ({ autoComplete = 'tel-national', className, defaultDialCode, dialCodeLabel = ComponentText.PhoneNumberField.countryCodeLabel, dialCodeList, dialCodeName, dialCodeRef, hasError, isDisabled, isReadOnly, onDialCodeChange, onInput, size, variation, ...rest }, ref) => {\n" +
    '    return (React.createElement(TextField, { outerStartComponent: React.createElement(DialCodeSelect, { defaultValue: defaultDialCode, dialCodeList: dialCodeList, className: className, hasError: hasError, isDisabled: isDisabled, isReadOnly: isReadOnly, label: dialCodeLabel, name: dialCodeName, onChange: onDialCodeChange, ref: dialCodeRef, size: size, variation: variation }), autoComplete: autoComplete, className: classNames(ComponentClassName.PhoneNumberField, className), hasError: hasError, isDisabled: isDisabled, isReadOnly: isReadOnly, onInput: onInput, ref: ref, size: size, type: "tel", variation: variation, ...rest }));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/phonenumberfield)\n' +
    ' */\n' +
    'const PhoneNumberField = primitiveWithForwardRef(PhoneNumberFieldPrimitive);\n' +
    "PhoneNumberField.displayName = 'PhoneNumberField';\n" +
    '\n' +
    'export { PhoneNumberField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const PlaceholderPrimitive = ({ className, children, isLoaded, size, ...rest }, ref) => {\n' +
    '    if (isLoaded) {\n' +
    '        return React.createElement(React.Fragment, null, children);\n' +
    '    }\n' +
    '    return (React.createElement(View, { className: classNames(ComponentClassName.Placeholder, classNameModifier(ComponentClassName.Placeholder, size), className), ref: ref, ...rest }));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/placeholder)\n' +
    ' */\n' +
    'const Placeholder = primitiveWithForwardRef(PlaceholderPrimitive);\n' +
    "Placeholder.displayName = 'Placeholder';\n" +
    '\n' +
    'export { Placeholder };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Input } from '../Input/Input.mjs';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    "import { useRadioGroupContext } from '../RadioGroupField/context.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const RadioPrimitive = ({ children, className, id, isDisabled = false, testId, value, labelPosition: radioLabelPosition, ...rest }, ref) => {\n' +
    '    const { currentValue, defaultValue, name, hasError, isGroupDisabled = false, isRequired, isReadOnly, onChange, size, labelPosition: groupLabelPosition, } = useRadioGroupContext();\n' +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    const shouldBeDisabled = isFieldsetDisabled\n' +
    '        ? isFieldsetDisabled\n' +
    '        : isGroupDisabled || isDisabled || (isReadOnly && defaultValue !== value);\n' +
    '    // for controlled component\n' +
    '    const checked = currentValue !== undefined ? value === currentValue : undefined;\n' +
    '    // for uncontrolled component\n' +
    '    const defaultChecked = defaultValue !== undefined ? value === defaultValue : undefined;\n' +
    '    const labelPosition = radioLabelPosition\n' +
    '        ? radioLabelPosition\n' +
    '        : groupLabelPosition;\n' +
    '    return (React.createElement(Flex, { as: "label", className: classNames(ComponentClassName.Radio, classNameModifierByFlag(ComponentClassName.Radio, `disabled`, shouldBeDisabled), labelPosition ? `amplify-label-${labelPosition}` : null, className) },\n' +
    '        children && (React.createElement(Text, { as: "span", className: classNames(ComponentClassName.RadioLabel, classNameModifierByFlag(ComponentClassName.RadioLabel, `disabled`, shouldBeDisabled)) }, children)),\n' +
    '        React.createElement(Input, { checked: checked, className: classNames(ComponentClassName.VisuallyHidden, ComponentClassName.RadioInput), defaultChecked: defaultChecked, hasError: hasError, id: id, isDisabled: shouldBeDisabled, isReadOnly: isReadOnly, isRequired: isRequired, onChange: onChange, ref: ref, type: "radio", name: name, value: value, ...rest }),\n' +
    '        React.createElement(Flex, { "aria-hidden": "true", as: "span", className: classNames(ComponentClassName.RadioButton, classNameModifier(ComponentClassName.RadioButton, size)), testId: testId })));\n' +
    '};\n' +
    'const Radio = primitiveWithForwardRef(RadioPrimitive);\n' +
    "Radio.displayName = 'Radio';\n" +
    '\n' +
    'export { Radio, RadioPrimitive };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames, classNameModifier } from '@aws-amplify/ui';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { Fieldset } from '../Fieldset/Fieldset.mjs';\n" +
    "import '../Fieldset/useFieldset.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { RadioGroupContext } from './context.mjs';\n" +
    "import { getTestId } from '../utils/getTestId.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const RadioGroupFieldPrimitive = ({ children, className, defaultValue, descriptiveText, errorMessage, hasError = false, id, isDisabled, isRequired, isReadOnly, legend, legendHidden = false, labelPosition, onChange, name, size, testId, value, variation, ...rest }, ref) => {\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const radioGroupTestId = getTestId(testId, ComponentClassName.RadioGroup);\n' +
    '    const radioGroupContextValue = React.useMemo(() => ({\n' +
    '        currentValue: value,\n' +
    '        defaultValue,\n' +
    '        hasError,\n' +
    '        isRequired,\n' +
    '        isReadOnly,\n' +
    '        isGroupDisabled: isDisabled,\n' +
    '        onChange,\n' +
    '        size,\n' +
    '        name,\n' +
    '        labelPosition,\n' +
    '    }), [\n' +
    '        defaultValue,\n' +
    '        hasError,\n' +
    '        isDisabled,\n' +
    '        isRequired,\n' +
    '        isReadOnly,\n' +
    '        onChange,\n' +
    '        size,\n' +
    '        name,\n' +
    '        value,\n' +
    '        labelPosition,\n' +
    '    ]);\n' +
    '    return (React.createElement(Fieldset, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.RadioGroupField, className), isDisabled: isDisabled, legend: legend, legendHidden: legendHidden, ref: ref, role: "radiogroup", size: size, testId: testId, variation: variation, ...rest },\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: legendHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(Flex, { "aria-describedby": ariaDescribedBy, className: ComponentClassName.RadioGroup, id: fieldId, testId: radioGroupTestId },\n' +
    '            React.createElement(RadioGroupContext.Provider, { value: radioGroupContextValue }, children)),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/radiogroupfield)\n' +
    ' */\n' +
    'const RadioGroupField = primitiveWithForwardRef(RadioGroupFieldPrimitive);\n' +
    "RadioGroupField.displayName = 'RadioGroupField';\n" +
    '\n' +
    'export { RadioGroupField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNameModifier, ComponentClassName, classNames } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconStar } from '../Icon/icons/IconStar.mjs';\n" +
    "import { isIconFilled, isIconEmpty, isIconMixed } from './utils.mjs';\n" +
    "import { RatingIcon } from './RatingIcon.mjs';\n" +
    "import { RatingMixedIcon } from './RatingMixedIcon.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const RATING_DEFAULT_MAX_VALUE = 5;\n' +
    'const RATING_DEFAULT_VALUE = 0;\n' +
    'const RatingPrimitive = ({ className, emptyColor, emptyIcon, fillColor, icon, maxValue = RATING_DEFAULT_MAX_VALUE, size, value = RATING_DEFAULT_VALUE, ...rest }, ref) => {\n' +
    "    const icons = useIcons('rating');\n" +
    '    const filledIcon = icon ?? icons?.filled ?? React.createElement(IconStar, null);\n' +
    '    const _emptyIcon = emptyIcon ?? icon ?? icons?.empty ?? React.createElement(IconStar, null);\n' +
    '    const items = new Array(Math.ceil(maxValue)).fill(1).map((_, index) => {\n' +
    '        const currentIconIndex = index + 1;\n' +
    '        if (isIconFilled(currentIconIndex, value))\n' +
    "            return (React.createElement(RatingIcon, { key: index.toString(), icon: filledIcon, fill: fillColor, className: classNameModifier(ComponentClassName.RatingIcon, 'filled') }));\n" +
    '        if (isIconEmpty(currentIconIndex, value))\n' +
    "            return (React.createElement(RatingIcon, { key: index.toString(), icon: _emptyIcon, fill: emptyColor, className: classNameModifier(ComponentClassName.RatingIcon, 'empty') }));\n" +
    '        if (isIconMixed(currentIconIndex, value))\n' +
    '            return (React.createElement(RatingMixedIcon, { key: index.toString(), fillIcon: filledIcon, emptyIcon: _emptyIcon, value: value, fillColor: fillColor, emptyColor: emptyColor }));\n' +
    '    });\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Rating, classNameModifier(ComponentClassName.Rating, size), className), ref: ref, ...rest },\n' +
    '        items,\n' +
    '        React.createElement(VisuallyHidden, null,\n' +
    '            value,\n' +
    '            " out of ",\n' +
    '            maxValue,\n' +
    '            " rating")));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/rating)\n' +
    ' */\n' +
    'const Rating = primitiveWithForwardRef(RatingPrimitive);\n' +
    "Rating.displayName = 'Rating';\n" +
    '\n' +
    'export { Rating };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ScrollViewPrimitive = ({ children, className, orientation, ...rest }, ref) => (React.createElement(View, { className: classNames(ComponentClassName.ScrollView, classNameModifier(ComponentClassName.ScrollView, orientation), className), ref: ref, ...rest }, children));\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/scrollview)\n' +
    ' */\n' +
    'const ScrollView = primitiveWithForwardRef(ScrollViewPrimitive);\n' +
    "ScrollView.displayName = 'ScrollView';\n" +
    '\n' +
    'export { ScrollView };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { FieldClearButton } from '../Field/FieldClearButton.mjs';\n" +
    "import '../Field/FieldDescription.mjs';\n" +
    "import '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { FieldGroupIcon } from '../FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconSearch } from '../Icon/icons/IconSearch.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { SearchFieldButton } from './SearchFieldButton.mjs';\n" +
    "import { TextField } from '../TextField/TextField.mjs';\n" +
    "import { useSearchField } from './useSearchField.mjs';\n" +
    "import { strHasLength } from '../shared/utils.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const SearchFieldPrimitive = ({ autoComplete = 'off', className, isDisabled, clearButtonLabel, labelHidden = true, name = 'q', hasSearchButton = true, hasSearchIcon = false, onChange, onClear, onSubmit, searchButtonRef, size, defaultValue, value, ...rest }, ref) => {\n" +
    '    const { composedValue, onClearHandler, onKeyDown, onClick, handleOnChange, composedRefs, } = useSearchField({\n' +
    '        defaultValue,\n' +
    '        value,\n' +
    '        onChange,\n' +
    '        onClear,\n' +
    '        onSubmit,\n' +
    '        externalRef: ref,\n' +
    '    });\n' +
    '    const SearchButton = hasSearchButton ? (React.createElement(SearchFieldButton, { isDisabled: isDisabled, onClick: onClick, ref: searchButtonRef, size: size })) : undefined;\n' +
    '    const SearchIcon = hasSearchIcon ? (React.createElement(FieldGroupIcon, null,\n' +
    '        React.createElement(IconSearch, null))) : undefined;\n' +
    '    return (React.createElement(TextField, { autoComplete: autoComplete, className: classNames(ComponentClassName.SearchField, className), labelHidden: labelHidden, innerStartComponent: SearchIcon, innerEndComponent: React.createElement(FieldClearButton, { ariaLabel: clearButtonLabel, excludeFromTabOrder: true, isVisible: !isDisabled && strHasLength(composedValue), onClick: onClearHandler, size: size, variation: "link" }), isDisabled: isDisabled, name: name, onChange: handleOnChange, onKeyDown: onKeyDown, outerEndComponent: SearchButton, ref: composedRefs, size: size, value: composedValue, ...rest }));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/searchfield)\n' +
    ' */\n' +
    'const SearchField = primitiveWithForwardRef(SearchFieldPrimitive);\n' +
    "SearchField.displayName = 'SearchField';\n" +
    '\n' +
    'export { SearchField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { Select } from '../Select/Select.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const selectFieldChildren = ({ children, options, }) => {\n' +
    '    if (children) {\n' +
    '        if (options?.length) {\n' +
    '            // eslint-disable-next-line no-console\n' +
    "            console.warn('Amplify UI: <SelectField> component  defaults to rendering children over `options`. When using the `options` prop, omit children.');\n" +
    '        }\n' +
    '        return children;\n' +
    '    }\n' +
    '    return options?.map((option, index) => (React.createElement("option", { label: option, value: option, key: `${option}-${index}` }, option)));\n' +
    '};\n' +
    'const SelectFieldPrimitive = (props, ref) => {\n' +
    '    const { children, className, descriptiveText, errorMessage, hasError = false, id, label, labelHidden = false, options, size, testId, inputStyles, ..._rest } = props;\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.SelectField, className), testId: testId, ...styleProps },\n' +
    '        React.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(Select, { "aria-describedby": ariaDescribedBy, hasError: hasError, id: fieldId, ref: ref, size: size, ...rest, ...inputStyles }, selectFieldChildren({ children, options })),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/selectfield)\n' +
    ' */\n' +
    'const SelectField = primitiveWithForwardRef(SelectFieldPrimitive);\n' +
    "SelectField.displayName = 'SelectField';\n" +
    '\n' +
    'export { SelectField };\n'
} [Function: logger]
____9999999____ {
  code: 'var jsxRuntime = {exports: {}}; export {jsxRuntime as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/react/cjs/react-jsx-runtime.production.min.js";'
} [Function: logger]
____9999999____ {
  code: "import { sanitizeNamespaceImport, isFunction, classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import * as RadixSlider from '@radix-ui/react-slider';\n" +
    "import * as React from 'react';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { FieldGroup } from '../FieldGroup/FieldGroup.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n" +
    '// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\n' +
    'const { Range, Root, Thumb, Track } = sanitizeNamespaceImport(RadixSlider);\n' +
    "const SLIDER_LABEL_TEST_ID = 'slider-label';\n" +
    "const SLIDER_ROOT_TEST_ID = 'slider-root';\n" +
    "const SLIDER_TRACK_TEST_ID = 'slider-track';\n" +
    "const SLIDER_RANGE_TEST_ID = 'slider-range';\n" +
    "const SliderFieldPrimitive = ({ ariaValuetext, className, defaultValue = 0, descriptiveText, emptyTrackColor, errorMessage, filledTrackColor, formatValue, hasError = false, id, isDisabled, isValueHidden = false, label, labelHidden = false, onChange, orientation = 'horizontal', outerEndComponent, outerStartComponent, testId, thumbColor, trackSize, value, size, ..._rest }, ref) => {\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const labelId = useStableId();\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const disabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    '    const isControlled = value !== undefined;\n' +
    '    const [currentValue, setCurrentValue] = React.useState(isControlled ? value : defaultValue);\n' +
    '    const values = isControlled ? [value] : undefined;\n' +
    '    const defaultValues = !isControlled ? [defaultValue] : undefined;\n' +
    '    const onValueChange = React.useCallback((value) => {\n' +
    '        setCurrentValue(value[0]);\n' +
    '        if (isFunction(onChange)) {\n' +
    '            // Do not have multiple thumbs support yet\n' +
    '            onChange(value[0]);\n' +
    '        }\n' +
    '    }, [onChange]);\n' +
    '    const renderedValue = React.useMemo(() => {\n' +
    '        const formattedValue = isFunction(formatValue)\n' +
    '            ? formatValue(currentValue)\n' +
    '            : currentValue;\n' +
    `        return typeof formatValue === 'string' ? (React.createElement(View, { as: "span" }, formattedValue)) : (formattedValue);\n` +
    '    }, [currentValue, formatValue]);\n' +
    "    const isVertical = orientation === 'vertical';\n" +
    '    const componentClasses = classNames(ComponentClassName.SliderFieldTrack, classNameModifier(ComponentClassName.SliderFieldTrack, orientation), classNameModifier(ComponentClassName.SliderFieldTrack, size));\n' +
    "    const rootComponentClasses = classNames(ComponentClassName.SliderFieldRoot, classNameModifier(ComponentClassName.SliderFieldRoot, orientation), classNameModifier(ComponentClassName.SliderFieldRoot, size), classNameModifierByFlag(ComponentClassName.SliderFieldRoot, 'disabled', disabled), className);\n" +
    '    return (React.createElement(Flex\n' +
    '    // Custom classnames will be added to Root below\n' +
    '    , { \n' +
    '        // Custom classnames will be added to Root below\n' +
    '        className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.SliderField), testId: testId, ...styleProps },\n' +
    '        React.createElement(Label, { className: ComponentClassName.SliderFieldLabel, id: labelId, testId: SLIDER_LABEL_TEST_ID, visuallyHidden: labelHidden },\n' +
    '            React.createElement(View, { as: "span" }, label),\n' +
    '            !isValueHidden ? renderedValue : null),\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(FieldGroup, { className: ComponentClassName.SliderFieldGroup, id: fieldId, orientation: orientation, outerStartComponent: outerStartComponent, outerEndComponent: outerEndComponent },\n' +
    '            React.createElement(Root, { className: rootComponentClasses, "data-testid": SLIDER_ROOT_TEST_ID, disabled: disabled, defaultValue: defaultValues, onValueChange: onValueChange, orientation: orientation, ref: ref, value: values, ...rest },\n' +
    '                React.createElement(Track, { className: componentClasses, "data-testid": SLIDER_TRACK_TEST_ID, style: {\n' +
    '                        backgroundColor: String(emptyTrackColor),\n' +
    "                        [`${isVertical ? 'width' : 'height'}`]: trackSize,\n" +
    '                    } },\n' +
    `                    React.createElement(Range, { className: classNames(ComponentClassName.SliderFieldRange, classNameModifier(ComponentClassName.SliderFieldRange, orientation), classNameModifierByFlag(ComponentClassName.SliderFieldRange, 'disabled', disabled)), "data-testid": SLIDER_RANGE_TEST_ID, style: { backgroundColor: String(filledTrackColor) } })),\n` +
    `                React.createElement(Thumb, { "aria-describedby": ariaDescribedBy, "aria-labelledby": labelId, "aria-valuetext": ariaValuetext, className: classNames(ComponentClassName.SliderFieldThumb, classNameModifier(ComponentClassName.SliderFieldThumb, size), classNameModifierByFlag(ComponentClassName.SliderFieldThumb, 'disabled', disabled)), style: { backgroundColor: String(thumbColor) } }))),\n` +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/sliderfield)\n' +
    ' */\n' +
    'const SliderField = primitiveWithForwardRef(SliderFieldPrimitive);\n' +
    "SliderField.displayName = 'SliderField';\n" +
    '\n' +
    'export { SLIDER_LABEL_TEST_ID, SLIDER_RANGE_TEST_ID, SLIDER_ROOT_TEST_ID, SLIDER_TRACK_TEST_ID, SliderField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { useStepper } from './useStepper.mjs';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { FieldGroup } from '../FieldGroup/FieldGroup.mjs';\n" +
    "import '../FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import { FieldGroupIconButton } from '../FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { IconAdd } from '../Icon/icons/IconAdd.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconRemove } from '../Icon/icons/IconRemove.mjs';\n" +
    "import { Input } from '../Input/Input.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const DECREASE_ICON = 'decrease-icon';\n" +
    "const INCREASE_ICON = 'increase-icon';\n" +
    'const StepperFieldPrimitive = (props, ref) => {\n' +
    '    const { className, \n' +
    '    // destructure to prevent `defaultValue` from being passed to underlying `Input` via `_rest`\n' +
    '    defaultValue, descriptiveText, errorMessage, hasError = false, id, inputStyles, isDisabled, isReadOnly, isRequired, increaseButtonLabel = ComponentText.StepperField.increaseButtonLabel, decreaseButtonLabel = ComponentText.StepperField.decreaseButtonLabel, label, labelHidden = false, \n' +
    '    // destructure to prevent `onStepChange` from being passed to underlying `Input` via `_rest`\n' +
    '    onStepChange, size, testId, \n' +
    '    // this is only required in useStepper hook but deconstruct here to remove its existence in rest\n' +
    '    value: controlledValue, variation, ..._rest } = props;\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    "    const icons = useIcons('stepperField');\n" +
    '    const { step, value, inputValue, handleDecrease, handleIncrease, handleOnBlur, handleOnChange, handleOnWheel, setInputValue, shouldDisableDecreaseButton, shouldDisableIncreaseButton, } = useStepper({ ...props, defaultValue, onStepChange });\n' +
    '    React.useEffect(() => {\n' +
    '        const isControlled = controlledValue !== undefined;\n' +
    '        if (isControlled) {\n' +
    '            setInputValue(controlledValue);\n' +
    '        }\n' +
    '    }, [controlledValue, setInputValue]);\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.StepperField, className), testId: testId, ...styleProps },\n' +
    '        React.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(FieldGroup, { outerStartComponent: React.createElement(FieldGroupIconButton, { "aria-controls": fieldId, ariaLabel: `${decreaseButtonLabel} ${value - step}`, className: classNames(ComponentClassName.StepperFieldButtonDecrease, classNameModifier(ComponentClassName.StepperFieldButtonDecrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonDecrease, \'disabled\', shouldDisableDecreaseButton)), "data-invalid": hasError, isDisabled: shouldDisableDecreaseButton, onClick: handleDecrease, size: size }, icons?.remove ?? React.createElement(IconRemove, { "data-testid": DECREASE_ICON })), outerEndComponent: React.createElement(FieldGroupIconButton, { "aria-controls": fieldId, ariaLabel: `${increaseButtonLabel} ${value + step}`, className: classNames(ComponentClassName.StepperFieldButtonIncrease, classNameModifier(ComponentClassName.StepperFieldButtonIncrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonIncrease, \'disabled\', shouldDisableIncreaseButton)), "data-invalid": hasError, isDisabled: shouldDisableIncreaseButton, onClick: handleIncrease, size: size }, icons?.add ?? React.createElement(IconAdd, { "data-testid": INCREASE_ICON })) },\n' +
    '            React.createElement(Input, { "aria-describedby": ariaDescribedBy, className: ComponentClassName.StepperFieldInput, hasError: hasError, id: fieldId, isDisabled: isDisabled, isReadOnly: isReadOnly, isRequired: isRequired, onBlur: handleOnBlur, onChange: handleOnChange, onWheel: handleOnWheel, ref: ref, size: size, variation: variation, type: "number", value: inputValue, ...inputStyles, ...rest })),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/stepperfield)\n' +
    ' */\n' +
    'const StepperField = primitiveWithForwardRef(StepperFieldPrimitive);\n' +
    "StepperField.displayName = 'StepperField';\n" +
    '\n' +
    'export { DECREASE_ICON, INCREASE_ICON, StepperField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { Input } from '../Input/Input.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { useSwitch } from './useSwitch.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const SwitchFieldPrimitive = ({ className, defaultChecked, id, isChecked, isDisabled, isLabelHidden, label, labelPosition, name, onChange, size, thumbColor, trackCheckedColor, trackColor, value, hasError, errorMessage, ...rest }, ref) => {\n' +
    '    const { isOn, changeHandler, isFocused, setIsFocused } = useSwitch({\n' +
    '        onChange,\n' +
    '        isChecked,\n' +
    '        defaultChecked,\n' +
    '        isDisabled,\n' +
    '    });\n' +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n' +
    '    const fieldId = useStableId(id);\n' +
    "    const wrapperClasses = classNames(ComponentClassName.SwitchTrack, classNameModifierByFlag(ComponentClassName.SwitchTrack, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'focused', isFocused), classNameModifierByFlag(ComponentClassName.SwitchTrack, 'error', hasError));\n" +
    "    const componentClasses = classNames(ComponentClassName.SwitchThumb, classNameModifierByFlag(ComponentClassName.SwitchThumb, 'checked', isOn), classNameModifierByFlag(ComponentClassName.SwitchThumb, 'disabled', shouldBeDisabled));\n" +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.SwitchField, classNameModifier(ComponentClassName.SwitchField, size), labelPosition ? `amplify-label-${labelPosition}` : null, className), ref: ref, ...rest },\n' +
    '        React.createElement(VisuallyHidden, null,\n' +
    '            React.createElement(Input, { role: "switch", type: "checkbox", id: fieldId, onChange: changeHandler, disabled: isDisabled, name: name, checked: isOn, value: value, onFocus: () => {\n' +
    '                    setIsFocused(true);\n' +
    '                }, onBlur: () => {\n' +
    '                    setIsFocused(false);\n' +
    '                } })),\n' +
    '        React.createElement(Label, { htmlFor: fieldId, className: classNames(ComponentClassName.SwitchWrapper, classNameModifier(ComponentClassName.SwitchWrapper, labelPosition)) },\n' +
    '            isLabelHidden ? (React.createElement(VisuallyHidden, { as: "span", className: ComponentClassName.SwitchLabel }, label)) : (React.createElement(View, { as: "span", className: ComponentClassName.SwitchLabel }, label)),\n' +
    '            React.createElement(View, { as: "span", className: wrapperClasses, backgroundColor: isOn ? trackCheckedColor : trackColor },\n' +
    '                React.createElement(View, { as: "span", className: componentClasses, "data-checked": isOn, "data-disabled": shouldBeDisabled, backgroundColor: thumbColor }))),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/switchfield)\n' +
    ' */\n' +
    'const SwitchField = primitiveWithForwardRef(SwitchFieldPrimitive);\n' +
    "SwitchField.displayName = 'SwitchField';\n" +
    '\n' +
    'export { SwitchField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { TabsItem } from './TabsItem.mjs';\n" +
    "import { TabList } from './TabsList.mjs';\n" +
    "import { TabPanel } from './TabsPanel.mjs';\n" +
    "import { TabsContainer } from './TabsContainer.mjs';\n" +
    '\n' +
    'const TabsPrimitive = ({ items, indicatorPosition, justifyContent, spacing, ...rest }, ref) => {\n' +
    '    return (React.createElement(TabsContainer, { ...rest, ref: ref },\n' +
    '        React.createElement(TabList, { indicatorPosition: indicatorPosition, justifyContent: justifyContent, spacing: spacing }, items?.map(({ value, label, content, ...rest }) => (React.createElement(TabsItem, { ...rest, key: value, value: value }, label)))),\n' +
    '        items?.map(({ value, content, isDisabled }) => (React.createElement(TabPanel, { key: value, value: value, isDisabled: isDisabled }, content)))));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/tabs)\n' +
    ' */\n' +
    'const Tabs = Object.assign(primitiveWithForwardRef(TabsPrimitive), {\n' +
    '    Item: TabsItem,\n' +
    '    List: TabList,\n' +
    '    Panel: TabPanel,\n' +
    '    Container: TabsContainer,\n' +
    '});\n' +
    "Tabs.displayName = 'Tabs';\n" +
    '\n' +
    'export { Tabs };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const TextPrimitive = ({ as = 'p', className, children, isTruncated, variation, ...rest }, ref) => {\n" +
    "    const componentClasses = classNames(ComponentClassName.Text, classNameModifier(ComponentClassName.Text, variation), classNameModifierByFlag(ComponentClassName.Text, 'truncated', isTruncated), className);\n" +
    '    return (React.createElement(View, { as: as, className: componentClasses, ref: ref, ...rest }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/text)\n' +
    ' */\n' +
    'const Text = primitiveWithForwardRef(TextPrimitive);\n' +
    "Text.displayName = 'Text';\n" +
    '\n' +
    'export { Text };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { TextArea } from '../TextArea/TextArea.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const DEFAULT_ROW_COUNT = 3;\n' +
    'const TextAreaFieldPrimitive = (props, ref) => {\n' +
    '    const { className, descriptiveText, errorMessage, hasError = false, id, label, labelHidden = false, rows, size, testId, inputStyles, \n' +
    "    // Destructuring the 'resize' style prop because while it is a style prop\n" +
    '    // it should go on the textarea element and not the wrapper div.\n' +
    '    resize, ..._rest } = props;\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.TextAreaField, className), testId: testId, ...styleProps },\n' +
    '        React.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(TextArea, { "aria-describedby": ariaDescribedBy, hasError: hasError, id: fieldId, ref: ref, rows: rows ?? DEFAULT_ROW_COUNT, size: size, resize: resize, ...rest, ...inputStyles }),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/textareafield)\n' +
    ' */\n' +
    'const TextAreaField = primitiveWithForwardRef(TextAreaFieldPrimitive);\n' +
    "TextAreaField.displayName = 'TextAreaField';\n" +
    '\n' +
    'export { DEFAULT_ROW_COUNT, TextAreaField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import '../Field/FieldClearButton.mjs';\n" +
    "import { FieldDescription } from '../Field/FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\n" +
    "import '../Field/Field.mjs';\n" +
    "import { FieldGroup } from '../FieldGroup/FieldGroup.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { Input } from '../Input/Input.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TextFieldPrimitive = (props, ref) => {\n' +
    '    const { className, descriptiveText, errorMessage, hasError = false, id, innerEndComponent, innerStartComponent, label, labelHidden = false, outerEndComponent, outerStartComponent, size, testId, variation, inputStyles, ..._rest } = props;\n' +
    '    const fieldId = useStableId(id);\n' +
    '    const descriptionId = useStableId();\n' +
    '    const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.TextField, className), testId: testId, ...styleProps },\n' +
    '        React.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),\n' +
    '        React.createElement(FieldDescription, { id: descriptionId, labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        React.createElement(FieldGroup, { outerStartComponent: outerStartComponent, outerEndComponent: outerEndComponent, innerStartComponent: innerStartComponent, innerEndComponent: innerEndComponent, variation: variation },\n' +
    '            React.createElement(Input, { "aria-describedby": ariaDescribedBy, hasError: hasError, id: fieldId, ref: ref, size: size, variation: variation, ...inputStyles, ...rest })),\n' +
    '        React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/textfield)\n' +
    ' */\n' +
    'const TextField = primitiveWithForwardRef(TextFieldPrimitive);\n' +
    "TextField.displayName = 'TextField';\n" +
    '\n' +
    'export { TextField };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { useToggleButton } from './useToggleButton.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ToggleButtonPrimitive = ({ className, children, defaultPressed = false, isDisabled, isPressed: isPressedProp, onChange, onClick, size, value, variation, ...rest }, ref) => {\n' +
    '    const { isPressed, handleClick } = useToggleButton({\n' +
    '        isPressed: isPressedProp,\n' +
    '        defaultPressed,\n' +
    '        onChange,\n' +
    '        onClick,\n' +
    '        value,\n' +
    '    });\n' +
    "    const componentClasses = classNames(ComponentClassName.ToggleButton, classNameModifier(ComponentClassName.ToggleButton, variation), classNameModifierByFlag(ComponentClassName.ToggleButton, 'pressed', isPressed), className);\n" +
    '    return (React.createElement(Button, { "aria-pressed": isPressed, className: componentClasses, isDisabled: isDisabled, onClick: handleClick, ref: ref, size: size, type: "button", variation: variation, ...rest }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/togglebutton)\n' +
    ' */\n' +
    'const ToggleButton = primitiveWithForwardRef(ToggleButtonPrimitive);\n' +
    "ToggleButton.displayName = 'ToggleButton';\n" +
    '\n' +
    'export { ToggleButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const VisuallyHiddenPrimitive = ({ as = 'span', children, className, ...rest }, ref) => (React.createElement(View, { as: as, className: classNames(ComponentClassName.VisuallyHidden, className), ref: ref, ...rest }, children));\n" +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/visuallyhidden)\n' +
    ' */\n' +
    'const VisuallyHidden = primitiveWithForwardRef(VisuallyHiddenPrimitive);\n' +
    "VisuallyHidden.displayName = 'VisuallyHidden';\n" +
    '\n' +
    'export { VisuallyHidden };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName, isString } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { useToggleButtonGroup } from './useToggleButtonGroup.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ToggleButtonGroupPrimitive = ({ children, className, isExclusive, isSelectionRequired, onChange, size, value, variation, ...rest }, ref) => {\n' +
    '    const handleChange = useToggleButtonGroup({\n' +
    '        onChange,\n' +
    '        value,\n' +
    '        isExclusive,\n' +
    '        isSelectionRequired,\n' +
    '    });\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.ToggleButtonGroup, className), ref: ref, role: "group", ...rest }, React.Children.map(children, (child) => {\n' +
    '        if (React.isValidElement(child)) {\n' +
    '            return React.cloneElement(child, {\n' +
    '                isPressed: isExclusive\n' +
    '                    ? value === child.props.value\n' +
    '                    : isString(child.props.value) &&\n' +
    '                        value.includes(child.props.value),\n' +
    '                onChange: handleChange,\n' +
    '                size,\n' +
    '                variation,\n' +
    '            });\n' +
    '        }\n' +
    '        return child;\n' +
    '    })));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/togglebutton#togglebuttongroup)\n' +
    ' */\n' +
    'const ToggleButtonGroup = primitiveWithForwardRef(ToggleButtonGroupPrimitive);\n' +
    "ToggleButtonGroup.displayName = 'ToggleButtonGroup';\n" +
    '\n' +
    'export { ToggleButtonGroup };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { useStyles } from '../shared/styleUtils.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const ViewPrimitive = ({ as = 'div', children, testId, ariaLabel, isDisabled, style, inert, ...rest }, ref) => {\n" +
    '    const { propStyles, nonStyleProps } = useStyles(rest, style);\n' +
    '    return React.createElement(as, {\n' +
    "        'aria-label': ariaLabel,\n" +
    "        'data-testid': testId,\n" +
    '        disabled: isDisabled,\n' +
    '        ref,\n' +
    "        inert: inert ? '' : null,\n" +
    '        style: propStyles,\n' +
    '        ...nonStyleProps,\n' +
    '    }, children);\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/view)\n' +
    ' */\n' +
    'const View = primitiveWithForwardRef(ViewPrimitive);\n' +
    "View.displayName = 'View';\n" +
    '\n' +
    'export { View };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TableBodyPrimitive = ({ children, className, ...rest }, ref) => (React.createElement(View, { as: "tbody", className: classNames(ComponentClassName.TableBody, className), ref: ref, ...rest }, children));\n' +
    'const TableBody = primitiveWithForwardRef(TableBodyPrimitive);\n' +
    "TableBody.displayName = 'TableBody';\n" +
    '\n' +
    'export { TableBody };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TablePrimitive = ({ caption, children, className, highlightOnHover = false, size, variation, ...rest }, ref) => {\n' +
    '    const componentClasses = classNames(ComponentClassName.Table, classNameModifier(ComponentClassName.Table, size), classNameModifier(ComponentClassName.Table, variation), className);\n' +
    '    return (React.createElement(View, { as: "table", className: componentClasses, "data-highlightonhover": highlightOnHover, ref: ref, ...rest },\n' +
    '        caption && (React.createElement(View, { as: "caption", className: ComponentClassName.TableCaption }, caption)),\n' +
    '        children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/table)\n' +
    ' */\n' +
    'const Table = primitiveWithForwardRef(TablePrimitive);\n' +
    "Table.displayName = 'Table';\n" +
    '\n' +
    'export { Table };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const TableCellPrimitive = ({ as: asElementTag = 'td', children, className, ...rest }, ref) => (React.createElement(View, { as: asElementTag, className: classNames(asElementTag === 'td'\n" +
    '        ? ComponentClassName.TableTd\n' +
    '        : ComponentClassName.TableTh, className), ref: ref, ...rest }, children));\n' +
    'const TableCell = primitiveWithForwardRef(TableCellPrimitive);\n' +
    "TableCell.displayName = 'TableCell';\n" +
    '\n' +
    'export { TableCell };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TableHeadPrimitive = ({ children, className, ...rest }, ref) => (React.createElement(View, { as: "thead", className: classNames(ComponentClassName.TableHead, className), ref: ref, ...rest }, children));\n' +
    'const TableHead = primitiveWithForwardRef(TableHeadPrimitive);\n' +
    "TableHead.displayName = 'TableHead';\n" +
    '\n' +
    'export { TableHead };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TableFootPrimitive = ({ children, className, ...rest }, ref) => (React.createElement(View, { as: "tfoot", className: classNames(ComponentClassName.TableFoot, className), ref: ref, ...rest }, children));\n' +
    'const TableFoot = primitiveWithForwardRef(TableFootPrimitive);\n' +
    "TableFoot.displayName = 'TableFoot';\n" +
    '\n' +
    'export { TableFoot };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TableRowPrimitive = ({ children, className, ...rest }, ref) => (React.createElement(View, { as: "tr", className: classNames(ComponentClassName.TableRow, className), ref: ref, ...rest }, children));\n' +
    'const TableRow = primitiveWithForwardRef(TableRowPrimitive);\n' +
    "TableRow.displayName = 'TableRow';\n" +
    '\n' +
    'export { TableRow };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const usePagination = (props) => {\n' +
    '    const { currentPage: initialPage = 1, totalPages, hasMorePages = false, siblingCount = 1, } = props;\n' +
    '    // The current page should not be less than 1\n' +
    '    const sanitizedInitialPage = Math.max(initialPage, 1);\n' +
    '    // The total pages should be always greater than current page\n' +
    '    const sanitizedTotalPages = Math.max(sanitizedInitialPage, totalPages);\n' +
    '    const [currentPage, setCurrentPage] = React.useState(sanitizedInitialPage);\n' +
    '    // Reset current page if initialPage or totalPages changes\n' +
    '    React.useEffect(() => {\n' +
    '        setCurrentPage(sanitizedInitialPage);\n' +
    '    }, [sanitizedInitialPage, sanitizedTotalPages]);\n' +
    '    const onNext = React.useCallback(() => {\n' +
    '        if (currentPage < sanitizedTotalPages) {\n' +
    '            setCurrentPage(currentPage + 1);\n' +
    '        }\n' +
    '    }, [currentPage, sanitizedTotalPages]);\n' +
    '    const onPrevious = React.useCallback(() => {\n' +
    '        if (currentPage > 1) {\n' +
    '            setCurrentPage(currentPage - 1);\n' +
    '        }\n' +
    '    }, [currentPage]);\n' +
    '    const onChange = React.useCallback((newPageIndex) => {\n' +
    "        if (typeof newPageIndex === 'number') {\n" +
    '            setCurrentPage(newPageIndex);\n' +
    '        }\n' +
    '    }, []);\n' +
    '    return {\n' +
    '        currentPage,\n' +
    '        hasMorePages,\n' +
    '        onChange,\n' +
    '        onNext,\n' +
    '        onPrevious,\n' +
    '        // The sibling count should not be less than 1\n' +
    '        siblingCount: Math.max(siblingCount, 1),\n' +
    '        totalPages: sanitizedTotalPages,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { usePagination };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @internal May be removed in a future version\n' +
    ' * Maps from component style props to React `style` props\n' +
    " * Note: Primarily needed to map from component style props that don't match CSS Properties directly\n" +
    ' * such as wrap => flexWrap and direction => flexDirection\n' +
    ' */\n' +
    'const ComponentPropsToStylePropsMap = {\n' +
    "    alignContent: 'alignContent',\n" +
    "    alignItems: 'alignItems',\n" +
    "    alignSelf: 'alignSelf',\n" +
    "    area: 'gridArea',\n" +
    "    aspectRatio: 'aspectRatio',\n" +
    "    autoColumns: 'gridAutoColumns',\n" +
    "    autoFlow: 'gridAutoFlow',\n" +
    "    autoRows: 'gridAutoRows',\n" +
    "    backgroundColor: 'backgroundColor',\n" +
    "    backgroundImage: 'backgroundImage',\n" +
    "    basis: 'flexBasis',\n" +
    "    border: 'border',\n" +
    "    borderRadius: 'borderRadius',\n" +
    "    borderColor: 'borderColor',\n" +
    "    borderWidth: 'borderWidth',\n" +
    "    borderStyle: 'borderStyle',\n" +
    "    bottom: 'bottom',\n" +
    "    boxShadow: 'boxShadow',\n" +
    "    color: 'color',\n" +
    "    column: 'gridColumn',\n" +
    "    columnEnd: 'gridColumnEnd',\n" +
    "    columnGap: 'columnGap',\n" +
    "    columnSpan: 'gridColumn',\n" +
    "    columnStart: 'gridColumnStart',\n" +
    "    direction: 'flexDirection',\n" +
    "    display: 'display',\n" +
    "    flex: 'flex',\n" +
    "    fontFamily: 'fontFamily',\n" +
    "    fontSize: 'fontSize',\n" +
    "    fontStyle: 'fontStyle',\n" +
    "    fontWeight: 'fontWeight',\n" +
    "    gap: 'gap',\n" +
    "    grow: 'flexGrow',\n" +
    "    height: 'height',\n" +
    "    justifyContent: 'justifyContent',\n" +
    "    left: 'left',\n" +
    "    letterSpacing: 'letterSpacing',\n" +
    "    lineHeight: 'lineHeight',\n" +
    "    margin: 'margin',\n" +
    "    marginBlock: 'marginBlock',\n" +
    "    marginBlockEnd: 'marginBlockEnd',\n" +
    "    marginBlockStart: 'marginBlockStart',\n" +
    "    marginBottom: 'marginBlockEnd',\n" +
    "    marginInline: 'marginInline',\n" +
    "    marginInlineEnd: 'marginInlineEnd',\n" +
    "    marginInlineStart: 'marginInlineStart',\n" +
    "    marginLeft: 'marginInlineStart',\n" +
    "    marginRight: 'marginInlineEnd',\n" +
    "    marginTop: 'marginBlockStart',\n" +
    "    maxHeight: 'maxHeight',\n" +
    "    maxWidth: 'maxWidth',\n" +
    "    minHeight: 'minHeight',\n" +
    "    minWidth: 'minWidth',\n" +
    "    objectFit: 'objectFit',\n" +
    "    objectPosition: 'objectPosition',\n" +
    "    opacity: 'opacity',\n" +
    "    order: 'order',\n" +
    "    overflow: 'overflow',\n" +
    "    padding: 'padding',\n" +
    "    paddingBlock: 'paddingBlock',\n" +
    "    paddingBlockEnd: 'paddingBlockEnd',\n" +
    "    paddingBlockStart: 'paddingBlockStart',\n" +
    "    paddingBottom: 'paddingBlockEnd',\n" +
    "    paddingInline: 'paddingInline',\n" +
    "    paddingInlineEnd: 'paddingInlineEnd',\n" +
    "    paddingInlineStart: 'paddingInlineStart',\n" +
    "    paddingLeft: 'paddingInlineStart',\n" +
    "    paddingRight: 'paddingInlineEnd',\n" +
    "    paddingTop: 'paddingBlockStart',\n" +
    "    position: 'position',\n" +
    "    resize: 'resize',\n" +
    "    right: 'right',\n" +
    "    row: 'gridRow',\n" +
    "    rowEnd: 'gridRowEnd',\n" +
    "    rowGap: 'rowGap',\n" +
    "    rowSpan: 'gridRow',\n" +
    "    rowStart: 'gridRowStart',\n" +
    "    shrink: 'flexShrink',\n" +
    "    templateAreas: 'gridTemplateAreas',\n" +
    "    templateColumns: 'gridTemplateColumns',\n" +
    "    templateRows: 'gridTemplateRows',\n" +
    "    textAlign: 'textAlign',\n" +
    "    textDecoration: 'textDecoration',\n" +
    "    textTransform: 'textTransform',\n" +
    "    top: 'top',\n" +
    "    transform: 'transform',\n" +
    "    transformOrigin: 'transformOrigin',\n" +
    "    width: 'width',\n" +
    "    whiteSpace: 'whiteSpace',\n" +
    "    wrap: 'flexWrap',\n" +
    '};\n' +
    '/**\n' +
    ' * @internal May be removed in a future version\n' +
    ' */\n' +
    'const ComponentPropsToStylePropsMapKeys = Object.keys(ComponentPropsToStylePropsMap);\n' +
    '\n' +
    'export { ComponentPropsToStylePropsMap, ComponentPropsToStylePropsMapKeys };\n'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\n" +
    "import '../../../types/errors.mjs';\n" +
    "import '../../../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var AuthConfigurationErrorCode;\n' +
    '(function (AuthConfigurationErrorCode) {\n' +
    '    AuthConfigurationErrorCode["AuthTokenConfigException"] = "AuthTokenConfigException";\n' +
    '    AuthConfigurationErrorCode["AuthUserPoolAndIdentityPoolException"] = "AuthUserPoolAndIdentityPoolException";\n' +
    '    AuthConfigurationErrorCode["AuthUserPoolException"] = "AuthUserPoolException";\n' +
    '    AuthConfigurationErrorCode["InvalidIdentityPoolIdException"] = "InvalidIdentityPoolIdException";\n' +
    '    AuthConfigurationErrorCode["OAuthNotConfigureException"] = "OAuthNotConfigureException";\n' +
    '})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\n' +
    'const authConfigurationErrorMap = {\n' +
    '    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n' +
    "        message: 'Auth Token Provider not configured.',\n" +
    "        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n" +
    '    },\n' +
    '    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n' +
    "        message: 'Auth UserPool or IdentityPool not configured.',\n" +
    "        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n" +
    '    },\n' +
    '    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n' +
    "        message: 'Auth UserPool not configured.',\n" +
    "        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n" +
    '    },\n' +
    '    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n' +
    "        message: 'Invalid identity pool id provided.',\n" +
    "        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n" +
    '    },\n' +
    '    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n' +
    "        message: 'oauth param not configured.',\n" +
    "        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(authConfigurationErrorMap);\n' +
    '\n' +
    'export { AuthConfigurationErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { KeyValueStorage } from './KeyValueStorage.mjs';\n" +
    "import { getLocalStorageWithFallback } from './utils.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'class DefaultStorage extends KeyValueStorage {\n' +
    '    constructor() {\n' +
    '        super(getLocalStorageWithFallback());\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { DefaultStorage };\n' +
    '//# sourceMappingURL=DefaultStorage.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'class InMemoryStorage {\n' +
    '    constructor() {\n' +
    '        this.storage = new Map();\n' +
    '    }\n' +
    '    get length() {\n' +
    '        return this.storage.size;\n' +
    '    }\n' +
    '    key(index) {\n' +
    '        if (index > this.length - 1) {\n' +
    '            return null;\n' +
    '        }\n' +
    '        return Array.from(this.storage.keys())[index];\n' +
    '    }\n' +
    '    setItem(key, value) {\n' +
    '        this.storage.set(key, value);\n' +
    '    }\n' +
    '    getItem(key) {\n' +
    '        return this.storage.get(key) ?? null;\n' +
    '    }\n' +
    '    removeItem(key) {\n' +
    '        this.storage.delete(key);\n' +
    '    }\n' +
    '    clear() {\n' +
    '        this.storage.clear();\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { InMemoryStorage };\n' +
    '//# sourceMappingURL=InMemoryStorage.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\n" +
    "import '../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'class KeyValueStorage {\n' +
    '    constructor(storage) {\n' +
    '        this.storage = storage;\n' +
    '    }\n' +
    '    /**\n' +
    '     * This is used to set a specific item in storage\n' +
    '     * @param {string} key - the key for the item\n' +
    '     * @param {object} value - the value\n' +
    '     * @returns {string} value that was set\n' +
    '     */\n' +
    '    async setItem(key, value) {\n' +
    '        if (!this.storage)\n' +
    '            throw new PlatformNotSupportedError();\n' +
    '        this.storage.setItem(key, value);\n' +
    '    }\n' +
    '    /**\n' +
    '     * This is used to get a specific key from storage\n' +
    '     * @param {string} key - the key for the item\n' +
    '     * This is used to clear the storage\n' +
    '     * @returns {string} the data item\n' +
    '     */\n' +
    '    async getItem(key) {\n' +
    '        if (!this.storage)\n' +
    '            throw new PlatformNotSupportedError();\n' +
    '        return this.storage.getItem(key);\n' +
    '    }\n' +
    '    /**\n' +
    '     * This is used to remove an item from storage\n' +
    '     * @param {string} key - the key being set\n' +
    '     * @returns {string} value - value that was deleted\n' +
    '     */\n' +
    '    async removeItem(key) {\n' +
    '        if (!this.storage)\n' +
    '            throw new PlatformNotSupportedError();\n' +
    '        this.storage.removeItem(key);\n' +
    '    }\n' +
    '    /**\n' +
    '     * This is used to clear the storage\n' +
    '     * @returns {string} nothing\n' +
    '     */\n' +
    '    async clear() {\n' +
    '        if (!this.storage)\n' +
    '            throw new PlatformNotSupportedError();\n' +
    '        this.storage.clear();\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { KeyValueStorage };\n' +
    '//# sourceMappingURL=KeyValueStorage.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { KeyValueStorage } from './KeyValueStorage.mjs';\n" +
    "import { getSessionStorageWithFallback } from './utils.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'class SessionStorage extends KeyValueStorage {\n' +
    '    constructor() {\n' +
    '        super(getSessionStorageWithFallback());\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { SessionStorage };\n' +
    '//# sourceMappingURL=SessionStorage.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const deepFreeze = (object) => {\n' +
    '    const propNames = Reflect.ownKeys(object);\n' +
    '    for (const name of propNames) {\n' +
    '        const value = object[name];\n' +
    "        if ((value && typeof value === 'object') || typeof value === 'function') {\n" +
    '            deepFreeze(value);\n' +
    '        }\n' +
    '    }\n' +
    '    return Object.freeze(object);\n' +
    '};\n' +
    '\n' +
    'export { deepFreeze };\n' +
    '//# sourceMappingURL=deepFreeze.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'export * from "./jsSha256";\n//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const parseMetadata = (response) => {\n' +
    '    const { headers, statusCode } = response;\n' +
    '    return {\n' +
    '        ...(isMetadataBearer(response) ? response.$metadata : {}),\n' +
    '        httpStatusCode: statusCode,\n' +
    "        requestId: headers['x-amzn-requestid'] ??\n" +
    "            headers['x-amzn-request-id'] ??\n" +
    "            headers['x-amz-request-id'],\n" +
    "        extendedRequestId: headers['x-amz-id-2'],\n" +
    "        cfId: headers['x-amz-cf-id'],\n" +
    '    };\n' +
    '};\n' +
    "const isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n" +
    '\n' +
    'export { parseMetadata };\n' +
    '//# sourceMappingURL=responseInfo.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'const SHORT_TO_HEX = {};\n' +
    'const HEX_TO_SHORT = {};\n' +
    'for (let i = 0; i < 256; i++) {\n' +
    '    let encodedByte = i.toString(16).toLowerCase();\n' +
    '    if (encodedByte.length === 1) {\n' +
    '        encodedByte = `0${encodedByte}`;\n' +
    '    }\n' +
    '    SHORT_TO_HEX[i] = encodedByte;\n' +
    '    HEX_TO_SHORT[encodedByte] = i;\n' +
    '}\n' +
    'export function fromHex(encoded) {\n' +
    '    if (encoded.length % 2 !== 0) {\n' +
    '        throw new Error("Hex encoded strings must have an even number length");\n' +
    '    }\n' +
    '    const out = new Uint8Array(encoded.length / 2);\n' +
    '    for (let i = 0; i < encoded.length; i += 2) {\n' +
    '        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n' +
    '        if (encodedByte in HEX_TO_SHORT) {\n' +
    '            out[i / 2] = HEX_TO_SHORT[encodedByte];\n' +
    '        }\n' +
    '        else {\n' +
    '            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n' +
    '        }\n' +
    '    }\n' +
    '    return out;\n' +
    '}\n' +
    'export function toHex(bytes) {\n' +
    '    let out = "";\n' +
    '    for (let i = 0; i < bytes.byteLength; i++) {\n' +
    '        out += SHORT_TO_HEX[bytes[i]];\n' +
    '    }\n' +
    '    return out;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from './responseInfo.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n' +
    ' */\n' +
    '/**\n' +
    ' * Error parser for AWS JSON protocol.\n' +
    ' */\n' +
    'const parseJsonError = async (response) => {\n' +
    '    if (!response || response.statusCode < 300) {\n' +
    '        return;\n' +
    '    }\n' +
    '    const body = await parseJsonBody(response);\n' +
    '    const sanitizeErrorCode = (rawValue) => {\n' +
    '        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n' +
    "        if (cleanValue.includes('#')) {\n" +
    "            return cleanValue.split('#')[1];\n" +
    '        }\n' +
    '        return cleanValue;\n' +
    '    };\n' +
    "    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n" +
    '        body.code ??\n' +
    '        body.__type ??\n' +
    "        'UnknownError');\n" +
    "    const message = body.message ?? body.Message ?? 'Unknown error';\n" +
    '    const error = new Error(message);\n' +
    '    return Object.assign(error, {\n' +
    '        name: code,\n' +
    '        $metadata: parseMetadata(response),\n' +
    '    });\n' +
    '};\n' +
    '/**\n' +
    ' * Parse JSON response body to JavaScript object.\n' +
    ' */\n' +
    'const parseJsonBody = async (response) => {\n' +
    '    if (!response.body) {\n' +
    "        throw new Error('Missing response payload');\n" +
    '    }\n' +
    '    const output = await response.body.json();\n' +
    '    return Object.assign(output, {\n' +
    '        $metadata: parseMetadata(response),\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { parseJsonBody, parseJsonError };\n' +
    '//# sourceMappingURL=json.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\n" +
    "import { unauthenticatedHandler } from '../../clients/handlers/unauthenticated.mjs';\n" +
    "import { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\n" +
    "import { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n" +
    "import { composeTransferHandler } from '../../clients/internal/composeTransferHandler.mjs';\n" +
    "import { parseJsonError } from '../../clients/serde/json.mjs';\n" +
    "import { getAmplifyUserAgent } from '../../Platform/index.mjs';\n" +
    "import { observeFrameworkChanges } from '../../Platform/detectFramework.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * The service name used to sign requests if the API requires authentication.\n' +
    ' */\n' +
    "const SERVICE_NAME = 'cognito-identity';\n" +
    '/**\n' +
    ' * The endpoint resolver function that returns the endpoint URL for a given region.\n' +
    ' */\n' +
    'const endpointResolver = ({ region }) => ({\n' +
    '    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n' +
    '});\n' +
    '/**\n' +
    ' * A Cognito Identity-specific middleware that disables caching for all requests.\n' +
    ' */\n' +
    'const disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n' +
    "    request.headers['cache-control'] = 'no-store';\n" +
    '    return next(request);\n' +
    '};\n' +
    '/**\n' +
    ' * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n' +
    ' * disables caching.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const defaultConfig = {\n' +
    '    service: SERVICE_NAME,\n' +
    '    endpointResolver,\n' +
    '    retryDecider: getRetryDecider(parseJsonError),\n' +
    '    computeDelay: jitteredBackoff,\n' +
    '    userAgentValue: getAmplifyUserAgent(),\n' +
    "    cache: 'no-store',\n" +
    '};\n' +
    'observeFrameworkChanges(() => {\n' +
    '    defaultConfig.userAgentValue = getAmplifyUserAgent();\n' +
    '});\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSharedHeaders = (operation) => ({\n' +
    "    'content-type': 'application/x-amz-json-1.1',\n" +
    "    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n" +
    '});\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const buildHttpRpcRequest = ({ url }, headers, body) => ({\n' +
    '    headers,\n' +
    '    url,\n' +
    '    body,\n' +
    "    method: 'POST',\n" +
    '});\n' +
    '\n' +
    'export { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders };\n' +
    '//# sourceMappingURL=base.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n' +
    '    return async (config, input) => {\n' +
    '        const resolvedConfig = {\n' +
    '            ...defaultConfig,\n' +
    '            ...config,\n' +
    '        };\n' +
    '        // We may want to allow different endpoints from given config(other than region) and input.\n' +
    '        // Currently S3 supports additional `useAccelerateEndpoint` option to use accelerate endpoint.\n' +
    '        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n' +
    '        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n' +
    '        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n' +
    '        // They will be populated automatically by browser, or node-fetch polyfill.\n' +
    '        const request = await serializer(input, endpoint);\n' +
    '        const response = await transferHandler(request, {\n' +
    '            ...resolvedConfig,\n' +
    '        });\n' +
    '        return deserializer(response);\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { composeServiceApi };\n' +
    '//# sourceMappingURL=composeServiceApi.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('I18n');\n" +
    '/**\n' +
    ' * Language translation utility.\n' +
    ' */\n' +
    'let I18n$1 = class I18n {\n' +
    '    constructor() {\n' +
    '        /**\n' +
    '         * @private\n' +
    '         */\n' +
    '        this._options = null;\n' +
    '        /**\n' +
    '         * @private\n' +
    '         */\n' +
    '        this._lang = null;\n' +
    '        /**\n' +
    '         * @private\n' +
    '         */\n' +
    '        this._dict = {};\n' +
    '    }\n' +
    '    /**\n' +
    '     * Sets the default language from the configuration when required.\n' +
    '     */\n' +
    '    setDefaultLanguage() {\n' +
    '        // Default to window language if not set in instance\n' +
    '        if (!this._lang &&\n' +
    "            typeof window !== 'undefined' &&\n" +
    '            window &&\n' +
    '            window.navigator) {\n' +
    '            this._lang = window.navigator.language;\n' +
    '        }\n' +
    '        logger.debug(this._lang);\n' +
    '    }\n' +
    '    /**\n' +
    '     * @method\n' +
    '     * Explicitly setting language\n' +
    '     * @param {String} lang\n' +
    '     */\n' +
    '    setLanguage(lang) {\n' +
    '        this._lang = lang;\n' +
    '    }\n' +
    '    /**\n' +
    '     * @method\n' +
    '     * Get value\n' +
    '     * @param {String} key\n' +
    '     * @param {String} defVal - Default value\n' +
    '     */\n' +
    '    get(key, defVal = undefined) {\n' +
    '        this.setDefaultLanguage();\n' +
    '        if (!this._lang) {\n' +
    "            return typeof defVal !== 'undefined' ? defVal : key;\n" +
    '        }\n' +
    '        const lang = this._lang;\n' +
    '        let val = this.getByLanguage(key, lang);\n' +
    '        if (val) {\n' +
    '            return val;\n' +
    '        }\n' +
    "        if (lang.indexOf('-') > 0) {\n" +
    "            val = this.getByLanguage(key, lang.split('-')[0]);\n" +
    '        }\n' +
    '        if (val) {\n' +
    '            return val;\n' +
    '        }\n' +
    "        return typeof defVal !== 'undefined' ? defVal : key;\n" +
    '    }\n' +
    '    /**\n' +
    '     * @method\n' +
    '     * Get value according to specified language\n' +
    '     * @param {String} key\n' +
    '     * @param {String} language - Specified langurage to be used\n' +
    '     * @param {String} defVal - Default value\n' +
    '     */\n' +
    '    getByLanguage(key, language, defVal = null) {\n' +
    '        if (!language) {\n' +
    '            return defVal;\n' +
    '        }\n' +
    '        const langDict = this._dict[language];\n' +
    '        if (!langDict) {\n' +
    '            return defVal;\n' +
    '        }\n' +
    '        return langDict[key];\n' +
    '    }\n' +
    '    /**\n' +
    '     * @method\n' +
    '     * Add vocabularies for one language\n' +
    '     * @param {String} language - Language of the dictionary\n' +
    '     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n' +
    '     */\n' +
    '    putVocabulariesForLanguage(language, vocabularies) {\n' +
    '        let langDict = this._dict[language];\n' +
    '        if (!langDict) {\n' +
    '            langDict = this._dict[language] = {};\n' +
    '        }\n' +
    '        this._dict[language] = { ...langDict, ...vocabularies };\n' +
    '    }\n' +
    '    /**\n' +
    '     * @method\n' +
    '     * Add vocabularies for one language\n' +
    '     * @param {Object} vocabularies - Object that has language as key,\n' +
    '     *                                vocabularies of each language as value\n' +
    '     */\n' +
    '    putVocabularies(vocabularies) {\n' +
    '        Object.keys(vocabularies).forEach(key => {\n' +
    '            this.putVocabulariesForLanguage(key, vocabularies[key]);\n' +
    '        });\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { I18n$1 as I18n };\n' +
    '//# sourceMappingURL=I18n.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\n" +
    "import '../types/errors.mjs';\n" +
    "import '../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var I18nErrorCode;\n' +
    '(function (I18nErrorCode) {\n' +
    '    I18nErrorCode["NotConfigured"] = "NotConfigured";\n' +
    '})(I18nErrorCode || (I18nErrorCode = {}));\n' +
    'const i18nErrorMap = {\n' +
    '    [I18nErrorCode.NotConfigured]: {\n' +
    "        message: 'i18n is not configured.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(i18nErrorMap);\n' +
    '\n' +
    'export { I18nErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var LogType;\n' +
    '(function (LogType) {\n' +
    '    LogType["DEBUG"] = "DEBUG";\n' +
    '    LogType["ERROR"] = "ERROR";\n' +
    '    LogType["INFO"] = "INFO";\n' +
    '    LogType["WARN"] = "WARN";\n' +
    '    LogType["VERBOSE"] = "VERBOSE";\n' +
    '    LogType["NONE"] = "NONE";\n' +
    '})(LogType || (LogType = {}));\n' +
    '\n' +
    'export { LogType };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    "import { KeyValueStorage } from '../storage/KeyValueStorage.mjs';\n" +
    "import { getLocalStorageWithFallback } from '../storage/utils.mjs';\n" +
    "import { defaultConfig } from './constants.mjs';\n" +
    "import { StorageCacheCommon } from './StorageCacheCommon.mjs';\n" +
    "import { getCurrentSizeKey, getCurrentTime } from './utils/cacheHelpers.mjs';\n" +
    "import './utils/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('StorageCache');\n" +
    '/**\n' +
    ' * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n' +
    ' */\n' +
    'class StorageCache extends StorageCacheCommon {\n' +
    '    /**\n' +
    '     * initialize the cache\n' +
    '     * @param config - the configuration of the cache\n' +
    '     */\n' +
    '    constructor(config) {\n' +
    '        const storage = getLocalStorageWithFallback();\n' +
    '        super({ config, keyValueStorage: new KeyValueStorage(storage) });\n' +
    '        this.storage = storage;\n' +
    '        this.getItem = this.getItem.bind(this);\n' +
    '        this.setItem = this.setItem.bind(this);\n' +
    '        this.removeItem = this.removeItem.bind(this);\n' +
    '    }\n' +
    '    async getAllCacheKeys(options) {\n' +
    '        const { omitSizeKey } = options ?? {};\n' +
    '        const keys = [];\n' +
    '        for (let i = 0; i < this.storage.length; i++) {\n' +
    '            const key = this.storage.key(i);\n' +
    '            if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n' +
    '                continue;\n' +
    '            }\n' +
    '            if (key?.startsWith(this.config.keyPrefix)) {\n' +
    '                keys.push(key.substring(this.config.keyPrefix.length));\n' +
    '            }\n' +
    '        }\n' +
    '        return keys;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Return a new instance of cache with customized configuration.\n' +
    '     * @param {Object} config - the customized configuration\n' +
    '     * @return {Object} - the new instance of Cache\n' +
    '     */\n' +
    '    createInstance(config) {\n' +
    '        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n' +
    "            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n" +
    '            config.keyPrefix = getCurrentTime.toString();\n' +
    '        }\n' +
    '        return new StorageCache(config);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { StorageCache };\n' +
    '//# sourceMappingURL=StorageCache.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/*! js-cookie v3.0.5 | MIT */\n' +
    '/* eslint-disable no-var */\n' +
    'function assign (target) {\n' +
    '  for (var i = 1; i < arguments.length; i++) {\n' +
    '    var source = arguments[i];\n' +
    '    for (var key in source) {\n' +
    '      target[key] = source[key];\n' +
    '    }\n' +
    '  }\n' +
    '  return target\n' +
    '}\n' +
    '/* eslint-enable no-var */\n' +
    '\n' +
    '/* eslint-disable no-var */\n' +
    'var defaultConverter = {\n' +
    '  read: function (value) {\n' +
    `    if (value[0] === '"') {\n` +
    '      value = value.slice(1, -1);\n' +
    '    }\n' +
    '    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n' +
    '  },\n' +
    '  write: function (value) {\n' +
    '    return encodeURIComponent(value).replace(\n' +
    '      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n' +
    '      decodeURIComponent\n' +
    '    )\n' +
    '  }\n' +
    '};\n' +
    '/* eslint-enable no-var */\n' +
    '\n' +
    '/* eslint-disable no-var */\n' +
    '\n' +
    'function init (converter, defaultAttributes) {\n' +
    '  function set (name, value, attributes) {\n' +
    "    if (typeof document === 'undefined') {\n" +
    '      return\n' +
    '    }\n' +
    '\n' +
    '    attributes = assign({}, defaultAttributes, attributes);\n' +
    '\n' +
    "    if (typeof attributes.expires === 'number') {\n" +
    '      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n' +
    '    }\n' +
    '    if (attributes.expires) {\n' +
    '      attributes.expires = attributes.expires.toUTCString();\n' +
    '    }\n' +
    '\n' +
    '    name = encodeURIComponent(name)\n' +
    '      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n' +
    '      .replace(/[()]/g, escape);\n' +
    '\n' +
    "    var stringifiedAttributes = '';\n" +
    '    for (var attributeName in attributes) {\n' +
    '      if (!attributes[attributeName]) {\n' +
    '        continue\n' +
    '      }\n' +
    '\n' +
    "      stringifiedAttributes += '; ' + attributeName;\n" +
    '\n' +
    '      if (attributes[attributeName] === true) {\n' +
    '        continue\n' +
    '      }\n' +
    '\n' +
    '      // Considers RFC 6265 section 5.2:\n' +
    '      // ...\n' +
    '      // 3.  If the remaining unparsed-attributes contains a %x3B (";")\n' +
    '      //     character:\n' +
    '      // Consume the characters of the unparsed-attributes up to,\n' +
    '      // not including, the first %x3B (";") character.\n' +
    '      // ...\n' +
    "      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n" +
    '    }\n' +
    '\n' +
    '    return (document.cookie =\n' +
    "      name + '=' + converter.write(value, name) + stringifiedAttributes)\n" +
    '  }\n' +
    '\n' +
    '  function get (name) {\n' +
    "    if (typeof document === 'undefined' || (arguments.length && !name)) {\n" +
    '      return\n' +
    '    }\n' +
    '\n' +
    '    // To prevent the for loop in the first place assign an empty array\n' +
    '    // in case there are no cookies at all.\n' +
    "    var cookies = document.cookie ? document.cookie.split('; ') : [];\n" +
    '    var jar = {};\n' +
    '    for (var i = 0; i < cookies.length; i++) {\n' +
    "      var parts = cookies[i].split('=');\n" +
    "      var value = parts.slice(1).join('=');\n" +
    '\n' +
    '      try {\n' +
    '        var found = decodeURIComponent(parts[0]);\n' +
    '        jar[found] = converter.read(value, found);\n' +
    '\n' +
    '        if (name === found) {\n' +
    '          break\n' +
    '        }\n' +
    '      } catch (e) {}\n' +
    '    }\n' +
    '\n' +
    '    return name ? jar[name] : jar\n' +
    '  }\n' +
    '\n' +
    '  return Object.create(\n' +
    '    {\n' +
    '      set,\n' +
    '      get,\n' +
    '      remove: function (name, attributes) {\n' +
    '        set(\n' +
    '          name,\n' +
    "          '',\n" +
    '          assign({}, attributes, {\n' +
    '            expires: -1\n' +
    '          })\n' +
    '        );\n' +
    '      },\n' +
    '      withAttributes: function (attributes) {\n' +
    '        return init(this.converter, assign({}, this.attributes, attributes))\n' +
    '      },\n' +
    '      withConverter: function (converter) {\n' +
    '        return init(assign({}, this.converter, converter), this.attributes)\n' +
    '      }\n' +
    '    },\n' +
    '    {\n' +
    '      attributes: { value: Object.freeze(defaultAttributes) },\n' +
    '      converter: { value: Object.freeze(converter) }\n' +
    '    }\n' +
    '  )\n' +
    '}\n' +
    '\n' +
    "var api = init(defaultConverter, { path: '/' });\n" +
    '/* eslint-enable no-var */\n' +
    '\n' +
    'export { api as default };\n'
} [Function: logger]
____9999999____ {
  code: "export { default as v1 } from './v1.js';\n" +
    "export { default as v3 } from './v3.js';\n" +
    "export { default as v4 } from './v4.js';\n" +
    "export { default as v5 } from './v5.js';\n" +
    "export { default as NIL } from './nil.js';\n" +
    "export { default as version } from './version.js';\n" +
    "export { default as validate } from './validate.js';\n" +
    "export { default as stringify } from './stringify.js';\n" +
    "export { default as parse } from './parse.js';"
} [Function: logger]
____9999999____ {
  code: "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\n" +
    "import { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\n" +
    "import { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\n" +
    "import { parseJsonError } from '../../clients/serde/json.mjs';\n" +
    "import { getAmplifyUserAgent } from '../../Platform/index.mjs';\n" +
    "import { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * The service name used to sign requests if the API requires authentication.\n' +
    ' */\n' +
    "const SERVICE_NAME = 'mobiletargeting';\n" +
    '/**\n' +
    ' * The endpoint resolver function that returns the endpoint URL for a given region.\n' +
    ' */\n' +
    'const endpointResolver = ({ region }) => ({\n' +
    '    url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`),\n' +
    '});\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const defaultConfig = {\n' +
    '    service: SERVICE_NAME,\n' +
    '    endpointResolver,\n' +
    '    retryDecider: getRetryDecider(parseJsonError),\n' +
    '    computeDelay: jitteredBackoff,\n' +
    '    userAgentValue: getAmplifyUserAgent(),\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSharedHeaders = () => ({\n' +
    "    'content-type': 'application/json',\n" +
    '});\n' +
    '\n' +
    'export { defaultConfig, getSharedHeaders };\n' +
    '//# sourceMappingURL=base.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\n" +
    "import '../../types/errors.mjs';\n" +
    "import '../../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var PinpointValidationErrorCode;\n' +
    '(function (PinpointValidationErrorCode) {\n' +
    '    PinpointValidationErrorCode["NoAppId"] = "NoAppId";\n' +
    '})(PinpointValidationErrorCode || (PinpointValidationErrorCode = {}));\n' +
    'const pinpointValidationErrorMap = {\n' +
    '    [PinpointValidationErrorCode.NoAppId]: {\n' +
    "        message: 'Missing application id.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(pinpointValidationErrorMap);\n' +
    '\n' +
    'export { PinpointValidationErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { amplifyUuid } from '../../../utils/amplifyUuid/index.mjs';\n" +
    "import '../../../Cache/index.mjs';\n" +
    "import { resolveEndpointId } from '../utils/resolveEndpointId.mjs';\n" +
    "import '../../../utils/sessionListener/index.mjs';\n" +
    "import { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT } from '../utils/constants.mjs';\n" +
    "import { getEventBuffer } from '../utils/getEventBuffer.mjs';\n" +
    "import { SESSION_STOP_EVENT, SESSION_START_EVENT } from '../../../utils/sessionListener/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'let session;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const record = async ({ appId, category, channelType, credentials, event, identityId, region, userAgentValue, bufferSize, flushInterval, flushSize, resendLimit, }) => {\n' +
    '    let eventSession = session;\n' +
    '    const currentTime = new Date();\n' +
    '    const timestampISOString = currentTime.toISOString();\n' +
    '    const eventId = amplifyUuid();\n' +
    '    // Prepare event buffer if required\n' +
    '    const buffer = getEventBuffer({\n' +
    '        appId,\n' +
    '        region,\n' +
    '        credentials,\n' +
    '        bufferSize: bufferSize ?? BUFFER_SIZE,\n' +
    '        flushInterval: flushInterval ?? FLUSH_INTERVAL,\n' +
    '        flushSize: flushSize ?? FLUSH_SIZE,\n' +
    '        resendLimit: resendLimit ?? RESEND_LIMIT,\n' +
    '        identityId,\n' +
    '        userAgentValue,\n' +
    '    });\n' +
    '    const endpointId = await resolveEndpointId({\n' +
    '        appId,\n' +
    '        category,\n' +
    '        channelType,\n' +
    '        credentials,\n' +
    '        identityId,\n' +
    '        region,\n' +
    '        userAgentValue,\n' +
    '    });\n' +
    '    // Generate session if required\n' +
    '    if (!eventSession || event.name === SESSION_START_EVENT) {\n' +
    '        const sessionId = amplifyUuid();\n' +
    '        session = {\n' +
    '            Id: sessionId,\n' +
    '            StartTimestamp: timestampISOString,\n' +
    '        };\n' +
    '        eventSession = session;\n' +
    '    }\n' +
    '    // Terminate session when required\n' +
    '    if (session && event.name === SESSION_STOP_EVENT) {\n' +
    '        eventSession = {\n' +
    '            ...session,\n' +
    '            StopTimestamp: timestampISOString,\n' +
    '            Duration: currentTime.getTime() - new Date(session.StartTimestamp).getTime(),\n' +
    '        };\n' +
    '        session = undefined;\n' +
    '    }\n' +
    '    // Push event to buffer\n' +
    '    buffer.push({\n' +
    '        eventId,\n' +
    '        endpointId,\n' +
    '        event,\n' +
    '        session: eventSession,\n' +
    '        timestamp: timestampISOString,\n' +
    '        resendLimit: resendLimit ?? RESEND_LIMIT,\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { record };\n' +
    '//# sourceMappingURL=record.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var UpdateEndpointException;\n' +
    '(function (UpdateEndpointException) {\n' +
    '    UpdateEndpointException["BadRequestException"] = "BadRequestException";\n' +
    '    UpdateEndpointException["ForbiddenException"] = "ForbiddenException";\n' +
    '    UpdateEndpointException["InternalServerErrorException"] = "InternalServerErrorException";\n' +
    '    UpdateEndpointException["MethodNotAllowedException"] = "MethodNotAllowedException";\n' +
    '    UpdateEndpointException["NotFoundException"] = "NotFoundException";\n' +
    '    UpdateEndpointException["PayloadTooLargeException"] = "PayloadTooLargeException";\n' +
    '    UpdateEndpointException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '})(UpdateEndpointException || (UpdateEndpointException = {}));\n' +
    '\n' +
    'export { UpdateEndpointException };\n' +
    '//# sourceMappingURL=errors.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../../../Logger/ConsoleLogger.mjs';\n" +
    "import '../../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../../utils/retry/retry.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import '../../../awsClients/pinpoint/base.mjs';\n" +
    "import { putEvents } from '../../../awsClients/pinpoint/putEvents.mjs';\n" +
    "import { isAppInForeground } from './isAppInForeground.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('PinpointEventBuffer');\n" +
    'const RETRYABLE_CODES = [429, 500];\n' +
    'const ACCEPTED_CODES = [202];\n' +
    'class PinpointEventBuffer {\n' +
    '    constructor(config) {\n' +
    '        this._interval = undefined;\n' +
    '        this._pause = false;\n' +
    '        this._flush = false;\n' +
    '        this._buffer = [];\n' +
    '        this._config = config;\n' +
    '        this._sendBatch = this._sendBatch.bind(this);\n' +
    '        this._startLoop();\n' +
    '    }\n' +
    '    push(event) {\n' +
    '        if (this._buffer.length >= this._config.bufferSize) {\n' +
    "            logger.debug('Exceeded Pinpoint event buffer limits, event dropped.', {\n" +
    '                eventId: event.eventId,\n' +
    '            });\n' +
    '            return;\n' +
    '        }\n' +
    '        this._buffer.push({ [event.eventId]: event });\n' +
    '    }\n' +
    '    pause() {\n' +
    '        this._pause = true;\n' +
    '    }\n' +
    '    resume() {\n' +
    '        this._pause = false;\n' +
    '    }\n' +
    '    flush() {\n' +
    '        this._flush = true;\n' +
    '    }\n' +
    '    identityHasChanged(identityId) {\n' +
    '        return this._config.identityId !== identityId;\n' +
    '    }\n' +
    '    flushAll() {\n' +
    '        this._putEvents(this._buffer.splice(0, this._buffer.length));\n' +
    '    }\n' +
    '    _startLoop() {\n' +
    '        if (this._interval) {\n' +
    '            clearInterval(this._interval);\n' +
    '        }\n' +
    '        const { flushInterval } = this._config;\n' +
    '        this._interval = setInterval(this._sendBatch, flushInterval);\n' +
    '    }\n' +
    '    _sendBatch() {\n' +
    '        const bufferLength = this._buffer.length;\n' +
    '        if (this._flush && !bufferLength && this._interval) {\n' +
    '            clearInterval(this._interval);\n' +
    '        }\n' +
    '        if (this._pause || !bufferLength || !isAppInForeground()) {\n' +
    '            return;\n' +
    '        }\n' +
    '        const { flushSize } = this._config;\n' +
    '        const batchSize = Math.min(flushSize, bufferLength);\n' +
    '        const bufferSubset = this._buffer.splice(0, batchSize);\n' +
    '        this._putEvents(bufferSubset);\n' +
    '    }\n' +
    '    async _putEvents(buffer) {\n' +
    '        const eventMap = this._bufferToMap(buffer);\n' +
    '        const batchEventParams = this._generateBatchEventParams(eventMap);\n' +
    '        try {\n' +
    '            const { credentials, region, userAgentValue } = this._config;\n' +
    '            const data = await putEvents({\n' +
    '                credentials,\n' +
    '                region,\n' +
    '                userAgentValue,\n' +
    '            }, batchEventParams);\n' +
    '            this._processPutEventsSuccessResponse(data, eventMap);\n' +
    '        }\n' +
    '        catch (err) {\n' +
    '            this._handlePutEventsFailure(err, eventMap);\n' +
    '        }\n' +
    '    }\n' +
    '    _generateBatchEventParams(eventMap) {\n' +
    '        const batchItem = {};\n' +
    '        Object.values(eventMap).forEach(item => {\n' +
    '            const { event, timestamp, endpointId, eventId, session } = item;\n' +
    '            const { name, attributes, metrics } = event;\n' +
    '            batchItem[endpointId] = {\n' +
    '                Endpoint: {\n' +
    '                    ...batchItem[endpointId]?.Endpoint,\n' +
    '                },\n' +
    '                Events: {\n' +
    '                    ...batchItem[endpointId]?.Events,\n' +
    '                    [eventId]: {\n' +
    '                        EventType: name,\n' +
    '                        Timestamp: new Date(timestamp).toISOString(),\n' +
    '                        Attributes: attributes,\n' +
    '                        Metrics: metrics,\n' +
    '                        Session: session,\n' +
    '                    },\n' +
    '                },\n' +
    '            };\n' +
    '        });\n' +
    '        return {\n' +
    '            ApplicationId: this._config.appId,\n' +
    '            EventsRequest: {\n' +
    '                BatchItem: batchItem,\n' +
    '            },\n' +
    '        };\n' +
    '    }\n' +
    '    _handlePutEventsFailure(err, eventMap) {\n' +
    "        logger.debug('putEvents call to Pinpoint failed.', err);\n" +
    '        const statusCode = err.$metadata && err.$metadata.httpStatusCode;\n' +
    '        if (RETRYABLE_CODES.includes(statusCode)) {\n' +
    '            const retryableEvents = Object.values(eventMap);\n' +
    '            this._retry(retryableEvents);\n' +
    '        }\n' +
    '    }\n' +
    '    _processPutEventsSuccessResponse(data, eventMap) {\n' +
    '        const { Results = {} } = data.EventsResponse ?? {};\n' +
    '        const retryableEvents = [];\n' +
    '        Object.entries(Results).forEach(([_, endpointValues]) => {\n' +
    '            const responses = endpointValues.EventsItemResponse ?? {};\n' +
    '            Object.entries(responses).forEach(([eventId, eventValues]) => {\n' +
    '                const eventObject = eventMap[eventId];\n' +
    '                if (!eventObject) {\n' +
    '                    return;\n' +
    '                }\n' +
    '                const { StatusCode, Message } = eventValues ?? {};\n' +
    '                if (StatusCode && ACCEPTED_CODES.includes(StatusCode)) {\n' +
    '                    return;\n' +
    '                }\n' +
    '                if (StatusCode && RETRYABLE_CODES.includes(StatusCode)) {\n' +
    '                    retryableEvents.push(eventObject);\n' +
    '                    return;\n' +
    '                }\n' +
    '                const { name } = eventObject.event;\n' +
    "                logger.warn('Pinpoint event failed to send.', {\n" +
    '                    eventId,\n' +
    '                    name,\n' +
    '                    message: Message,\n' +
    '                });\n' +
    '            });\n' +
    '        });\n' +
    '        if (retryableEvents.length) {\n' +
    '            this._retry(retryableEvents);\n' +
    '        }\n' +
    '    }\n' +
    '    _retry(retryableEvents) {\n' +
    "        // retryable events that haven't reached the resendLimit\n" +
    '        const eligibleEvents = [];\n' +
    '        retryableEvents.forEach((bufferedEvent) => {\n' +
    '            const { eventId } = bufferedEvent;\n' +
    '            const { name } = bufferedEvent.event;\n' +
    '            if (bufferedEvent.resendLimit-- > 0) {\n' +
    "                logger.debug('Resending event.', {\n" +
    '                    eventId,\n' +
    '                    name,\n' +
    '                    remainingAttempts: bufferedEvent.resendLimit,\n' +
    '                });\n' +
    '                eligibleEvents.push({ [eventId]: bufferedEvent });\n' +
    '                return;\n' +
    '            }\n' +
    "            logger.debug('No retry attempts remaining for event.', {\n" +
    '                eventId,\n' +
    '                name,\n' +
    '            });\n' +
    '        });\n' +
    '        // add the events to the front of the buffer\n' +
    '        this._buffer.unshift(...eligibleEvents);\n' +
    '    }\n' +
    '    _bufferToMap(buffer) {\n' +
    '        return buffer.reduce((acc, curVal) => {\n' +
    '            const [[key, value]] = Object.entries(curVal);\n' +
    '            acc[key] = value;\n' +
    '            return acc;\n' +
    '        }, {});\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { PinpointEventBuffer };\n' +
    '//# sourceMappingURL=PinpointEventBuffer.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\n" +
    "import '../types/errors.mjs';\n" +
    "import '../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var ServiceWorkerErrorCode;\n' +
    '(function (ServiceWorkerErrorCode) {\n' +
    '    ServiceWorkerErrorCode["UndefinedInstance"] = "UndefinedInstance";\n' +
    '    ServiceWorkerErrorCode["UndefinedRegistration"] = "UndefinedRegistration";\n' +
    '    ServiceWorkerErrorCode["Unavailable"] = "Unavailable";\n' +
    '})(ServiceWorkerErrorCode || (ServiceWorkerErrorCode = {}));\n' +
    'const serviceWorkerErrorMap = {\n' +
    '    [ServiceWorkerErrorCode.UndefinedInstance]: {\n' +
    "        message: 'Service Worker instance is undefined.',\n" +
    '    },\n' +
    '    [ServiceWorkerErrorCode.UndefinedRegistration]: {\n' +
    "        message: 'Service Worker registration is undefined.',\n" +
    '    },\n' +
    '    [ServiceWorkerErrorCode.Unavailable]: {\n' +
    "        message: 'Service Worker not available.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(serviceWorkerErrorMap);\n' +
    '\n' +
    'export { ServiceWorkerErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getCognitoAuthHeader, paycodeProxyApiAdapter } from '@paycode-customer-v2/apigw';\n" +
    'import {\n' +
    '  aws_user_pools_id,\n' +
    '  aws_user_pools_web_client_id,\n' +
    "} from './amplify-be.config.json';\n" +
    'console.log({\n' +
    '  aws_user_pools_id,\n' +
    '  aws_user_pools_web_client_id,\n' +
    '});\n' +
    "const IS_MOCK = import.meta.env.VITE_PAYCODE_PROXY_IS_MOCK === 'true';\n" +
    'const API_URL = import.meta.env.VITE_PAYCODE_PROXY_API_URL;\n' +
    '\n' +
    'export async function getProxyApiAdapter() {\n' +
    '  const headerToInject = await getCognitoAuthHeader(\n' +
    '    aws_user_pools_id,\n' +
    '    aws_user_pools_web_client_id,\n' +
    '  );\n' +
    '  const proxyApi = paycodeProxyApiAdapter.createApiAdapter(\n' +
    '    API_URL,\n' +
    '    headerToInject,\n' +
    '    IS_MOCK,\n' +
    '  );\n' +
    "  const testBalance = await proxyApi.getBalance({ username: 'test' });\n" +
    '  console.debug({\n' +
    '    tag: 28343,\n' +
    '    headerToInject: headerToInject,\n' +
    '    API_URL: API_URL,\n' +
    '    IS_MOCK: IS_MOCK,\n' +
    '    balance: testBalance,\n' +
    '    proxyApi,\n' +
    '  });\n' +
    '  return proxyApi;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "export * from '@aws-amplify/auth';\n//# sourceMappingURL=index.mjs.map\n"
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const MAX_DELAY_MS = 5 * 60 * 1000;\n' +
    '\n' +
    'export { MAX_DELAY_MS };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\n" +
    "import { getSigningValues } from './utils/getSigningValues.mjs';\n" +
    "import { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, AUTH_HEADER, SHA256_ALGORITHM_IDENTIFIER } from './constants.mjs';\n" +
    "import { getSignature } from './utils/getSignature.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n' +
    ' *\n' +
    ' * @param request `HttpRequest` to be signed.\n' +
    ' * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n' +
    ' * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n' +
    ' */\n' +
    'const signRequest = (request, options) => {\n' +
    '    const signingValues = getSigningValues(options);\n' +
    '    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n' +
    '    // create the request to sign\n' +
    '    const headers = { ...request.headers };\n' +
    '    headers[HOST_HEADER] = request.url.host;\n' +
    '    headers[AMZ_DATE_HEADER] = longDate;\n' +
    '    if (sessionToken) {\n' +
    '        headers[TOKEN_HEADER] = sessionToken;\n' +
    '    }\n' +
    '    const requestToSign = { ...request, headers };\n' +
    '    // calculate and add the signature to the request\n' +
    '    const signature = getSignature(requestToSign, signingValues);\n' +
    '    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n' +
    '    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n' +
    '    const signatureEntry = `Signature=${signature}`;\n' +
    '    headers[AUTH_HEADER] =\n' +
    '        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n' +
    '    return requestToSign;\n' +
    '};\n' +
    '\n' +
    'export { signRequest };\n' +
    '//# sourceMappingURL=signRequest.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// query params\n' +
    "const ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\n" +
    "const AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\n" +
    "const CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\n" +
    "const EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\n" +
    "const REGION_SET_PARAM = 'X-Amz-Region-Set';\n" +
    "const SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\n" +
    "const SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\n" +
    "const TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n" +
    '// headers\n' +
    "const AUTH_HEADER = 'authorization';\n" +
    "const HOST_HEADER = 'host';\n" +
    'const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\n' +
    'const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n' +
    '// identifiers\n' +
    "const KEY_TYPE_IDENTIFIER = 'aws4_request';\n" +
    "const SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\n" +
    "const SIGNATURE_IDENTIFIER = 'AWS4';\n" +
    '// preset values\n' +
    "const EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\n" +
    "const UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n" +
    '\n' +
    'export { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyUrl } from '../../../../../utils/amplifyUrl/index.mjs';\n" +
    "import { ALGORITHM_QUERY_PARAM, SHA256_ALGORITHM_IDENTIFIER, CREDENTIAL_QUERY_PARAM, AMZ_DATE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, HOST_HEADER, EXPIRES_QUERY_PARAM, TOKEN_QUERY_PARAM, SIGNATURE_QUERY_PARAM } from './constants.mjs';\n" +
    "import { getSigningValues } from './utils/getSigningValues.mjs';\n" +
    "import { getSignature } from './utils/getSignature.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Given a `Presignable` object, returns a Signature Version 4 presigned `URL` object.\n' +
    ' *\n' +
    ' * @param presignable `Presignable` object containing at least a url to be presigned with authentication query params.\n' +
    ' * @param presignUrlOptions `PresignUrlOptions` object containing values used to construct the signature.\n' +
    ' * @returns A `URL` with authentication query params which can grant temporary access to AWS resources.\n' +
    ' */\n' +
    "const presignUrl = ({ body, method = 'GET', url }, { expiration, ...options }) => {\n" +
    '    const signingValues = getSigningValues(options);\n' +
    '    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n' +
    '    // create the request to sign\n' +
    '    const presignedUrl = new AmplifyUrl(url);\n' +
    '    Object.entries({\n' +
    '        [ALGORITHM_QUERY_PARAM]: SHA256_ALGORITHM_IDENTIFIER,\n' +
    '        [CREDENTIAL_QUERY_PARAM]: `${accessKeyId}/${credentialScope}`,\n' +
    '        [AMZ_DATE_QUERY_PARAM]: longDate,\n' +
    '        [SIGNED_HEADERS_QUERY_PARAM]: HOST_HEADER,\n' +
    '        ...(expiration && { [EXPIRES_QUERY_PARAM]: expiration.toString() }),\n' +
    '        ...(sessionToken && { [TOKEN_QUERY_PARAM]: sessionToken }),\n' +
    '    }).forEach(([key, value]) => {\n' +
    '        presignedUrl.searchParams.append(key, value);\n' +
    '    });\n' +
    '    const requestToSign = {\n' +
    '        body,\n' +
    '        headers: { [HOST_HEADER]: url.host },\n' +
    '        method,\n' +
    '        url: presignedUrl,\n' +
    '    };\n' +
    '    // calculate and add the signature to the url\n' +
    '    const signature = getSignature(requestToSign, signingValues);\n' +
    '    presignedUrl.searchParams.append(SIGNATURE_QUERY_PARAM, signature);\n' +
    '    return presignedUrl;\n' +
    '};\n' +
    '\n' +
    'export { presignUrl };\n' +
    '//# sourceMappingURL=presignUrl.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Date & time utility functions to abstract the `aws-sdk` away from users.\n' +
    ' * (v2 => v3 modularization is a breaking change)\n' +
    ' *\n' +
    ' * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n' +
    ' */\n' +
    'const FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n' +
    '/**\n' +
    ' * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n' +
    ' * `clients/middleware/signing/signer/signatureV4`.\n' +
    ' *\n' +
    ' * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' * @deprecated\n' +
    ' */\n' +
    'const DateUtils = {\n' +
    '    /**\n' +
    '     * Milliseconds to offset the date to compensate for clock skew between device & services\n' +
    '     */\n' +
    '    clockOffset: 0,\n' +
    '    getDateWithClockOffset() {\n' +
    '        if (DateUtils.clockOffset) {\n' +
    '            return new Date(new Date().getTime() + DateUtils.clockOffset);\n' +
    '        }\n' +
    '        else {\n' +
    '            return new Date();\n' +
    '        }\n' +
    '    },\n' +
    '    /**\n' +
    '     * @returns {number} Clock offset in milliseconds\n' +
    '     */\n' +
    '    getClockOffset() {\n' +
    '        return DateUtils.clockOffset;\n' +
    '    },\n' +
    '    getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n' +
    "        return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n" +
    '    },\n' +
    '    getDateFromHeaderString(header) {\n' +
    '        const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n' +
    '        return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n' +
    '    },\n' +
    '    isClockSkewed(serverDate) {\n' +
    '        // API gateway permits client calls that are off by no more than ±5 minutes\n' +
    '        return (Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS);\n' +
    '    },\n' +
    '    isClockSkewError(error) {\n' +
    '        if (!error.response || !error.response.headers) {\n' +
    '            return false;\n' +
    '        }\n' +
    '        const { headers } = error.response;\n' +
    "        return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) &&\n" +
    '            (headers.date || headers.Date));\n' +
    '    },\n' +
    '    /**\n' +
    '     * @param {number} offset Clock offset in milliseconds\n' +
    '     */\n' +
    '    setClockOffset(offset) {\n' +
    '        DateUtils.clockOffset = offset;\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { DateUtils };\n' +
    '//# sourceMappingURL=DateUtils.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// generated by genversion\n' +
    "const version = '6.0.18';\n" +
    '\n' +
    'export { version };\n' +
    '//# sourceMappingURL=version.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class BackgroundManagerNotOpenError extends Error {\n' +
    '    constructor(message) {\n' +
    '        super(`BackgroundManagerNotOpenError: ${message}`);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { BackgroundManagerNotOpenError };\n' +
    '//# sourceMappingURL=BackgroundManagerNotOpenError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '.home {\n' +
    '    margin : 40px auto;\n' +
    '    width : 90vw;\n' +
    '}\n' +
    '.home h4 {\n' +
    '    padding : 20px;\n' +
    '    margin : 0;\n' +
    '    text-align : center;\n' +
    '    border-bottom : 1px solid #eee;\n' +
    '}\n' +
    '.home .amplify-card {\n' +
    '\t margin: 0;\n' +
    '     padding : 0;\n' +
    '}\n' +
    ' .home .accounts {\n' +
    '\t display: flex;\n' +
    '\t flex-direction: column;\n' +
    '\t font-size: 14px;\n' +
    '}\n' +
    ' .home .accounts .labels, .home .accounts .account {\n' +
    '\t display: flex;\n' +
    '\t padding: 12px 20px;\n' +
    '\t border-bottom: 1px solid #eee;\n' +
    '}\n' +
    ' .home .accounts .labels > div:first-child, .home .accounts .account > div:first-child {\n' +
    '\t width: 25%;\n' +
    '}\n' +
    ' .home .accounts .labels > div:nth-child(2), .home .accounts .account > div:nth-child(2) {\n' +
    '\t width: 35%;\n' +
    '}\n' +
    ' .home .accounts .labels > div:nth-child(3), .home .accounts .account > div:nth-child(3) {\n' +
    '\t width: 15%;\n' +
    '}\n' +
    ' .home .accounts .labels > div:nth-child(4), .home .accounts .account > div:nth-child(4) {\n' +
    '\t width: 25%;\n' +
    '\t text-align: right;\n' +
    '}\n' +
    ' .home .accounts .labels a, .home .accounts .account a {\n' +
    '\t color: #056313;\n' +
    '\t font-weight: 600;\n' +
    '\t text-decoration: none;\n' +
    '}\n' +
    ' .home .accounts .labels {\n' +
    '\t padding: 12px 20px;\n' +
    '\t border-bottom: 1px solid #eee;\n' +
    '\t font-weight: 600;\n' +
    '}\n' +
    ' .home .accounts .totals {\n' +
    '\t display: flex;\n' +
    '\t justify-content: space-between;\n' +
    '\t padding: 12px 20px;\n' +
    '}\n' +
    ' .home .accounts .totals .label {\n' +
    '\t margin-left: 25%;\n' +
    '\t font-weight: 600;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { Framework } from './types.mjs';\n" +
    "import { detect } from './detection/index.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "// We want to cache detection since the framework won't change\n" +
    'let frameworkCache;\n' +
    'const frameworkChangeObservers = [];\n' +
    '// Setup the detection reset tracking / timeout delays\n' +
    'let resetTriggered = false;\n' +
    'const SSR_RESET_TIMEOUT = 10; // ms\n' +
    'const WEB_RESET_TIMEOUT = 10; // ms\n' +
    'const PRIME_FRAMEWORK_DELAY = 1000; // ms\n' +
    'const detectFramework = () => {\n' +
    '    if (!frameworkCache) {\n' +
    '        frameworkCache = detect();\n' +
    '        if (resetTriggered) {\n' +
    '            // The final run of detectFramework:\n' +
    '            // Starting from this point, the `frameworkCache` becomes "final".\n' +
    "            // So we don't need to notify the observers again so the observer\n" +
    '            // can be removed after the final notice.\n' +
    '            while (frameworkChangeObservers.length) {\n' +
    '                frameworkChangeObservers.pop()?.();\n' +
    '            }\n' +
    '        }\n' +
    '        else {\n' +
    '            // The first run of detectFramework:\n' +
    '            // Every time we update the cache, call each observer function\n' +
    '            frameworkChangeObservers.forEach(fcn => {\n' +
    '                fcn();\n' +
    '            });\n' +
    '        }\n' +
    '        // Retry once for either Unknown type after a delay (explained below)\n' +
    '        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n' +
    '        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n' +
    '    }\n' +
    '    return frameworkCache;\n' +
    '};\n' +
    '/**\n' +
    ' * @internal Setup observer callback that will be called everytime the framework changes\n' +
    ' */\n' +
    'const observeFrameworkChanges = (fcn) => {\n' +
    "    // When the `frameworkCache` won't be updated again, we ignore all incoming\n" +
    '    // observers.\n' +
    '    if (resetTriggered) {\n' +
    '        return;\n' +
    '    }\n' +
    '    frameworkChangeObservers.push(fcn);\n' +
    '};\n' +
    'function clearCache() {\n' +
    '    frameworkCache = undefined;\n' +
    '}\n' +
    '// For a framework type and a delay amount, setup the event to re-detect\n' +
    '//   During the runtime boot, it is possible that framework detection will\n' +
    '//   be triggered before the framework has made modifications to the\n' +
    '//   global/window/etc needed for detection. When no framework is detected\n' +
    "//   we will reset and try again to ensure we don't use a cached\n" +
    '//   non-framework detection result for all requests.\n' +
    'function resetTimeout(framework, delay) {\n' +
    '    if (frameworkCache === framework && !resetTriggered) {\n' +
    '        setTimeout(() => {\n' +
    '            clearCache();\n' +
    '            resetTriggered = true;\n' +
    '            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n' +
    '        }, delay);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n' +
    '//# sourceMappingURL=detectFramework.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function bytesToString(input) {\n' +
    "    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n" +
    '}\n' +
    '\n' +
    'export { bytesToString };\n' +
    '//# sourceMappingURL=bytesToString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * All possible states a `BackgroundProcessManager` instance can be in.\n' +
    ' */\n' +
    'var BackgroundProcessManagerState;\n' +
    '(function (BackgroundProcessManagerState) {\n' +
    '    /**\n' +
    '     * Accepting new jobs.\n' +
    '     */\n' +
    '    BackgroundProcessManagerState["Open"] = "Open";\n' +
    '    /**\n' +
    '     * Not accepting new jobs. Waiting for submitted jobs to complete.\n' +
    '     */\n' +
    '    BackgroundProcessManagerState["Closing"] = "Closing";\n' +
    '    /**\n' +
    '     * Not accepting new jobs. All submitted jobs are complete.\n' +
    '     */\n' +
    '    BackgroundProcessManagerState["Closed"] = "Closed";\n' +
    '})(BackgroundProcessManagerState || (BackgroundProcessManagerState = {}));\n' +
    '\n' +
    'export { BackgroundProcessManagerState };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { Observable } from './internal/Observable';\n" +
    "export { ConnectableObservable } from './internal/observable/ConnectableObservable';\n" +
    "export { observable } from './internal/symbol/observable';\n" +
    "export { animationFrames } from './internal/observable/dom/animationFrames';\n" +
    "export { Subject } from './internal/Subject';\n" +
    "export { BehaviorSubject } from './internal/BehaviorSubject';\n" +
    "export { ReplaySubject } from './internal/ReplaySubject';\n" +
    "export { AsyncSubject } from './internal/AsyncSubject';\n" +
    "export { asap, asapScheduler } from './internal/scheduler/asap';\n" +
    "export { async, asyncScheduler } from './internal/scheduler/async';\n" +
    "export { queue, queueScheduler } from './internal/scheduler/queue';\n" +
    "export { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\n" +
    "export { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\n" +
    "export { Scheduler } from './internal/Scheduler';\n" +
    "export { Subscription } from './internal/Subscription';\n" +
    "export { Subscriber } from './internal/Subscriber';\n" +
    "export { Notification, NotificationKind } from './internal/Notification';\n" +
    "export { pipe } from './internal/util/pipe';\n" +
    "export { noop } from './internal/util/noop';\n" +
    "export { identity } from './internal/util/identity';\n" +
    "export { isObservable } from './internal/util/isObservable';\n" +
    "export { lastValueFrom } from './internal/lastValueFrom';\n" +
    "export { firstValueFrom } from './internal/firstValueFrom';\n" +
    "export { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\n" +
    "export { EmptyError } from './internal/util/EmptyError';\n" +
    "export { NotFoundError } from './internal/util/NotFoundError';\n" +
    "export { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\n" +
    "export { SequenceError } from './internal/util/SequenceError';\n" +
    "export { TimeoutError } from './internal/operators/timeout';\n" +
    "export { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n" +
    "export { bindCallback } from './internal/observable/bindCallback';\n" +
    "export { bindNodeCallback } from './internal/observable/bindNodeCallback';\n" +
    "export { combineLatest } from './internal/observable/combineLatest';\n" +
    "export { concat } from './internal/observable/concat';\n" +
    "export { connectable } from './internal/observable/connectable';\n" +
    "export { defer } from './internal/observable/defer';\n" +
    "export { empty } from './internal/observable/empty';\n" +
    "export { forkJoin } from './internal/observable/forkJoin';\n" +
    "export { from } from './internal/observable/from';\n" +
    "export { fromEvent } from './internal/observable/fromEvent';\n" +
    "export { fromEventPattern } from './internal/observable/fromEventPattern';\n" +
    "export { generate } from './internal/observable/generate';\n" +
    "export { iif } from './internal/observable/iif';\n" +
    "export { interval } from './internal/observable/interval';\n" +
    "export { merge } from './internal/observable/merge';\n" +
    "export { never } from './internal/observable/never';\n" +
    "export { of } from './internal/observable/of';\n" +
    "export { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\n" +
    "export { pairs } from './internal/observable/pairs';\n" +
    "export { partition } from './internal/observable/partition';\n" +
    "export { race } from './internal/observable/race';\n" +
    "export { range } from './internal/observable/range';\n" +
    "export { throwError } from './internal/observable/throwError';\n" +
    "export { timer } from './internal/observable/timer';\n" +
    "export { using } from './internal/observable/using';\n" +
    "export { zip } from './internal/observable/zip';\n" +
    "export { scheduled } from './internal/scheduled/scheduled';\n" +
    "export { EMPTY } from './internal/observable/empty';\n" +
    "export { NEVER } from './internal/observable/never';\n" +
    "export * from './internal/types';\n" +
    "export { config } from './internal/config';\n" +
    "export { audit } from './internal/operators/audit';\n" +
    "export { auditTime } from './internal/operators/auditTime';\n" +
    "export { buffer } from './internal/operators/buffer';\n" +
    "export { bufferCount } from './internal/operators/bufferCount';\n" +
    "export { bufferTime } from './internal/operators/bufferTime';\n" +
    "export { bufferToggle } from './internal/operators/bufferToggle';\n" +
    "export { bufferWhen } from './internal/operators/bufferWhen';\n" +
    "export { catchError } from './internal/operators/catchError';\n" +
    "export { combineAll } from './internal/operators/combineAll';\n" +
    "export { combineLatestAll } from './internal/operators/combineLatestAll';\n" +
    "export { combineLatestWith } from './internal/operators/combineLatestWith';\n" +
    "export { concatAll } from './internal/operators/concatAll';\n" +
    "export { concatMap } from './internal/operators/concatMap';\n" +
    "export { concatMapTo } from './internal/operators/concatMapTo';\n" +
    "export { concatWith } from './internal/operators/concatWith';\n" +
    "export { connect } from './internal/operators/connect';\n" +
    "export { count } from './internal/operators/count';\n" +
    "export { debounce } from './internal/operators/debounce';\n" +
    "export { debounceTime } from './internal/operators/debounceTime';\n" +
    "export { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\n" +
    "export { delay } from './internal/operators/delay';\n" +
    "export { delayWhen } from './internal/operators/delayWhen';\n" +
    "export { dematerialize } from './internal/operators/dematerialize';\n" +
    "export { distinct } from './internal/operators/distinct';\n" +
    "export { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\n" +
    "export { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\n" +
    "export { elementAt } from './internal/operators/elementAt';\n" +
    "export { endWith } from './internal/operators/endWith';\n" +
    "export { every } from './internal/operators/every';\n" +
    "export { exhaust } from './internal/operators/exhaust';\n" +
    "export { exhaustAll } from './internal/operators/exhaustAll';\n" +
    "export { exhaustMap } from './internal/operators/exhaustMap';\n" +
    "export { expand } from './internal/operators/expand';\n" +
    "export { filter } from './internal/operators/filter';\n" +
    "export { finalize } from './internal/operators/finalize';\n" +
    "export { find } from './internal/operators/find';\n" +
    "export { findIndex } from './internal/operators/findIndex';\n" +
    "export { first } from './internal/operators/first';\n" +
    "export { groupBy } from './internal/operators/groupBy';\n" +
    "export { ignoreElements } from './internal/operators/ignoreElements';\n" +
    "export { isEmpty } from './internal/operators/isEmpty';\n" +
    "export { last } from './internal/operators/last';\n" +
    "export { map } from './internal/operators/map';\n" +
    "export { mapTo } from './internal/operators/mapTo';\n" +
    "export { materialize } from './internal/operators/materialize';\n" +
    "export { max } from './internal/operators/max';\n" +
    "export { mergeAll } from './internal/operators/mergeAll';\n" +
    "export { flatMap } from './internal/operators/flatMap';\n" +
    "export { mergeMap } from './internal/operators/mergeMap';\n" +
    "export { mergeMapTo } from './internal/operators/mergeMapTo';\n" +
    "export { mergeScan } from './internal/operators/mergeScan';\n" +
    "export { mergeWith } from './internal/operators/mergeWith';\n" +
    "export { min } from './internal/operators/min';\n" +
    "export { multicast } from './internal/operators/multicast';\n" +
    "export { observeOn } from './internal/operators/observeOn';\n" +
    "export { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\n" +
    "export { pairwise } from './internal/operators/pairwise';\n" +
    "export { pluck } from './internal/operators/pluck';\n" +
    "export { publish } from './internal/operators/publish';\n" +
    "export { publishBehavior } from './internal/operators/publishBehavior';\n" +
    "export { publishLast } from './internal/operators/publishLast';\n" +
    "export { publishReplay } from './internal/operators/publishReplay';\n" +
    "export { raceWith } from './internal/operators/raceWith';\n" +
    "export { reduce } from './internal/operators/reduce';\n" +
    "export { repeat } from './internal/operators/repeat';\n" +
    "export { repeatWhen } from './internal/operators/repeatWhen';\n" +
    "export { retry } from './internal/operators/retry';\n" +
    "export { retryWhen } from './internal/operators/retryWhen';\n" +
    "export { refCount } from './internal/operators/refCount';\n" +
    "export { sample } from './internal/operators/sample';\n" +
    "export { sampleTime } from './internal/operators/sampleTime';\n" +
    "export { scan } from './internal/operators/scan';\n" +
    "export { sequenceEqual } from './internal/operators/sequenceEqual';\n" +
    "export { share } from './internal/operators/share';\n" +
    "export { shareReplay } from './internal/operators/shareReplay';\n" +
    "export { single } from './internal/operators/single';\n" +
    "export { skip } from './internal/operators/skip';\n" +
    "export { skipLast } from './internal/operators/skipLast';\n" +
    "export { skipUntil } from './internal/operators/skipUntil';\n" +
    "export { skipWhile } from './internal/operators/skipWhile';\n" +
    "export { startWith } from './internal/operators/startWith';\n" +
    "export { subscribeOn } from './internal/operators/subscribeOn';\n" +
    "export { switchAll } from './internal/operators/switchAll';\n" +
    "export { switchMap } from './internal/operators/switchMap';\n" +
    "export { switchMapTo } from './internal/operators/switchMapTo';\n" +
    "export { switchScan } from './internal/operators/switchScan';\n" +
    "export { take } from './internal/operators/take';\n" +
    "export { takeLast } from './internal/operators/takeLast';\n" +
    "export { takeUntil } from './internal/operators/takeUntil';\n" +
    "export { takeWhile } from './internal/operators/takeWhile';\n" +
    "export { tap } from './internal/operators/tap';\n" +
    "export { throttle } from './internal/operators/throttle';\n" +
    "export { throttleTime } from './internal/operators/throttleTime';\n" +
    "export { throwIfEmpty } from './internal/operators/throwIfEmpty';\n" +
    "export { timeInterval } from './internal/operators/timeInterval';\n" +
    "export { timeout } from './internal/operators/timeout';\n" +
    "export { timeoutWith } from './internal/operators/timeoutWith';\n" +
    "export { timestamp } from './internal/operators/timestamp';\n" +
    "export { toArray } from './internal/operators/toArray';\n" +
    "export { window } from './internal/operators/window';\n" +
    "export { windowCount } from './internal/operators/windowCount';\n" +
    "export { windowTime } from './internal/operators/windowTime';\n" +
    "export { windowToggle } from './internal/operators/windowToggle';\n" +
    "export { windowWhen } from './internal/operators/windowWhen';\n" +
    "export { withLatestFrom } from './internal/operators/withLatestFrom';\n" +
    'export { zipAll } fro'... 122 more characters
} [Function: logger]
____9999999____ {
  code: "import { isBrowser } from '../isBrowser.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const stateChangeListeners = new Set();\n' +
    'class SessionListener {\n' +
    '    constructor() {\n' +
    '        this.listenerActive = false;\n' +
    '        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n' +
    '        // Setup state listeners\n' +
    '        if (isBrowser()) {\n' +
    "            document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n" +
    '            this.listenerActive = true;\n' +
    '        }\n' +
    '    }\n' +
    '    addStateChangeListener(listener, notifyOnAdd = false) {\n' +
    '        // No-op if document listener is not active\n' +
    '        if (!this.listenerActive) {\n' +
    '            return;\n' +
    '        }\n' +
    '        stateChangeListeners.add(listener);\n' +
    '        // Notify new handlers of the current status on add\n' +
    '        if (notifyOnAdd) {\n' +
    '            listener(this.getSessionState());\n' +
    '        }\n' +
    '    }\n' +
    '    removeStateChangeListener(handler) {\n' +
    '        // No-op if document listener is not active\n' +
    '        if (!this.listenerActive) {\n' +
    '            return;\n' +
    '        }\n' +
    '        stateChangeListeners.delete(handler);\n' +
    '    }\n' +
    '    handleVisibilityChange() {\n' +
    '        this.notifyHandlers();\n' +
    '    }\n' +
    '    notifyHandlers() {\n' +
    '        const sessionState = this.getSessionState();\n' +
    '        stateChangeListeners.forEach(listener => {\n' +
    '            listener(sessionState);\n' +
    '        });\n' +
    '    }\n' +
    '    getSessionState() {\n' +
    "        if (isBrowser() && document.visibilityState !== 'hidden') {\n" +
    "            return 'started';\n" +
    '        }\n' +
    '        // If, for any reason, document is undefined the session will never start\n' +
    "        return 'ended';\n" +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { SessionListener };\n' +
    '//# sourceMappingURL=SessionListener.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { validationErrorMap } from '../../common/AuthErrorStrings.mjs';\n" +
    "import { AuthError } from '../AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function assertValidationError(assertion, name) {\n' +
    '    const { message, recoverySuggestion } = validationErrorMap[name];\n' +
    '    if (!assertion) {\n' +
    '        throw new AuthError({ name, message, recoverySuggestion });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { assertValidationError };\n' +
    '//# sourceMappingURL=assertValidationError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { cognitoUserPoolTransferHandler, defaultConfig, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n" +
    "import { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { assertServiceError } from '../../../../../errors/utils/assertServiceError.mjs';\n" +
    "import { AuthError } from '../../../../../errors/AuthError.mjs';\n" +
    '\n' +
    'const buildUserPoolSerializer = (operation) => (input, endpoint) => {\n' +
    '    const headers = getSharedHeaders(operation);\n' +
    '    const body = JSON.stringify(input);\n' +
    '    return buildHttpRpcRequest(endpoint, headers, body);\n' +
    '};\n' +
    'const buildUserPoolDeserializer = () => {\n' +
    '    return async (response) => {\n' +
    '        if (response.statusCode >= 300) {\n' +
    '            const error = await parseJsonError(response);\n' +
    '            assertServiceError(error);\n' +
    '            throw new AuthError({ name: error.name, message: error.message });\n' +
    '        }\n' +
    '        else {\n' +
    '            const body = await parseJsonBody(response);\n' +
    '            return body;\n' +
    '        }\n' +
    '    };\n' +
    '};\n' +
    'const handleEmptyResponseDeserializer = () => {\n' +
    '    return async (response) => {\n' +
    '        if (response.statusCode >= 300) {\n' +
    '            const error = await parseJsonError(response);\n' +
    '            assertServiceError(error);\n' +
    '            throw new AuthError({ name: error.name, message: error.message });\n' +
    '        }\n' +
    '        else {\n' +
    '            return undefined;\n' +
    '        }\n' +
    '    };\n' +
    '};\n' +
    "const initiateAuth = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('InitiateAuth'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const revokeToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RevokeToken'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const signUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SignUp'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const confirmSignUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmSignUp'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const forgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const confirmForgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const respondToAuthChallenge = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RespondToAuthChallenge'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const resendConfirmationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ResendConfirmationCode'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const verifySoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifySoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const associateSoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('AssociateSoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const setUserMFAPreference = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SetUserMFAPreference'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const getUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUser'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const changePassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ChangePassword'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const confirmDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmDevice'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const forgetDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgetDevice'), handleEmptyResponseDeserializer(), defaultConfig);\n" +
    "const deleteUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUser'), handleEmptyResponseDeserializer(), defaultConfig);\n" +
    "const getUserAttributeVerificationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUserAttributeVerificationCode'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const globalSignOut = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GlobalSignOut'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const updateUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const verifyUserAttribute = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifyUserAttribute'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const updateDeviceStatus = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateDeviceStatus'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const listDevices = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ListDevices'), buildUserPoolDeserializer(), defaultConfig);\n" +
    "const deleteUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n" +
    '\n' +
    'export { associateSoftwareToken, changePassword, confirmDevice, confirmForgotPassword, confirmSignUp, deleteUser, deleteUserAttributes, forgetDevice, forgotPassword, getUser, getUserAttributeVerificationCode, globalSignOut, initiateAuth, listDevices, resendConfirmationCode, respondToAuthChallenge, revokeToken, setUserMFAPreference, signUp, updateDeviceStatus, updateUserAttributes, verifySoftwareToken, verifyUserAttribute };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var AuthValidationErrorCode;\n' +
    '(function (AuthValidationErrorCode) {\n' +
    '    AuthValidationErrorCode["EmptySignInUsername"] = "EmptySignInUsername";\n' +
    '    AuthValidationErrorCode["EmptySignInPassword"] = "EmptySignInPassword";\n' +
    '    AuthValidationErrorCode["CustomAuthSignInPassword"] = "CustomAuthSignInPassword";\n' +
    '    AuthValidationErrorCode["EmptySignUpUsername"] = "EmptySignUpUsername";\n' +
    '    AuthValidationErrorCode["EmptySignUpPassword"] = "EmptySignUpPassword";\n' +
    '    AuthValidationErrorCode["EmptyConfirmSignUpUsername"] = "EmptyConfirmSignUpUsername";\n' +
    '    AuthValidationErrorCode["EmptyConfirmSignUpCode"] = "EmptyConfirmSignUpCode";\n' +
    '    AuthValidationErrorCode["EmptyResendSignUpCodeUsername"] = "EmptyresendSignUpCodeUsername";\n' +
    '    AuthValidationErrorCode["EmptyChallengeResponse"] = "EmptyChallengeResponse";\n' +
    '    AuthValidationErrorCode["EmptyConfirmResetPasswordUsername"] = "EmptyConfirmResetPasswordUsername";\n' +
    '    AuthValidationErrorCode["EmptyConfirmResetPasswordNewPassword"] = "EmptyConfirmResetPasswordNewPassword";\n' +
    '    AuthValidationErrorCode["EmptyConfirmResetPasswordConfirmationCode"] = "EmptyConfirmResetPasswordConfirmationCode";\n' +
    '    AuthValidationErrorCode["EmptyResetPasswordUsername"] = "EmptyResetPasswordUsername";\n' +
    '    AuthValidationErrorCode["EmptyVerifyTOTPSetupCode"] = "EmptyVerifyTOTPSetupCode";\n' +
    '    AuthValidationErrorCode["EmptyConfirmUserAttributeCode"] = "EmptyConfirmUserAttributeCode";\n' +
    '    AuthValidationErrorCode["IncorrectMFAMethod"] = "IncorrectMFAMethod";\n' +
    '    AuthValidationErrorCode["EmptyUpdatePassword"] = "EmptyUpdatePassword";\n' +
    '})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n' +
    '\n' +
    'export { AuthValidationErrorCode };\n' +
    '//# sourceMappingURL=validation.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'var react_production_min = {}; export {react_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../../../../../errors/AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function getRegion(userPoolId) {\n' +
    "    const region = userPoolId?.split('_')[0];\n" +
    '    if (!userPoolId ||\n' +
    "        userPoolId.indexOf('_') < 0 ||\n" +
    '        !region ||\n' +
    "        typeof region !== 'string')\n" +
    '        throw new AuthError({\n' +
    "            name: 'InvalidUserPoolId',\n" +
    "            message: 'Invalid user pool id provided.',\n" +
    '        });\n' +
    '    return region;\n' +
    '}\n' +
    'function getRegionFromIdentityPoolId(identityPoolId) {\n' +
    "    if (!identityPoolId || !identityPoolId.includes(':')) {\n" +
    '        throw new AuthError({\n' +
    "            name: 'InvalidIdentityPoolIdException',\n" +
    "            message: 'Invalid identity pool id provided.',\n" +
    "            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n" +
    '        });\n' +
    '    }\n' +
    "    return identityPoolId.split(':')[0];\n" +
    '}\n' +
    '\n' +
    'export { getRegion, getRegionFromIdentityPoolId };\n' +
    '//# sourceMappingURL=utils.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Transforms a user attributes object into an array of AttributeType objects.\n' +
    ' * @param attributes user attributes to be mapped to AttributeType objects.\n' +
    ' * @returns an array of AttributeType objects.\n' +
    ' */\n' +
    'function toAttributeType(attributes) {\n' +
    '    return Object.entries(attributes).map(([key, value]) => ({\n' +
    '        Name: key,\n' +
    '        Value: value,\n' +
    '    }));\n' +
    '}\n' +
    '/**\n' +
    ' * Transforms an array of AttributeType objects into a user attributes object.\n' +
    ' *\n' +
    ' * @param attributes - an array of AttributeType objects.\n' +
    ' * @returns AuthUserAttributes object.\n' +
    ' */\n' +
    'function toAuthUserAttribute(attributes) {\n' +
    '    const userAttributes = {};\n' +
    '    attributes?.forEach(attribute => {\n' +
    '        if (attribute.Name)\n' +
    '            userAttributes[attribute.Name] = attribute.Value;\n' +
    '    });\n' +
    '    return userAttributes;\n' +
    '}\n' +
    '\n' +
    'export { toAttributeType, toAuthUserAttribute };\n' +
    '//# sourceMappingURL=apiHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n' +
    '    category: Category.Auth,\n' +
    '    action,\n' +
    '    ...customUserAgentDetails,\n' +
    '});\n' +
    '\n' +
    'export { getAuthUserAgentValue };\n' +
    '//# sourceMappingURL=getAuthUserAgentValue.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { HubInternal } from '@aws-amplify/core/internals/utils';\n" +
    "import { signIn } from '../apis/signIn.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { setAutoSignIn, resetAutoSignIn } from '../apis/autoSignIn.mjs';\n" +
    "import { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\n' +
    'function handleCodeAutoSignIn(signInInput) {\n' +
    "    const stopHubListener = HubInternal.listen('auth-internal', async ({ payload }) => {\n" +
    '        switch (payload.event) {\n' +
    "            case 'confirmSignUp': {\n" +
    '                const response = payload.data;\n' +
    '                if (response?.isSignUpComplete) {\n' +
    "                    HubInternal.dispatch('auth-internal', {\n" +
    "                        event: 'autoSignIn',\n" +
    '                    });\n' +
    '                    setAutoSignIn(autoSignInWithCode(signInInput));\n' +
    '                    stopHubListener();\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    });\n' +
    '    // This will stop the listener if confirmSignUp is not resolved.\n' +
    '    const timeOutId = setTimeout(() => {\n' +
    '        stopHubListener();\n' +
    '        setAutoSignInStarted(false);\n' +
    '        clearTimeout(timeOutId);\n' +
    '        resetAutoSignIn();\n' +
    '    }, MAX_AUTOSIGNIN_POLLING_MS);\n' +
    '}\n' +
    'function debounce(fun, delay) {\n' +
    '    let timer;\n' +
    '    return function (args) {\n' +
    '        if (!timer) {\n' +
    '            fun(...args);\n' +
    '        }\n' +
    '        clearTimeout(timer);\n' +
    '        timer = setTimeout(() => {\n' +
    '            timer = undefined;\n' +
    '        }, delay);\n' +
    '    };\n' +
    '}\n' +
    'function handleAutoSignInWithLink(signInInput, resolve, reject) {\n' +
    '    const start = Date.now();\n' +
    '    const autoSignInPollingIntervalId = setInterval(async () => {\n' +
    '        const elapsedTime = Date.now() - start;\n' +
    '        const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n' +
    '        if (elapsedTime > maxTime) {\n' +
    '            clearInterval(autoSignInPollingIntervalId);\n' +
    '            setAutoSignInStarted(false);\n' +
    '            reject(new AuthError({\n' +
    '                name: AUTO_SIGN_IN_EXCEPTION,\n' +
    "                message: 'The account was not confirmed on time.',\n" +
    "                recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.',\n" +
    '            }));\n' +
    '            resetAutoSignIn();\n' +
    '            return;\n' +
    '        }\n' +
    '        else {\n' +
    '            try {\n' +
    '                const signInOutput = await signIn(signInInput);\n' +
    "                if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n" +
    '                    resolve(signInOutput);\n' +
    '                    clearInterval(autoSignInPollingIntervalId);\n' +
    '                    setAutoSignInStarted(false);\n' +
    '                    resetAutoSignIn();\n' +
    '                    return;\n' +
    '                }\n' +
    '            }\n' +
    '            catch (error) {\n' +
    '                clearInterval(autoSignInPollingIntervalId);\n' +
    '                setAutoSignInStarted(false);\n' +
    '                reject(error);\n' +
    '                resetAutoSignIn();\n' +
    '            }\n' +
    '        }\n' +
    '    }, 5000);\n' +
    '}\n' +
    'const debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\n' +
    'const debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\n' +
    'let autoSignInStarted = false;\n' +
    'let usernameUsedForAutoSignIn;\n' +
    'function setUsernameUsedForAutoSignIn(username) {\n' +
    '    usernameUsedForAutoSignIn = username;\n' +
    '}\n' +
    'function isAutoSignInUserUsingConfirmSignUp(username) {\n' +
    '    return usernameUsedForAutoSignIn === username;\n' +
    '}\n' +
    'function isAutoSignInStarted() {\n' +
    '    return autoSignInStarted;\n' +
    '}\n' +
    'function setAutoSignInStarted(value) {\n' +
    '    if (value === false) {\n' +
    '        setUsernameUsedForAutoSignIn(undefined);\n' +
    '    }\n' +
    '    autoSignInStarted = value;\n' +
    '}\n' +
    'function isSignUpComplete(output) {\n' +
    '    return !!output.UserConfirmed;\n' +
    '}\n' +
    'function autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n' +
    '    return async () => {\n' +
    '        return new Promise(async (resolve, reject) => {\n' +
    '            debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n' +
    '        });\n' +
    '    };\n' +
    '}\n' +
    'async function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n' +
    '    try {\n' +
    '        const output = await signIn(signInInput);\n' +
    '        resolve(output);\n' +
    '        resetAutoSignIn();\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        reject(error);\n' +
    '        resetAutoSignIn();\n' +
    '    }\n' +
    '}\n' +
    'function autoSignInWithCode(signInInput) {\n' +
    '    return async () => {\n' +
    '        return new Promise(async (resolve, reject) => {\n' +
    '            debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n' +
    '        });\n' +
    '    };\n' +
    '}\n' +
    'const autoSignInUserConfirmed = autoSignInWithCode;\n' +
    '\n' +
    'export { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn, isAutoSignInStarted, isAutoSignInUserUsingConfirmSignUp, isSignUpComplete, setAutoSignInStarted, setUsernameUsedForAutoSignIn };\n' +
    '//# sourceMappingURL=signUpHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function getUserContextData({ username, userPoolId, userPoolClientId, }) {\n' +
    "    if (typeof window === 'undefined') {\n" +
    '        return undefined;\n' +
    '    }\n' +
    '    const amazonCognitoAdvancedSecurityData = window\n' +
    '        .AmazonCognitoAdvancedSecurityData;\n' +
    "    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n" +
    '        return undefined;\n' +
    '    }\n' +
    '    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n' +
    '    if (advancedSecurityData) {\n' +
    '        const userContextData = {\n' +
    '            EncodedData: advancedSecurityData,\n' +
    '        };\n' +
    '        return userContextData;\n' +
    '    }\n' +
    '    return {};\n' +
    '}\n' +
    '\n' +
    'export { getUserContextData };\n' +
    '//# sourceMappingURL=userContextData.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { retryOnResourceNotFoundException, handleCustomAuthFlowWithoutSRP, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\n" +
    "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\n" +
    "import { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs a user in using a custom authentication flow without password\n' +
    ' *\n' +
    ' * @param input -  The SignInWithCustomAuthInput object\n' +
    ' * @returns AuthSignInResult\n' +
    ' * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signInWithCustomAuth(input) {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { username, password, options } = input;\n' +
    '    const signInDetails = {\n' +
    '        loginId: username,\n' +
    "        authFlowType: 'CUSTOM_WITHOUT_SRP',\n" +
    '    };\n' +
    '    const metadata = options?.clientMetadata;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n' +
    '    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n' +
    '    try {\n' +
    '        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n' +
    '        const activeUsername = getActiveSignInUsername(username);\n' +
    '        // sets up local state used during the sign-in process\n' +
    '        setActiveSignInState({\n' +
    '            signInSession: Session,\n' +
    '            username: activeUsername,\n' +
    '            challengeName: ChallengeName,\n' +
    '            signInDetails,\n' +
    '        });\n' +
    '        if (AuthenticationResult) {\n' +
    '            cleanActiveSignInState();\n' +
    '            await cacheCognitoTokens({\n' +
    '                username: activeUsername,\n' +
    '                ...AuthenticationResult,\n' +
    '                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n' +
    '                signInDetails,\n' +
    '            });\n' +
    '            await dispatchSignedInHubEvent();\n' +
    '            return {\n' +
    '                isSignedIn: true,\n' +
    "                nextStep: { signInStep: 'DONE' },\n" +
    '            };\n' +
    '        }\n' +
    '        return getSignInResult({\n' +
    '            challengeName: ChallengeName,\n' +
    '            challengeParameters: ChallengeParameters,\n' +
    '        });\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        cleanActiveSignInState();\n' +
    '        assertServiceError(error);\n' +
    '        const result = getSignInResultFromError(error.name);\n' +
    '        if (result)\n' +
    '            return result;\n' +
    '        throw error;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { signInWithCustomAuth };\n' +
    '//# sourceMappingURL=signInWithCustomAuth.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { handleCustomSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\n" +
    "import { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\n" +
    "import { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs a user in using a custom authentication flow with SRP\n' +
    ' *\n' +
    ' * @param input -  The SignInWithCustomSRPAuthInput object\n' +
    ' * @returns SignInWithCustomSRPAuthOutput\n' +
    ' * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n' +
    ' * service errors thrown during the sign-in process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signInWithCustomSRPAuth(input) {\n' +
    '    const { username, password, options } = input;\n' +
    '    const signInDetails = {\n' +
    '        loginId: username,\n' +
    "        authFlowType: 'CUSTOM_WITH_SRP',\n" +
    '    };\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const metadata = options?.clientMetadata;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n' +
    '    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n' +
    '    try {\n' +
    '        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n' +
    '        const activeUsername = getActiveSignInUsername(username);\n' +
    '        // sets up local state used during the sign-in process\n' +
    '        setActiveSignInState({\n' +
    '            signInSession: Session,\n' +
    '            username: activeUsername,\n' +
    '            challengeName: ChallengeName,\n' +
    '            signInDetails,\n' +
    '        });\n' +
    '        if (AuthenticationResult) {\n' +
    '            await cacheCognitoTokens({\n' +
    '                username: activeUsername,\n' +
    '                ...AuthenticationResult,\n' +
    '                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n' +
    '                signInDetails,\n' +
    '            });\n' +
    '            cleanActiveSignInState();\n' +
    '            await dispatchSignedInHubEvent();\n' +
    '            return {\n' +
    '                isSignedIn: true,\n' +
    "                nextStep: { signInStep: 'DONE' },\n" +
    '            };\n' +
    '        }\n' +
    '        return getSignInResult({\n' +
    '            challengeName: ChallengeName,\n' +
    '            challengeParameters: ChallengeParameters,\n' +
    '        });\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        cleanActiveSignInState();\n' +
    '        assertServiceError(error);\n' +
    '        const result = getSignInResultFromError(error.name);\n' +
    '        if (result)\n' +
    '            return result;\n' +
    '        throw error;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { signInWithCustomSRPAuth };\n' +
    '//# sourceMappingURL=signInWithCustomSRPAuth.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { handleUserSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\n" +
    "import { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\n" +
    "import { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs a user in\n' +
    ' *\n' +
    ' * @param input - The SignInWithSRPInput object\n' +
    ' * @returns SignInWithSRPOutput\n' +
    ' * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n' +
    ' * thrown during the sign-in process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signInWithSRP(input) {\n' +
    '    const { username, password } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    const signInDetails = {\n' +
    '        loginId: username,\n' +
    "        authFlowType: 'USER_SRP_AUTH',\n" +
    '    };\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const clientMetaData = input.options?.clientMetadata;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n' +
    '    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n' +
    '    try {\n' +
    '        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n' +
    '        const activeUsername = getActiveSignInUsername(username);\n' +
    '        // sets up local state used during the sign-in process\n' +
    '        setActiveSignInState({\n' +
    '            signInSession: Session,\n' +
    '            username: activeUsername,\n' +
    '            challengeName: ChallengeName,\n' +
    '            signInDetails,\n' +
    '        });\n' +
    '        if (AuthenticationResult) {\n' +
    '            cleanActiveSignInState();\n' +
    '            await cacheCognitoTokens({\n' +
    '                username: activeUsername,\n' +
    '                ...AuthenticationResult,\n' +
    '                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n' +
    '                signInDetails,\n' +
    '            });\n' +
    '            await dispatchSignedInHubEvent();\n' +
    '            return {\n' +
    '                isSignedIn: true,\n' +
    "                nextStep: { signInStep: 'DONE' },\n" +
    '            };\n' +
    '        }\n' +
    '        return getSignInResult({\n' +
    '            challengeName: ChallengeName,\n' +
    '            challengeParameters: ChallengeParameters,\n' +
    '        });\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        cleanActiveSignInState();\n' +
    '        assertServiceError(error);\n' +
    '        const result = getSignInResultFromError(error.name);\n' +
    '        if (result)\n' +
    '            return result;\n' +
    '        throw error;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { signInWithSRP };\n' +
    '//# sourceMappingURL=signInWithSRP.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { retryOnResourceNotFoundException, handleUserPasswordAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\n" +
    "import { Amplify } from '@aws-amplify/core';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\n" +
    "import { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\n" +
    "import '../utils/refreshAuthTokens.mjs';\n" +
    "import '../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n' +
    ' *\n' +
    ' * @param input - The SignInWithUserPasswordInput object\n' +
    ' * @returns SignInWithUserPasswordOutput\n' +
    ' * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n' +
    ' * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n' +
    ' *  are not defined.\n' +
    ' * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n' +
    ' */\n' +
    'async function signInWithUserPassword(input) {\n' +
    '    const { username, password, options } = input;\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    const signInDetails = {\n' +
    '        loginId: username,\n' +
    "        authFlowType: 'USER_PASSWORD_AUTH',\n" +
    '    };\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const metadata = options?.clientMetadata;\n' +
    '    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n' +
    '    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n' +
    '    try {\n' +
    '        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n' +
    '        const activeUsername = getActiveSignInUsername(username);\n' +
    '        // sets up local state used during the sign-in process\n' +
    '        setActiveSignInState({\n' +
    '            signInSession: Session,\n' +
    '            username: activeUsername,\n' +
    '            challengeName: ChallengeName,\n' +
    '            signInDetails,\n' +
    '        });\n' +
    '        if (AuthenticationResult) {\n' +
    '            await cacheCognitoTokens({\n' +
    '                ...AuthenticationResult,\n' +
    '                username: activeUsername,\n' +
    '                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n' +
    '                signInDetails,\n' +
    '            });\n' +
    '            cleanActiveSignInState();\n' +
    '            await dispatchSignedInHubEvent();\n' +
    '            return {\n' +
    '                isSignedIn: true,\n' +
    "                nextStep: { signInStep: 'DONE' },\n" +
    '            };\n' +
    '        }\n' +
    '        return getSignInResult({\n' +
    '            challengeName: ChallengeName,\n' +
    '            challengeParameters: ChallengeParameters,\n' +
    '        });\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        cleanActiveSignInState();\n' +
    '        assertServiceError(error);\n' +
    '        const result = getSignInResultFromError(error.name);\n' +
    '        if (result)\n' +
    '            return result;\n' +
    '        throw error;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { signInWithUserPassword };\n' +
    '//# sourceMappingURL=signInWithUserPassword.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyError } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class AuthError extends AmplifyError {\n' +
    '    constructor(params) {\n' +
    '        super(params);\n' +
    '        // Hack for making the custom error class work when transpiled to es5\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = AuthError;\n' +
    '        Object.setPrototypeOf(this, AuthError.prototype);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { AuthError };\n' +
    '//# sourceMappingURL=AuthError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { AuthAction, assertTokenProviderConfig, AmplifyUrl, base64Encoder } from '@aws-amplify/core/internals/utils';\n" +
    "import BigInteger from './srp/BigInteger/BigInteger.mjs';\n" +
    "import { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\n" +
    "import { getBytesFromHex } from './srp/getBytesFromHex.mjs';\n" +
    "import { getNowString } from './srp/getNowString.mjs';\n" +
    "import { getSignatureString } from './srp/getSignatureString.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { InitiateAuthException } from '../types/errors.mjs';\n" +
    "import { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\n" +
    "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { signInStore } from './signInStore.mjs';\n" +
    "import { respondToAuthChallenge, verifySoftwareToken, initiateAuth, associateSoftwareToken, confirmDevice } from './clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from './clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    "import { getCurrentUser } from '../apis/getCurrentUser.mjs';\n" +
    "import { assertDeviceMetadata } from './types.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getUserContextData } from './userContextData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const USER_ATTRIBUTES = 'userAttributes.';\n" +
    'async function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    '    const challengeResponses = {\n' +
    '        USERNAME: username,\n' +
    '        ANSWER: challengeResponse,\n' +
    '    };\n' +
    '    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n' +
    '    if (deviceMetadata && deviceMetadata.deviceKey) {\n' +
    "        challengeResponses['DEVICE_KEY'] = deviceMetadata.deviceKey;\n" +
    '    }\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'CUSTOM_CHALLENGE',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        Session: session,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    const response = await respondToAuthChallenge({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, jsonReq);\n' +
    "    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n" +
    '        return handleDeviceSRPAuth({\n' +
    '            username,\n' +
    '            config,\n' +
    '            clientMetadata,\n' +
    '            session: response.Session,\n' +
    '            tokenOrchestrator,\n' +
    '        });\n' +
    '    }\n' +
    '    return response;\n' +
    '}\n' +
    'async function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    '    const challengeResponses = {\n' +
    '        USERNAME: username,\n' +
    '    };\n' +
    '    const { Session } = await verifySoftwareToken({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, {\n' +
    '        UserCode: challengeResponse,\n' +
    '        Session: session,\n' +
    '        FriendlyDeviceName: deviceName,\n' +
    '    });\n' +
    '    signInStore.dispatch({\n' +
    "        type: 'SET_SIGN_IN_SESSION',\n" +
    '        value: Session,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'MFA_SETUP',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        Session,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '    };\n' +
    '    return respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReq);\n' +
    '}\n' +
    'async function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    "    assertValidationError(challengeResponse === 'TOTP' || challengeResponse === 'SMS', AuthValidationErrorCode.IncorrectMFAMethod);\n" +
    '    const challengeResponses = {\n' +
    '        USERNAME: username,\n' +
    '        ANSWER: mapMfaType(challengeResponse),\n' +
    '    };\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'SELECT_MFA_TYPE',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        Session: session,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    return respondToAuthChallenge({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, jsonReq);\n' +
    '}\n' +
    'async function handleSMSMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    '    const challengeResponses = {\n' +
    '        USERNAME: username,\n' +
    '        SMS_MFA_CODE: challengeResponse,\n' +
    '    };\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'SMS_MFA',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        Session: session,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    return respondToAuthChallenge({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, jsonReq);\n' +
    '}\n' +
    'async function handleSoftwareTokenMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    '    const challengeResponses = {\n' +
    '        USERNAME: username,\n' +
    '        SOFTWARE_TOKEN_MFA_CODE: challengeResponse,\n' +
    '    };\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'SOFTWARE_TOKEN_MFA',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        Session: session,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    return respondToAuthChallenge({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, jsonReq);\n' +
    '}\n' +
    'async function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    '    const challengeResponses = {\n' +
    '        ...createAttributes(requiredAttributes),\n' +
    '        NEW_PASSWORD: challengeResponse,\n' +
    '        USERNAME: username,\n' +
    '    };\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n" +
    '        ChallengeResponses: challengeResponses,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        Session: session,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    return respondToAuthChallenge({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n' +
    '    }, jsonReq);\n' +
    '}\n' +
    'async function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n' +
    '    const { userPoolClientId, userPoolId } = config;\n' +
    '    const authParameters = {\n' +
    '        USERNAME: username,\n' +
    '        PASSWORD: password,\n' +
    '    };\n' +
    '    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n' +
    '    if (deviceMetadata && deviceMetadata.deviceKey) {\n' +
    "        authParameters['DEVICE_KEY'] = deviceMetadata.deviceKey;\n" +
    '    }\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        AuthFlow: 'USER_PASSWORD_AUTH',\n" +
    '        AuthParameters: authParameters,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    const response = await initiateAuth({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n' +
    '    }, jsonReq);\n' +
    '    const activeUsername = response.ChallengeParameters?.USERNAME ??\n' +
    '        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n' +
    '        username;\n' +
    '    setActiveSignInUsername(activeUsername);\n' +
    "    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n" +
    '        return handleDeviceSRPAuth({\n' +
    '            username: activeUsername,\n' +
    '            config,\n' +
    '            clientMetadata,\n' +
    '            session: response.Session,\n' +
    '            tokenOrchestrator,\n' +
    '        });\n' +
    '    return response;\n' +
    '}\n' +
    'async function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n' +
    '    const { userPoolId, userPoolClientId } = config;\n' +
    "    const userPoolName = userPoolId?.split('_')[1] || '';\n" +
    '    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n' +
    '    const authParameters = {\n' +
    '        USERNAME: username,\n' +
    '        SRP_A: authenticationHelper.A.toString(16),\n' +
    '    };\n' +
    '    const UserContextData = getUserContextData({\n' +
    '        username,\n' +
    '        userPoolId,\n' +
    '        userPoolClientId,\n' +
    '    });\n' +
    '    const jsonReq = {\n' +
    "        AuthFlow: 'USER_SRP_AUTH',\n" +
    '        AuthParameters: authParameters,\n' +
    '        ClientMetadata: clientMetadata,\n' +
    '        ClientId: userPoolClientId,\n' +
    '        UserContextData,\n' +
    '    };\n' +
    '    const resp = await initiateAuth({\n' +
    '        region: getRegion(userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n' +
    '    }, jsonReq);\n' +
    '    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n' +
    '    const activeUsername = challengeParameters?.USERNAME ?? username;\n' +
    '    setActiveSignInUsername(activeUsername);\n' +
    '    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n' +
    '        password,\n' +
    '        challengeParameters,\n' +
    '        clientMetadata,\n' +
    '        session,\n' +
    '        authenticationHel'... 19086 more characters
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const signInReducer = (state, action) => {\n' +
    '    switch (action.type) {\n' +
    "        case 'SET_SIGN_IN_SESSION':\n" +
    '            return {\n' +
    '                ...state,\n' +
    '                signInSession: action.value,\n' +
    '            };\n' +
    "        case 'SET_SIGN_IN_STATE':\n" +
    '            return {\n' +
    '                ...action.value,\n' +
    '            };\n' +
    "        case 'SET_CHALLENGE_NAME':\n" +
    '            return {\n' +
    '                ...state,\n' +
    '                challengeName: action.value,\n' +
    '            };\n' +
    "        case 'SET_USERNAME':\n" +
    '            return {\n' +
    '                ...state,\n' +
    '                username: action.value,\n' +
    '            };\n' +
    "        case 'SET_INITIAL_STATE':\n" +
    '            return defaultState();\n' +
    '        default:\n' +
    '            return state;\n' +
    '    }\n' +
    '};\n' +
    'function defaultState() {\n' +
    '    return {\n' +
    '        username: undefined,\n' +
    '        challengeName: undefined,\n' +
    '        signInSession: undefined,\n' +
    '    };\n' +
    '}\n' +
    'const createStore = reducer => {\n' +
    "    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n" +
    '    return {\n' +
    '        getState: () => currentState,\n' +
    '        dispatch: action => {\n' +
    '            currentState = reducer(currentState, action);\n' +
    '        },\n' +
    '    };\n' +
    '};\n' +
    'const signInStore = createStore(signInReducer);\n' +
    'function setActiveSignInState(state) {\n' +
    '    signInStore.dispatch({\n' +
    "        type: 'SET_SIGN_IN_STATE',\n" +
    '        value: state,\n' +
    '    });\n' +
    '}\n' +
    'function cleanActiveSignInState() {\n' +
    "    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n" +
    '}\n' +
    '\n' +
    'export { cleanActiveSignInState, setActiveSignInState, signInStore };\n' +
    '//# sourceMappingURL=signInStore.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../AuthError.mjs';\n" +
    "import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function assertServiceError(error) {\n' +
    '    if (!error ||\n' +
    "        error.name === 'Error' ||\n" +
    '        error instanceof TypeError) {\n' +
    '        throw new AuthError({\n' +
    '            name: AmplifyErrorCode.Unknown,\n' +
    "            message: 'An unknown error has occurred.',\n" +
    '            underlyingError: error,\n' +
    '        });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { assertServiceError };\n' +
    '//# sourceMappingURL=assertServiceError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthValidationErrorCode } from '../errors/types/validation.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const validationErrorMap = {\n' +
    '    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n' +
    "        message: 'challengeResponse is required to confirmSignIn',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n' +
    "        message: 'username is required to confirmResetPassword',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n' +
    "        message: 'code is required to confirmSignUp',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n' +
    "        message: 'username is required to confirmSignUp',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n' +
    "        message: 'confirmationCode is required to confirmResetPassword',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n' +
    "        message: 'newPassword is required to confirmResetPassword',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n' +
    "        message: 'username is required to confirmSignUp',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n' +
    "        message: 'username is required to resetPassword',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptySignInPassword]: {\n' +
    "        message: 'password is required to signIn',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptySignInUsername]: {\n' +
    "        message: 'username is required to signIn',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptySignUpPassword]: {\n' +
    "        message: 'password is required to signUp',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptySignUpUsername]: {\n' +
    "        message: 'username is required to signUp',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n' +
    "        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n" +
    "        recoverySuggestion: 'Do not include a password in your signIn call.',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n' +
    "        message: 'Incorrect MFA method was chosen. It should be either SMS or TOTP',\n" +
    "        recoverySuggestion: 'Try to pass TOTP or SMS as the challengeResponse',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n' +
    "        message: 'code is required to verifyTotpSetup',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n' +
    "        message: 'oldPassword and newPassword are required to changePassword',\n" +
    '    },\n' +
    '    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n' +
    "        message: 'confirmation code is required to confirmUserAttribute',\n" +
    '    },\n' +
    '};\n' +
    '// TODO: delete this code when the Auth class is removed.\n' +
    'var AuthErrorStrings;\n' +
    '(function (AuthErrorStrings) {\n' +
    '    AuthErrorStrings["DEFAULT_MSG"] = "Authentication Error";\n' +
    '    AuthErrorStrings["EMPTY_EMAIL"] = "Email cannot be empty";\n' +
    '    AuthErrorStrings["EMPTY_PHONE"] = "Phone number cannot be empty";\n' +
    '    AuthErrorStrings["EMPTY_USERNAME"] = "Username cannot be empty";\n' +
    '    AuthErrorStrings["INVALID_USERNAME"] = "The username should either be a string or one of the sign in types";\n' +
    '    AuthErrorStrings["EMPTY_PASSWORD"] = "Password cannot be empty";\n' +
    '    AuthErrorStrings["EMPTY_CODE"] = "Confirmation code cannot be empty";\n' +
    '    AuthErrorStrings["SIGN_UP_ERROR"] = "Error creating account";\n' +
    '    AuthErrorStrings["NO_MFA"] = "No valid MFA method provided";\n' +
    '    AuthErrorStrings["INVALID_MFA"] = "Invalid MFA type";\n' +
    '    AuthErrorStrings["EMPTY_CHALLENGE"] = "Challenge response cannot be empty";\n' +
    '    AuthErrorStrings["NO_USER_SESSION"] = "Failed to get the session because the user is empty";\n' +
    '    AuthErrorStrings["NETWORK_ERROR"] = "Network Error";\n' +
    '    AuthErrorStrings["DEVICE_CONFIG"] = "Device tracking has not been configured in this User Pool";\n' +
    '    AuthErrorStrings["AUTOSIGNIN_ERROR"] = "Please use your credentials to sign in";\n' +
    `    AuthErrorStrings["OAUTH_ERROR"] = "Couldn't finish OAuth flow, check your User Pool HostedUI settings";\n` +
    '})(AuthErrorStrings || (AuthErrorStrings = {}));\n' +
    'var AuthErrorCodes;\n' +
    '(function (AuthErrorCodes) {\n' +
    '    AuthErrorCodes["SignInException"] = "SignInException";\n' +
    '    AuthErrorCodes["OAuthSignInError"] = "OAuthSignInException";\n' +
    '})(AuthErrorCodes || (AuthErrorCodes = {}));\n' +
    '\n' +
    'export { AuthErrorCodes, AuthErrorStrings, validationErrorMap };\n' +
    '//# sourceMappingURL=AuthErrorStrings.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { decodeJWT, AmplifyError } from '@aws-amplify/core/internals/utils';\n" +
    "import { tokenOrchestrator } from './tokenProvider.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'async function cacheCognitoTokens(AuthenticationResult) {\n' +
    '    if (AuthenticationResult.AccessToken) {\n' +
    '        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n' +
    '        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n' +
    '        const currentTime = new Date().getTime();\n' +
    '        const clockDrift = accessTokenIssuedAtInMillis > 0\n' +
    '            ? accessTokenIssuedAtInMillis - currentTime\n' +
    '            : 0;\n' +
    '        let idToken;\n' +
    '        let refreshToken;\n' +
    '        let deviceMetadata;\n' +
    '        if (AuthenticationResult.RefreshToken) {\n' +
    '            refreshToken = AuthenticationResult.RefreshToken;\n' +
    '        }\n' +
    '        if (AuthenticationResult.IdToken) {\n' +
    '            idToken = decodeJWT(AuthenticationResult.IdToken);\n' +
    '        }\n' +
    '        if (AuthenticationResult?.NewDeviceMetadata) {\n' +
    '            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n' +
    '        }\n' +
    '        const tokens = {\n' +
    '            accessToken,\n' +
    '            idToken,\n' +
    '            refreshToken,\n' +
    '            clockDrift,\n' +
    '            deviceMetadata,\n' +
    '            username: AuthenticationResult.username,\n' +
    '        };\n' +
    '        if (AuthenticationResult?.signInDetails) {\n' +
    '            tokens.signInDetails = AuthenticationResult.signInDetails;\n' +
    '        }\n' +
    '        await tokenOrchestrator.setTokens({\n' +
    '            tokens,\n' +
    '        });\n' +
    '    }\n' +
    '    else {\n' +
    '        // This would be a service error\n' +
    '        throw new AmplifyError({\n' +
    "            message: 'Invalid tokens',\n" +
    "            name: 'InvalidTokens',\n" +
    "            recoverySuggestion: 'Check Cognito UserPool settings',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { cacheCognitoTokens };\n' +
    '//# sourceMappingURL=cacheTokens.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var TokenProviderErrorCode;\n' +
    '(function (TokenProviderErrorCode) {\n' +
    '    TokenProviderErrorCode["InvalidAuthTokens"] = "InvalidAuthTokens";\n' +
    '})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\n' +
    'const tokenValidationErrorMap = {\n' +
    '    [TokenProviderErrorCode.InvalidAuthTokens]: {\n' +
    "        message: 'Invalid tokens.',\n" +
    "        recoverySuggestion: 'Make sure the tokens are valid.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(tokenValidationErrorMap);\n' +
    '\n' +
    'export { TokenProviderErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Hub } from '@aws-amplify/core';\n" +
    "import { getCurrentUser } from '../apis/getCurrentUser.mjs';\n" +
    "import { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n" +
    "import { USER_UNAUTHENTICATED_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\n" +
    'const dispatchSignedInHubEvent = async () => {\n' +
    '    try {\n' +
    "        Hub.dispatch('auth', {\n" +
    "            event: 'signedIn',\n" +
    '            data: await getCurrentUser(),\n' +
    "        }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '    }\n' +
    '    catch (error) {\n' +
    '        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n' +
    '            throw new AuthError({\n' +
    '                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n' +
    '                message: ERROR_MESSAGE,\n' +
    "                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n" +
    '            });\n' +
    '        }\n' +
    '        throw error;\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { ERROR_MESSAGE, dispatchSignedInHubEvent };\n' +
    '//# sourceMappingURL=dispatchSignedInHubEvent.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function isTypeUserPoolConfig(authConfig) {\n' +
    '    if (authConfig &&\n' +
    '        authConfig.Cognito.userPoolId &&\n' +
    '        authConfig.Cognito.userPoolClientId) {\n' +
    '        return true;\n' +
    '    }\n' +
    '    return false;\n' +
    '}\n' +
    'function assertAuthTokens(tokens) {\n' +
    '    if (!tokens || !tokens.accessToken) {\n' +
    '        throw new AuthError({\n' +
    '            name: USER_UNAUTHENTICATED_EXCEPTION,\n' +
    "            message: 'User needs to be authenticated to call this API.',\n" +
    "            recoverySuggestion: 'Sign in before calling this API again.',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    'function assertIdTokenInAuthTokens(tokens) {\n' +
    '    if (!tokens || !tokens.idToken) {\n' +
    '        throw new AuthError({\n' +
    '            name: USER_UNAUTHENTICATED_EXCEPTION,\n' +
    "            message: 'User needs to be authenticated to call this API.',\n" +
    "            recoverySuggestion: 'Sign in before calling this API again.',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    'const oAuthTokenRefreshException = new AuthError({\n' +
    '    name: TOKEN_REFRESH_EXCEPTION,\n' +
    "    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n" +
    "\tPlease change your oauth configuration to use 'code grant' flow.`,\n" +
    '    recoverySuggestion: `Please logout and change your Amplify configuration to use "code grant" flow. \n' +
    "\tE.g { responseType: 'code' }`,\n" +
    '});\n' +
    'const tokenRefreshException = new AuthError({\n' +
    '    name: USER_UNAUTHENTICATED_EXCEPTION,\n' +
    "    message: 'User needs to be authenticated to call this API.',\n" +
    "    recoverySuggestion: 'Sign in before calling this API again.',\n" +
    '});\n' +
    'function assertAuthTokensWithRefreshToken(tokens) {\n' +
    '    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n' +
    '        throw oAuthTokenRefreshException;\n' +
    '    }\n' +
    '    if (!isAuthenticatedWithRefreshToken(tokens)) {\n' +
    '        throw tokenRefreshException;\n' +
    '    }\n' +
    '}\n' +
    'function assertDeviceMetadata(deviceMetadata) {\n' +
    '    if (!deviceMetadata ||\n' +
    '        !deviceMetadata.deviceKey ||\n' +
    '        !deviceMetadata.deviceGroupKey ||\n' +
    '        !deviceMetadata.randomPassword) {\n' +
    '        throw new AuthError({\n' +
    '            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n' +
    "            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n" +
    "            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    'const OAuthStorageKeys = {\n' +
    "    inflightOAuth: 'inflightOAuth',\n" +
    "    oauthSignIn: 'oauthSignIn',\n" +
    "    oauthPKCE: 'oauthPKCE',\n" +
    "    oauthState: 'oauthState',\n" +
    '};\n' +
    'function isAuthenticated(tokens) {\n' +
    '    return tokens?.accessToken || tokens?.idToken;\n' +
    '}\n' +
    'function isAuthenticatedWithRefreshToken(tokens) {\n' +
    '    return isAuthenticated(tokens) && tokens?.refreshToken;\n' +
    '}\n' +
    'function isAuthenticatedWithImplicitOauthFlow(tokens) {\n' +
    '    return isAuthenticated(tokens) && !tokens?.refreshToken;\n' +
    '}\n' +
    '\n' +
    'export { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { isBrowser, ADD_OAUTH_LISTENER } from '@aws-amplify/core/internals/utils';\n" +
    "import { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// attach the side effect for handling the completion of an inflight oauth flow\n' +
    '// this side effect works only on Web\n' +
    'isBrowser() &&\n' +
    '    (() => {\n' +
    '        // add the listener to the singleton for triggering\n' +
    '        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n' +
    '    })();\n' +
    '//# sourceMappingURL=enableOAuthListener.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const cognitoHostedUIIdentityProviderMap = {\n' +
    "    Google: 'Google',\n" +
    "    Facebook: 'Facebook',\n" +
    "    Amazon: 'LoginWithAmazon',\n" +
    "    Apple: 'SignInWithApple',\n" +
    '};\n' +
    '\n' +
    'export { cognitoHostedUIIdentityProviderMap };\n' +
    '//# sourceMappingURL=models.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const openAuthSession = async (url) => {\n' +
    '    if (!window?.location) {\n' +
    '        return;\n' +
    '    }\n' +
    '    // enforce HTTPS\n' +
    "    window.location.href = url.replace('http://', 'https://');\n" +
    '};\n' +
    '\n' +
    'export { openAuthSession };\n' +
    '//# sourceMappingURL=openAuthSession.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var AssociateSoftwareTokenException;\n' +
    '(function (AssociateSoftwareTokenException) {\n' +
    '    AssociateSoftwareTokenException["ConcurrentModificationException"] = "ConcurrentModificationException";\n' +
    '    AssociateSoftwareTokenException["ForbiddenException"] = "ForbiddenException";\n' +
    '    AssociateSoftwareTokenException["InternalErrorException"] = "InternalErrorException";\n' +
    '    AssociateSoftwareTokenException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    AssociateSoftwareTokenException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    AssociateSoftwareTokenException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    AssociateSoftwareTokenException["SoftwareTokenMFANotFoundException"] = "SoftwareTokenMFANotFoundException";\n' +
    '})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\n' +
    'var ChangePasswordException;\n' +
    '(function (ChangePasswordException) {\n' +
    '    ChangePasswordException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ChangePasswordException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ChangePasswordException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ChangePasswordException["InvalidPasswordException"] = "InvalidPasswordException";\n' +
    '    ChangePasswordException["LimitExceededException"] = "LimitExceededException";\n' +
    '    ChangePasswordException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    ChangePasswordException["PasswordResetRequiredException"] = "PasswordResetRequiredException";\n' +
    '    ChangePasswordException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    ChangePasswordException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    ChangePasswordException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    ChangePasswordException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(ChangePasswordException || (ChangePasswordException = {}));\n' +
    'var ConfirmDeviceException;\n' +
    '(function (ConfirmDeviceException) {\n' +
    '    ConfirmDeviceException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ConfirmDeviceException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ConfirmDeviceException["InvalidLambdaResponseException"] = "InvalidLambdaResponseException";\n' +
    '    ConfirmDeviceException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ConfirmDeviceException["InvalidPasswordException"] = "InvalidPasswordException";\n' +
    '    ConfirmDeviceException["InvalidUserPoolConfigurationException"] = "InvalidUserPoolConfigurationException";\n' +
    '    ConfirmDeviceException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    ConfirmDeviceException["PasswordResetRequiredException"] = "PasswordResetRequiredException";\n' +
    '    ConfirmDeviceException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    ConfirmDeviceException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    ConfirmDeviceException["UsernameExistsException"] = "UsernameExistsException";\n' +
    '    ConfirmDeviceException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    ConfirmDeviceException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(ConfirmDeviceException || (ConfirmDeviceException = {}));\n' +
    'var ConfirmForgotPasswordException;\n' +
    '(function (ConfirmForgotPasswordException) {\n' +
    '    ConfirmForgotPasswordException["CodeMismatchException"] = "CodeMismatchException";\n' +
    '    ConfirmForgotPasswordException["ExpiredCodeException"] = "ExpiredCodeException";\n' +
    '    ConfirmForgotPasswordException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ConfirmForgotPasswordException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ConfirmForgotPasswordException["InvalidLambdaResponseException"] = "InvalidLambdaResponseException";\n' +
    '    ConfirmForgotPasswordException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ConfirmForgotPasswordException["InvalidPasswordException"] = "InvalidPasswordException";\n' +
    '    ConfirmForgotPasswordException["LimitExceededException"] = "LimitExceededException";\n' +
    '    ConfirmForgotPasswordException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    ConfirmForgotPasswordException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    ConfirmForgotPasswordException["TooManyFailedAttemptsException"] = "TooManyFailedAttemptsException";\n' +
    '    ConfirmForgotPasswordException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    ConfirmForgotPasswordException["UnexpectedLambdaException"] = "UnexpectedLambdaException";\n' +
    '    ConfirmForgotPasswordException["UserLambdaValidationException"] = "UserLambdaValidationException";\n' +
    '    ConfirmForgotPasswordException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    ConfirmForgotPasswordException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\n' +
    'var ConfirmSignUpException;\n' +
    '(function (ConfirmSignUpException) {\n' +
    '    ConfirmSignUpException["AliasExistsException"] = "AliasExistsException";\n' +
    '    ConfirmSignUpException["CodeMismatchException"] = "CodeMismatchException";\n' +
    '    ConfirmSignUpException["ExpiredCodeException"] = "ExpiredCodeException";\n' +
    '    ConfirmSignUpException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ConfirmSignUpException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ConfirmSignUpException["InvalidLambdaResponseException"] = "InvalidLambdaResponseException";\n' +
    '    ConfirmSignUpException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ConfirmSignUpException["LimitExceededException"] = "LimitExceededException";\n' +
    '    ConfirmSignUpException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    ConfirmSignUpException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    ConfirmSignUpException["TooManyFailedAttemptsException"] = "TooManyFailedAttemptsException";\n' +
    '    ConfirmSignUpException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    ConfirmSignUpException["UnexpectedLambdaException"] = "UnexpectedLambdaException";\n' +
    '    ConfirmSignUpException["UserLambdaValidationException"] = "UserLambdaValidationException";\n' +
    '    ConfirmSignUpException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(ConfirmSignUpException || (ConfirmSignUpException = {}));\n' +
    'var DeleteUserAttributesException;\n' +
    '(function (DeleteUserAttributesException) {\n' +
    '    DeleteUserAttributesException["ForbiddenException"] = "ForbiddenException";\n' +
    '    DeleteUserAttributesException["InternalErrorException"] = "InternalErrorException";\n' +
    '    DeleteUserAttributesException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    DeleteUserAttributesException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    DeleteUserAttributesException["PasswordResetRequiredException"] = "PasswordResetRequiredException";\n' +
    '    DeleteUserAttributesException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    DeleteUserAttributesException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    DeleteUserAttributesException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    DeleteUserAttributesException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\n' +
    'var DeleteUserException;\n' +
    '(function (DeleteUserException) {\n' +
    '    DeleteUserException["ForbiddenException"] = "ForbiddenException";\n' +
    '    DeleteUserException["InternalErrorException"] = "InternalErrorException";\n' +
    '    DeleteUserException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    DeleteUserException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    DeleteUserException["PasswordResetRequiredException"] = "PasswordResetRequiredException";\n' +
    '    DeleteUserException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    DeleteUserException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    DeleteUserException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    DeleteUserException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(DeleteUserException || (DeleteUserException = {}));\n' +
    'var ForgetDeviceException;\n' +
    '(function (ForgetDeviceException) {\n' +
    '    ForgetDeviceException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ForgetDeviceException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ForgetDeviceException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ForgetDeviceException["InvalidUserPoolConfigurationException"] = "InvalidUserPoolConfigurationException";\n' +
    '    ForgetDeviceException["NotAuthorizedException"] = "NotAuthorizedException";\n' +
    '    ForgetDeviceException["PasswordResetRequiredException"] = "PasswordResetRequiredException";\n' +
    '    ForgetDeviceException["ResourceNotFoundException"] = "ResourceNotFoundException";\n' +
    '    ForgetDeviceException["TooManyRequestsException"] = "TooManyRequestsException";\n' +
    '    ForgetDeviceException["UserNotConfirmedException"] = "UserNotConfirmedException";\n' +
    '    ForgetDeviceException["UserNotFoundException"] = "UserNotFoundException";\n' +
    '})(ForgetDeviceException || (ForgetDeviceException = {}));\n' +
    'var ForgotPasswordException;\n' +
    '(function (ForgotPasswordException) {\n' +
    '    ForgotPasswordException["CodeDeliveryFailureException"] = "CodeDeliveryFailureException";\n' +
    '    ForgotPasswordException["ForbiddenException"] = "ForbiddenException";\n' +
    '    ForgotPasswordException["InternalErrorException"] = "InternalErrorException";\n' +
    '    ForgotPasswordException["InvalidEmailRoleAccessPolicyException"] = "InvalidEmailRoleAccessPolicyException";\n' +
    '    ForgotPasswordException["InvalidLambdaResponseException"] = "InvalidLambdaResponseException";\n' +
    '    ForgotPasswordException["InvalidParameterException"] = "InvalidParameterException";\n' +
    '    ForgotPasswordException["InvalidSmsRoleAccessPolicyException"] = "InvalidSmsRoleAccessPolicyException";\n' +
    '    ForgotPasswordException["InvalidSmsRoleTrustRelationshipException"] = "InvalidSmsRoleTrustRelationshipException";\n' +
    '    ForgotPasswordException["LimitExceededException"] = "Lim'... 20813 more characters
} [Function: logger]
____9999999____ {
  code: "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    "import { getCrypto, base64Encoder } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n" +
    '/**\n' +
    ' *\n' +
    ' * @param length Desired length of the code verifier.\n' +
    ' *\n' +
    ' * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n' +
    ' * A code verifier must be with a length >= 43 and <= 128.\n' +
    ' *\n' +
    ' * @returns An object that contains the generated `codeVerifier` and a method\n' +
    ' * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n' +
    ' * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n' +
    ' */\n' +
    'const generateCodeVerifier = (length) => {\n' +
    '    const randomBytes = new Uint8Array(length);\n' +
    '    getCrypto().getRandomValues(randomBytes);\n' +
    "    let value = '';\n" +
    '    let codeChallenge;\n' +
    '    for (let byte of randomBytes) {\n' +
    '        value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n' +
    '    }\n' +
    '    return {\n' +
    '        value,\n' +
    "        method: 'S256',\n" +
    '        toCodeChallenge() {\n' +
    '            if (codeChallenge) {\n' +
    '                return codeChallenge;\n' +
    '            }\n' +
    '            codeChallenge = generateCodeChallenge(value);\n' +
    '            return codeChallenge;\n' +
    '        },\n' +
    '    };\n' +
    '};\n' +
    'function generateCodeChallenge(codeVerifier) {\n' +
    '    const awsCryptoHash = new Sha256();\n' +
    '    awsCryptoHash.update(codeVerifier);\n' +
    '    const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), { urlSafe: true }));\n' +
    '    return codeChallenge;\n' +
    '}\n' +
    'function removePaddingChar(base64Encoded) {\n' +
    "    return base64Encoded.replace(/=/g, '');\n" +
    '}\n' +
    '\n' +
    'export { generateCodeVerifier };\n' +
    '//# sourceMappingURL=generateCodeVerifier.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { generateRandomString } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const generateState = () => {\n' +
    '    return generateRandomString(32);\n' +
    '};\n' +
    '\n' +
    'export { generateState };\n' +
    '//# sourceMappingURL=generateState.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Hub } from '@aws-amplify/core';\n" +
    "import { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n" +
    "import { oAuthStore } from './oAuthStore.mjs';\n" +
    "import { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const handleFailure = async (error) => {\n' +
    '    resolveAndClearInflightPromises();\n' +
    '    await oAuthStore.clearOAuthInflightData();\n' +
    "    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '};\n' +
    '\n' +
    'export { handleFailure };\n' +
    '//# sourceMappingURL=handleFailure.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { defaultStorage } from '@aws-amplify/core';\n" +
    "import { DefaultOAuthStore } from '../signInWithRedirectStore.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const oAuthStore = new DefaultOAuthStore(defaultStorage);\n' +
    '\n' +
    'export { oAuthStore };\n' +
    '//# sourceMappingURL=oAuthStore.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { authErrorMessages } from '../../../../Errors.mjs';\n" +
    "import { AuthErrorCodes } from '../../../../common/AuthErrorStrings.mjs';\n" +
    "import { AuthError } from '../../../../errors/AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const createOAuthError = (message, recoverySuggestion) => new AuthError({\n' +
    "    message: message ?? 'An error has occurred during the oauth process.',\n" +
    '    name: AuthErrorCodes.OAuthSignInError,\n' +
    '    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n' +
    '});\n' +
    '\n' +
    'export { createOAuthError };\n' +
    '//# sourceMappingURL=createOAuthError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { invalidOriginException, invalidRedirectException } from '../../../../errors/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/** @internal */\n' +
    'function getRedirectUrl(redirects) {\n' +
    '    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n' +
    '        redirects?.find(isTheSameDomain);\n' +
    '    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n' +
    '    if (redirectUrlFromTheSameOrigin) {\n' +
    '        return redirectUrlFromTheSameOrigin;\n' +
    '    }\n' +
    '    else if (redirectUrlFromDifferentOrigin) {\n' +
    '        throw invalidOriginException;\n' +
    '    }\n' +
    '    throw invalidRedirectException;\n' +
    '}\n' +
    '// origin + pathname => https://example.com/app\n' +
    "const isSameOriginAndPathName = (redirect) => redirect.startsWith(String(window.location.origin + window.location.pathname ?? '/'));\n" +
    '// domain => outlook.live.com, github.com\n' +
    'const isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\n' +
    "const isHttp = (redirect) => redirect.startsWith('http://');\n" +
    "const isHttps = (redirect) => redirect.startsWith('https://');\n" +
    '\n' +
    'export { getRedirectUrl };\n' +
    '//# sourceMappingURL=getRedirectUrl.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n" +
    "import { oAuthStore } from './oAuthStore.mjs';\n" +
    "import { decodeJWT, Hub } from '@aws-amplify/core';\n" +
    "import { validateState } from './validateState.mjs';\n" +
    "import { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n" +
    "import { cacheCognitoTokens } from '../../tokenProvider/cacheTokens.mjs';\n" +
    "import { createOAuthError } from './createOAuthError.mjs';\n" +
    "import '../refreshAuthTokens.mjs';\n" +
    "import '../../tokenProvider/errorHelpers.mjs';\n" +
    "import { cognitoUserPoolsTokenProvider } from '../../tokenProvider/tokenProvider.mjs';\n" +
    "import { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n' +
    '    const urlParams = new AmplifyUrl(currentUrl);\n' +
    "    const error = urlParams.searchParams.get('error');\n" +
    "    const errorMessage = urlParams.searchParams.get('error_description');\n" +
    '    if (error) {\n' +
    '        throw createOAuthError(errorMessage ?? error);\n' +
    '    }\n' +
    "    if (responseType === 'code') {\n" +
    '        return handleCodeFlow({\n' +
    '            currentUrl,\n' +
    '            userAgentValue,\n' +
    '            clientId,\n' +
    '            redirectUri,\n' +
    '            domain,\n' +
    '            preferPrivateSession,\n' +
    '        });\n' +
    '    }\n' +
    '    return handleImplicitFlow({\n' +
    '        currentUrl,\n' +
    '        redirectUri,\n' +
    '        preferPrivateSession,\n' +
    '    });\n' +
    '};\n' +
    'const handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n' +
    '    /* Convert URL into an object with parameters as keys\n' +
    "{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n" +
    '    const url = new AmplifyUrl(currentUrl);\n' +
    "    const code = url.searchParams.get('code');\n" +
    "    const state = url.searchParams.get('state');\n" +
    '    // if `code` or `state` is not presented in the redirect url, most likely\n' +
    '    // that the end user cancelled the inflight oauth flow by:\n' +
    '    // 1. clicking the back button of browser\n' +
    '    // 2. closing the provider hosted UI page and coming back to the app\n' +
    '    if (!code || !state) {\n' +
    "        throw createOAuthError('User cancelled OAuth flow.');\n" +
    '    }\n' +
    '    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n' +
    '    const validatedState = await validateState(state);\n' +
    "    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n" +
    '    // TODO(v6): check hub events\n' +
    '    // dispatchAuthEvent(\n' +
    "    // \t'codeFlow',\n" +
    '    // \t{},\n' +
    '    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n' +
    '    // );\n' +
    '    const codeVerifier = await oAuthStore.loadPKCE();\n' +
    '    const oAuthTokenBody = {\n' +
    "        grant_type: 'authorization_code',\n" +
    '        code,\n' +
    '        client_id: clientId,\n' +
    '        redirect_uri: redirectUri,\n' +
    '        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n' +
    '    };\n' +
    '    const body = Object.entries(oAuthTokenBody)\n' +
    '        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n' +
    "        .join('&');\n" +
    '    const { access_token, refresh_token, id_token, error, error_message, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n' +
    "        method: 'POST',\n" +
    '        headers: {\n' +
    "            'Content-Type': 'application/x-www-form-urlencoded',\n" +
    '            [USER_AGENT_HEADER]: userAgentValue,\n' +
    '        },\n' +
    '        body,\n' +
    '    })).json();\n' +
    '    if (error) {\n' +
    '        // error is being caught in attemptCompleteOAuthFlow.ts\n' +
    '        throw createOAuthError(error_message ?? error);\n' +
    '    }\n' +
    "    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n" +
    '    await cacheCognitoTokens({\n' +
    '        username,\n' +
    '        AccessToken: access_token,\n' +
    '        IdToken: id_token,\n' +
    '        RefreshToken: refresh_token,\n' +
    '        TokenType: token_type,\n' +
    '        ExpiresIn: expires_in,\n' +
    '    });\n' +
    '    return completeFlow({\n' +
    '        redirectUri,\n' +
    '        state: validatedState,\n' +
    '        preferPrivateSession,\n' +
    '    });\n' +
    '};\n' +
    'const handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n' +
    "    // hash is `null` if `#` doesn't exist on URL\n" +
    '    const url = new AmplifyUrl(currentUrl);\n' +
    "    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n" +
    '        .substring(1) // Remove # from returned code\n' +
    "        .split('&')\n" +
    "        .map(pairings => pairings.split('='))\n" +
    '        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n' +
    '        id_token: undefined,\n' +
    '        access_token: undefined,\n' +
    '        state: undefined,\n' +
    '        token_type: undefined,\n' +
    '        expires_in: undefined,\n' +
    '        error_description: undefined,\n' +
    '        error: undefined,\n' +
    '    });\n' +
    '    if (error) {\n' +
    '        throw createOAuthError(error_description ?? error);\n' +
    '    }\n' +
    '    if (!access_token) {\n' +
    '        // error is being caught in attemptCompleteOAuthFlow.ts\n' +
    "        throw createOAuthError('No access token returned from OAuth flow.');\n" +
    '    }\n' +
    '    const validatedState = await validateState(state);\n' +
    "    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n" +
    '    await cacheCognitoTokens({\n' +
    '        username,\n' +
    '        AccessToken: access_token,\n' +
    '        IdToken: id_token,\n' +
    '        TokenType: token_type,\n' +
    '        ExpiresIn: expires_in,\n' +
    '    });\n' +
    '    return completeFlow({\n' +
    '        redirectUri,\n' +
    '        state: validatedState,\n' +
    '        preferPrivateSession,\n' +
    '    });\n' +
    '};\n' +
    'const completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n' +
    '    await oAuthStore.clearOAuthData();\n' +
    '    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n' +
    '    // this should be called before any call that involves `fetchAuthSession`\n' +
    '    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n' +
    '    //  `fetchAuthSession` can be resolved\n' +
    '    resolveAndClearInflightPromises();\n' +
    '    // when the oauth flow is completed, there should be nothing to block the async calls\n' +
    '    // that involves fetchAuthSession in the `TokenOrchestrator`\n' +
    '    cognitoUserPoolsTokenProvider.setWaitForInflightOAuth(async () => { });\n' +
    '    if (isCustomState(state)) {\n' +
    "        Hub.dispatch('auth', {\n" +
    "            event: 'customOAuthState',\n" +
    '            data: urlSafeDecode(getCustomState(state)),\n' +
    "        }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '    }\n' +
    "    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '    await dispatchSignedInHubEvent();\n' +
    '    clearHistory(redirectUri);\n' +
    '};\n' +
    'const isCustomState = (state) => {\n' +
    '    return /-/.test(state);\n' +
    '};\n' +
    'const getCustomState = (state) => {\n' +
    "    return state.split('-').splice(1).join('-');\n" +
    '};\n' +
    'const clearHistory = (redirectUri) => {\n' +
    "    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n" +
    "        window.history.replaceState(window.history.state, '', redirectUri);\n" +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { completeOAuthFlow };\n' +
    '//# sourceMappingURL=completeOAuthFlow.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { getUser } from '../../utils/clients/CognitoIdentityProvider/index.mjs';\n" +
    "import { getRegion } from '../../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { assertAuthTokens } from '../../utils/types.mjs';\n" +
    "import { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const fetchUserAttributes = async (amplify) => {\n' +
    '    const authConfig = amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const { tokens } = await fetchAuthSession(amplify, {\n' +
    '        forceRefresh: false,\n' +
    '    });\n' +
    '    assertAuthTokens(tokens);\n' +
    '    const { UserAttributes } = await getUser({\n' +
    '        region: getRegion(authConfig.userPoolId),\n' +
    '        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n' +
    '    }, {\n' +
    '        AccessToken: tokens.accessToken.toString(),\n' +
    '    });\n' +
    '    return toAuthUserAttribute(UserAttributes);\n' +
    '};\n' +
    '\n' +
    'export { fetchUserAttributes };\n' +
    '//# sourceMappingURL=fetchUserAttributes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { completeOAuthSignOut } from './completeOAuthSignOut.mjs';\n" +
    "import { oAuthSignOutRedirect } from './oAuthSignOutRedirect.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const handleOAuthSignOut = async (cognitoConfig, store) => {\n' +
    '    const { isOAuthSignIn } = await store.loadOAuthSignIn();\n' +
    '    // Clear everything before attempting to visted logout endpoint since the current application\n' +
    '    // state could be wiped away on redirect\n' +
    '    await completeOAuthSignOut(store);\n' +
    '    if (isOAuthSignIn) {\n' +
    '        // On web, this will always end up being a void action\n' +
    '        return oAuthSignOutRedirect(cognitoConfig);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { handleOAuthSignOut };\n' +
    '//# sourceMappingURL=handleOAuthSignOut.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from './AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\n" +
    "const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\n" +
    "const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\n" +
    "const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\n" +
    "const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\n" +
    'const invalidRedirectException = new AuthError({\n' +
    '    name: INVALID_REDIRECT_EXCEPTION,\n' +
    "    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n" +
    "    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n" +
    '});\n' +
    "const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\n" +
    'const invalidOriginException = new AuthError({\n' +
    '    name: INVALID_ORIGIN_EXCEPTION,\n' +
    "    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n" +
    "    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n" +
    '});\n' +
    "const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\n" +
    "const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\n" +
    "const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n" +
    '\n' +
    'export { AUTO_SIGN_IN_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION, INVALID_ORIGIN_EXCEPTION, INVALID_REDIRECT_EXCEPTION, OAUTH_SIGNOUT_EXCEPTION, TOKEN_REFRESH_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_ALREADY_AUTHENTICATED_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, invalidOriginException, invalidRedirectException };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var AuthErrorTypes;\n' +
    '(function (AuthErrorTypes) {\n' +
    '    AuthErrorTypes["NoConfig"] = "noConfig";\n' +
    '    AuthErrorTypes["MissingAuthConfig"] = "missingAuthConfig";\n' +
    '    AuthErrorTypes["EmptyUsername"] = "emptyUsername";\n' +
    '    AuthErrorTypes["InvalidUsername"] = "invalidUsername";\n' +
    '    AuthErrorTypes["EmptyPassword"] = "emptyPassword";\n' +
    '    AuthErrorTypes["EmptyCode"] = "emptyCode";\n' +
    '    AuthErrorTypes["SignUpError"] = "signUpError";\n' +
    '    AuthErrorTypes["NoMFA"] = "noMFA";\n' +
    '    AuthErrorTypes["InvalidMFA"] = "invalidMFA";\n' +
    '    AuthErrorTypes["EmptyChallengeResponse"] = "emptyChallengeResponse";\n' +
    '    AuthErrorTypes["NoUserSession"] = "noUserSession";\n' +
    '    AuthErrorTypes["Default"] = "default";\n' +
    '    AuthErrorTypes["DeviceConfig"] = "deviceConfig";\n' +
    '    AuthErrorTypes["NetworkError"] = "networkError";\n' +
    '    AuthErrorTypes["AutoSignInError"] = "autoSignInError";\n' +
    '    AuthErrorTypes["OAuthSignInError"] = "oauthSignInError";\n' +
    '})(AuthErrorTypes || (AuthErrorTypes = {}));\n' +
    '\n' +
    'export { AuthErrorTypes };\n' +
    '//# sourceMappingURL=Auth.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { OAuthStorageKeys } from './types.mjs';\n" +
    "import { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\n" +
    "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\n" +
    "const name = 'CognitoIdentityServiceProvider';\n" +
    'class DefaultOAuthStore {\n' +
    '    constructor(keyValueStorage) {\n' +
    '        this.keyValueStorage = keyValueStorage;\n' +
    '    }\n' +
    '    async clearOAuthInflightData() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        await Promise.all([\n' +
    '            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n' +
    '            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n' +
    '            this.keyValueStorage.removeItem(authKeys.oauthState),\n' +
    '        ]);\n' +
    '    }\n' +
    '    async clearOAuthData() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        await this.clearOAuthInflightData();\n' +
    '        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n' +
    '        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n' +
    '    }\n' +
    '    loadOAuthState() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return this.keyValueStorage.getItem(authKeys.oauthState);\n' +
    '    }\n' +
    '    storeOAuthState(state) {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n' +
    '    }\n' +
    '    loadPKCE() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n' +
    '    }\n' +
    '    storePKCE(pkce) {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n' +
    '    }\n' +
    '    setAuthConfig(authConfigParam) {\n' +
    '        this.cognitoConfig = authConfigParam;\n' +
    '    }\n' +
    '    async loadOAuthInFlight() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    "        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n" +
    '    }\n' +
    '    async storeOAuthInFlight(inflight) {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n' +
    '    }\n' +
    '    async loadOAuthSignIn() {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n' +
    "        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n" +
    '            [];\n' +
    '        return {\n' +
    "            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n" +
    "            preferPrivateSession: preferPrivateSession === 'true',\n" +
    '        };\n' +
    '    }\n' +
    '    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n' +
    '        assertTokenProviderConfig(this.cognitoConfig);\n' +
    '        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n' +
    '        return await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n' +
    '    }\n' +
    '}\n' +
    'const createKeysForAuthStorage = (provider, identifier) => {\n' +
    '    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n' +
    '};\n' +
    '\n' +
    'export { DefaultOAuthStore };\n' +
    '//# sourceMappingURL=signInWithRedirectStore.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '@aws-amplify/core';\n" +
    "import { AuthErrorStrings } from './common/AuthErrorStrings.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('AuthError');\n" +
    'class AuthError extends Error {\n' +
    '    constructor(type) {\n' +
    '        const { message, log } = authErrorMessages[type];\n' +
    '        super(message);\n' +
    '        // Hack for making the custom error class work when transpiled to es5\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = AuthError;\n' +
    '        Object.setPrototypeOf(this, AuthError.prototype);\n' +
    "        this.name = 'AuthError';\n" +
    '        this.log = log || message;\n' +
    '        logger.error(this.log);\n' +
    '    }\n' +
    '}\n' +
    'class NoUserPoolError extends AuthError {\n' +
    '    constructor(type) {\n' +
    '        super(type);\n' +
    '        // Hack for making the custom error class work when transpiled to es5\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = NoUserPoolError;\n' +
    '        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n' +
    "        this.name = 'NoUserPoolError';\n" +
    '    }\n' +
    '}\n' +
    'const authErrorMessages = {\n' +
    '    oauthSignInError: {\n' +
    '        message: AuthErrorStrings.OAUTH_ERROR,\n' +
    "        log: 'Make sure Cognito Hosted UI has been configured correctly',\n" +
    '    },\n' +
    '    noConfig: {\n' +
    '        message: AuthErrorStrings.DEFAULT_MSG,\n' +
    '        log: `\n' +
    '            Error: Amplify has not been configured correctly.\n' +
    '            This error is typically caused by one of the following scenarios:\n' +
    '\n' +
    "            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n" +
    '                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n' +
    '            \n' +
    '            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n' +
    '\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n' +
    '        `,\n' +
    '    },\n' +
    '    missingAuthConfig: {\n' +
    '        message: AuthErrorStrings.DEFAULT_MSG,\n' +
    '        log: `\n' +
    '            Error: Amplify has not been configured correctly. \n' +
    '            The configuration object is missing required auth properties.\n' +
    '            This error is typically caused by one of the following scenarios:\n' +
    '\n' +
    '            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n' +
    '                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n' +
    '\n' +
    '            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n' +
    '        `,\n' +
    '    },\n' +
    '    emptyUsername: {\n' +
    '        message: AuthErrorStrings.EMPTY_USERNAME,\n' +
    '    },\n' +
    '    // TODO: should include a list of valid sign-in types\n' +
    '    invalidUsername: {\n' +
    '        message: AuthErrorStrings.INVALID_USERNAME,\n' +
    '    },\n' +
    '    emptyPassword: {\n' +
    '        message: AuthErrorStrings.EMPTY_PASSWORD,\n' +
    '    },\n' +
    '    emptyCode: {\n' +
    '        message: AuthErrorStrings.EMPTY_CODE,\n' +
    '    },\n' +
    '    signUpError: {\n' +
    '        message: AuthErrorStrings.SIGN_UP_ERROR,\n' +
    "        log: 'The first parameter should either be non-null string or object',\n" +
    '    },\n' +
    '    noMFA: {\n' +
    '        message: AuthErrorStrings.NO_MFA,\n' +
    '    },\n' +
    '    invalidMFA: {\n' +
    '        message: AuthErrorStrings.INVALID_MFA,\n' +
    '    },\n' +
    '    emptyChallengeResponse: {\n' +
    '        message: AuthErrorStrings.EMPTY_CHALLENGE,\n' +
    '    },\n' +
    '    noUserSession: {\n' +
    '        message: AuthErrorStrings.NO_USER_SESSION,\n' +
    '    },\n' +
    '    deviceConfig: {\n' +
    '        message: AuthErrorStrings.DEVICE_CONFIG,\n' +
    '    },\n' +
    '    networkError: {\n' +
    '        message: AuthErrorStrings.NETWORK_ERROR,\n' +
    '    },\n' +
    '    autoSignInError: {\n' +
    '        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n' +
    '    },\n' +
    '    default: {\n' +
    '        message: AuthErrorStrings.DEFAULT_MSG,\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { AuthError, NoUserPoolError, authErrorMessages };\n' +
    '//# sourceMappingURL=Errors.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { assertAuthTokens } from '../../utils/types.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getCurrentUser = async (amplify) => {\n' +
    '    const authConfig = amplify.getConfig().Auth?.Cognito;\n' +
    '    assertTokenProviderConfig(authConfig);\n' +
    '    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n' +
    '    assertAuthTokens(tokens);\n' +
    "    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n" +
    '    const authUser = {\n' +
    '        username: username,\n' +
    '        userId: sub,\n' +
    '    };\n' +
    '    const signInDetails = getSignInDetailsFromTokens(tokens);\n' +
    '    if (signInDetails) {\n' +
    '        authUser.signInDetails = signInDetails;\n' +
    '    }\n' +
    '    return authUser;\n' +
    '};\n' +
    'function getSignInDetailsFromTokens(tokens) {\n' +
    '    return tokens?.signInDetails;\n' +
    '}\n' +
    '\n' +
    'export { getCurrentUser };\n' +
    '//# sourceMappingURL=getCurrentUser.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    "  module.exports = require('./cjs/scheduler.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('./cjs/scheduler.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { defaultStorage } from '@aws-amplify/core';\n" +
    "import { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\n" +
    "import { DefaultTokenStore } from './TokenStore.mjs';\n" +
    "import { TokenOrchestrator } from './TokenOrchestrator.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class CognitoUserPoolsTokenProvider {\n' +
    '    constructor() {\n' +
    '        this.authTokenStore = new DefaultTokenStore();\n' +
    '        this.authTokenStore.setKeyValueStorage(defaultStorage);\n' +
    '        this.tokenOrchestrator = new TokenOrchestrator();\n' +
    '        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n' +
    '        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n' +
    '    }\n' +
    '    getTokens({ forceRefresh } = { forceRefresh: false }) {\n' +
    '        return this.tokenOrchestrator.getTokens({ forceRefresh });\n' +
    '    }\n' +
    '    setKeyValueStorage(keyValueStorage) {\n' +
    '        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n' +
    '    }\n' +
    '    setWaitForInflightOAuth(waitForInflightOAuth) {\n' +
    '        this.tokenOrchestrator.setWaitForInflightOAuth(waitForInflightOAuth);\n' +
    '    }\n' +
    '    setAuthConfig(authConfig) {\n' +
    '        this.authTokenStore.setAuthConfig(authConfig);\n' +
    '        this.tokenOrchestrator.setAuthConfig(authConfig);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { CognitoUserPoolsTokenProvider };\n' +
    '//# sourceMappingURL=CognitoUserPoolsTokenProvider.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const IdentityIdStorageKeys = {\n' +
    "    identityId: 'identityId',\n" +
    '};\n' +
    '\n' +
    'export { IdentityIdStorageKeys };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'const AuthTokenStorageKeys = {\n' +
    "    accessToken: 'accessToken',\n" +
    "    idToken: 'idToken',\n" +
    "    oidcProvider: 'oidcProvider',\n" +
    "    clockDrift: 'clockDrift',\n" +
    "    refreshToken: 'refreshToken',\n" +
    "    deviceKey: 'deviceKey',\n" +
    "    randomPasswordKey: 'randomPasswordKey',\n" +
    "    deviceGroupKey: 'deviceGroupKey',\n" +
    "    signInDetails: 'signInDetails',\n" +
    '};\n' +
    '\n' +
    'export { AuthTokenStorageKeys };\n' +
    '//# sourceMappingURL=types.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { decodeJWT } from '@aws-amplify/core/internals/utils';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function formLoginsMap(idToken) {\n' +
    '    const issuer = decodeJWT(idToken).payload.iss;\n' +
    '    const res = {};\n' +
    '    if (!issuer) {\n' +
    '        throw new AuthError({\n' +
    "            name: 'InvalidIdTokenException',\n" +
    "            message: 'Invalid Idtoken.',\n" +
    '        });\n' +
    '    }\n' +
    "    let domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n" +
    '    res[domainName] = idToken;\n' +
    '    return res;\n' +
    '}\n' +
    '\n' +
    'export { formLoginsMap };\n' +
    '//# sourceMappingURL=utils.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger, getId } from '@aws-amplify/core';\n" +
    "import { AuthError } from '../../../errors/AuthError.mjs';\n" +
    "import { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\n" +
    "import { formLoginsMap } from './utils.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('CognitoIdentityIdProvider');\n" +
    '/**\n' +
    ' * Provides a Cognito identityId\n' +
    ' *\n' +
    ' * @param tokens - The AuthTokens received after SignIn\n' +
    ' * @returns string\n' +
    ' * @throws configuration excpetions: {@link InvalidIdentityPoolIdException }\n' +
    ' *  - Auth errors that may arise from misconfiguration.\n' +
    ' * @throws service excpetions: {@link GetIdException }\n' +
    ' */\n' +
    'async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n' +
    '    identityIdStore.setAuthConfig({ Cognito: authConfig });\n' +
    '    // will return null only if there is no identityId cached or if there is an error retrieving it\n' +
    '    let identityId = await identityIdStore.loadIdentityId();\n' +
    '    // Tokens are available so return primary identityId\n' +
    '    if (tokens) {\n' +
    '        // If there is existing primary identityId in-memory return that\n' +
    "        if (identityId && identityId.type === 'primary') {\n" +
    '            return identityId.id;\n' +
    '        }\n' +
    '        else {\n' +
    '            const logins = tokens.idToken\n' +
    '                ? formLoginsMap(tokens.idToken.toString())\n' +
    '                : {};\n' +
    '            const generatedIdentityId = await generateIdentityId(logins, authConfig);\n' +
    '            if (identityId && identityId.id === generatedIdentityId) {\n' +
    '                logger.debug(`The guest identity ${identityId.id} has become the primary identity.`);\n' +
    '            }\n' +
    '            identityId = {\n' +
    '                id: generatedIdentityId,\n' +
    "                type: 'primary',\n" +
    '            };\n' +
    '        }\n' +
    '    }\n' +
    '    else {\n' +
    '        // If there is existing guest identityId cached return that\n' +
    "        if (identityId && identityId.type === 'guest') {\n" +
    '            return identityId.id;\n' +
    '        }\n' +
    '        else {\n' +
    '            identityId = {\n' +
    '                id: await generateIdentityId({}, authConfig),\n' +
    "                type: 'guest',\n" +
    '            };\n' +
    '        }\n' +
    '    }\n' +
    '    // Store in-memory or local storage depending on guest or primary identityId\n' +
    '    identityIdStore.storeIdentityId(identityId);\n' +
    '    return identityId.id;\n' +
    '}\n' +
    'async function generateIdentityId(logins, authConfig) {\n' +
    '    const identityPoolId = authConfig?.identityPoolId;\n' +
    '    const region = getRegionFromIdentityPoolId(identityPoolId);\n' +
    "    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n" +
    '    const idResult = \n' +
    '    // for a first-time user, this will return a brand new identity\n' +
    '    // for a returning user, this will retrieve the previous identity assocaited with the logins\n' +
    '    (await getId({\n' +
    '        region,\n' +
    '    }, {\n' +
    '        IdentityPoolId: identityPoolId,\n' +
    '        Logins: logins,\n' +
    '    })).IdentityId;\n' +
    '    if (!idResult) {\n' +
    '        throw new AuthError({\n' +
    "            name: 'GetIdResponseException',\n" +
    "            message: 'Received undefined response from getId operation',\n" +
    "            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n" +
    '        });\n' +
    '    }\n' +
    '    return idResult;\n' +
    '}\n' +
    '\n' +
    'export { cognitoIdentityIdProvider };\n' +
    '//# sourceMappingURL=IdentityIdProvider.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { createTheme } from '@aws-amplify/ui';\n" +
    '\n' +
    'const ThemeContext = React.createContext({\n' +
    '    theme: createTheme(),\n' +
    '    colorMode: undefined,\n' +
    '});\n' +
    '\n' +
    'export { ThemeContext };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const FieldsetContext = React.createContext({\n' +
    '    isFieldsetDisabled: false,\n' +
    '});\n' +
    '/**\n' +
    ' * @description Fieldsets in HTML can be disabled, which disables all child\n' +
    ' * fieldsets and input controls. `useFieldset` passes the disabled state down\n' +
    ' * via context.\n' +
    ' */\n' +
    'const useFieldset = () => React.useContext(FieldsetContext);\n' +
    '\n' +
    'export { FieldsetContext, useFieldset };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const IconsContext = React.createContext({});\n' +
    '\n' +
    'export { IconsContext };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    " * This file contains helpers that lets you easily access current actor's state\n" +
    ' * and context.\n' +
    ' */\n' +
    '/**\n' +
    ' * Get the state of current actor. This is useful for checking which screen\n' +
    " * to render: e.g. `getActorState(state).matches('confirmSignUp.edit').\n" +
    ' */\n' +
    'const getActorState = (state) => {\n' +
    '    return state.context.actorRef?.getSnapshot();\n' +
    '};\n' +
    '/**\n' +
    ' * Get the context of current actor. Useful for getting any nested context\n' +
    ' * like remoteError.\n' +
    ' */\n' +
    'const getActorContext = (state) => {\n' +
    '    return getActorState(state)?.context;\n' +
    '};\n' +
    '\n' +
    'export { getActorContext, getActorState };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import isEqual from 'lodash/isEqual.js';\n" +
    "import { useSetUserAgent } from '@aws-amplify/ui-react-core';\n" +
    "import { getLogger, getDefaultPasswordValidators, runFieldValidators, getDefaultConfirmPasswordValidators, changePassword } from '@aws-amplify/ui';\n" +
    "import { useAuth } from '../../../hooks/useAuth.mjs';\n" +
    "import 'aws-amplify/storage';\n" +
    "import '../../ThemeProvider/ThemeContext.mjs';\n" +
    "import '../../../primitives/Alert/AlertIcon.mjs';\n" +
    "import { View } from '../../../primitives/View/View.mjs';\n" +
    "import '../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '../../../primitives/Field/FieldClearButton.mjs';\n" +
    "import '../../../primitives/Field/FieldDescription.mjs';\n" +
    "import '../../../primitives/Field/FieldErrorMessage.mjs';\n" +
    "import '../../../primitives/Field/Field.mjs';\n" +
    "import '../../../primitives/Alert/Alert.mjs';\n" +
    "import '../../../primitives/Autocomplete/Autocomplete.mjs';\n" +
    "import '../../../primitives/Badge/Badge.mjs';\n" +
    "import '../../../primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "import '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "import '../../../primitives/Card/Card.mjs';\n" +
    "import '../../../primitives/CheckboxField/CheckboxField.mjs';\n" +
    "import '../../../primitives/Collection/Collection.mjs';\n" +
    "import '../../../primitives/Divider/Divider.mjs';\n" +
    "import '../../../primitives/DropZone/DropZone.mjs';\n" +
    "import '../../../primitives/Accordion/Accordion.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../../../primitives/Fieldset/Fieldset.mjs';\n" +
    "import '../../../primitives/Fieldset/useFieldset.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Grid/Grid.mjs';\n" +
    "import '../../../primitives/Heading/Heading.mjs';\n" +
    "import '../../../primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "import '../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../primitives/Image/Image.mjs';\n" +
    "import '../../../primitives/Input/Input.mjs';\n" +
    "import '../../../primitives/Label/Label.mjs';\n" +
    "import '../../../primitives/Link/Link.mjs';\n" +
    "import '../../../primitives/Loader/Loader.mjs';\n" +
    "import '../../../primitives/Menu/Menu.mjs';\n" +
    "import '../../../primitives/Menu/MenuButton.mjs';\n" +
    "import '../../../primitives/Menu/MenuItem.mjs';\n" +
    "import '../../../primitives/Message/Message.mjs';\n" +
    "import '../../../primitives/Pagination/Pagination.mjs';\n" +
    "import '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import '../../../primitives/Placeholder/Placeholder.mjs';\n" +
    "import '../../../primitives/Radio/Radio.mjs';\n" +
    "import '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import '../../../primitives/Rating/Rating.mjs';\n" +
    "import '../../../primitives/ScrollView/ScrollView.mjs';\n" +
    "import '../../../primitives/SearchField/SearchField.mjs';\n" +
    "import '../../../primitives/SelectField/SelectField.mjs';\n" +
    "import '../../../primitives/SliderField/SliderField.mjs';\n" +
    "import '../../../primitives/StepperField/StepperField.mjs';\n" +
    "import '../../../primitives/SwitchField/SwitchField.mjs';\n" +
    "import '../../../primitives/Table/Table.mjs';\n" +
    "import '../../../primitives/Table/TableBody.mjs';\n" +
    "import '../../../primitives/Table/TableCell.mjs';\n" +
    "import '../../../primitives/Table/TableFoot.mjs';\n" +
    "import '../../../primitives/Table/TableHead.mjs';\n" +
    "import '../../../primitives/Table/TableRow.mjs';\n" +
    "import '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import '../../../primitives/Text/Text.mjs';\n" +
    "import '../../../primitives/TextAreaField/TextAreaField.mjs';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/ToggleButton/ToggleButton.mjs';\n" +
    "import '../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "import '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { ComponentClassName } from '../constants.mjs';\n" +
    "import DEFAULTS from './defaults.mjs';\n" +
    "import { defaultChangePasswordDisplayText } from '../utils/displayText.mjs';\n" +
    "import { VERSION } from '../../../version.mjs';\n" +
    '\n' +
    "const logger = getLogger('AccountSettings');\n" +
    'const getIsDisabled = (formValues, validationError) => {\n' +
    '    const { currentPassword, newPassword, confirmPassword } = formValues;\n' +
    '    const hasEmptyField = !currentPassword || !newPassword || !confirmPassword;\n' +
    '    if (hasEmptyField) {\n' +
    '        return true;\n' +
    '    }\n' +
    '    const arePasswordsInvalid = validationError.newPassword?.length > 0 ||\n' +
    '        validationError.confirmPassword?.length > 0;\n' +
    '    return arePasswordsInvalid;\n' +
    '};\n' +
    'function ChangePassword({ components, displayText: overrideDisplayText, onError, onSuccess, validators, }) {\n' +
    '    const [errorMessage, setErrorMessage] = React__default.useState(null);\n' +
    '    const [formValues, setFormValues] = React__default.useState({});\n' +
    '    const [validationError, setValidationError] = React__default.useState({});\n' +
    '    const blurredFields = React__default.useRef([]);\n' +
    '    const { user, isLoading } = useAuth();\n' +
    '    const isDisabled = getIsDisabled(formValues, validationError);\n' +
    '    const passwordValidators = React__default.useMemo(() => {\n' +
    '        return validators ?? getDefaultPasswordValidators();\n' +
    '    }, [validators]);\n' +
    '    useSetUserAgent({\n' +
    "        componentName: 'ChangePassword',\n" +
    "        packageName: 'react',\n" +
    '        version: VERSION,\n' +
    '    });\n' +
    '    /*\n' +
    '     * Note that formValues and other states are passed in as props so that\n' +
    '     * it does not depend on whether or not those states have been updated yet\n' +
    '     */\n' +
    '    const validateNewPassword = React__default.useCallback(({ formValues, eventType }) => {\n' +
    '        const { newPassword } = formValues;\n' +
    "        const hasBlurred = blurredFields.current.includes('newPassword');\n" +
    '        return runFieldValidators({\n' +
    '            value: newPassword,\n' +
    '            validators: passwordValidators,\n' +
    '            eventType,\n' +
    '            hasBlurred,\n' +
    '        });\n' +
    '    }, [passwordValidators]);\n' +
    '    const validateConfirmPassword = React__default.useCallback(({ formValues, eventType }) => {\n' +
    '        const { newPassword, confirmPassword } = formValues;\n' +
    "        const hasBlurred = blurredFields.current.includes('confirmPassword');\n" +
    '        const confirmPasswordValidators = getDefaultConfirmPasswordValidators(newPassword);\n' +
    '        return runFieldValidators({\n' +
    '            value: confirmPassword,\n' +
    '            validators: confirmPasswordValidators,\n' +
    '            eventType,\n' +
    '            hasBlurred,\n' +
    '        });\n' +
    '    }, []);\n' +
    '    const runValidation = React__default.useCallback((param) => {\n' +
    '        const passwordErrors = validateNewPassword(param);\n' +
    '        const confirmPasswordErrors = validateConfirmPassword(param);\n' +
    '        const newValidationError = {\n' +
    '            newPassword: passwordErrors,\n' +
    '            confirmPassword: confirmPasswordErrors,\n' +
    '        };\n' +
    '        // only re-render if errors have changed\n' +
    '        if (!isEqual(validationError, newValidationError)) {\n' +
    '            setValidationError(newValidationError);\n' +
    '        }\n' +
    '    }, [validateConfirmPassword, validateNewPassword, validationError]);\n' +
    '    /* Translations */\n' +
    '    const displayText = {\n' +
    '        ...defaultChangePasswordDisplayText,\n' +
    '        ...overrideDisplayText,\n' +
    '    };\n' +
    '    const { confirmPasswordFieldLabel, currentPasswordFieldLabel, newPasswordFieldLabel, updatePasswordButtonText, } = displayText;\n' +
    '    /* Subcomponents */\n' +
    '    const { CurrentPasswordField, NewPasswordField, ConfirmPasswordField, SubmitButton, ErrorMessage, } = React__default.useMemo(() => ({ ...DEFAULTS, ...(components ?? {}) }), [components]);\n' +
    '    /* Event Handlers */\n' +
    '    const handleChange = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        const { name, value } = event.target;\n' +
    '        const newFormValues = { ...formValues, [name]: value };\n' +
    "        runValidation({ formValues: newFormValues, eventType: 'change' });\n" +
    '        setFormValues(newFormValues);\n' +
    '    };\n' +
    '    const handleBlur = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        const { name } = event.target;\n' +
    '        // only update state and run validation if this is the first time blurring the field\n' +
    '        if (!blurredFields.current.includes(name)) {\n' +
    '            const newBlurredFields = [...blurredFields.current, name];\n' +
    '            blurredFields.current = newBlurredFields;\n' +
    "            runValidation({ formValues, eventType: 'blur' });\n" +
    '        }\n' +
    '    };\n' +
    '    const handleSubmit = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        if (!user) {\n' +
    '            return;\n' +
    '        }\n' +
    '        const { currentPassword, newPassword } = formValues;\n' +
    '        if (errorMessage) {\n' +
    '            setErrorMessage(null);\n' +
    '        }\n' +
    '        changePassword({ currentPassword, newPassword })\n' +
    '            .then(() => {\n' +
    '            // notify success to the parent\n' +
    '            onSuccess?.();\n' +
    '        })\n' +
    '            .catch((e) => {\n' +
    '            const error = e;\n' +
    '            if (error.message)\n' +
    '                setErrorMessage(error.message);\n' +
    '            onError?.(error); // notify error to the parent\n' +
    '        });\n' +
    '    };\n' +
    '    // Return null if Auth.getgetCurrentUser is still in progress\n' +
    '    if (isLoading) {\n' +
    '        return null;\n' +
    '    }\n' +
    "    // Return null if user isn't authenticated in the first place\n" +
    '    if (!user) {\n' +
    "        logger.warn('<ChangePassword /> requires user to be authenticated.');\n" +
    '        return null;\n' +
    '    }\n' +
    '    return (React__default.createElement(View, { as: "form", className: ComponentClassName.ChangePassword, onSubmit: handleSubmit },\n' +
    '        React__default.createElement(Flex, { direction: "column" },\n' +
    '            React__default.createElement(CurrentPasswordField, { autoComplete: "current-password", isRequired: true, label: currentPasswordFieldLabel, name: "currentPassword", onBlur: handleBlur, onChange: handleChange }),\n' +
    '            React__default.createElement(NewPasswordField, { autoComplete: "new-password", fieldValidationErrors: validationError?.newPassword, isRequired: true, label: newPasswordFieldLabel, name: "newPassword", onBlur: handleBlur, onChange: handleChange }),\n' +
    '            React__default.createElement(ConfirmPasswordField, { autoComplete: "new-password", fieldValidationErrors: validationError?.confirmPassword, isRequired: true,'... 680 more characters
} [Function: logger]
____9999999____ {
  code: "import { getActorContext, getActorState } from './actor.mjs';\n" +
    "import { NAVIGABLE_ROUTE_EVENT } from './constants.mjs';\n" +
    "import { getRoute } from './getRoute.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * This file contains helpers that translates xstate internals to more\n' +
    ' * understandable authenticator contexts. We provide these contexts with\n' +
    ' * `useAuthenticator` hook/composable/service.\n' +
    ' */\n' +
    '/**\n' +
    ' * Creates public facing auth helpers that abstracts out xstate implementation\n' +
    ' * detail. Each framework implementation can export these helpers so that\n' +
    ' * developers can send events without having to learn internals.\n' +
    ' *\n' +
    ' * ```\n' +
    ' * const [state, send] = useActor(...);\n' +
    ' * const { submit } = getSendEventAliases(send);\n' +
    ' * submit({ username, password})\n' +
    ' * ```\n' +
    ' */\n' +
    'const getSendEventAliases = (send) => {\n' +
    '    const sendToMachine = (type) => {\n' +
    '        // TODO If these were created during the creation of the machine & provider,\n' +
    '        // then invalid transitions could be caught via https://xstate.js.org/docs/guides/states.html#state-can-event\n' +
    '        return (data) => send({ type, data });\n' +
    '    };\n' +
    '    return {\n' +
    "        initializeMachine: sendToMachine('INIT'),\n" +
    "        resendCode: sendToMachine('RESEND'),\n" +
    "        signOut: sendToMachine('SIGN_OUT'),\n" +
    "        submitForm: sendToMachine('SUBMIT'),\n" +
    "        updateForm: sendToMachine('CHANGE'),\n" +
    "        updateBlur: sendToMachine('BLUR'),\n" +
    "        // Actions that don't immediately invoke a service but instead transition to a screen\n" +
    '        // are prefixed with `to*`\n' +
    "        toFederatedSignIn: sendToMachine('FEDERATED_SIGN_IN'),\n" +
    "        toForgotPassword: sendToMachine('FORGOT_PASSWORD'),\n" +
    "        toSignIn: sendToMachine('SIGN_IN'),\n" +
    "        toSignUp: sendToMachine('SIGN_UP'),\n" +
    "        skipVerification: sendToMachine('SKIP'),\n" +
    '    };\n' +
    '};\n' +
    'const getNextSendEventAliases = (send) => {\n' +
    '    const { toFederatedSignIn, submitForm, resendCode, skipVerification } = getSendEventAliases(send);\n' +
    '    return {\n' +
    '        handleSubmit: submitForm,\n' +
    '        resendConfirmationCode: resendCode,\n' +
    '        // manual "route" navigation\n' +
    '        setRoute: (route) => send({ type: NAVIGABLE_ROUTE_EVENT[route] }),\n' +
    '        skipAttributeVerification: skipVerification,\n' +
    '        toFederatedSignIn,\n' +
    '    };\n' +
    '};\n' +
    'const getServiceContextFacade = (state) => {\n' +
    '    const actorContext = (getActorContext(state) ?? {});\n' +
    '    const { challengeName, codeDeliveryDetails, remoteError: error, validationError: validationErrors, totpSecretCode = null, unverifiedUserAttributes, username, } = actorContext;\n' +
    '    const { socialProviders = [] } = state.context?.config ?? {};\n' +
    '    // check for user in actorContext prior to state context. actorContext is more "up to date",\n' +
    '    // but is not available on all states\n' +
    '    const user = actorContext?.user ?? state.context?.user;\n' +
    '    const hasValidationErrors = !!(validationErrors && Object.keys(validationErrors).length > 0);\n' +
    '    const actorState = getActorState(state);\n' +
    "    const isPending = state.hasTag('pending') || actorState?.hasTag('pending');\n" +
    '    const route = getRoute(state, actorState);\n' +
    '    // Auth status represents the current state of the auth flow\n' +
    '    // The `configuring` state is used to indicate when the xState machine is loading\n' +
    '    const authStatus = ((route) => {\n' +
    '        switch (route) {\n' +
    "            case 'idle':\n" +
    "            case 'setup':\n" +
    "                return 'configuring';\n" +
    "            case 'authenticated':\n" +
    "                return 'authenticated';\n" +
    '            default:\n' +
    "                return 'unauthenticated';\n" +
    '        }\n' +
    '    })(route);\n' +
    '    const facade = {\n' +
    '        authStatus,\n' +
    '        challengeName,\n' +
    '        codeDeliveryDetails,\n' +
    '        error,\n' +
    '        hasValidationErrors,\n' +
    '        isPending,\n' +
    '        route,\n' +
    '        socialProviders,\n' +
    '        totpSecretCode,\n' +
    '        unverifiedUserAttributes,\n' +
    '        user,\n' +
    '        username,\n' +
    '        validationErrors,\n' +
    '        // @v6-migration-note\n' +
    '        // While most of the properties\n' +
    '        // on `AuthenticatorServiceContextFacade` can resolve to `undefined`, updating\n' +
    '        // the interface requires material changes in consumers (namely `useAutenticator`)\n' +
    '        // which will have implications on the UI layer as typeguards and non-null checks\n' +
    '        // are required to pass type checking. As the `Authenticator` is behaving as expected\n' +
    '        // with the `AuthenticatorServiceContextFacade` interface, prefer to cast\n' +
    '    };\n' +
    '    return facade;\n' +
    '};\n' +
    'const getNextServiceContextFacade = (state) => {\n' +
    '    const actorContext = (getActorContext(state) ?? {});\n' +
    '    const { challengeName, codeDeliveryDetails, remoteError: errorMessage, totpSecretCode, unverifiedUserAttributes, username, } = actorContext;\n' +
    '    const { socialProviders: federatedProviders, loginMechanisms } = state.context?.config ?? {};\n' +
    '    const loginMechanism = loginMechanisms?.[0];\n' +
    '    const actorState = getActorState(state);\n' +
    "    const isPending = state.hasTag('pending') || actorState?.hasTag('pending');\n" +
    '    // @todo-migration remove this cast for Authenticator.Next\n' +
    '    const route = getRoute(state, actorState);\n' +
    '    return {\n' +
    '        challengeName,\n' +
    '        codeDeliveryDetails,\n' +
    '        errorMessage,\n' +
    '        federatedProviders,\n' +
    '        isPending,\n' +
    '        loginMechanism,\n' +
    '        route,\n' +
    '        totpSecretCode,\n' +
    '        unverifiedUserAttributes,\n' +
    '        username,\n' +
    '    };\n' +
    '};\n' +
    'const getServiceFacade = ({ send, state, }) => {\n' +
    '    const sendEventAliases = getSendEventAliases(send);\n' +
    '    const serviceContext = getServiceContextFacade(state);\n' +
    '    return {\n' +
    '        ...sendEventAliases,\n' +
    '        ...serviceContext,\n' +
    '    };\n' +
    '};\n' +
    'const getNextServiceFacade = ({ send, state, }) => ({\n' +
    '    ...getNextSendEventAliases(send),\n' +
    '    ...getNextServiceContextFacade(state),\n' +
    '});\n' +
    '\n' +
    'export { getNextServiceContextFacade, getNextServiceFacade, getSendEventAliases, getServiceContextFacade, getServiceFacade };\n'
} [Function: logger]
____9999999____ {
  code: "import { countryDialCodes } from '../../i18n/country-dial-codes.mjs';\n" +
    "import 'aws-amplify/utils';\n" +
    '\n' +
    '/**\n' +
    ' * This file contains helpers related to forms and input attributes.\n' +
    ' */\n' +
    'const defaultFormFieldOptions = {\n' +
    '    birthdate: {\n' +
    "        label: 'Birthdate',\n" +
    "        placeholder: 'Enter your Birthdate',\n" +
    "        type: 'date',\n" +
    "        autocomplete: 'bday',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    confirmation_code: {\n' +
    "        label: 'Confirmation Code',\n" +
    "        placeholder: 'Enter your Confirmation Code',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'one-time-code',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    confirm_password: {\n' +
    "        label: 'Confirm Password',\n" +
    "        placeholder: 'Please confirm your Password',\n" +
    "        type: 'password',\n" +
    "        autocomplete: 'new-password',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    email: {\n' +
    "        label: 'Email',\n" +
    "        placeholder: 'Enter your Email',\n" +
    "        type: 'email',\n" +
    "        autocomplete: 'username',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    family_name: {\n' +
    "        label: 'Family Name',\n" +
    "        placeholder: 'Enter your Family Name',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'family-name',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    given_name: {\n' +
    "        label: 'Given Name',\n" +
    "        placeholder: 'Enter your Given Name',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'given-name',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    middle_name: {\n' +
    "        label: 'Middle Name',\n" +
    "        placeholder: 'Enter your Middle Name',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'additional-name',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    name: {\n' +
    "        label: 'Name',\n" +
    "        placeholder: 'Enter your Name',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'name',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    nickname: {\n' +
    "        label: 'Nickname',\n" +
    "        placeholder: 'Enter your Nickname',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'tel',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    password: {\n' +
    "        label: 'Password',\n" +
    "        placeholder: 'Enter your Password',\n" +
    "        type: 'password',\n" +
    "        autocomplete: 'new-password',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    phone_number: {\n' +
    "        label: 'Phone Number',\n" +
    "        placeholder: 'Enter your Phone Number',\n" +
    "        type: 'tel',\n" +
    "        autocomplete: 'tel',\n" +
    "        dialCode: '+1',\n" +
    '        dialCodeList: countryDialCodes,\n' +
    '        isRequired: true,\n' +
    '    },\n' +
    '    preferred_username: {\n' +
    "        label: 'Preferred Username',\n" +
    "        placeholder: 'Enter your Preferred Username',\n" +
    "        type: 'text',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    profile: {\n' +
    "        label: 'Profile',\n" +
    "        placeholder: 'Add your Profile',\n" +
    "        type: 'url',\n" +
    "        autocomplete: 'url',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    website: {\n' +
    "        label: 'Website',\n" +
    "        placeholder: 'Add your Website',\n" +
    "        type: 'url',\n" +
    "        autocomplete: 'url',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '    username: {\n' +
    "        label: 'Username',\n" +
    "        placeholder: 'Enter your Username',\n" +
    "        type: 'text',\n" +
    "        autocomplete: 'username',\n" +
    '        isRequired: true,\n' +
    '    },\n' +
    '};\n' +
    '/**\n' +
    ' * List of special characters that Cognito allows.\n' +
    ' *\n' +
    ' * Adapted from https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-policies.html\n' +
    ' */\n' +
    '// prettier-ignore\n' +
    'const ALLOWED_SPECIAL_CHARACTERS = [\n' +
    "    '^', '$', '*', '.', '[', ']',\n" +
    `    '{', '}', '(', ')', '?', '"',\n` +
    "    '!', '@', '#', '%', '&', '/',\n" +
    `    '\\\\', ',', '>', '<', "'", ':',\n` +
    "    ';', '|', '_', '~', '`', '=',\n" +
    "    '+', '-', ' '\n" +
    '];\n' +
    '/**\n' +
    ' * Email validation regex\n' +
    ' *\n' +
    ' * source: HTML5 spec https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\n' +
    ' */\n' +
    "const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n" +
    '/**\n' +
    '+ * map navigable route keys to auth event names\n' +
    '+ */\n' +
    'const NAVIGABLE_ROUTE_EVENT = {\n' +
    "    forgotPassword: 'FORGOT_PASSWORD',\n" +
    "    signIn: 'SIGN_IN',\n" +
    "    signUp: 'SIGN_UP',\n" +
    '};\n' +
    '\n' +
    'export { ALLOWED_SPECIAL_CHARACTERS, NAVIGABLE_ROUTE_EVENT, defaultFormFieldOptions, emailRegex };\n'
} [Function: logger]
____9999999____ {
  code: "import { Hub } from 'aws-amplify/utils';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import { isFunction } from '../../utils/utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * Handles Amplify JS Auth hub events, by forwarding hub events as appropriate\n' +
    ' * xstate events.\n' +
    ' */\n' +
    'const defaultAuthHubHandler = ({ payload }, service, options) => {\n' +
    '    const { event } = payload;\n' +
    '    const { send } = service;\n' +
    '    const { onSignIn, onSignOut } = options ?? {};\n' +
    '    switch (event) {\n' +
    "        case 'signedIn': {\n" +
    '            if (isFunction(onSignIn)) {\n' +
    '                onSignIn(payload);\n' +
    '            }\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'signInWithRedirect': {\n" +
    "            send('SIGN_IN_WITH_REDIRECT');\n" +
    '            break;\n' +
    '        }\n' +
    "        case 'signedOut':\n" +
    "        case 'tokenRefresh_failure': {\n" +
    "            if (event === 'signedOut' && isFunction(onSignOut)) {\n" +
    '                onSignOut();\n' +
    '            }\n' +
    "            send('SIGN_OUT');\n" +
    '            break;\n' +
    '        }\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * Listens to external auth Hub events and sends corresponding event to\n' +
    ' * the `service.send` of interest\n' +
    ' *\n' +
    ' * @param service - contains state machine `send` function\n' +
    ' * @param handler - auth event handler\n' +
    ' * @returns function that unsubscribes to the hub evenmt\n' +
    ' */\n' +
    'const listenToAuthHub = (service, handler = defaultAuthHubHandler) => {\n' +
    '    const eventHandler = (data) => handler(data, service);\n' +
    "    return Hub.listen('auth', eventHandler, 'authenticator-hub-handler');\n" +
    '};\n' +
    '\n' +
    'export { defaultAuthHubHandler, listenToAuthHub };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { useSetUserAgent } from '@aws-amplify/ui-react-core';\n" +
    "import { getLogger, deleteUser } from '@aws-amplify/ui';\n" +
    "import { useAuth } from '../../../hooks/useAuth.mjs';\n" +
    "import 'aws-amplify/storage';\n" +
    "import '../../ThemeProvider/ThemeContext.mjs';\n" +
    "import '../../../primitives/Alert/AlertIcon.mjs';\n" +
    "import '../../../primitives/View/View.mjs';\n" +
    "import '../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '../../../primitives/Field/FieldClearButton.mjs';\n" +
    "import '../../../primitives/Field/FieldDescription.mjs';\n" +
    "import '../../../primitives/Field/FieldErrorMessage.mjs';\n" +
    "import '../../../primitives/Field/Field.mjs';\n" +
    "import '../../../primitives/Alert/Alert.mjs';\n" +
    "import '../../../primitives/Autocomplete/Autocomplete.mjs';\n" +
    "import '../../../primitives/Badge/Badge.mjs';\n" +
    "import '../../../primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "import '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "import '../../../primitives/Card/Card.mjs';\n" +
    "import '../../../primitives/CheckboxField/CheckboxField.mjs';\n" +
    "import '../../../primitives/Collection/Collection.mjs';\n" +
    "import '../../../primitives/Divider/Divider.mjs';\n" +
    "import '../../../primitives/DropZone/DropZone.mjs';\n" +
    "import '../../../primitives/Accordion/Accordion.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../../../primitives/Fieldset/Fieldset.mjs';\n" +
    "import '../../../primitives/Fieldset/useFieldset.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Grid/Grid.mjs';\n" +
    "import '../../../primitives/Heading/Heading.mjs';\n" +
    "import '../../../primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "import '../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../primitives/Image/Image.mjs';\n" +
    "import '../../../primitives/Input/Input.mjs';\n" +
    "import '../../../primitives/Label/Label.mjs';\n" +
    "import '../../../primitives/Link/Link.mjs';\n" +
    "import '../../../primitives/Loader/Loader.mjs';\n" +
    "import '../../../primitives/Menu/Menu.mjs';\n" +
    "import '../../../primitives/Menu/MenuButton.mjs';\n" +
    "import '../../../primitives/Menu/MenuItem.mjs';\n" +
    "import '../../../primitives/Message/Message.mjs';\n" +
    "import '../../../primitives/Pagination/Pagination.mjs';\n" +
    "import '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import '../../../primitives/Placeholder/Placeholder.mjs';\n" +
    "import '../../../primitives/Radio/Radio.mjs';\n" +
    "import '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import '../../../primitives/Rating/Rating.mjs';\n" +
    "import '../../../primitives/ScrollView/ScrollView.mjs';\n" +
    "import '../../../primitives/SearchField/SearchField.mjs';\n" +
    "import '../../../primitives/SelectField/SelectField.mjs';\n" +
    "import '../../../primitives/SliderField/SliderField.mjs';\n" +
    "import '../../../primitives/StepperField/StepperField.mjs';\n" +
    "import '../../../primitives/SwitchField/SwitchField.mjs';\n" +
    "import '../../../primitives/Table/Table.mjs';\n" +
    "import '../../../primitives/Table/TableBody.mjs';\n" +
    "import '../../../primitives/Table/TableCell.mjs';\n" +
    "import '../../../primitives/Table/TableFoot.mjs';\n" +
    "import '../../../primitives/Table/TableHead.mjs';\n" +
    "import '../../../primitives/Table/TableRow.mjs';\n" +
    "import '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import '../../../primitives/Text/Text.mjs';\n" +
    "import '../../../primitives/TextAreaField/TextAreaField.mjs';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/ToggleButton/ToggleButton.mjs';\n" +
    "import '../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "import '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { ComponentClassName } from '../constants.mjs';\n" +
    "import DEFAULTS from './defaults.mjs';\n" +
    "import { defaultDeleteUserDisplayText } from '../utils/displayText.mjs';\n" +
    "import { VERSION } from '../../../version.mjs';\n" +
    '\n' +
    "const logger = getLogger('AccountSettings');\n" +
    'function DeleteUser({ components, displayText: overrideDisplayText, handleDelete, onError, onSuccess, }) {\n' +
    "    const [state, setState] = React__default.useState('IDLE');\n" +
    '    const [errorMessage, setErrorMessage] = React__default.useState(null);\n' +
    '    useSetUserAgent({\n' +
    "        componentName: 'DeleteUser',\n" +
    "        packageName: 'react',\n" +
    '        version: VERSION,\n' +
    '    });\n' +
    '    // translations\n' +
    '    const displayText = {\n' +
    '        ...defaultDeleteUserDisplayText,\n' +
    '        ...overrideDisplayText,\n' +
    '    };\n' +
    '    const { deleteAccountButtonText } = displayText;\n' +
    '    const { user, isLoading } = useAuth();\n' +
    '    // subcomponents\n' +
    '    const { ErrorMessage, DeleteButton, WarningView } = React__default.useMemo(() => ({ ...DEFAULTS, ...(components ?? {}) }), [components]);\n' +
    '    const startConfirmation = (event) => {\n' +
    '        event.preventDefault();\n' +
    "        setState('CONFIRMATION');\n" +
    '    };\n' +
    '    const runDeleteUser = React__default.useCallback(async () => {\n' +
    '        if (!user) {\n' +
    '            return;\n' +
    '        }\n' +
    "        setState('DELETING');\n" +
    '        if (errorMessage) {\n' +
    '            setErrorMessage(null);\n' +
    '        }\n' +
    '        try {\n' +
    '            if (handleDelete) {\n' +
    '                /*\n' +
    '                 * run custom delete handler, if provided. We pass `user` so that\n' +
    '                 * developer can do whichever cleanup with the user object they wish.\n' +
    '                 */\n' +
    '                await handleDelete(user);\n' +
    '            }\n' +
    '            else {\n' +
    '                // else, run default deleteUser function.\n' +
    '                await deleteUser();\n' +
    '            }\n' +
    "            setState('DONE');\n" +
    '            onSuccess?.();\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            const error = e;\n' +
    "            setState('ERROR');\n" +
    '            setErrorMessage(error.message);\n' +
    '            onError?.(error);\n' +
    '        }\n' +
    '    }, [errorMessage, handleDelete, onError, onSuccess, user]);\n' +
    '    // called when end user cancels account deletion confirmation\n' +
    '    const handleCancel = React__default.useCallback(() => {\n' +
    "        setState('IDLE');\n" +
    '    }, []);\n' +
    '    const handleConfirmDelete = React__default.useCallback(() => {\n' +
    '        runDeleteUser();\n' +
    '    }, [runDeleteUser]);\n' +
    '    // Return null if Auth.getgetCurrentUser is still in progress\n' +
    '    if (isLoading) {\n' +
    '        return null;\n' +
    '    }\n' +
    "    // Return null if user isn't authenticated\n" +
    '    if (!user) {\n' +
    "        logger.warn('<DeleteUser /> requires user to be authenticated.');\n" +
    '        return null;\n' +
    '    }\n' +
    '    // Return null if delete user was successful\n' +
    "    if (state === 'DONE') {\n" +
    '        return null;\n' +
    '    }\n' +
    '    return (React__default.createElement(Flex, { className: ComponentClassName.DeleteUser, direction: "column" },\n' +
    "        React__default.createElement(DeleteButton, { isDisabled: state === 'CONFIRMATION' || state === 'DELETING', onClick: startConfirmation }, deleteAccountButtonText),\n" +
    "        state === 'CONFIRMATION' || state === 'DELETING' ? (React__default.createElement(WarningView, { displayText: displayText, isDisabled: state === 'DELETING', onCancel: handleCancel, onConfirm: handleConfirmDelete })) : null,\n" +
    '        errorMessage ? React__default.createElement(ErrorMessage, null, errorMessage) : null));\n' +
    '}\n' +
    'DeleteUser.ErrorMessage = DEFAULTS.ErrorMessage;\n' +
    'DeleteUser.DeleteButton = DEFAULTS.DeleteButton;\n' +
    'DeleteUser.WarningView = DEFAULTS.WarningView;\n' +
    '\n' +
    'export { DeleteUser as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { ALLOWED_SPECIAL_CHARACTERS, emailRegex } from './constants.mjs';\n" +
    '\n' +
    "// replaces all characters in a string with '*', except for the first and last char\n" +
    'const censorAllButFirstAndLast = (value) => {\n' +
    "    const split = value.trim().split('');\n" +
    '    for (let i = 0; i < split.length; i++) {\n' +
    '        if (i > 0 && i < split.length - 1) {\n' +
    "            split[i] = '*';\n" +
    '        }\n' +
    '    }\n' +
    "    return split.join('');\n" +
    '};\n' +
    '// censors all but the last four characters of a phone number\n' +
    'const censorPhoneNumber = (val) => {\n' +
    '    if (val.length < 4) {\n' +
    '        return val;\n' +
    '    }\n' +
    "    const split = val.split('');\n" +
    '    for (let i = 0; i < split.length - 4; i++) {\n' +
    "        split[i] = '*';\n" +
    '    }\n' +
    "    return split.join('');\n" +
    '};\n' +
    '// censors all but the first and last of the name of an email and keeps domain\n' +
    'const censorEmail = (val) => {\n' +
    "    const splitEmail = val.split('@');\n" +
    '    const censoredName = censorAllButFirstAndLast(splitEmail[0]);\n' +
    '    return `${censoredName}@${splitEmail[1]}`;\n' +
    '};\n' +
    '// based on the ContactMethod type, returns a censored contact value\n' +
    'const censorContactMethod = (type, value) => {\n' +
    "    return type === 'Phone Number'\n" +
    '        ? censorPhoneNumber(value)\n' +
    '        : censorEmail(value);\n' +
    '};\n' +
    'const hasSpecialChars = (password) => ALLOWED_SPECIAL_CHARACTERS.some((char) => password.includes(char));\n' +
    'const getTotpCodeURL = (issuer, username, secret) => encodeURI(`otpauth://totp/${issuer}:${username}?secret=${secret}&issuer=${issuer}`);\n' +
    'function trimValues(values, ...ignored) {\n' +
    '    return Object.entries(values).reduce((acc, [name, value]) => ({\n' +
    '        ...acc,\n' +
    '        [name]: ignored.includes(name) ? value : value?.trim(),\n' +
    '    }), {});\n' +
    '}\n' +
    'const isValidEmail = (value) => {\n' +
    '    if (!value)\n' +
    '        return false;\n' +
    '    return emailRegex.test(value);\n' +
    '};\n' +
    '\n' +
    'export { censorAllButFirstAndLast, censorContactMethod, censorEmail, censorPhoneNumber, getTotpCodeURL, hasSpecialChars, isValidEmail, trimValues };\n'
} [Function: logger]
____9999999____ {
  code: "import '../../../types/authenticator/user.mjs';\n" +
    "import { isAuthFieldsWithDefaults } from '../../../types/authenticator/attributes.mjs';\n" +
    "import { getActorContext } from '../actor.mjs';\n" +
    "import { defaultFormFieldOptions } from '../constants.mjs';\n" +
    "import { defaultFormFieldsGetters, getAliasDefaultFormField } from './defaults.mjs';\n" +
    "import { applyTranslation, sortFormFields } from './utils.mjs';\n" +
    '\n' +
    '// Gets the default formFields for given route\n' +
    'const getDefaultFormFields = (route, state) => {\n' +
    '    const formFieldGetter = defaultFormFieldsGetters[route];\n' +
    '    return formFieldGetter(state);\n' +
    '};\n' +
    '// Gets custom formFields, and applies default values\n' +
    'const getCustomFormFields = (route, state) => {\n' +
    '    const customFormFields = getActorContext(state)?.formFields?.[route];\n' +
    '    if (!customFormFields || Object.keys(customFormFields).length === 0) {\n' +
    '        return {};\n' +
    '    }\n' +
    '    return Object.entries(customFormFields).reduce((acc, [fieldName, customOptions]) => {\n' +
    "        if ((route === 'signIn' || route === 'forgotPassword') &&\n" +
    "            fieldName === 'username') {\n" +
    '            // Unlike other screens, `signIn` and `forgotPassword` screens default login\n' +
    `            // alias field names to "username", even if it's a phone number or email.\n` +
    '            // In this case, we get the default formFieldOptions based on loginMechanism.\n' +
    '            const defaultOptions = getAliasDefaultFormField(state);\n' +
    '            // apply default to fill any gaps that are not present in customOptions\n' +
    '            const mergedOptions = { ...defaultOptions, ...customOptions };\n' +
    '            return { ...acc, [fieldName]: mergedOptions };\n' +
    '        }\n' +
    '        else if (isAuthFieldsWithDefaults(fieldName)) {\n' +
    '            // if this field is a known auth attribute that we have defaults for,\n' +
    '            // apply defaults to customOptions.\n' +
    '            const defaultOptions = defaultFormFieldOptions[fieldName];\n' +
    '            const mergedOptions = { ...defaultOptions, ...customOptions };\n' +
    '            return { ...acc, [fieldName]: mergedOptions };\n' +
    '        }\n' +
    '        else {\n' +
    '            // if this is not a known field, use customOptions as is.\n' +
    '            return { ...acc, [fieldName]: customOptions };\n' +
    '        }\n' +
    '    }, {});\n' +
    '};\n' +
    'const getFormFields = (route, state) => {\n' +
    '    const defaultFormFields = getDefaultFormFields(route, state);\n' +
    '    const customFormFields = getCustomFormFields(route, state);\n' +
    '    const formFields = { ...defaultFormFields, ...customFormFields };\n' +
    "    delete formFields['QR'];\n" +
    '    return applyTranslation(formFields);\n' +
    '};\n' +
    'const removeOrderKeys = (formFields) => formFields.map((field) => {\n' +
    '    const key = field[0];\n' +
    '    // Drop order key to prevent passing to form field UI components\n' +
    '    const values = { ...field[1], order: undefined };\n' +
    '    return [key, values];\n' +
    '});\n' +
    '/** Calls `getFormFields` above, then sorts it into an indexed array */\n' +
    'const getSortedFormFields = (route, state) => {\n' +
    '    const formFields = getFormFields(route, state);\n' +
    '    return removeOrderKeys(sortFormFields(formFields));\n' +
    '};\n' +
    '\n' +
    'export { getCustomFormFields, getDefaultFormFields, getFormFields, getSortedFormFields, removeOrderKeys };\n'
} [Function: logger]
____9999999____ {
  code: "import '../../types/authenticator/user.mjs';\n" +
    "import { authFieldsWithDefaults } from '../../types/authenticator/attributes.mjs';\n" +
    '\n' +
    'const getFormDataFromEvent = (event) => {\n' +
    '    const formData = new FormData(event.target);\n' +
    '    return Object.fromEntries(formData);\n' +
    '};\n' +
    'const setFormOrder = (formOverrides, fieldNames) => {\n' +
    '    let orderedKeys = [];\n' +
    '    if (formOverrides) {\n' +
    '        orderedKeys = Object.keys(formOverrides)\n' +
    '            .reduce((prev, key) => {\n' +
    '            // reduce to array that can be sorted\n' +
    '            prev.push([key, formOverrides[key]?.order]);\n' +
    '            return prev;\n' +
    '        }, [])\n' +
    '            .sort((a, b) => \n' +
    '        //sort them based on order\n' +
    '        a[1] - b[1]) // returned just key\n' +
    '            .filter((a) => a[1] !== undefined)\n' +
    '            .map((a) => a[0]);\n' +
    '    }\n' +
    '    // remove duplicates\n' +
    '    return Array.from(new Set([...orderedKeys, ...fieldNames]));\n' +
    '};\n' +
    'const isAuthFieldWithDefaults = (field) => {\n' +
    '    return authFieldsWithDefaults.includes(field);\n' +
    '};\n' +
    'const isArray = (val) => {\n' +
    '    return Array.isArray(val);\n' +
    '};\n' +
    'const getErrors = (errors) => {\n' +
    '    if (!errors)\n' +
    '        return null;\n' +
    '    if (isArray(errors)) {\n' +
    '        return errors;\n' +
    '    }\n' +
    '    else {\n' +
    '        return [errors];\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { getErrors, getFormDataFromEvent, isAuthFieldWithDefaults, setFormOrder };\n'
} [Function: logger]
____9999999____ {
  code: "import { getActorState } from '../actor.mjs';\n" +
    "import { defaultFormFieldOptions } from '../constants.mjs';\n" +
    "import { isAuthFieldWithDefaults } from '../form.mjs';\n" +
    "import { getPrimaryAlias } from './utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * This file contains helpers that generate default formFields for each screen\n' +
    ' */\n' +
    "const DEFAULT_COUNTRY_CODE = '+1';\n" +
    '/** Helper function that gets the default formField for given field name */\n' +
    'const getDefaultFormField = (fieldName) => {\n' +
    '    let options = defaultFormFieldOptions[fieldName];\n' +
    '    const { type } = options;\n' +
    "    if (type === 'tel') {\n" +
    '        options = { ...options, dialCode: DEFAULT_COUNTRY_CODE };\n' +
    '    }\n' +
    '    return options;\n' +
    '};\n' +
    '// Helper function that returns default form field for configured primary alias\n' +
    'const getAliasDefaultFormField = (state) => {\n' +
    '    const primaryAlias = getPrimaryAlias(state);\n' +
    '    return {\n' +
    '        ...getDefaultFormField(primaryAlias),\n' +
    "        autocomplete: 'username',\n" +
    '    };\n' +
    '};\n' +
    '/** Reusable confirmation code form fields. */\n' +
    'const getConfirmationCodeFormFields = (state) => ({\n' +
    '    confirmation_code: {\n' +
    "        ...getDefaultFormField('confirmation_code'),\n" +
    "        label: 'Code *',\n" +
    "        placeholder: 'Code',\n" +
    '    },\n' +
    '});\n' +
    'const getSignInFormFields = (state) => ({\n' +
    '    username: { ...getAliasDefaultFormField(state) },\n' +
    '    password: {\n' +
    "        ...getDefaultFormField('password'),\n" +
    "        autocomplete: 'current-password',\n" +
    '    },\n' +
    '});\n' +
    'const getSignUpFormFields = (state) => {\n' +
    '    const { loginMechanisms, signUpAttributes } = state.context.config;\n' +
    '    const primaryAlias = getPrimaryAlias(state);\n' +
    '    /**\n' +
    '     * @migration signUp Fields created here\n' +
    '     */\n' +
    '    const fieldNames = Array.from(new Set([\n' +
    '        ...loginMechanisms,\n' +
    "        'password',\n" +
    "        'confirm_password',\n" +
    '        ...signUpAttributes,\n' +
    '    ]));\n' +
    '    const formField = {};\n' +
    '    for (const fieldName of fieldNames) {\n' +
    '        if (isAuthFieldWithDefaults(fieldName)) {\n' +
    '            const fieldAttrs = fieldName === primaryAlias\n' +
    '                ? getAliasDefaultFormField(state)\n' +
    '                : getDefaultFormField(fieldName);\n' +
    '            formField[fieldName] = { ...fieldAttrs };\n' +
    '        }\n' +
    '        else {\n' +
    "            // There's a `custom:*` attribute or one we don't already have an implementation for\n" +
    '            console.debug(`Authenticator does not have a default implementation for ${fieldName}. Customize SignUp FormFields to add your own.`);\n' +
    '        }\n' +
    '    }\n' +
    '    return formField;\n' +
    '};\n' +
    'const getConfirmSignUpFormFields = (state) => ({\n' +
    '    confirmation_code: {\n' +
    "        ...getDefaultFormField('confirmation_code'),\n" +
    "        placeholder: 'Enter your code',\n" +
    '    },\n' +
    '});\n' +
    'const getForgotPasswordFormFields = (state) => {\n' +
    '    const primaryAlias = getPrimaryAlias(state);\n' +
    '    const { label } = defaultFormFieldOptions[primaryAlias];\n' +
    '    return {\n' +
    '        username: {\n' +
    '            ...getAliasDefaultFormField(state),\n' +
    '            label: `Enter your ${label.toLowerCase()}`,\n' +
    '            placeholder: `Enter your ${label.toLowerCase()}`,\n' +
    '        },\n' +
    '    };\n' +
    '};\n' +
    'const getConfirmResetPasswordFormFields = (state) => ({\n' +
    '    ...getConfirmationCodeFormFields(),\n' +
    '    password: {\n' +
    "        ...getDefaultFormField('password'),\n" +
    "        label: 'New Password',\n" +
    "        placeholder: 'New Password',\n" +
    '    },\n' +
    '    confirm_password: {\n' +
    "        ...getDefaultFormField('confirm_password'),\n" +
    "        label: 'Confirm Password',\n" +
    "        placeholder: 'Confirm Password',\n" +
    '    },\n' +
    '});\n' +
    'const getForceNewPasswordFormFields = (state) => {\n' +
    '    const actorState = getActorState(state);\n' +
    '    const { missingAttributes } = actorState.context;\n' +
    '    const fieldNames = Array.from(new Set([\n' +
    "        'password',\n" +
    "        'confirm_password',\n" +
    '        ...(missingAttributes ?? []),\n' +
    '    ]));\n' +
    '    const formField = {};\n' +
    '    for (const fieldName of fieldNames) {\n' +
    '        if (isAuthFieldWithDefaults(fieldName)) {\n' +
    '            formField[fieldName] = { ...getDefaultFormField(fieldName) };\n' +
    '        }\n' +
    '        else {\n' +
    "            // There's a `custom:*` attribute or one we don't already have an implementation for\n" +
    '            console.debug(`Authenticator does not have a default implementation for ${fieldName}. Customize ForceNewPassword FormFields to add your own.`);\n' +
    '        }\n' +
    '    }\n' +
    '    return formField;\n' +
    '};\n' +
    '/** Collect all the defaultFormFields getters */\n' +
    'const defaultFormFieldsGetters = {\n' +
    '    signIn: getSignInFormFields,\n' +
    '    signUp: getSignUpFormFields,\n' +
    '    confirmSignUp: getConfirmSignUpFormFields,\n' +
    '    confirmSignIn: getConfirmationCodeFormFields,\n' +
    '    forceNewPassword: getForceNewPasswordFormFields,\n' +
    '    forgotPassword: getForgotPasswordFormFields,\n' +
    '    confirmResetPassword: getConfirmResetPasswordFormFields,\n' +
    '    confirmVerifyUser: getConfirmationCodeFormFields,\n' +
    '    setupTotp: getConfirmationCodeFormFields,\n' +
    '};\n' +
    '\n' +
    'export { DEFAULT_COUNTRY_CODE, defaultFormFieldsGetters, getAliasDefaultFormField };\n'
} [Function: logger]
____9999999____ {
  code: "import { translate } from '../../../i18n/translations.mjs';\n" +
    '\n' +
    'const getPrimaryAlias = (state) => {\n' +
    '    const loginMechanisms = state?.context.config?.loginMechanisms;\n' +
    '    /**\n' +
    '     * @migration this is where we grab only the first index of `aws_cognito_username_attributes`\n' +
    '     */\n' +
    "    const [primaryAlias] = loginMechanisms ?? ['username'];\n" +
    '    return primaryAlias;\n' +
    '};\n' +
    '/** Applies translations to label and placeholder */\n' +
    'const applyTranslation = (formFields) => {\n' +
    '    const newFormFields = { ...formFields };\n' +
    '    for (const [name, options] of Object.entries(formFields)) {\n' +
    '        const { label, placeholder } = options;\n' +
    '        newFormFields[name] = {\n' +
    '            ...options,\n' +
    '            label: label ? translate(label) : undefined,\n' +
    '            placeholder: placeholder ? translate(placeholder) : undefined,\n' +
    '        };\n' +
    '    }\n' +
    '    return newFormFields;\n' +
    '};\n' +
    '/** Sorts formFields according to their `order`.  */\n' +
    'const sortFormFields = (formFields) => {\n' +
    '    return Object.entries(formFields)\n' +
    '        .sort((a, b) => {\n' +
    '        const orderA = a[1].order || Number.MAX_VALUE;\n' +
    '        const orderB = b[1].order || Number.MAX_VALUE;\n' +
    '        return orderA - orderB;\n' +
    '    })\n' +
    '        .filter((formFieldEntry) => formFieldEntry[1] !== undefined);\n' +
    '};\n' +
    '\n' +
    'export { applyTranslation, getPrimaryAlias, sortFormFields };\n'
} [Function: logger]
____9999999____ {
  code: "import { translate, DefaultTexts } from '../../i18n/translations.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * ConfirmSignIn\n' +
    ' */\n' +
    'const getChallengeText = (challengeName) => {\n' +
    '    switch (challengeName) {\n' +
    "        case 'SMS_MFA':\n" +
    '            return translate(DefaultTexts.CONFIRM_SMS);\n' +
    "        case 'SOFTWARE_TOKEN_MFA':\n" +
    '            return translate(DefaultTexts.CONFIRM_TOTP);\n' +
    '        default:\n' +
    "            throw new Error(`${translate('Unexpected challengeName encountered in ConfirmSignIn:')} ${challengeName}`);\n" +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * ConfirmSignUp\n' +
    ' */\n' +
    'const getDeliveryMessageText = (codeDeliveryDetails) => {\n' +
    '    const { DeliveryMedium, Destination } = codeDeliveryDetails ?? {};\n' +
    "    const isEmailMessage = DeliveryMedium === 'EMAIL';\n" +
    "    const isTextMessage = DeliveryMedium === 'SMS';\n" +
    '    const arrivalMessage = translate(DefaultTexts.CODE_ARRIVAL);\n' +
    '    if (!(isEmailMessage || isTextMessage)) {\n' +
    '        return `${translate(DefaultTexts.CODE_SENT)}. ${arrivalMessage}.`;\n' +
    '    }\n' +
    '    const instructionMessage = isEmailMessage\n' +
    '        ? translate(DefaultTexts.CODE_EMAILED)\n' +
    '        : translate(DefaultTexts.CODE_TEXTED);\n' +
    '    return `${instructionMessage} ${Destination}. ${arrivalMessage}.`;\n' +
    '};\n' +
    'const getDeliveryMethodText = (codeDeliveryDetails) => {\n' +
    '    const { DeliveryMedium } = codeDeliveryDetails ?? {};\n' +
    "    const isEmailMessage = DeliveryMedium === 'EMAIL';\n" +
    "    const isTextMessage = DeliveryMedium === 'SMS';\n" +
    '    if (!isEmailMessage && isTextMessage) {\n' +
    '        return translate(DefaultTexts.WE_SENT_CODE);\n' +
    '    }\n' +
    '    return isEmailMessage\n' +
    '        ? translate(DefaultTexts.WE_EMAILED)\n' +
    '        : translate(DefaultTexts.WE_TEXTED);\n' +
    '};\n' +
    '/**\n' +
    ' * FederatedSignIn\n' +
    ' */\n' +
    'const providerNameMap = {\n' +
    "    amazon: 'Amazon',\n" +
    "    apple: 'Apple',\n" +
    "    facebook: 'Facebook',\n" +
    "    google: 'Google',\n" +
    '};\n' +
    'const getSignInWithFederationText = (route, provider) => {\n' +
    "    const isSignIn = route === 'signIn';\n" +
    "    return translate(`Sign ${isSignIn ? 'In' : 'Up'} with ${providerNameMap[provider]}`);\n" +
    '};\n' +
    'const authenticatorTextUtil = {\n' +
    '    /** Shared */\n' +
    '    getBackToSignInText: () => translate(DefaultTexts.BACK_SIGN_IN),\n' +
    '    getChangePasswordText: () => translate(DefaultTexts.CHANGE_PASSWORD),\n' +
    '    getChangingText: () => translate(DefaultTexts.CHANGING_PASSWORD),\n' +
    '    getConfirmText: () => translate(DefaultTexts.CONFIRM),\n' +
    '    getConfirmingText: () => translate(DefaultTexts.CONFIRMING),\n' +
    '    getCopyText: () => translate(DefaultTexts.UPPERCASE_COPY),\n' +
    '    getHidePasswordText: () => translate(DefaultTexts.HIDE_PASSWORD),\n' +
    '    getLoadingText: () => translate(DefaultTexts.LOADING),\n' +
    '    getOrText: () => translate(DefaultTexts.OR),\n' +
    '    getResendCodeText: () => translate(DefaultTexts.RESEND_CODE),\n' +
    '    getSendCodeText: () => translate(DefaultTexts.SEND_CODE),\n' +
    '    getSendingText: () => translate(DefaultTexts.SENDING),\n' +
    '    getShowPasswordText: () => translate(DefaultTexts.SHOW_PASSWORD),\n' +
    '    getSubmitText: () => translate(DefaultTexts.SUBMIT),\n' +
    '    getSubmittingText: () => translate(DefaultTexts.SUBMITTING),\n' +
    '    /** SignInSignUpTabs */\n' +
    '    getSignInTabText: () => translate(DefaultTexts.SIGN_IN_TAB),\n' +
    '    getSignUpTabText: () => translate(DefaultTexts.CREATE_ACCOUNT),\n' +
    '    /** SignIn */\n' +
    '    getForgotPasswordText: (shortVersion) => translate(shortVersion\n' +
    '        ? DefaultTexts.FORGOT_PASSWORD\n' +
    '        : DefaultTexts.FORGOT_YOUR_PASSWORD),\n' +
    '    getSigningInText: () => translate(DefaultTexts.SIGNING_IN_BUTTON),\n' +
    '    getSignInText: () => translate(DefaultTexts.SIGN_IN_BUTTON),\n' +
    '    /** SignUp */\n' +
    '    getCreatingAccountText: () => translate(DefaultTexts.CREATING_ACCOUNT),\n' +
    '    getCreateAccountText: () => translate(DefaultTexts.CREATE_ACCOUNT),\n' +
    '    /** ConfirmSignUp */\n' +
    '    getDeliveryMessageText,\n' +
    '    getDeliveryMethodText,\n' +
    '    /** ConfirmSignIn */\n' +
    '    getChallengeText,\n' +
    '    /** ForgotPassword */\n' +
    '    getResetYourPasswordText: () => translate(DefaultTexts.RESET_PASSWORD),\n' +
    '    /** SetupTotp */\n' +
    '    getSetupTotpText: () => translate(DefaultTexts.SETUP_TOTP),\n' +
    '    // TODO: add defaultText for below\n' +
    "    getSetupTotpInstructionsText: () => translate('Copy and paste the secret key below into an authenticator app and then enter the code in the text field below.'),\n" +
    '    // TODO: add defaultText for "COPIED"\n' +
    "    getCopiedText: () => translate('COPIED'),\n" +
    '    /** FederatedSignIn */\n' +
    '    getSignInWithFederationText,\n' +
    '    /** VerifyUser */\n' +
    '    getSkipText: () => translate(DefaultTexts.SKIP),\n' +
    '    getVerifyText: () => translate(DefaultTexts.VERIFY),\n' +
    '    getVerifyContactText: () => translate(DefaultTexts.VERIFY_CONTACT),\n' +
    '    getAccountRecoveryInfoText: () => translate(DefaultTexts.VERIFY_HEADING),\n' +
    '    /** Validations */\n' +
    '    // TODO: add defaultText\n' +
    "    getInvalidEmailText: () => translate('Please enter a valid email'),\n" +
    '    // TODO: add defaultText\n' +
    "    getRequiredFieldText: () => translate('This field is required'),\n" +
    '}; // using `as const` so that keys are strongly typed\n' +
    '\n' +
    'export { authenticatorTextUtil };\n'
} [Function: logger]
____9999999____ {
  code: "import { updatePassword, deleteUser as deleteUser$1 } from 'aws-amplify/auth';\n" +
    "import { getLogger } from '../utils.mjs';\n" +
    '\n' +
    "const logger = getLogger('Auth');\n" +
    'const changePassword = async ({ currentPassword, newPassword, }) => {\n' +
    '    try {\n' +
    "        logger.debug('calling Auth.updatePassword');\n" +
    '        await updatePassword({\n' +
    '            oldPassword: currentPassword,\n' +
    '            newPassword,\n' +
    '        });\n' +
    "        logger.debug('Auth.updatePassword was successful');\n" +
    '        return Promise.resolve();\n' +
    '    }\n' +
    '    catch (e) {\n' +
    "        logger.debug('Auth.updatePassword failed with error', e);\n" +
    '        return Promise.reject(e);\n' +
    '    }\n' +
    '};\n' +
    'const deleteUser = async () => {\n' +
    '    try {\n' +
    "        logger.debug('calling Auth.deleteUser');\n" +
    '        await deleteUser$1();\n' +
    "        logger.debug('Auth.deleteUser was successful');\n" +
    '        return Promise.resolve();\n' +
    '    }\n' +
    '    catch (e) {\n' +
    "        logger.debug('Auth.deleteUser failed with error', e);\n" +
    '        return Promise.reject(e);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { changePassword, deleteUser };\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from 'aws-amplify';\n" +
    "import 'aws-amplify/utils';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import '../../types/authenticator/user.mjs';\n" +
    "import '../../types/authenticator/attributes.mjs';\n" +
    "import { hasSpecialChars } from '../authenticator/utils.mjs';\n" +
    '\n' +
    '// gets password requirement from Amplify.configure data\n' +
    'const getPasswordRequirement = () => {\n' +
    '    const config = Amplify.getConfig();\n' +
    '    const passwordSettings = config?.Auth?.Cognito\n' +
    '        .passwordFormat;\n' +
    '    if (!passwordSettings) {\n' +
    '        return null;\n' +
    '    }\n' +
    '    return {\n' +
    '        minLength: passwordSettings.minLength,\n' +
    '        needsLowerCase: passwordSettings.requireLowercase ?? false,\n' +
    '        needsUpperCase: passwordSettings.requireUppercase ?? false,\n' +
    '        needsNumber: passwordSettings.requireNumbers ?? false,\n' +
    '        needsSpecialChar: passwordSettings.requireSpecialCharacters ?? false,\n' +
    '    };\n' +
    '};\n' +
    'const getHasMinLength = (minLength) => ({\n' +
    "    validationMode: 'onTouched',\n" +
    '    validator: (field) => field.length >= minLength,\n' +
    '    message: `Password must have at least ${minLength} characters`,\n' +
    '});\n' +
    'const hasLowerCase = {\n' +
    "    validationMode: 'onTouched',\n" +
    '    validator: (field) => /[a-z]/.test(field),\n' +
    "    message: 'Password must have lower case letters',\n" +
    '};\n' +
    'const hasUpperCase = {\n' +
    "    validationMode: 'onTouched',\n" +
    '    validator: (field) => /[A-Z]/.test(field),\n' +
    "    message: 'Password must have upper case letters',\n" +
    '};\n' +
    'const hasNumber = {\n' +
    "    validationMode: 'onTouched',\n" +
    '    validator: (field) => /[0-9]/.test(field),\n' +
    "    message: 'Password must have numbers',\n" +
    '};\n' +
    'const hasSpecialChar = {\n' +
    "    validationMode: 'onTouched',\n" +
    '    validator: (field) => hasSpecialChars(field),\n' +
    "    message: 'Password must have special characters',\n" +
    '};\n' +
    'const getMatchesConfirmPassword = (password) => {\n' +
    '    return {\n' +
    "        validationMode: 'onTouched',\n" +
    '        validator: (confirmPassword) => password === confirmPassword,\n' +
    "        message: 'Your passwords must match',\n" +
    '    };\n' +
    '};\n' +
    'const getDefaultPasswordValidators = () => {\n' +
    '    const requirement = getPasswordRequirement();\n' +
    '    if (!requirement)\n' +
    '        return [];\n' +
    '    const validators = [];\n' +
    '    const { minLength, needsLowerCase, needsUpperCase, needsNumber, needsSpecialChar, } = requirement;\n' +
    '    if (minLength) {\n' +
    '        validators.push(getHasMinLength(minLength));\n' +
    '    }\n' +
    '    if (needsLowerCase) {\n' +
    '        validators.push(hasLowerCase);\n' +
    '    }\n' +
    '    if (needsUpperCase) {\n' +
    '        validators.push(hasUpperCase);\n' +
    '    }\n' +
    '    if (needsNumber) {\n' +
    '        validators.push(hasNumber);\n' +
    '    }\n' +
    '    if (needsSpecialChar) {\n' +
    '        validators.push(hasSpecialChar);\n' +
    '    }\n' +
    '    return validators;\n' +
    '};\n' +
    'const getDefaultConfirmPasswordValidators = (password) => {\n' +
    '    return [getMatchesConfirmPassword(password)];\n' +
    '};\n' +
    '/*\n' +
    ' * `shouldValidate` determines whether validator should be run, based on validation mode,\n' +
    ' * input event type, and whether it has been blurred yet.\n' +
    ' */\n' +
    'const shouldValidate = ({ validationMode, eventType, hasBlurred, }) => {\n' +
    '    switch (validationMode) {\n' +
    "        case 'onBlur': {\n" +
    '            // only run validator on blur event\n' +
    "            return eventType === 'blur';\n" +
    '        }\n' +
    "        case 'onChange': {\n" +
    '            // only run validator on change event\n' +
    "            return eventType === 'change';\n" +
    '        }\n' +
    "        case 'onTouched': {\n" +
    '            /**\n' +
    '             * run validator on first blur event, and then every subsequent\n' +
    '             * blur/change event.\n' +
    '             */\n' +
    "            return eventType === 'blur' || hasBlurred;\n" +
    '        }\n' +
    '    }\n' +
    '};\n' +
    '// `runFieldValidator` runs all validators, and returns error messages.\n' +
    'const runFieldValidators = ({ value, validators, eventType, hasBlurred, }) => {\n' +
    '    if (!value)\n' +
    '        return [];\n' +
    '    return validators.reduce((prevErrors, validatorSpec) => {\n' +
    '        const { validator, validationMode, message } = validatorSpec;\n' +
    '        if (shouldValidate({ validationMode, eventType, hasBlurred })) {\n' +
    '            const hasError = !validator(value);\n' +
    '            return hasError ? [...prevErrors, message] : prevErrors;\n' +
    '        }\n' +
    '        return prevErrors;\n' +
    '    }, []);\n' +
    '};\n' +
    '\n' +
    'export { getDefaultConfirmPasswordValidators, getDefaultPasswordValidators, getHasMinLength, getMatchesConfirmPassword, getPasswordRequirement, hasLowerCase, hasNumber, hasSpecialChar, hasUpperCase, runFieldValidators, shouldValidate };\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from 'aws-amplify/utils';\n" +
    '\n' +
    'const getLogger = (category) => new ConsoleLogger(`AmplifyUI:${category}`);\n' +
    '\n' +
    'export { getLogger };\n'
} [Function: logger]
____9999999____ {
  code: 'const countryDialCodes = [\n' +
    "    '+1',\n" +
    "    '+7',\n" +
    "    '+20',\n" +
    "    '+27',\n" +
    "    '+30',\n" +
    "    '+31',\n" +
    "    '+32',\n" +
    "    '+33',\n" +
    "    '+34',\n" +
    "    '+36',\n" +
    "    '+39',\n" +
    "    '+40',\n" +
    "    '+41',\n" +
    "    '+43',\n" +
    "    '+44',\n" +
    "    '+45',\n" +
    "    '+46',\n" +
    "    '+47',\n" +
    "    '+48',\n" +
    "    '+49',\n" +
    "    '+51',\n" +
    "    '+52',\n" +
    "    '+53',\n" +
    "    '+54',\n" +
    "    '+55',\n" +
    "    '+56',\n" +
    "    '+57',\n" +
    "    '+58',\n" +
    "    '+60',\n" +
    "    '+61',\n" +
    "    '+62',\n" +
    "    '+63',\n" +
    "    '+64',\n" +
    "    '+65',\n" +
    "    '+66',\n" +
    "    '+81',\n" +
    "    '+82',\n" +
    "    '+84',\n" +
    "    '+86',\n" +
    "    '+90',\n" +
    "    '+91',\n" +
    "    '+92',\n" +
    "    '+93',\n" +
    "    '+94',\n" +
    "    '+95',\n" +
    "    '+98',\n" +
    "    '+212',\n" +
    "    '+213',\n" +
    "    '+216',\n" +
    "    '+218',\n" +
    "    '+220',\n" +
    "    '+221',\n" +
    "    '+222',\n" +
    "    '+223',\n" +
    "    '+224',\n" +
    "    '+225',\n" +
    "    '+226',\n" +
    "    '+227',\n" +
    "    '+228',\n" +
    "    '+229',\n" +
    "    '+230',\n" +
    "    '+231',\n" +
    "    '+232',\n" +
    "    '+233',\n" +
    "    '+234',\n" +
    "    '+235',\n" +
    "    '+236',\n" +
    "    '+237',\n" +
    "    '+238',\n" +
    "    '+239',\n" +
    "    '+240',\n" +
    "    '+241',\n" +
    "    '+242',\n" +
    "    '+243',\n" +
    "    '+244',\n" +
    "    '+245',\n" +
    "    '+246',\n" +
    "    '+248',\n" +
    "    '+249',\n" +
    "    '+250',\n" +
    "    '+251',\n" +
    "    '+252',\n" +
    "    '+253',\n" +
    "    '+254',\n" +
    "    '+255',\n" +
    "    '+256',\n" +
    "    '+257',\n" +
    "    '+258',\n" +
    "    '+260',\n" +
    "    '+261',\n" +
    "    '+262',\n" +
    "    '+263',\n" +
    "    '+264',\n" +
    "    '+265',\n" +
    "    '+266',\n" +
    "    '+267',\n" +
    "    '+268',\n" +
    "    '+269',\n" +
    "    '+290',\n" +
    "    '+291',\n" +
    "    '+297',\n" +
    "    '+298',\n" +
    "    '+299',\n" +
    "    '+345',\n" +
    "    '+350',\n" +
    "    '+351',\n" +
    "    '+352',\n" +
    "    '+353',\n" +
    "    '+354',\n" +
    "    '+355',\n" +
    "    '+356',\n" +
    "    '+357',\n" +
    "    '+358',\n" +
    "    '+359',\n" +
    "    '+370',\n" +
    "    '+371',\n" +
    "    '+372',\n" +
    "    '+373',\n" +
    "    '+374',\n" +
    "    '+375',\n" +
    "    '+376',\n" +
    "    '+377',\n" +
    "    '+378',\n" +
    "    '+379',\n" +
    "    '+380',\n" +
    "    '+381',\n" +
    "    '+382',\n" +
    "    '+385',\n" +
    "    '+386',\n" +
    "    '+387',\n" +
    "    '+389',\n" +
    "    '+420',\n" +
    "    '+421',\n" +
    "    '+423',\n" +
    "    '+500',\n" +
    "    '+501',\n" +
    "    '+502',\n" +
    "    '+503',\n" +
    "    '+504',\n" +
    "    '+505',\n" +
    "    '+506',\n" +
    "    '+507',\n" +
    "    '+508',\n" +
    "    '+509',\n" +
    "    '+537',\n" +
    "    '+590',\n" +
    "    '+591',\n" +
    "    '+593',\n" +
    "    '+594',\n" +
    "    '+595',\n" +
    "    '+596',\n" +
    "    '+597',\n" +
    "    '+598',\n" +
    "    '+599',\n" +
    "    '+670',\n" +
    "    '+672',\n" +
    "    '+673',\n" +
    "    '+674',\n" +
    "    '+675',\n" +
    "    '+676',\n" +
    "    '+677',\n" +
    "    '+678',\n" +
    "    '+679',\n" +
    "    '+680',\n" +
    "    '+681',\n" +
    "    '+682',\n" +
    "    '+683',\n" +
    "    '+685',\n" +
    "    '+686',\n" +
    "    '+687',\n" +
    "    '+688',\n" +
    "    '+689',\n" +
    "    '+690',\n" +
    "    '+691',\n" +
    "    '+692',\n" +
    "    '+850',\n" +
    "    '+852',\n" +
    "    '+853',\n" +
    "    '+855',\n" +
    "    '+856',\n" +
    "    '+872',\n" +
    "    '+880',\n" +
    "    '+886',\n" +
    "    '+960',\n" +
    "    '+961',\n" +
    "    '+962',\n" +
    "    '+963',\n" +
    "    '+964',\n" +
    "    '+965',\n" +
    "    '+966',\n" +
    "    '+967',\n" +
    "    '+968',\n" +
    "    '+970',\n" +
    "    '+971',\n" +
    "    '+972',\n" +
    "    '+973',\n" +
    "    '+974',\n" +
    "    '+975',\n" +
    "    '+976',\n" +
    "    '+977',\n" +
    "    '+992',\n" +
    "    '+993',\n" +
    "    '+994',\n" +
    "    '+995',\n" +
    "    '+996',\n" +
    "    '+998',\n" +
    '];\n' +
    '\n' +
    'export { countryDialCodes };\n'
} [Function: logger]
____9999999____ {
  code: "import { I18n } from 'aws-amplify/utils';\n" +
    "import { defaultTexts, deDict, enDict, esDict, frDict, idDict, itDict, jaDict, krDict, nbDict, nlDict, plDict, ptDict, zhDict, svDict, trDict, ruDict, heDict, uaDict } from './dictionaries/index.mjs';\n" +
    '\n' +
    '/*\n' +
    ' * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' *     http://aws.amazon.com/apache2.0/\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '/**\n' +
    ' * Contains translatable strings that authenticator provides by default. Customers\n' +
    ' * can use this to add custom vocabularies:\n' +
    ' *\n' +
    ' * ```\n' +
    ' * I18n.putVocabulariesForLanguage("en", {\n' +
    ' *  [DefaultTexts.SIGN_IN]: "Custom Sign In Text",\n' +
    ' *  [DefaultTexts.SIGN_IN_BUTTON]: "Custom Click Here to Sign In"\n' +
    ' * });\n' +
    ' * ```\n' +
    ' */\n' +
    'const DefaultTexts = { ...defaultTexts };\n' +
    '/**\n' +
    ' * This helper type checks that given phrase is one of the texts @aws-amplify/ui\n' +
    ' * provides by default. This enables vscode autocompletion to help catch typos\n' +
    ' * during development.\n' +
    ' *\n' +
    ' * You can also use translate<string> to handle custom strings or dynamic content.\n' +
    ' */\n' +
    'function translate(phrase) {\n' +
    '    return I18n.get(phrase);\n' +
    '}\n' +
    '/**\n' +
    ' * Whether I18n has a translation entry for given phrase\n' +
    ' */\n' +
    'function hasTranslation(phrase) {\n' +
    '    return I18n.get(phrase) !== phrase;\n' +
    '}\n' +
    'const translations = {\n' +
    '    de: deDict,\n' +
    '    en: enDict,\n' +
    '    es: esDict,\n' +
    '    fr: frDict,\n' +
    '    id: idDict,\n' +
    '    it: itDict,\n' +
    '    ja: jaDict,\n' +
    '    // TODO: remove kr in next major release\n' +
    '    kr: krDict,\n' +
    '    ko: krDict,\n' +
    '    nb: nbDict,\n' +
    '    nl: nlDict,\n' +
    '    pl: plDict,\n' +
    '    pt: ptDict,\n' +
    '    zh: zhDict,\n' +
    '    sv: svDict,\n' +
    '    tr: trDict,\n' +
    '    ru: ruDict,\n' +
    '    he: heDict,\n' +
    '    ua: uaDict,\n' +
    '};\n' +
    '\n' +
    'export { DefaultTexts, hasTranslation, translate, translations };\n'
} [Function: logger]
____9999999____ {
  code: "import { tokens } from './tokens/index.mjs';\n" +
    "import { breakpoints } from './breakpoints.mjs';\n" +
    '\n' +
    'const defaultTheme = {\n' +
    '    tokens,\n' +
    '    breakpoints,\n' +
    "    name: 'default-theme',\n" +
    '};\n' +
    '\n' +
    'export { defaultTheme };\n'
} [Function: logger]
____9999999____ {
  code: "import deepExtend from 'style-dictionary/lib/utils/deepExtend.js';\n" +
    "import flattenProperties from 'style-dictionary/lib/utils/flattenProperties.js';\n" +
    "import { defaultTheme } from './defaultTheme.mjs';\n" +
    "import { setupTokens, cssNameTransform, cssValue } from './utils.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../utils/setUserAgent/constants.mjs';\n" +
    "import { isString } from '../utils/utils.mjs';\n" +
    '\n' +
    '// Internal Style Dictionary methods\n' +
    '/**\n' +
    ' * This will take a design token and add some data to it for it\n' +
    ' * to be used in JS/CSS. It will create its CSS var name and update\n' +
    ' * the value to use a CSS var if it is a reference. It will also\n' +
    ' * add a `.toString()` method to make it easier to use in JS.\n' +
    ' *\n' +
    ' * We should see if there is a way to share this logic with style dictionary...\n' +
    ' */\n' +
    'const setupToken = ({ token, path }) => {\n' +
    '    const name = `--${cssNameTransform({ path })}`;\n' +
    '    const { value: original } = token;\n' +
    '    const value = cssValue(token);\n' +
    '    return { name, original, path, value, toString: () => `var(${name})` };\n' +
    '};\n' +
    '/**\n' +
    ' * Takes a set of keys and a color name and returns an object of design tokens,\n' +
    ' * used for applying a primary color at the theme level to our tokens.\n' +
    ' *\n' +
    " * createColorPalette({keys: ['10','20',...], value: 'red'})\n" +
    ' * returns {\n' +
    " *   10: { value: '{colors.red.10.value}' },\n" +
    " *   20: { value: '{colors.red.20.value}' },\n" +
    ' *   ...\n' +
    ' * }\n' +
    ' */\n' +
    'function createColorPalette({ keys, value }) {\n' +
    '    return keys.reduce((acc, key) => {\n' +
    '        return {\n' +
    '            ...acc,\n' +
    '            [key]: { value: `{colors.${value}.${key}.value}` },\n' +
    '        };\n' +
    '    }, {});\n' +
    '}\n' +
    '/**\n' +
    ' * This will be used like `const myTheme = createTheme({})`\n' +
    ' * `myTheme` can then be passed to a Provider or the generated CSS\n' +
    ' * can be passed to a stylesheet at build-time or run-time.\n' +
    ' * const myTheme = createTheme({})\n' +
    ' * const myOtherTheme = createTheme({}, myTheme);\n' +
    ' */\n' +
    'function createTheme(theme, DefaultTheme = defaultTheme) {\n' +
    '    // merge theme and DefaultTheme to get a complete theme\n' +
    '    // deepExtend is an internal Style Dictionary method\n' +
    '    // that performs a deep merge on n objects. We could change\n' +
    '    // this to another 3p deep merge solution too.\n' +
    '    const mergedTheme = deepExtend([{}, DefaultTheme, theme]);\n' +
    '    const { primaryColor, secondaryColor } = mergedTheme;\n' +
    '    // apply primaryColor and secondaryColor if present\n' +
    '    if (isString(primaryColor)) {\n' +
    '        mergedTheme.tokens.colors.primary = createColorPalette({\n' +
    '            keys: Object.keys(mergedTheme.tokens.colors[primaryColor]),\n' +
    '            value: primaryColor,\n' +
    '        });\n' +
    '    }\n' +
    '    if (isString(secondaryColor)) {\n' +
    '        mergedTheme.tokens.colors.secondary = createColorPalette({\n' +
    '            keys: Object.keys(mergedTheme.tokens.colors[secondaryColor]),\n' +
    '            value: secondaryColor,\n' +
    '        });\n' +
    '    }\n' +
    '    // Setting up the tokens. This is similar to what Style Dictionary\n' +
    '    // does. At the end of this, each token should have:\n' +
    '    // - CSS variable name of itself\n' +
    '    // - its value (reference to another CSS variable or raw value)\n' +
    '    const tokens = setupTokens({\n' +
    '        tokens: mergedTheme.tokens,\n' +
    '        setupToken,\n' +
    '    }); // Setting the type here because setupTokens is recursive\n' +
    '    const { breakpoints, name } = mergedTheme;\n' +
    '    // flattenProperties is another internal Style Dictionary function\n' +
    '    // that creates an array of all tokens.\n' +
    '    let cssText = `[data-amplify-theme="${name}"] {\\n` +\n' +
    '        flattenProperties(tokens)\n' +
    '            .map((token) => `${token.name}: ${token.value};`)\n' +
    "            .join('\\n') +\n" +
    '        `\\n}\\n`;\n' +
    '    let overrides = [];\n' +
    '    /**\n' +
    '     * For each override, we setup the tokens and then generate the CSS.\n' +
    '     * This allows us to have one single CSS string for all possible overrides\n' +
    '     * and avoid re-renders in React, but also support other frameworks as well.\n' +
    '     */\n' +
    '    if (mergedTheme.overrides) {\n' +
    '        overrides = mergedTheme.overrides.map((override) => {\n' +
    '            const tokens = setupTokens({\n' +
    '                tokens: override.tokens,\n' +
    '                setupToken,\n' +
    '            });\n' +
    '            const customProperties = flattenProperties(tokens)\n' +
    '                .map((token) => `${token.name}: ${token.value};`)\n' +
    "                .join('\\n');\n" +
    '            // Overrides can have a selector, media query, breakpoint, or color mode\n' +
    '            // for creating the selector\n' +
    "            if ('selector' in override) {\n" +
    '                cssText += `\\n${override.selector} {\\n${customProperties}\\n}\\n`;\n' +
    '            }\n' +
    "            if ('mediaQuery' in override) {\n" +
    '                cssText += `\\n@media (${override.mediaQuery}) {\n' +
    '  [data-amplify-theme="${name}"] {\n' +
    '    ${customProperties}\n' +
    '  }\n' +
    '}\\n`;\n' +
    '            }\n' +
    "            if ('breakpoint' in override) {\n" +
    '                const breakpoint = mergedTheme.breakpoints.values[override.breakpoint];\n' +
    '                cssText += `\\n@media (min-width: ${breakpoint}px) {\n' +
    '  [data-amplify-theme="${name}"] {\n' +
    '    ${customProperties}\n' +
    '  }\n' +
    '}\\n`;\n' +
    '            }\n' +
    "            if ('colorMode' in override) {\n" +
    '                cssText += `\\n@media (prefers-color-scheme: ${override.colorMode}) {\n' +
    '          [data-amplify-theme="${name}"][data-amplify-color-mode="system"] {\n' +
    '            ${customProperties}\n' +
    '            color-scheme: ${override.colorMode};\n' +
    '          }\n' +
    '        }\\n`;\n' +
    '                cssText += `\\n[data-amplify-theme="${name}"][data-amplify-color-mode="${override.colorMode}"] {\n' +
    '          ${customProperties}\n' +
    '          color-scheme: ${override.colorMode};\n' +
    '        }\\n`;\n' +
    '            }\n' +
    '            return {\n' +
    '                ...override,\n' +
    '                tokens,\n' +
    '            };\n' +
    '        });\n' +
    '    }\n' +
    '    return {\n' +
    '        tokens,\n' +
    '        breakpoints,\n' +
    '        name,\n' +
    '        cssText,\n' +
    '        // keep overrides separate from base theme\n' +
    '        // this allows web platforms to use plain CSS scoped to a\n' +
    '        // selector and only override the CSS vars needed. This\n' +
    '        // means we could generate CSS at build-time in a postcss\n' +
    '        // plugin, or do it at runtime and inject the CSS into a\n' +
    '        // style tag.\n' +
    '        // This also allows RN to dynamically switch themes in a\n' +
    '        // provider.\n' +
    '        overrides,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { createTheme };\n'
} [Function: logger]
____9999999____ {
  code: "import { createMachine, forwardTo, assign, spawn, actions } from 'xstate';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import { isEmptyObject } from '../../utils/utils.mjs';\n" +
    "import ACTIONS from './actions.mjs';\n" +
    "import GUARDS from './guards.mjs';\n" +
    "import { forgotPasswordActor } from './actors/forgotPassword.mjs';\n" +
    "import { signInActor } from './actors/signIn.mjs';\n" +
    "import { signUpActor } from './actors/signUp.mjs';\n" +
    "import { signOutActor } from './actors/signOut.mjs';\n" +
    "import { verifyUserAttributesActor } from './actors/verifyUserAttributes.mjs';\n" +
    "import { defaultServices } from './defaultServices.mjs';\n" +
    '\n' +
    'const getActorContext = (context, defaultStep) => ({\n' +
    '    ...context.actorDoneData,\n' +
    '    step: context?.actorDoneData?.step ?? defaultStep,\n' +
    '    // initialize empty objects on actor start\n' +
    '    formValues: {},\n' +
    '    touched: {},\n' +
    '    validationError: {},\n' +
    '    // values included on `context.config` that should be available in actors\n' +
    '    formFields: context.config?.formFields,\n' +
    '    loginMechanisms: context.config?.loginMechanisms,\n' +
    '    passwordSettings: context.config?.passwordSettings,\n' +
    '    signUpAttributes: context.config?.signUpAttributes,\n' +
    '    socialProviders: context.config?.socialProviders,\n' +
    '});\n' +
    'const { choose, stop } = actions;\n' +
    'const stopActor = (machineId) => stop(machineId);\n' +
    '// setup step waits for ui to emit INIT action to proceed to configure\n' +
    'const LEGACY_WAIT_CONFIG = {\n' +
    '    on: {\n' +
    '        INIT: {\n' +
    "            actions: 'configure',\n" +
    "            target: 'getConfig',\n" +
    '        },\n' +
    "        SIGN_OUT: '#authenticator.signOut',\n" +
    '    },\n' +
    '};\n' +
    '// setup step proceeds directly to configure\n' +
    'const NEXT_WAIT_CONFIG = {\n' +
    "    always: { actions: 'configure', target: 'getConfig' },\n" +
    '};\n' +
    'function createAuthenticatorMachine(options) {\n' +
    '    const { useNextWaitConfig, ...overrideConfigServices } = options ?? {};\n' +
    '    const initConfig = useNextWaitConfig ? NEXT_WAIT_CONFIG : LEGACY_WAIT_CONFIG;\n' +
    '    return createMachine({\n' +
    "        id: 'authenticator',\n" +
    "        initial: 'idle',\n" +
    '        context: {\n' +
    '            user: undefined,\n' +
    '            config: {},\n' +
    '            services: defaultServices,\n' +
    '            actorRef: undefined,\n' +
    '            hasSetup: false,\n' +
    '        },\n' +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            // See: https://xstate.js.org/docs/guides/communication.html#invoking-promises\n' +
    '            idle: {\n' +
    '                invoke: {\n' +
    "                    src: 'handleGetCurrentUser',\n" +
    "                    onDone: { actions: 'setUser', target: 'setup' },\n" +
    "                    onError: { target: 'setup' },\n" +
    '                },\n' +
    '            },\n' +
    '            setup: {\n' +
    "                initial: 'initConfig',\n" +
    '                states: {\n' +
    '                    initConfig,\n' +
    '                    getConfig: {\n' +
    '                        invoke: {\n' +
    "                            src: 'getAmplifyConfig',\n" +
    '                            onDone: [\n' +
    '                                {\n' +
    "                                    actions: ['applyAmplifyConfig', 'setHasSetup'],\n" +
    "                                    cond: 'hasUser',\n" +
    "                                    target: '#authenticator.authenticated',\n" +
    '                                },\n' +
    '                                {\n' +
    "                                    actions: ['applyAmplifyConfig', 'setHasSetup'],\n" +
    "                                    target: 'goToInitialState',\n" +
    '                                },\n' +
    '                            ],\n' +
    '                        },\n' +
    '                    },\n' +
    '                    goToInitialState: {\n' +
    '                        always: [\n' +
    '                            {\n' +
    "                                cond: 'isInitialStateSignUp',\n" +
    "                                target: '#authenticator.signUpActor',\n" +
    '                            },\n' +
    '                            {\n' +
    "                                cond: 'isInitialStateResetPassword',\n" +
    "                                target: '#authenticator.forgotPasswordActor',\n" +
    '                            },\n' +
    "                            { target: '#authenticator.signInActor' },\n" +
    '                        ],\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            getCurrentUser: {\n' +
    '                invoke: {\n' +
    "                    src: 'handleGetCurrentUser',\n" +
    '                    onDone: {\n' +
    "                        actions: 'setUser',\n" +
    "                        target: '#authenticator.authenticated',\n" +
    '                    },\n' +
    "                    onError: { target: '#authenticator.setup' },\n" +
    '                },\n' +
    '            },\n' +
    '            signInActor: {\n' +
    "                initial: 'spawnActor',\n" +
    '                states: {\n' +
    '                    spawnActor: {\n' +
    "                        always: { actions: 'spawnSignInActor', target: 'runActor' },\n" +
    '                    },\n' +
    '                    runActor: {\n' +
    "                        entry: 'clearActorDoneData',\n" +
    "                        exit: stopActor('signInActor'),\n" +
    '                    },\n' +
    '                },\n' +
    '                on: {\n' +
    "                    FORGOT_PASSWORD: 'forgotPasswordActor',\n" +
    "                    SIGN_IN: 'signInActor',\n" +
    "                    SIGN_UP: 'signUpActor',\n" +
    "                    'done.invoke.signInActor': [\n" +
    '                        {\n' +
    "                            cond: 'hasCompletedAttributeConfirmation',\n" +
    "                            target: '#authenticator.getCurrentUser',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            cond: 'isShouldConfirmUserAttributeStep',\n" +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.verifyUserAttributesActor',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            cond: 'isResetPasswordStep',\n" +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.forgotPasswordActor',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            cond: 'isConfirmSignUpStep',\n" +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.signUpActor',\n" +
    '                        },\n' +
    '                    ],\n' +
    '                },\n' +
    '            },\n' +
    '            signUpActor: {\n' +
    "                initial: 'spawnActor',\n" +
    '                states: {\n' +
    '                    spawnActor: {\n' +
    "                        always: { actions: 'spawnSignUpActor', target: 'runActor' },\n" +
    '                    },\n' +
    '                    runActor: {\n' +
    "                        entry: 'clearActorDoneData',\n" +
    "                        exit: stopActor('signUpActor'),\n" +
    '                    },\n' +
    '                },\n' +
    '                on: {\n' +
    "                    SIGN_IN: 'signInActor',\n" +
    "                    'done.invoke.signUpActor': [\n" +
    '                        {\n' +
    "                            cond: 'hasCompletedAttributeConfirmation',\n" +
    "                            target: '#authenticator.getCurrentUser',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            cond: 'isShouldConfirmUserAttributeStep',\n" +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.verifyUserAttributesActor',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            cond: 'isConfirmUserAttributeStep',\n" +
    "                            target: '#authenticator.verifyUserAttributesActor',\n" +
    '                        },\n' +
    '                        {\n' +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.signInActor',\n" +
    '                        },\n' +
    '                    ],\n' +
    '                },\n' +
    '            },\n' +
    '            forgotPasswordActor: {\n' +
    "                initial: 'spawnActor',\n" +
    '                states: {\n' +
    '                    spawnActor: {\n' +
    '                        always: {\n' +
    "                            actions: 'spawnForgotPasswordActor',\n" +
    "                            target: 'runActor',\n" +
    '                        },\n' +
    '                    },\n' +
    '                    runActor: {\n' +
    "                        entry: 'clearActorDoneData',\n" +
    "                        exit: stopActor('forgotPasswordActor'),\n" +
    '                    },\n' +
    '                },\n' +
    '                on: {\n' +
    "                    SIGN_IN: 'signInActor',\n" +
    "                    'done.invoke.forgotPasswordActor': [\n" +
    "                        { target: '#authenticator.signInActor' },\n" +
    '                    ],\n' +
    '                },\n' +
    '            },\n' +
    '            verifyUserAttributesActor: {\n' +
    "                initial: 'spawnActor',\n" +
    '                states: {\n' +
    '                    spawnActor: {\n' +
    '                        always: {\n' +
    "                            actions: 'spawnVerifyUserAttributesActor',\n" +
    "                            target: 'runActor',\n" +
    '                        },\n' +
    '                    },\n' +
    '                    runActor: {\n' +
    "                        entry: 'clearActorDoneData',\n" +
    "                        exit: stopActor('verifyUserAttributesActor'),\n" +
    '                    },\n' +
    '                },\n' +
    '                on: {\n' +
    "                    'done.invoke.verifyUserAttributesActor': [\n" +
    '                        {\n' +
    "                            actions: 'setActorDoneData',\n" +
    "                            target: '#authenticator.getCurrentUser',\n" +
    '                        },\n' +
    '                    ],\n' +
    '                },\n' +
    '            },\n' +
    '            authenticated: {\n' +
    "                initial: 'idle',\n" +
    '                states: {\n' +
    "                    idle: { on: { TOKEN_REFRESH: 'refreshUser' } },\n" +
    '                    refreshUser: {\n' +
    '                        invoke: {\n' +
    "                            src: '#authenticator.getCurrentUser',\n" +
    "                            onDone: { actions: 'setUser', target: 'idle' },\n" +
    "                            onError: { target: '#authenticator.signOut' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    "                on: { SIGN_OUT: 'signOut' },\n" +
    '            },\n' +
    '            signOut: {\n' +
    "                initial: 'spawnActor',\n" +
    '                states: {\n' +
    '                    spawnActor: {\n' +
    "                        always: { actions: 'spawnSignOutActor', target: 'runActor' },\n" +
    '                    },\n' +
    '                    runActor: {\n' +
    "                        entry: 'clearActorDoneData',\n" +
    '       '... 5947 more characters
} [Function: logger]
____9999999____ {
  code: "import { borderWidths } from './borderWidths.mjs';\n" +
    "import { colors } from './colors.mjs';\n" +
    "import { components } from './components/index.mjs';\n" +
    "import { fonts } from './fonts.mjs';\n" +
    "import { fontSizes } from './fontSizes.mjs';\n" +
    "import { fontWeights } from './fontWeights.mjs';\n" +
    "import { lineHeights } from './lineHeights.mjs';\n" +
    "import { opacities } from './opacities.mjs';\n" +
    "import { outlineOffsets } from './outlineOffsets.mjs';\n" +
    "import { outlineWidths } from './outlineWidths.mjs';\n" +
    "import { radii } from './radii.mjs';\n" +
    "import { shadows } from './shadows.mjs';\n" +
    "import { space } from './space.mjs';\n" +
    "import { time } from './time.mjs';\n" +
    "import { transforms } from './transforms.mjs';\n" +
    '\n' +
    'const tokens = {\n' +
    '    components,\n' +
    '    borderWidths,\n' +
    '    colors,\n' +
    '    fonts,\n' +
    '    fontSizes,\n' +
    '    fontWeights,\n' +
    '    lineHeights,\n' +
    '    opacities,\n' +
    '    outlineOffsets,\n' +
    '    outlineWidths,\n' +
    '    radii,\n' +
    '    shadows,\n' +
    '    space,\n' +
    '    time,\n' +
    '    transforms,\n' +
    '};\n' +
    'const reactNativeTokens = {\n' +
    '    colors,\n' +
    '    borderWidths,\n' +
    '    fontSizes: {\n' +
    '        xxs: fontSizes.xxs,\n' +
    '        xs: fontSizes.xs,\n' +
    '        small: fontSizes.small,\n' +
    '        medium: fontSizes.medium,\n' +
    '        large: fontSizes.large,\n' +
    '        xl: fontSizes.xl,\n' +
    '        xxl: fontSizes.xxl,\n' +
    '        xxxl: fontSizes.xxxl,\n' +
    '    },\n' +
    '    fontWeights,\n' +
    '    opacities,\n' +
    "    // React Native doesn't need the relative space values\n" +
    '    space: {\n' +
    '        // use `space.xxxs` to output a value of `2` and avoid odd space numbers\n' +
    '        xxs: space.xxxs,\n' +
    '        xs: space.xs,\n' +
    '        small: space.small,\n' +
    '        medium: space.medium,\n' +
    '        large: space.large,\n' +
    '        xl: space.xl,\n' +
    '        xxl: space.xxl,\n' +
    '        xxxl: space.xxxl,\n' +
    '    },\n' +
    '    radii,\n' +
    '    time,\n' +
    '};\n' +
    '\n' +
    'export { reactNativeTokens, tokens };\n'
} [Function: logger]
____9999999____ {
  code: "import kebabCase from 'lodash/kebabCase.js';\n" +
    "import usesReference from 'style-dictionary/lib/utils/references/usesReference.js';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../utils/setUserAgent/constants.mjs';\n" +
    "import { isObject, has, isString } from '../utils/utils.mjs';\n" +
    '\n' +
    "const CSS_VARIABLE_PREFIX = 'amplify';\n" +
    '// Important: these properties should not be altered in\n' +
    '// order to maintain the expected order of the CSS `box-shadow` property\n' +
    'const SHADOW_PROPERTIES = [\n' +
    "    'offsetX',\n" +
    "    'offsetY',\n" +
    "    'blurRadius',\n" +
    "    'spreadRadius',\n" +
    "    'color',\n" +
    '];\n' +
    'function referenceValue(value) {\n' +
    '    if (!value)\n' +
    "        return '';\n" +
    '    if (usesReference(value)) {\n' +
    "        const path = value.replace(/\\{|\\}/g, '').replace('.value', '').split('.');\n" +
    '        return `var(--${cssNameTransform({ path })})`;\n' +
    '    }\n' +
    '    return value;\n' +
    '}\n' +
    'function cssValue(token) {\n' +
    '    const { value } = token;\n' +
    '    if (isString(value)) {\n' +
    '        return referenceValue(value);\n' +
    '    }\n' +
    '    if (isShadowTokenObject(value)) {\n' +
    '        return SHADOW_PROPERTIES.map((property) => {\n' +
    '            return referenceValue(\n' +
    '            // lookup property against `token` first for custom non-nested value, then lookup\n' +
    '            // property against `value` for design token value\n' +
    '            isShadowTokenObject(token) ? token[property] : value[property]);\n' +
    "        }).join(' ');\n" +
    '    }\n' +
    '    return value;\n' +
    '}\n' +
    'function cssNameTransform({ path = [] }) {\n' +
    "    return `${kebabCase([CSS_VARIABLE_PREFIX, ...path].join(' '))}`;\n" +
    '}\n' +
    '/**\n' +
    ' * Helper function to test if something is a design token or not.\n' +
    ' * Used in the React component style props.\n' +
    ' *\n' +
    ' * @param value - thing to test if it is a design token or not\n' +
    ' * @returns boolean\n' +
    ' */\n' +
    'function isDesignToken(value) {\n' +
    "    return isObject(value) && has(value, 'value');\n" +
    '}\n' +
    'function isShadowTokenObject(value) {\n' +
    "    return isObject(value) && has(value, 'offsetX');\n" +
    '}\n' +
    '/**\n' +
    ' * Recursive function that will walk down the token object\n' +
    ' * and perform the setupToken function on each token.\n' +
    ' * Similar to what Style Dictionary does.\n' +
    ' */\n' +
    'function setupTokens({ tokens, path = [], setupToken, }) {\n' +
    "    if (has(tokens, 'value')) {\n" +
    '        return setupToken({ token: tokens, path });\n' +
    '    }\n' +
    '    const output = {};\n' +
    '    for (const name in tokens) {\n' +
    '        if (has(tokens, name)) {\n' +
    '            const value = tokens[name];\n' +
    '            const nextTokens = isObject(value) ? value : { value };\n' +
    '            output[name] = setupTokens({\n' +
    '                tokens: nextTokens,\n' +
    '                path: path.concat(name),\n' +
    '                setupToken,\n' +
    '            });\n' +
    '        }\n' +
    '    }\n' +
    '    return output;\n' +
    '}\n' +
    '\n' +
    'export { CSS_VARIABLE_PREFIX, cssNameTransform, cssValue, isDesignToken, isShadowTokenObject, setupTokens };\n'
} [Function: logger]
____9999999____ {
  code: "import { UnverifiedContactMethodType } from './user.mjs';\n" +
    '\n' +
    'const isUnverifiedContactMethodType = (value) => Object.values(UnverifiedContactMethodType).findIndex((val) => val === value) >= 0;\n' +
    '\n' +
    'export { isUnverifiedContactMethodType };\n'
} [Function: logger]
____9999999____ {
  code: '/** Array of auth fields that we supply defaults with */\n' +
    'const signUpFieldsWithDefault = [\n' +
    "    'birthdate',\n" +
    "    'email',\n" +
    "    'family_name',\n" +
    "    'given_name',\n" +
    "    'middle_name',\n" +
    "    'name',\n" +
    "    'nickname',\n" +
    "    'phone_number',\n" +
    "    'preferred_username',\n" +
    "    'profile',\n" +
    "    'website',\n" +
    '];\n' +
    '/** Array of auth fields that we do not supply defaults with */\n' +
    'const signUpFieldsWithoutDefault = [\n' +
    "    'address',\n" +
    "    'gender',\n" +
    "    'locale',\n" +
    "    'picture',\n" +
    "    'updated_at',\n" +
    "    'zoneinfo',\n" +
    '];\n' +
    '/** Array of known login mechanisms */\n' +
    'const LoginMechanismArray = [\n' +
    "    'username',\n" +
    "    'email',\n" +
    "    'phone_number',\n" +
    '];\n' +
    'const authFieldsWithDefaults = [\n' +
    '    ...LoginMechanismArray,\n' +
    '    ...signUpFieldsWithDefault,\n' +
    "    'confirmation_code',\n" +
    "    'password',\n" +
    "    'confirm_password',\n" +
    '];\n' +
    'const isAuthFieldsWithDefaults = (field) => {\n' +
    '    return authFieldsWithDefaults.includes(field);\n' +
    '};\n' +
    '\n' +
    'export { LoginMechanismArray, authFieldsWithDefaults, isAuthFieldsWithDefaults, signUpFieldsWithDefault, signUpFieldsWithoutDefault };\n'
} [Function: logger]
____9999999____ {
  code: '/** Federated IDPs that Authenticator supports */\n' +
    'var FederatedIdentityProviders;\n' +
    '(function (FederatedIdentityProviders) {\n' +
    '    FederatedIdentityProviders["Apple"] = "Apple";\n' +
    '    FederatedIdentityProviders["Amazon"] = "Amazon";\n' +
    '    FederatedIdentityProviders["Facebook"] = "Facebook";\n' +
    '    FederatedIdentityProviders["Google"] = "Google";\n' +
    '})(FederatedIdentityProviders || (FederatedIdentityProviders = {}));\n' +
    '/**\n' +
    ' * Cognito user contact method types that have not been verified as valid\n' +
    ' */\n' +
    'var UnverifiedContactMethodType;\n' +
    '(function (UnverifiedContactMethodType) {\n' +
    '    UnverifiedContactMethodType["Email"] = "email";\n' +
    '    UnverifiedContactMethodType["PhoneNumber"] = "phone_number";\n' +
    '})(UnverifiedContactMethodType || (UnverifiedContactMethodType = {}));\n' +
    '\n' +
    'export { FederatedIdentityProviders, UnverifiedContactMethodType };\n'
} [Function: logger]
____9999999____ {
  code: "import { setCustomUserAgent } from '@aws-amplify/core/internals/utils';\n" +
    "import { STORAGE_MANAGER_INPUT_BASE, MAP_VIEW_INPUT_BASE, LOCATION_SEARCH_INPUT_BASE, IN_APP_MESSAGING_INPUT_BASE, ACCOUNT_SETTINGS_INPUT_BASE, AUTHENTICATOR_INPUT_BASE } from './constants.mjs';\n" +
    "import { noop } from '../utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // set user agent options\n' +
    ' * const clear = setUserAgent(input);\n' +
    ' *\n' +
    ' * // clear user agent options\n' +
    ' * clear();\n' +
    ' * ```\n' +
    ' */\n' +
    'const setUserAgent = ({ componentName, packageName, version, }) => {\n' +
    '    const packageData = [`ui-${packageName}`, version];\n' +
    '    switch (componentName) {\n' +
    "        case 'Authenticator': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...AUTHENTICATOR_INPUT_BASE,\n' +
    '                additionalDetails: [[componentName], packageData],\n' +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'ChangePassword':\n" +
    "        case 'DeleteUser': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...ACCOUNT_SETTINGS_INPUT_BASE,\n' +
    "                additionalDetails: [['AccountSettings'], packageData],\n" +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'InAppMessaging': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...IN_APP_MESSAGING_INPUT_BASE,\n' +
    '                additionalDetails: [[componentName], packageData],\n' +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'LocationSearch': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...LOCATION_SEARCH_INPUT_BASE,\n' +
    '                additionalDetails: [[componentName], packageData],\n' +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'MapView': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...MAP_VIEW_INPUT_BASE,\n' +
    '                additionalDetails: [[componentName], packageData],\n' +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    "        case 'StorageManager': {\n" +
    '            setCustomUserAgent({\n' +
    '                ...STORAGE_MANAGER_INPUT_BASE,\n' +
    '                additionalDetails: [[componentName], packageData],\n' +
    '            });\n' +
    '            break;\n' +
    '        }\n' +
    '    }\n' +
    '    return noop;\n' +
    '};\n' +
    '\n' +
    'export { setUserAgent };\n'
} [Function: logger]
____9999999____ {
  code: 'const ComponentClassName = {\n' +
    "    Accordion: 'amplify-accordion',\n" +
    "    AccordionItem: 'amplify-accordion__item',\n" +
    "    AccordionItemTrigger: 'amplify-accordion__item__trigger',\n" +
    "    AccordionItemContent: 'amplify-accordion__item__content',\n" +
    "    AccordionItemIcon: 'amplify-accordion__item__icon',\n" +
    "    Alert: 'amplify-alert',\n" +
    "    AlertIcon: 'amplify-alert__icon',\n" +
    "    AlertHeading: 'amplify-alert__heading',\n" +
    "    AlertBody: 'amplify-alert__body',\n" +
    "    AlertDismiss: 'amplify-alert__dismiss',\n" +
    "    Autocomplete: 'amplify-autocomplete',\n" +
    "    AutocompleteMenu: 'amplify-autocomplete__menu',\n" +
    "    AutocompleteMenuEmpty: 'amplify-autocomplete__menu--empty',\n" +
    "    AutocompleteMenuFooter: 'amplify-autocomplete__menu__footer',\n" +
    "    AutocompleteMenuHeader: 'amplify-autocomplete__menu__header',\n" +
    "    AutocompleteMenuLoading: 'amplify-autocomplete__menu--loading',\n" +
    "    AutocompleteMenuOption: 'amplify-autocomplete__menu__option',\n" +
    "    AutocompleteMenuOptions: 'amplify-autocomplete__menu__options',\n" +
    "    Badge: 'amplify-badge',\n" +
    "    Breadcrumbs: 'amplify-breadcrumbs',\n" +
    "    BreadcrumbsList: 'amplify-breadcrumbs__list',\n" +
    "    BreadcrumbsItem: 'amplify-breadcrumbs__item',\n" +
    "    BreadcrumbsSeparator: 'amplify-breadcrumbs__separator',\n" +
    "    BreadcrumbsLink: 'amplify-breadcrumbs__link',\n" +
    "    Button: 'amplify-button',\n" +
    "    ButtonGroup: 'amplify-buttongroup',\n" +
    "    ButtonLoaderWrapper: 'amplify-button__loader-wrapper',\n" +
    "    Card: 'amplify-card',\n" +
    "    Checkbox: 'amplify-checkbox',\n" +
    "    CheckboxButton: 'amplify-checkbox__button',\n" +
    "    CheckboxIcon: 'amplify-checkbox__icon',\n" +
    "    CheckboxInput: 'amplify-checkbox__input',\n" +
    "    CheckboxLabel: 'amplify-checkbox__label',\n" +
    "    CheckboxField: 'amplify-checkboxfield',\n" +
    "    Collection: 'amplify-collection',\n" +
    "    CollectionItems: 'amplify-collection-items',\n" +
    "    CollectionSearch: 'amplify-collection-search',\n" +
    "    CollectionPagination: 'amplify-collection-pagination',\n" +
    "    CountryCodeSelect: 'amplify-countrycodeselect',\n" +
    "    DialCodeSelect: 'amplify-dialcodeselect',\n" +
    "    Divider: 'amplify-divider',\n" +
    "    DividerLabel: 'amplify-divider--label',\n" +
    "    DropZone: 'amplify-dropzone',\n" +
    "    Field: 'amplify-field',\n" +
    "    FieldDescription: 'amplify-field__description',\n" +
    "    FieldErrorMessage: 'amplify-field__error-message',\n" +
    "    FieldGroup: 'amplify-field-group',\n" +
    "    FieldGroupControl: 'amplify-field-group__control',\n" +
    "    FieldGroupOuterEnd: 'amplify-field-group__outer-end',\n" +
    "    FieldGroupOuterStart: 'amplify-field-group__outer-start',\n" +
    "    FieldGroupInnerEnd: 'amplify-field-group__inner-end',\n" +
    "    FieldGroupInnerStart: 'amplify-field-group__inner-start',\n" +
    "    FieldGroupIcon: 'amplify-field-group__icon',\n" +
    "    FieldGroupIconButton: 'amplify-field-group__icon-button',\n" +
    "    FieldGroupHasInnerEnd: 'amplify-field-group--has-inner-end',\n" +
    "    FieldGroupHasInnerStart: 'amplify-field-group--has-inner-start',\n" +
    "    FieldShowPassword: 'amplify-field__show-password',\n" +
    "    FieldGroupFieldWrapper: 'amplify-field-group__field-wrapper',\n" +
    "    Fieldset: 'amplify-fieldset',\n" +
    "    FieldsetLegend: 'amplify-fieldset__legend',\n" +
    "    Flex: 'amplify-flex',\n" +
    "    Grid: 'amplify-grid',\n" +
    "    Heading: 'amplify-heading',\n" +
    "    HighlightMatch: 'amplify-highlightmatch',\n" +
    "    HighlightMatchHighlighted: 'amplify-highlightmatch__highlighted',\n" +
    "    Icon: 'amplify-icon',\n" +
    "    Image: 'amplify-image',\n" +
    "    Input: 'amplify-input',\n" +
    "    Label: 'amplify-label',\n" +
    "    Link: 'amplify-link',\n" +
    "    Loader: 'amplify-loader',\n" +
    "    LoaderLabel: 'amplify-loader__label',\n" +
    "    MenuContent: 'amplify-menu__content',\n" +
    "    MenuItem: 'amplify-menu__content__item',\n" +
    "    MenuTrigger: 'amplify-menu__trigger',\n" +
    "    MenuWrapper: 'amplify-menu__wrapper',\n" +
    "    Message: 'amplify-message',\n" +
    "    MessageIcon: 'amplify-message__icon',\n" +
    "    MessageHeading: 'amplify-message__heading',\n" +
    "    MessageBody: 'amplify-message__body',\n" +
    "    MessageContent: 'amplify-message__content',\n" +
    "    MessageDismiss: 'amplify-message__dismiss',\n" +
    "    Pagination: 'amplify-pagination',\n" +
    "    PaginationItem: 'amplify-pagination__item',\n" +
    "    PasswordField: 'amplify-passwordfield',\n" +
    "    PhoneNumberField: 'amplify-phonenumberfield',\n" +
    "    Placeholder: 'amplify-placeholder',\n" +
    "    Radio: 'amplify-radio',\n" +
    "    RadioButton: 'amplify-radio__button',\n" +
    "    RadioInput: 'amplify-radio__input',\n" +
    "    RadioLabel: 'amplify-radio__label',\n" +
    "    RadioGroupField: 'amplify-radiogroupfield',\n" +
    "    RadioGroup: 'amplify-radiogroup',\n" +
    "    Rating: 'amplify-rating',\n" +
    "    RatingItem: 'amplify-rating__item',\n" +
    "    RatingIcon: 'amplify-rating__icon',\n" +
    "    RatingLabel: 'amplify-rating__label',\n" +
    "    ScrollView: 'amplify-scrollview',\n" +
    "    SearchField: 'amplify-searchfield',\n" +
    "    SearchFieldClear: 'amplify-searchfield__clear',\n" +
    "    SearchFieldSearch: 'amplify-searchfield__search',\n" +
    "    Select: 'amplify-select',\n" +
    "    SelectField: 'amplify-selectfield',\n" +
    "    SelectWrapper: 'amplify-select__wrapper',\n" +
    "    SelectIcon: 'amplify-select__icon',\n" +
    "    SliderField: 'amplify-sliderfield',\n" +
    "    SliderFieldGroup: 'amplify-sliderfield__group',\n" +
    "    SliderFieldLabel: 'amplify-sliderfield__label',\n" +
    "    SliderFieldRange: 'amplify-sliderfield__range',\n" +
    "    SliderFieldRoot: 'amplify-sliderfield__root',\n" +
    "    SliderFieldThumb: 'amplify-sliderfield__thumb',\n" +
    "    SliderFieldTrack: 'amplify-sliderfield__track',\n" +
    "    StepperField: 'amplify-stepperfield',\n" +
    "    StepperFieldButtonDecrease: 'amplify-stepperfield__button--decrease',\n" +
    "    StepperFieldButtonIncrease: 'amplify-stepperfield__button--increase',\n" +
    "    StepperFieldInput: 'amplify-stepperfield__input',\n" +
    "    StorageImage: 'amplify-storageimage',\n" +
    "    StorageManager: 'amplify-storagemanager',\n" +
    "    StorageManagerDropZone: 'amplify-storagemanager__dropzone',\n" +
    "    StorageManagerDropZoneIcon: 'amplify-storagemanager__dropzone__icon',\n" +
    "    StorageManagerDropZoneText: 'amplify-storagemanager__dropzone__text',\n" +
    "    StorageManagerFilePicker: 'amplify-storagemanager__file__picker',\n" +
    "    StorageManagerFile: 'amplify-storagemanager__file',\n" +
    "    StorageManagerFileWrapper: 'amplify-storagemanager__file__wrapper',\n" +
    "    StorageManagerFileList: 'amplify-storagemanager__file__list',\n" +
    "    StorageManagerFileName: 'amplify-storagemanager__file__name',\n" +
    "    StorageManagerFileSize: 'amplify-storagemanager__file__size',\n" +
    "    StorageManagerFileInfo: 'amplify-storagemanager__file__info',\n" +
    "    StorageManagerFileImage: 'amplify-storagemanager__file__image',\n" +
    "    StorageManagerFileMain: 'amplify-storagemanager__file__main',\n" +
    "    StorageManagerFileStatus: 'amplify-storagemanager__file__status',\n" +
    "    StorageManagerLoader: 'amplify-storagemanager__loader',\n" +
    "    StorageManagerPreviewer: 'amplify-storagemanager__previewer',\n" +
    "    StorageManagerPreviewerText: 'amplify-storagemanager__previewer__text',\n" +
    "    StorageManagerPreviewerActions: 'amplify-storagemanager__previewer__actions',\n" +
    "    StorageManagerPreviewerFooter: 'amplify-storagemanager__previewer__footer',\n" +
    "    SwitchField: 'amplify-switchfield',\n" +
    "    SwitchLabel: 'amplify-switch__label',\n" +
    "    SwitchThumb: 'amplify-switch__thumb',\n" +
    "    SwitchTrack: 'amplify-switch__track',\n" +
    "    SwitchWrapper: 'amplify-switch__wrapper',\n" +
    "    Table: 'amplify-table',\n" +
    "    TableCaption: 'amplify-table__caption',\n" +
    "    TableBody: 'amplify-table__body',\n" +
    "    TableTd: 'amplify-table__td',\n" +
    "    TableTh: 'amplify-table__th',\n" +
    "    TableFoot: 'amplify-table__foot',\n" +
    "    TableHead: 'amplify-table__head',\n" +
    "    TableRow: 'amplify-table__row',\n" +
    "    Tabs: 'amplify-tabs',\n" +
    "    TabsList: 'amplify-tabs__list',\n" +
    "    TabsItem: 'amplify-tabs__item',\n" +
    "    TabsPanel: 'amplify-tabs__panel',\n" +
    "    Text: 'amplify-text',\n" +
    "    Textarea: 'amplify-textarea',\n" +
    "    TextAreaField: 'amplify-textareafield',\n" +
    "    TextField: 'amplify-textfield',\n" +
    "    ToggleButton: 'amplify-togglebutton',\n" +
    "    ToggleButtonGroup: 'amplify-togglebuttongroup',\n" +
    "    VisuallyHidden: 'amplify-visually-hidden',\n" +
    '};\n' +
    '\n' +
    'export { ComponentClassName };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Some libraries may not follow Node ES module spec and could be loaded as CommonJS modules,\n' +
    ' * To ensure the interoperability between ESM and CJS, modules from those libraries have to be loaded via namespace import\n' +
    ' * And sanitized by the function below because unlike ESM namespace, CJS namespace set `module.exports` object on the `default` key\n' +
    ' * https://nodejs.org/api/esm.html#interoperability-with-commonjs\n' +
    ' */\n' +
    'const sanitizeNamespaceImport = (namespaceModule) => {\n' +
    '    const sanitizedNamespaceModule = { default: undefined, ...namespaceModule };\n' +
    '    return sanitizedNamespaceModule.default ?? sanitizedNamespaceModule;\n' +
    '};\n' +
    '/**\n' +
    ' * Checks if `value` is an Object (non-primitive, non-array, non-function)\n' +
    ' * Will return false for Arrays and functions\n' +
    ' *\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is an object, `false` otherwise\n' +
    ' */\n' +
    'function isObject(value) {\n' +
    "    return value != null && !Array.isArray(value) && typeof value === 'object';\n" +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is a string primitive or object\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is a string, `false` otherwise\n' +
    ' */\n' +
    'function isString(value) {\n' +
    "    return (typeof value === 'string' ||\n" +
    "        (typeof value === 'object' &&\n" +
    "            Object.prototype.toString.call(value) === '[object String]'));\n" +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is a Map\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is a Map, `false` otherwise\n' +
    ' */\n' +
    'function isMap(value) {\n' +
    "    return (isObject(value) && Object.prototype.toString.call(value) === '[object Map]');\n" +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is a Set\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is a Set, `false` otherwise\n' +
    ' */\n' +
    'function isSet(value) {\n' +
    "    return (isObject(value) && Object.prototype.toString.call(value) === '[object Set]');\n" +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is undefined\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is undefined, `false` otherwise\n' +
    ' */\n' +
    'function isUndefined(value) {\n' +
    '    return value === undefined;\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is nullish\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is nullish, `false` otherwise\n' +
    ' */\n' +
    'function isNil(value) {\n' +
    '    return value == null;\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is empty\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is empty, `false` otherwise\n' +
    ' */\n' +
    'function isEmpty(value) {\n' +
    '    if (value === null || value === undefined)\n' +
    '        return true;\n' +
    '    if (isObject(value) && (isMap(value) || isSet(value))) {\n' +
    '        return !value.size;\n' +
    '    }\n' +
    '    if (isObject(value) && (isString(value) || Array.isArray(value))) {\n' +
    '        return !value.length;\n' +
    '    }\n' +
    '    for (const key in value) {\n' +
    '        if (has(value, key)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '    }\n' +
    '    return true;\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is an empty array\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is a empty, `false` otherwise\n' +
    ' */\n' +
    'function isEmptyArray(value) {\n' +
    '    return Array.isArray(value) && isEmpty(value);\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if all members of the `values` param are empty arrays\n' +
    ' *\n' +
    ' * @param {unknown} value The values to check\n' +
    ' * @returns {boolean} Returns `true` if all members of `values` are empty, `false` otherwise\n' +
    ' */\n' +
    'function areEmptyArrays(...values) {\n' +
    '    return values.every(isEmptyArray);\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is an empty object\n' +
    ' *\n' +
    ' * @param {unknown} value The value to check\n' +
    ' * @returns {boolean} Returns `true` if `value` is empty, `false` otherwise\n' +
    ' */\n' +
    'function isEmptyObject(value) {\n' +
    '    return isObject(value) && isEmpty(value);\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if all members of the `values` param are empty objects\n' +
    ' *\n' +
    ' * @param {unknown} values The values to check\n' +
    ' * @returns {boolean} Returns `true` if all members of the `values` param are empty, `false` otherwise\n' +
    ' */\n' +
    'function areEmptyObjects(...values) {\n' +
    '    return values.every(isEmptyObject);\n' +
    '}\n' +
    '/**\n' +
    ' * Capitalizes `value` and its return type\n' +
    ' *\n' +
    ' * @param {string} value string to capitalize\n' +
    ' * @returns {string} capitalized string\n' +
    ' */\n' +
    'function capitalize(value) {\n' +
    "    return (isString(value) ? value.charAt(0).toUpperCase() + value.slice(1) : '');\n" +
    '}\n' +
    '/**\n' +
    ' * Checks if `key` is a direct property of `value`\n' +
    ' *\n' +
    ' * @param {unknown} value `object` potentially containing property\n' +
    ' * @param {string} key property key\n' +
    ' * @returns whether `key` param is a property of the `obj` param\n' +
    ' */\n' +
    'function has(value, key) {\n' +
    '    return value != null && Object.prototype.hasOwnProperty.call(value, key);\n' +
    '}\n' +
    '/**\n' +
    ' * Checks if `value` is a function\n' +
    ' *\n' +
    ' * @param {unknown} value param to check\n' +
    ' * @returns {boolean} whether `value` is a function\n' +
    ' */\n' +
    'function isFunction(value) {\n' +
    "    return typeof value === 'function';\n" +
    '}\n' +
    '/**\n' +
    ' * This helper function creates modifier class names that are used for our flat BEM styling\n' +
    ' * it takes in a base and modifier and returns the modified class if a modifier was passed in and null otherwise\n' +
    ' * @param base The base class of the output\n' +
    ' * @param modifier The modifier to add onto the base\n' +
    ' * @returns the modified class name or empty string\n' +
    ' */\n' +
    'const classNameModifier = (base, modifier) => {\n' +
    "    return modifier ? `${base}--${modifier}` : '';\n" +
    '};\n' +
    '/**\n' +
    ' * This helper function creates modified class names that are used for our flat BEM styling\n' +
    ' * it takes in a base, modifier, and flag and returns the modified class name if the flag is true and null if the flag is false\n' +
    ' * @param base\n' +
    ' * @param modifier\n' +
    ' * @param flag\n' +
    ' * @returns the modified class name or empty string\n' +
    ' */\n' +
    'const classNameModifierByFlag = (base, modifier, flag) => {\n' +
    "    return flag ? `${base}--${modifier}` : '';\n" +
    '};\n' +
    '/**\n' +
    ' * `isFunction` but types the param with its function signature\n' +
    ' *\n' +
    ' * @param {unknown} value param to check\n' +
    ' * @returns {boolean} whether `value` is a function\n' +
    ' */\n' +
    'function isTypedFunction(value) {\n' +
    '    return isFunction(value);\n' +
    '}\n' +
    '/**\n' +
    ' * Similar to `Array.join`, with an optional callback/template param\n' +
    ' * for formatting returned string values\n' +
    ' *\n' +
    ' * @param {string[]} values string array\n' +
    ' * @param {(value: string) => string} template callback format param\n' +
    ' * @returns formatted string array\n' +
    ' */\n' +
    'function templateJoin(values, template) {\n' +
    "    return values.reduce((acc, curr) => `${acc}${isString(curr) ? template(curr) : ''}`, '');\n" +
    '}\n' +
    '/**\n' +
    ' * A function that does nothing\n' +
    ' *\n' +
    ' * @param {any[]} _ accepts any parameters\n' +
    ' * @returns nothing\n' +
    ' */\n' +
    'function noop(..._) {\n' +
    '    return;\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} groupName name of group\n' +
    ' * @param events string values related to group\n' +
    ' */\n' +
    'function groupLog(groupName, ...events) {\n' +
    '    const hasEvents = !!events?.length;\n' +
    '    if (hasEvents) {\n' +
    '        // eslint-disable-next-line no-console\n' +
    '        console.groupCollapsed(groupName);\n' +
    '        events?.forEach((event) => {\n' +
    '            // eslint-disable-next-line no-console\n' +
    '            console.log(event);\n' +
    '        });\n' +
    '        // eslint-disable-next-line no-console\n' +
    '        console.groupEnd();\n' +
    '    }\n' +
    '    else {\n' +
    '        // eslint-disable-next-line no-console\n' +
    '        console.log(groupName);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { areEmptyArrays, areEmptyObjects, capitalize, classNameModifier, classNameModifierByFlag, groupLog, has, isEmpty, isEmptyObject, isFunction, isMap, isNil, isObject, isSet, isString, isTypedFunction, isUndefined, noop, sanitizeNamespaceImport, templateJoin };\n'
} [Function: logger]
____9999999____ {
  code: "import { tokens } from './tokens/index.mjs';\n" +
    '\n' +
    'const darkModeTokens = {\n' +
    '    colors: {\n' +
    '        red: {\n' +
    '            10: tokens.colors.red[100],\n' +
    '            20: tokens.colors.red[90],\n' +
    '            40: tokens.colors.red[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.red[40],\n' +
    '            90: tokens.colors.red[20],\n' +
    '            100: tokens.colors.red[10],\n' +
    '        },\n' +
    '        orange: {\n' +
    '            10: tokens.colors.orange[100],\n' +
    '            20: tokens.colors.orange[90],\n' +
    '            40: tokens.colors.orange[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.orange[40],\n' +
    '            90: tokens.colors.orange[20],\n' +
    '            100: tokens.colors.orange[10],\n' +
    '        },\n' +
    '        yellow: {\n' +
    '            10: tokens.colors.yellow[100],\n' +
    '            20: tokens.colors.yellow[90],\n' +
    '            40: tokens.colors.yellow[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.yellow[40],\n' +
    '            90: tokens.colors.yellow[20],\n' +
    '            100: tokens.colors.yellow[10],\n' +
    '        },\n' +
    '        green: {\n' +
    '            10: tokens.colors.green[100],\n' +
    '            20: tokens.colors.green[90],\n' +
    '            40: tokens.colors.green[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.green[40],\n' +
    '            90: tokens.colors.green[20],\n' +
    '            100: tokens.colors.green[10],\n' +
    '        },\n' +
    '        teal: {\n' +
    '            10: tokens.colors.teal[100],\n' +
    '            20: tokens.colors.teal[90],\n' +
    '            40: tokens.colors.teal[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.teal[40],\n' +
    '            90: tokens.colors.teal[20],\n' +
    '            100: tokens.colors.teal[10],\n' +
    '        },\n' +
    '        blue: {\n' +
    '            10: tokens.colors.blue[100],\n' +
    '            20: tokens.colors.blue[90],\n' +
    '            40: tokens.colors.blue[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.blue[40],\n' +
    '            90: tokens.colors.blue[20],\n' +
    '            100: tokens.colors.blue[10],\n' +
    '        },\n' +
    '        purple: {\n' +
    '            10: tokens.colors.purple[100],\n' +
    '            20: tokens.colors.purple[90],\n' +
    '            40: tokens.colors.purple[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.purple[40],\n' +
    '            90: tokens.colors.purple[20],\n' +
    '            100: tokens.colors.purple[10],\n' +
    '        },\n' +
    '        pink: {\n' +
    '            10: tokens.colors.pink[100],\n' +
    '            20: tokens.colors.pink[90],\n' +
    '            40: tokens.colors.pink[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.pink[40],\n' +
    '            90: tokens.colors.pink[20],\n' +
    '            100: tokens.colors.pink[10],\n' +
    '        },\n' +
    '        neutral: {\n' +
    '            10: tokens.colors.neutral[100],\n' +
    '            20: tokens.colors.neutral[90],\n' +
    '            40: tokens.colors.neutral[80],\n' +
    "            // 60 doesn't change\n" +
    '            80: tokens.colors.neutral[40],\n' +
    '            90: tokens.colors.neutral[20],\n' +
    '            100: tokens.colors.neutral[10],\n' +
    '        },\n' +
    '        font: {\n' +
    "            primary: '{colors.white}',\n" +
    "            secondary: '{colors.neutral.100}',\n" +
    "            tertiary: '{colors.neutral.90}',\n" +
    "            inverse: '{colors.neutral.10}',\n" +
    '        },\n' +
    '        background: {\n' +
    "            primary: '{colors.neutral.10}',\n" +
    "            secondary: '{colors.neutral.20}',\n" +
    "            tertiary: '{colors.neutral.40}',\n" +
    '        },\n' +
    '        border: {\n' +
    "            primary: '{colors.neutral.60}',\n" +
    "            secondary: '{colors.neutral.40}',\n" +
    "            tertiary: '{colors.neutral.20}',\n" +
    '        },\n' +
    '        overlay: {\n' +
    "            5: 'hsla(0, 0%, 100%, 0.05)',\n" +
    "            10: 'hsla(0, 0%, 100%, 0.1)',\n" +
    "            20: 'hsla(0, 0%, 100%, 0.2)',\n" +
    "            30: 'hsla(0, 0%, 100%, 0.3)',\n" +
    "            40: 'hsla(0, 0%, 100%, 0.4)',\n" +
    "            50: 'hsla(0, 0%, 100%, 0.5)',\n" +
    "            60: 'hsla(0, 0%, 100%, 0.6)',\n" +
    "            70: 'hsla(0, 0%, 100%, 0.7)',\n" +
    "            80: 'hsla(0, 0%, 100%, 0.8)',\n" +
    "            90: 'hsla(0, 0%, 100%, 0.9)',\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '/**\n' +
    ' * A basic dark mode that just flips the base color\n' +
    ' * palette.\n' +
    ' */\n' +
    'const defaultDarkModeOverride = {\n' +
    "    colorMode: 'dark',\n" +
    '    tokens: darkModeTokens,\n' +
    '};\n' +
    'const reactNativeDarkTokens = {\n' +
    '    ...darkModeTokens,\n' +
    '};\n' +
    '\n' +
    'export { defaultDarkModeOverride, reactNativeDarkTokens };\n'
} [Function: logger]
____9999999____ { code: "const VERSION = '6.1.5';\n\nexport { VERSION };\n" } [Function: logger]
____9999999____ {
  code: "import { useDeprecationWarning as useDeprecationWarning$1 } from '@aws-amplify/ui-react-core';\n" +
    '\n' +
    '/**\n' +
    ' * Logs a deprecation warning `message` to the console.\n' +
    ' */\n' +
    'const useDeprecationWarning = ({ message, shouldWarn: _shouldWarn, }) => {\n' +
    '    const shouldWarn = _shouldWarn &&\n' +
    '        // show message on builds without Node `process` polyfill\n' +
    '        // or with process.env.NODE_ENV not production\n' +
    "        (typeof process === 'undefined' ||\n" +
    "            (process && process.env.NODE_ENV !== 'production'));\n" +
    '    useDeprecationWarning$1({ message, shouldWarn });\n' +
    '};\n' +
    '\n' +
    'export { useDeprecationWarning };\n'
} [Function: logger]
____9999999____ {
  code: "import { isString, isObject, has } from './utils.mjs';\n" +
    '\n' +
    'const classNames = (...args) => {\n' +
    '    const classes = [];\n' +
    '    for (const arg of args) {\n' +
    '        // skip falsey values\n' +
    '        if (!arg) {\n' +
    '            continue;\n' +
    '        }\n' +
    '        if (isString(arg)) {\n' +
    '            classes.push(arg);\n' +
    '            continue;\n' +
    '        }\n' +
    "        if (typeof arg === 'number') {\n" +
    '            classes.push(arg.toString());\n' +
    '            continue;\n' +
    '        }\n' +
    '        if (Array.isArray(arg)) {\n' +
    '            classes.push(classNames(...arg));\n' +
    '            continue;\n' +
    '        }\n' +
    '        if (isObject(arg)) {\n' +
    '            // check if the object has a valid .toString() method\n' +
    '            if (arg.toString !== Object.prototype.toString &&\n' +
    "                arg.toString() !== '[object Object]') {\n" +
    '                classes.push(arg.toString());\n' +
    '                continue;\n' +
    '            }\n' +
    '            for (const key in arg) {\n' +
    '                if (has(arg, key) && arg[key]) {\n' +
    '                    classes.push(key);\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    "    return classes.join(' ');\n" +
    '};\n' +
    '\n' +
    'export { classNames };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const CustomComponentsContext = \n' +
    '// @ts-ignore\n' +
    'React.createContext(null);\n' +
    'const useCustomComponents = () => {\n' +
    '    const context = React.useContext(CustomComponentsContext);\n' +
    '    if (!context) {\n' +
    "        throw new Error('`useCustomComponents` cannot be used outside of a `CustomComponentsContext.Provider`');\n" +
    '    }\n' +
    '    return context;\n' +
    '};\n' +
    '\n' +
    'export { CustomComponentsContext, useCustomComponents };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default, { useMemo } from 'react';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { ConfirmSignUp } from '../ConfirmSignUp/ConfirmSignUp.mjs';\n" +
    "import { ForceNewPassword } from '../ForceNewPassword/ForceNewPassword.mjs';\n" +
    "import { SetupTotp } from '../SetupTotp/SetupTotp.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Alert/Alert.mjs';\n" +
    "import { SignInSignUpTabs } from '../shared/SignInSignUpTabs.mjs';\n" +
    "import { ConfirmVerifyUser } from '../VerifyUser/ConfirmVerifyUser.mjs';\n" +
    "import { VerifyUser } from '../VerifyUser/VerifyUser.mjs';\n" +
    "import { ConfirmSignIn } from '../ConfirmSignIn/ConfirmSignIn.mjs';\n" +
    "import { ConfirmResetPassword } from '../ForgotPassword/ConfirmResetPassword.mjs';\n" +
    "import { ForgotPassword } from '../ForgotPassword/ForgotPassword.mjs';\n" +
    "import { isSignInOrSignUpRoute } from '../utils.mjs';\n" +
    '\n' +
    'function RenderNothing() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '}\n' +
    'const getRouteComponent = (route) => {\n' +
    '    switch (route) {\n' +
    "        case 'authenticated':\n" +
    "        case 'idle':\n" +
    "        case 'setup':\n" +
    "        case 'transition':\n" +
    '            return RenderNothing;\n' +
    "        case 'confirmSignUp':\n" +
    '            return ConfirmSignUp;\n' +
    "        case 'confirmSignIn':\n" +
    '            return ConfirmSignIn;\n' +
    "        case 'setupTotp':\n" +
    '            return SetupTotp;\n' +
    "        case 'signIn':\n" +
    "        case 'signUp':\n" +
    '            return SignInSignUpTabs;\n' +
    "        case 'forceNewPassword':\n" +
    '            return ForceNewPassword;\n' +
    "        case 'forgotPassword':\n" +
    '            return ForgotPassword;\n' +
    "        case 'confirmResetPassword':\n" +
    '            return ConfirmResetPassword;\n' +
    "        case 'verifyUser':\n" +
    '            return VerifyUser;\n' +
    "        case 'confirmVerifyUser':\n" +
    '            return ConfirmVerifyUser;\n' +
    '        default:\n' +
    '            // eslint-disable-next-line no-console\n' +
    '            console.warn(`Unhandled Authenticator route - please open an issue: ${route}`);\n' +
    '            return RenderNothing;\n' +
    '    }\n' +
    '};\n' +
    'function Router({ className, hideSignUp, variation, }) {\n' +
    '    const { route } = useAuthenticator(({ route }) => [route]);\n' +
    '    const RouterChildren = useMemo(() => getRouteComponent(route), [route]);\n' +
    '    return (React__default.createElement(RouterChildren, { className: className, \n' +
    '        // @ts-ignore\n' +
    '        hideSignUp: isSignInOrSignUpRoute(route) ? hideSignUp : undefined, variation: variation }));\n' +
    '}\n' +
    '\n' +
    'export { Router };\n'
} [Function: logger]
____9999999____ {
  code: "import QRCode from 'qrcode';\n" +
    "import * as React from 'react';\n" +
    "import { ConsoleLogger } from 'aws-amplify/utils';\n" +
    "import { authenticatorTextUtil, getTotpCodeURL } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { ConfirmSignInFooter } from '../shared/ConfirmSignInFooter.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    "const logger = new ConsoleLogger('SetupTotp-logger');\n" +
    'const { getSetupTotpText, getCopiedText, getLoadingText } = authenticatorTextUtil;\n' +
    'const SetupTotp = ({ className, variation, }) => {\n' +
    '    const { totpSecretCode, isPending, username, QRFields } = useAuthenticator((context) => [context.isPending, context.totpSecretCode, context.username]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    SetupTotp: { Header = SetupTotp.Header, Footer = SetupTotp.Footer }, }, } = useCustomComponents();\n' +
    '    const [isLoading, setIsLoading] = React.useState(true);\n' +
    '    const [qrCode, setQrCode] = React.useState();\n' +
    "    const [copyTextLabel, setCopyTextLabel] = React.useState('COPY');\n" +
    "    const { totpIssuer = 'AWSCognito', totpUsername = username } = QRFields ?? {};\n" +
    '    const generateQRCode = React.useCallback(async () => {\n' +
    '        try {\n' +
    '            const totpCode = getTotpCodeURL(totpIssuer, totpUsername, totpSecretCode);\n' +
    '            const qrCodeImageSource = await QRCode.toDataURL(totpCode);\n' +
    '            setQrCode(qrCodeImageSource);\n' +
    '        }\n' +
    '        catch (error) {\n' +
    '            logger.error(error);\n' +
    '        }\n' +
    '        finally {\n' +
    '            setIsLoading(false);\n' +
    '        }\n' +
    '    }, [totpIssuer, totpUsername, totpSecretCode]);\n' +
    '    React.useEffect(() => {\n' +
    '        if (!qrCode) {\n' +
    '            generateQRCode();\n' +
    '        }\n' +
    '    }, [generateQRCode, qrCode]);\n' +
    '    const copyText = () => {\n' +
    '        navigator.clipboard.writeText(totpSecretCode);\n' +
    '        setCopyTextLabel(getCopiedText());\n' +
    '    };\n' +
    '    return (React.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-setup-totp": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React.createElement(Header, null),\n' +
    '                React.createElement(Flex, { direction: "column" },\n' +
    '                    isLoading ? (React.createElement("p", null,\n' +
    '                        getLoadingText(),\n' +
    '                        "\\u2026")) : (React.createElement("img", { "data-amplify-qrcode": true, src: qrCode, alt: "qr code", width: "228", height: "228" })),\n' +
    '                    React.createElement(Flex, { "data-amplify-copy": true },\n' +
    '                        React.createElement("div", null, totpSecretCode),\n' +
    '                        React.createElement(Flex, { "data-amplify-copy-svg": true, onClick: copyText },\n' +
    '                            React.createElement("div", { "data-amplify-copy-tooltip": true }, copyTextLabel),\n' +
    '                            React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '                                React.createElement("path", { d: "M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM15 5H8C6.9 5 6.01 5.9 6.01 7L6 21C6 22.1 6.89 23 7.99 23H19C20.1 23 21 22.1 21 21V11L15 5ZM8 21V7H14V12H19V21H8Z" })))),\n' +
    '                    React.createElement(FormFields, null),\n' +
    '                    React.createElement(RemoteErrorMessage, null)),\n' +
    '                React.createElement(ConfirmSignInFooter, null),\n' +
    '                React.createElement(Footer, null)))));\n' +
    '};\n' +
    'SetupTotp.Header = function Header() {\n' +
    '    return React.createElement(Heading, { level: 3 }, getSetupTotpText());\n' +
    '};\n' +
    'SetupTotp.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { SetupTotp };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { View } from '../../../primitives/View/View.mjs';\n" +
    "import { VisuallyHidden } from '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { FederatedSignIn } from '../FederatedSignIn/FederatedSignIn.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    '\n' +
    'const { getSignInText, getSigningInText, getForgotPasswordText } = authenticatorTextUtil;\n' +
    'function SignIn() {\n' +
    '    const { isPending } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    SignIn: { Header = SignIn.Header, Footer = SignIn.Footer }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(View, null,\n' +
    '        React__default.createElement(Header, null),\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-signin": "", method: "post", onSubmit: handleSubmit, onChange: handleChange },\n' +
    '            React__default.createElement(FederatedSignIn, null),\n' +
    '            React__default.createElement(Flex, { direction: "column" },\n' +
    '                React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                    React__default.createElement(VisuallyHidden, null,\n' +
    '                        React__default.createElement("legend", null, getSignInText())),\n' +
    '                    React__default.createElement(FormFields, null)),\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(Button, { isDisabled: isPending, isFullWidth: true, type: "submit", variation: "primary", isLoading: isPending, loadingText: getSigningInText() }, getSignInText()))),\n' +
    '        React__default.createElement(Footer, null)));\n' +
    '}\n' +
    'const DefaultFooter = () => {\n' +
    '    const { toForgotPassword } = useAuthenticator((context) => [\n' +
    '        context.toForgotPassword,\n' +
    '    ]);\n' +
    '    return (React__default.createElement(View, { "data-amplify-footer": "" },\n' +
    '        React__default.createElement(Button, { fontWeight: "normal", onClick: toForgotPassword, size: "small", variation: "link" }, getForgotPasswordText())));\n' +
    '};\n' +
    'SignIn.Footer = DefaultFooter;\n' +
    'SignIn.Header = function Header() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { SignIn };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { View } from '../../../primitives/View/View.mjs';\n" +
    "import { FederatedSignIn } from '../FederatedSignIn/FederatedSignIn.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    '\n' +
    'const { getCreateAccountText, getCreatingAccountText } = authenticatorTextUtil;\n' +
    'function SignUp() {\n' +
    '    const { hasValidationErrors, isPending } = useAuthenticator((context) => [\n' +
    '        context.hasValidationErrors,\n' +
    '        context.isPending,\n' +
    '    ]);\n' +
    '    const { handleChange, handleBlur, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    SignUp: { Header = SignUp.Header, FormFields = SignUp.FormFields, Footer = SignUp.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(View, null,\n' +
    '        React__default.createElement(Header, null),\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-signup": "", method: "post", onChange: handleChange, onSubmit: handleSubmit, onBlur: handleBlur },\n' +
    '            React__default.createElement(FederatedSignIn, null),\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(FormFields, null),\n' +
    '                    React__default.createElement(RemoteErrorMessage, null)),\n' +
    '                React__default.createElement(Button, { isDisabled: hasValidationErrors || isPending, isFullWidth: true, type: "submit", variation: "primary", isLoading: isPending, loadingText: getCreatingAccountText() }, getCreateAccountText()))),\n' +
    '        React__default.createElement(Footer, null)));\n' +
    '}\n' +
    'SignUp.Header = function Header() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    'SignUp.FormFields = function FormFields$1() {\n' +
    '    return React__default.createElement(FormFields, null);\n' +
    '};\n' +
    'SignUp.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { SignUp };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getChangePasswordText, getChangingText, getBackToSignInText } = authenticatorTextUtil;\n' +
    'const ForceNewPassword = ({ className, variation, }) => {\n' +
    '    const { isPending, toSignIn } = useAuthenticator((context) => [\n' +
    '        context.isPending,\n' +
    '        context.toSignIn,\n' +
    '    ]);\n' +
    '    const { handleBlur, handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ForceNewPassword: { FormFields = ForceNewPassword.FormFields, Header = ForceNewPassword.Header, Footer = ForceNewPassword.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-forcenewpassword": "", method: "post", onChange: handleChange, onSubmit: handleSubmit, onBlur: handleBlur },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(FormFields, null),\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(Button, { isDisabled: isPending, type: "submit", variation: "primary", isLoading: isPending, loadingText: getChangingText(), fontWeight: "normal" }, getChangePasswordText()),\n' +
    '                React__default.createElement(Button, { onClick: toSignIn, type: "button", fontWeight: "normal", variation: "link", size: "small" }, getBackToSignInText()),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'ForceNewPassword.FormFields = function FormFields$1() {\n' +
    '    return React__default.createElement(FormFields, null);\n' +
    '};\n' +
    'ForceNewPassword.Header = function Header() {\n' +
    '    return React__default.createElement(Heading, { level: 4 }, getChangePasswordText());\n' +
    '};\n' +
    'ForceNewPassword.Footer = function Footer() {\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ForceNewPassword };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { TwoButtonSubmitFooter } from '../shared/TwoButtonSubmitFooter.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getResendCodeText, getResetYourPasswordText } = authenticatorTextUtil;\n' +
    'const ConfirmResetPassword = ({ className, variation, }) => {\n' +
    '    const { isPending } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const { handleBlur, handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ConfirmResetPassword: { Header = ConfirmResetPassword.Header, Footer = ConfirmResetPassword.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-confirmresetpassword": "", method: "post", onSubmit: handleSubmit, onChange: handleChange, onBlur: handleBlur },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(FormFields, null)),\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(TwoButtonSubmitFooter, { cancelButtonSendType: "RESEND", cancelButtonText: getResendCodeText() }),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'ConfirmResetPassword.Header = function Header() {\n' +
    '    const headerText = getResetYourPasswordText();\n' +
    '    return React__default.createElement(Heading, { level: 3 }, headerText);\n' +
    '};\n' +
    'ConfirmResetPassword.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ConfirmResetPassword };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { TwoButtonSubmitFooter } from '../shared/TwoButtonSubmitFooter.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getBackToSignInText, getSendingText, getSendCodeText, getResetYourPasswordText, } = authenticatorTextUtil;\n' +
    'const ForgotPassword = ({ className, variation, }) => {\n' +
    '    const { isPending } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ForgotPassword: { Header = ForgotPassword.Header, Footer = ForgotPassword.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-forgotpassword": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(FormFields, null)),\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getBackToSignInText(), cancelButtonSendType: "SIGN_IN", submitButtonText: isPending ? (React__default.createElement(React__default.Fragment, null,\n' +
    '                        getSendingText(),\n' +
    '                        "\\u2026")) : (React__default.createElement(React__default.Fragment, null, getSendCodeText())) }),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'ForgotPassword.Header = function Header() {\n' +
    '    return React__default.createElement(Heading, { level: 3 }, getResetYourPasswordText());\n' +
    '};\n' +
    'ForgotPassword.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ForgotPassword };\n'
} [Function: logger]
____9999999____ {
  code: "import { SignIn } from '../../SignIn/SignIn.mjs';\n" +
    "import { SignUp } from '../../SignUp/SignUp.mjs';\n" +
    "import { ConfirmSignUp } from '../../ConfirmSignUp/ConfirmSignUp.mjs';\n" +
    "import { ForceNewPassword } from '../../ForceNewPassword/ForceNewPassword.mjs';\n" +
    "import { SetupTotp } from '../../SetupTotp/SetupTotp.mjs';\n" +
    "import { ConfirmSignIn } from '../../ConfirmSignIn/ConfirmSignIn.mjs';\n" +
    "import { ConfirmVerifyUser } from '../../VerifyUser/ConfirmVerifyUser.mjs';\n" +
    "import { VerifyUser } from '../../VerifyUser/VerifyUser.mjs';\n" +
    "import { ConfirmResetPassword } from '../../ForgotPassword/ConfirmResetPassword.mjs';\n" +
    "import { ForgotPassword } from '../../ForgotPassword/ForgotPassword.mjs';\n" +
    '\n' +
    'const defaultComponents = {\n' +
    '    // @ts-ignore\n' +
    '    Header: () => null,\n' +
    '    SignIn: {\n' +
    '        Header: SignIn.Header,\n' +
    '        Footer: SignIn.Footer,\n' +
    '    },\n' +
    '    SignUp: {\n' +
    '        Header: SignUp.Header,\n' +
    '        FormFields: SignUp.FormFields,\n' +
    '        Footer: SignUp.Footer,\n' +
    '    },\n' +
    '    ConfirmSignUp: {\n' +
    '        Header: ConfirmSignUp.Header,\n' +
    '        Footer: ConfirmSignUp.Footer,\n' +
    '    },\n' +
    '    SetupTotp: {\n' +
    '        Header: SetupTotp.Header,\n' +
    '        Footer: SetupTotp.Footer,\n' +
    '    },\n' +
    '    ConfirmResetPassword: {\n' +
    '        Header: ConfirmResetPassword.Header,\n' +
    '        Footer: ConfirmResetPassword.Footer,\n' +
    '    },\n' +
    '    ConfirmSignIn: {\n' +
    '        Header: ConfirmSignIn.Header,\n' +
    '        Footer: ConfirmSignIn.Footer,\n' +
    '    },\n' +
    '    VerifyUser: {\n' +
    '        Header: VerifyUser.Header,\n' +
    '        Footer: VerifyUser.Footer,\n' +
    '    },\n' +
    '    ConfirmVerifyUser: {\n' +
    '        Header: ConfirmVerifyUser.Header,\n' +
    '        // @ts-ignore\n' +
    '        Footer: ConfirmVerifyUser.Footer,\n' +
    '    },\n' +
    '    ForceNewPassword: {\n' +
    '        Header: ForceNewPassword.Header,\n' +
    '        Footer: ForceNewPassword.Footer,\n' +
    '        FormFields: ForceNewPassword.FormFields,\n' +
    '    },\n' +
    '    ForgotPassword: {\n' +
    '        Header: ForgotPassword.Header,\n' +
    '        Footer: ForgotPassword.Footer,\n' +
    '    },\n' +
    '    // @ts-ignore\n' +
    '    Footer: () => null,\n' +
    '};\n' +
    '\n' +
    'export { defaultComponents };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { getMediaQueries } from './getMediaQueries.mjs';\n" +
    '\n' +
    '// Inspiration for getMediaQueries and useBreakpoint\n' +
    "const useIsomorphicEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n" +
    'const useBreakpoint = ({ breakpoints, defaultBreakpoint, }) => {\n' +
    "    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n" +
    '    const matchMedia = supportMatchMedia ? window.matchMedia : null;\n' +
    '    const mediaQueries = React.useMemo(() => getMediaQueries({ breakpoints }), [breakpoints]);\n' +
    '    const [breakpoint, setBreakpoint] = React.useState(defaultBreakpoint);\n' +
    '    const updateBreakpoint = React.useCallback((matches, breakpoint) => {\n' +
    '        if (matches) {\n' +
    '            setBreakpoint(breakpoint);\n' +
    '        }\n' +
    '    }, [setBreakpoint]);\n' +
    '    useIsomorphicEffect(() => {\n' +
    '        if (!matchMedia)\n' +
    '            return;\n' +
    '        const unsubscribeList = mediaQueries.map(({ query, breakpoint }) => {\n' +
    '            const queryList = matchMedia(query);\n' +
    '            updateBreakpoint(queryList.matches, breakpoint);\n' +
    '            const handleMediaChange = (event) => {\n' +
    '                if (event.matches) {\n' +
    '                    setBreakpoint(breakpoint);\n' +
    '                }\n' +
    '            };\n' +
    "            queryList.addEventListener('change', handleMediaChange);\n" +
    "            return () => queryList.removeEventListener('change', handleMediaChange);\n" +
    '        });\n' +
    '        return () => {\n' +
    '            unsubscribeList.forEach((unsubscribe) => unsubscribe());\n' +
    '        };\n' +
    '    }, [breakpoints, setBreakpoint, matchMedia, mediaQueries]);\n' +
    '    /** Print a nice debug value for React Devtools */\n' +
    '    React.useDebugValue(breakpoint, (breakpoint) => breakpoint);\n' +
    '    return breakpoint;\n' +
    '};\n' +
    '\n' +
    'export { useBreakpoint };\n'
} [Function: logger]
____9999999____ {
  code: "import { defaultTheme } from '@aws-amplify/ui';\n" +
    "import { objectKeys } from '../utils.mjs';\n" +
    '\n' +
    'const getClosestValueByBreakpoint = ({ breakpoint, breakpoints, values, }) => {\n' +
    '    const value = values[breakpoint];\n' +
    '    // Check if breakpoint exists in values\n' +
    '    if (value !== undefined) {\n' +
    '        return value;\n' +
    '    }\n' +
    '    // Otherwise use a lower breakpoint value\n' +
    '    const breakpointsDesc = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);\n' +
    '    const lowerBreakpoints = breakpointsDesc.slice(breakpointsDesc.indexOf(breakpoint));\n' +
    '    for (const breakpoint of lowerBreakpoints) {\n' +
    '        // Check if breakpoint exists in values\n' +
    '        const value = values[breakpoint];\n' +
    '        if (value !== undefined) {\n' +
    '            return value;\n' +
    '        }\n' +
    '    }\n' +
    '    return null;\n' +
    '};\n' +
    '/**\n' +
    ' * This takes an object and will return an object that only has the\n' +
    ' * breakpoint keys\n' +
    ' * @param obj\n' +
    ' * @returns\n' +
    ' */\n' +
    'const valueObjToBreakpoints = (obj) => {\n' +
    '    return objectKeys(obj).reduce((acc, key) => key in defaultTheme.breakpoints.values\n' +
    '        ? { ...acc, [key]: obj[key] }\n' +
    '        : acc, {});\n' +
    '};\n' +
    'const getValueAtCurrentBreakpoint = ({ breakpoint, breakpoints, values, }) => {\n' +
    '    let breakpointCompatValues = {};\n' +
    '    const breakpointsAscending = objectKeys(breakpoints).sort((a, b) => breakpoints[a] - breakpoints[b]);\n' +
    '    if (Array.isArray(values)) {\n' +
    '        values.forEach((value, index) => {\n' +
    '            breakpointCompatValues[breakpointsAscending[index]] = value;\n' +
    '        });\n' +
    '    }\n' +
    "    else if (typeof values === 'object') {\n" +
    '        breakpointCompatValues = valueObjToBreakpoints(values);\n' +
    '    }\n' +
    '    return getClosestValueByBreakpoint({\n' +
    '        breakpoint,\n' +
    '        breakpoints,\n' +
    '        values: breakpointCompatValues,\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { getValueAtCurrentBreakpoint };\n'
} [Function: logger]
____9999999____ {
  code: "import { isDesignToken, isString } from '@aws-amplify/ui';\n" +
    "import { getCSSVariableIfValueIsThemeKey } from './utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * This takes an unknown value, which could be a:\n' +
    ' * - design token: `color={tokens.colors.font.primary}`\n' +
    ' * - string, which could be a:\n' +
    " *   - theme key: `color='font.primary'`\n" +
    " *   - plain style: `color='red'`\n" +
    ' * - or a number: `padding={10}`\n' +
    ' * and returns the appropriate and resolved value\n' +
    ' */\n' +
    'const getStyleValue = ({ value, propKey, tokens, }) => {\n' +
    '    if (isDesignToken(value)) {\n' +
    '        return value.toString();\n' +
    '    }\n' +
    '    if (isString(value)) {\n' +
    '        return isString(propKey)\n' +
    '            ? getCSSVariableIfValueIsThemeKey(propKey, value, tokens)\n' +
    '            : value;\n' +
    '    }\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { getStyleValue };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default, { useContext, useMemo, useEffect } from 'react';\n" +
    "import { useInterpret } from '@xstate/react';\n" +
    "import { getCurrentUser } from 'aws-amplify/auth';\n" +
    "import { createAuthenticatorMachine, listenToAuthHub, defaultAuthHubHandler } from '@aws-amplify/ui';\n" +
    "import { AuthenticatorContext } from './AuthenticatorContext.mjs';\n" +
    '\n' +
    'const createHubHandler = (options) => (data, service) => {\n' +
    '    defaultAuthHubHandler(data, service, options);\n' +
    '};\n' +
    'function AuthenticatorProvider({ children, }) {\n' +
    '    // `authStatus` is exposed by `useAuthenticator` but should not be derived directly from the\n' +
    '    // state machine as the machine only updates on `Authenticator` initiated events, which\n' +
    '    // leads to scenarios where the state machine `authStatus` gets "stuck". For exmample,\n' +
    '    // if a user was to sign in using `Auth.signIn` directly rather than using `Authenticator`\n' +
    "    const [authStatus, setAuthStatus] = React__default.useState('configuring');\n" +
    '    // only run on first render\n' +
    '    React__default.useEffect(() => {\n' +
    '        getCurrentUser()\n' +
    '            .then(() => {\n' +
    "            setAuthStatus('authenticated');\n" +
    '        })\n' +
    '            .catch(() => {\n' +
    "            setAuthStatus('unauthenticated');\n" +
    '        });\n' +
    '    }, []);\n' +
    '    /**\n' +
    '     * Based on use cases, developer might already have added another Provider\n' +
    '     * outside Authenticator. In that case, we sync the two providers by just\n' +
    '     * passing the parent value.\n' +
    '     *\n' +
    '     * TODO(BREAKING): enforce only one provider in App tree\n' +
    '     */\n' +
    '    const parentProviderVal = useContext(AuthenticatorContext);\n' +
    '    const service = useInterpret(createAuthenticatorMachine);\n' +
    '    const value = useMemo(() => (!parentProviderVal ? { authStatus, service } : parentProviderVal), [authStatus, parentProviderVal, service]);\n' +
    '    const { service: activeService } = value;\n' +
    '    useEffect(() => {\n' +
    '        const onSignIn = () => {\n' +
    "            setAuthStatus('authenticated');\n" +
    '        };\n' +
    '        const onSignOut = () => {\n' +
    "            setAuthStatus('unauthenticated');\n" +
    '        };\n' +
    '        const unsubscribe = listenToAuthHub(activeService, createHubHandler({ onSignIn, onSignOut }));\n' +
    '        return unsubscribe;\n' +
    '    }, [activeService]);\n' +
    '    return (React__default.createElement(AuthenticatorContext.Provider, { value: value }, children));\n' +
    '}\n' +
    '\n' +
    'export { AuthenticatorProvider as default };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default, { useCallback } from 'react';\n" +
    "import { useSelector } from '@xstate/react';\n" +
    "import { getServiceFacade } from '@aws-amplify/ui';\n" +
    "import 'aws-amplify/auth';\n" +
    "import { AuthenticatorContext } from '../../context/AuthenticatorContext.mjs';\n" +
    "import { USE_AUTHENTICATOR_ERROR } from './constants.mjs';\n" +
    "import { getQRFields, getMachineFields, getComparator, defaultComparator } from './utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator/headless#useauthenticator-hook)\n' +
    ' */\n' +
    'function useAuthenticator(selector) {\n' +
    '    const context = React__default.useContext(AuthenticatorContext);\n' +
    '    if (!context) {\n' +
    '        throw new Error(USE_AUTHENTICATOR_ERROR);\n' +
    '    }\n' +
    '    const { service } = context;\n' +
    '    const { send } = service;\n' +
    '    const xstateSelector = useCallback((state) => ({ ...getServiceFacade({ send, state }) }), [send]);\n' +
    '    const comparator = selector ? getComparator(selector) : defaultComparator;\n' +
    '    // the purpose of `context.authStatus`is to intentionally override `facade.authStatus`. `facade.authStatus` does\n' +
    '    // not update on external sign in events (for example when a user is not using the `Authenticator`).\n' +
    '    const { authStatus } = context;\n' +
    '    const facade = useSelector(service, xstateSelector, comparator);\n' +
    '    const { route, totpSecretCode, unverifiedUserAttributes, user, ...rest } = facade;\n' +
    '    // do not memoize output. `service.getSnapshot` reference remains stable preventing\n' +
    '    // `fields` from updating with current form state on value changes\n' +
    '    const serviceSnapshot = service.getSnapshot();\n' +
    '    // legacy `QRFields` values only used for SetupTotp page to retrieve issuer information, will be removed in future\n' +
    "    const QRFields = route === 'setupTotp' ? getQRFields(serviceSnapshot) : null;\n" +
    '    // legacy `formFields` values required until form state is removed from state machine\n' +
    '    const fields = getMachineFields(route, serviceSnapshot, unverifiedUserAttributes);\n' +
    '    return {\n' +
    '        ...rest,\n' +
    '        authStatus,\n' +
    '        route,\n' +
    '        totpSecretCode,\n' +
    '        unverifiedUserAttributes,\n' +
    '        user,\n' +
    '        /** @deprecated For internal use only */\n' +
    '        fields,\n' +
    '        QRFields,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { useAuthenticator as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { useMemo } from 'react';\n" +
    "import useAuthenticator from '../useAuthenticator/useAuthenticator.mjs';\n" +
    "import { getRouteMachineSelector, resolveDefault, resolveVerifyUserRoute, resolveSignUpRoute, resolveSignInRoute, resolveSetupTotpRoute, resolveForgotPasswordRoute, resolveForceNewPasswordRoute, resolveConfirmVerifyUserRoute, resolveConfirmSignUpRoute, resolveConfirmSignInRoute, resolveConfirmResetPasswordRoute, routeSelector } from './utils.mjs';\n" +
    '\n' +
    'function useAuthenticatorRoute({ components, }) {\n' +
    '    const { route } = useAuthenticator(routeSelector);\n' +
    '    const routeMachineSelector = useMemo(() => getRouteMachineSelector(route), [route]);\n' +
    '    // `useAuthenticator` exposes both state machine (example: `toSignIn`) and non-state machine\n' +
    '    // props (example: `getTotpSecretCode`). `routeSelector` specifies which state machine props\n' +
    '    // should be returned for a specific route.\n' +
    '    // Only state machine props specified by the current `routeSelector` will have their current value\n' +
    '    // returned by `useAuthenticator`, non-machine props returned will always be the current value\n' +
    '    const routeSelectorProps = useAuthenticator(routeMachineSelector);\n' +
    '    const { ConfirmResetPassword, ConfirmSignIn, ConfirmSignUp, ConfirmVerifyUser, ForceNewPassword, ForgotPassword, SetupTotp, SignIn, SignUp, VerifyUser, } = components;\n' +
    '    switch (route) {\n' +
    "        case 'confirmResetPassword': {\n" +
    '            return resolveConfirmResetPasswordRoute(ConfirmResetPassword, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'confirmSignIn': {\n" +
    '            return resolveConfirmSignInRoute(ConfirmSignIn, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'confirmSignUp': {\n" +
    '            return resolveConfirmSignUpRoute(ConfirmSignUp, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'confirmVerifyUser': {\n" +
    '            return resolveConfirmVerifyUserRoute(ConfirmVerifyUser, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'forceNewPassword': {\n" +
    '            return resolveForceNewPasswordRoute(ForceNewPassword, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'forgotPassword': {\n" +
    '            return resolveForgotPasswordRoute(ForgotPassword, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'setupTotp': {\n" +
    '            return resolveSetupTotpRoute(SetupTotp, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'signIn': {\n" +
    '            return resolveSignInRoute(SignIn, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'signUp': {\n" +
    '            return resolveSignUpRoute(SignUp, routeSelectorProps);\n' +
    '        }\n' +
    "        case 'verifyUser': {\n" +
    '            return resolveVerifyUserRoute(VerifyUser, routeSelectorProps);\n' +
    '        }\n' +
    '        default: {\n' +
    '            return resolveDefault();\n' +
    '        }\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { useAuthenticatorRoute as default };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    '\n' +
    '/**\n' +
    ' * AuthenticatorContext serves static reference to the auth machine service.\n' +
    ' *\n' +
    ' * https://xstate.js.org/docs/recipes/react.html#context-provider\n' +
    ' */\n' +
    'const AuthenticatorContext = React__default.createContext(null);\n' +
    '\n' +
    'export { AuthenticatorContext };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import useAuthenticator from '../useAuthenticator/useAuthenticator.mjs';\n" +
    '\n' +
    '// only select `route` from machine context\n' +
    'const routeSelector = ({ route }) => [route];\n' +
    'function useAuthenticatorInitMachine(data) {\n' +
    '    const { route, initializeMachine } = useAuthenticator(routeSelector);\n' +
    '    const hasInitialized = React__default.useRef(false);\n' +
    '    React__default.useEffect(() => {\n' +
    "        if (!hasInitialized.current && route === 'setup') {\n" +
    '            initializeMachine(data);\n' +
    '            hasInitialized.current = true;\n' +
    '        }\n' +
    '    }, [initializeMachine, route, data]);\n' +
    '}\n' +
    '\n' +
    'export { useAuthenticatorInitMachine as default, routeSelector };\n'
} [Function: logger]
____9999999____ {
  code: "import useForm from './useForm.mjs';\n" +
    '\n' +
    "const DEFAULT_ERROR_MESSAGE = '`useField` must be used within a `FormProvider`';\n" +
    '/**\n' +
    ' * `Field` integration hook for usage with React `Field` components.\n' +
    ' *\n' +
    ' * @param params Requires `name`, all additional params optional\n' +
    ' * @returns `Form` aware `Field` event handlers and state values\n' +
    ' */\n' +
    'function useField(params) {\n' +
    '    const { getFieldState, registerField } = useForm({\n' +
    '        errorMessage: DEFAULT_ERROR_MESSAGE,\n' +
    '    });\n' +
    '    return {\n' +
    '        ...registerField(params),\n' +
    '        ...getFieldState(params.name),\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { DEFAULT_ERROR_MESSAGE, useField as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { COMPONENT_ROUTE_KEYS, COMPONENT_ROUTE_NAMES } from './constants.mjs';\n" +
    '\n' +
    'const isComponentRouteKey = (route) => COMPONENT_ROUTE_KEYS.some((componentRoute) => componentRoute === route);\n' +
    'function resolveAuthenticatorComponents(defaults, overrides) {\n' +
    '    if (!overrides) {\n' +
    '        return defaults;\n' +
    '    }\n' +
    '    return COMPONENT_ROUTE_NAMES.reduce((components, route) => {\n' +
    '        const Default = defaults[route];\n' +
    '        const Override = overrides[route];\n' +
    "        if (typeof Override !== 'function') {\n" +
    '            return { ...components, [route]: Default };\n' +
    '        }\n' +
    '        const { Footer, FormFields, Header } = Default;\n' +
    '        // cast to allow assigning of component slots\n' +
    '        const Component = Override;\n' +
    '        Component.Footer = Footer;\n' +
    '        Component.FormFields = FormFields;\n' +
    '        Component.Header = Header;\n' +
    '        return { ...components, [route]: Component };\n' +
    '    }, {});\n' +
    '}\n' +
    '\n' +
    'export { isComponentRouteKey, resolveAuthenticatorComponents };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { useFormContext } from 'react-hook-form';\n" +
    "import { noop } from '@aws-amplify/ui';\n" +
    '\n' +
    "const DEFAULT_ERROR_MESSAGE = '`useForm` must be called inside a `FormProvider`';\n" +
    '/**\n' +
    ' * Utility hook corresponding to `FormProvider`, must be used within a `FormProvider`\n' +
    ' *\n' +
    ' * @internal Extend for public export. `useForm` and `UseForm` are an abstraction layer\n' +
    ' * on top of `useFormContext` and `UseFormReturn`, imported from `react-hook-form`\n' +
    ' *\n' +
    ' * @param options optional parameters\n' +
    ' * @returns `Form` utilities\n' +
    ' */\n' +
    'function useForm(options = {}) {\n' +
    '    const formContext = useFormContext();\n' +
    '    const { errorMessage, onSubmit: _onSubmit } = options;\n' +
    '    if (!formContext) {\n' +
    '        throw new Error(errorMessage ?? DEFAULT_ERROR_MESSAGE);\n' +
    '    }\n' +
    '    const { formState, getFieldState: _getFieldState, getValues, handleSubmit, register, reset, setValue, } = formContext;\n' +
    '    // Do not memoize, `formState` updates on all events\n' +
    '    const getFieldState = (name) => {\n' +
    '        const { error, ...fieldState } = _getFieldState(name, formState);\n' +
    '        const { message: errorMessage } = error ?? {};\n' +
    '        return { ...fieldState, errorMessage, hasError: !!errorMessage };\n' +
    '    };\n' +
    '    // memoize `registerField` and `setFormValue` together,\n' +
    '    // `register` and `setValue` maintain stable references\n' +
    '    const { registerField, setFormValue } = React__default.useMemo(() => {\n' +
    '        return {\n' +
    '            registerField: ({ name, ...options }) => register(name, options),\n' +
    '            setFormValue: ({ name, value, ...options }) => setValue(name, value, options),\n' +
    '        };\n' +
    '    }, [register, setValue]);\n' +
    '    const onSubmit = React__default.useCallback((event) => {\n' +
    '        const handler = _onSubmit ? handleSubmit(_onSubmit) : noop;\n' +
    '        handler(event);\n' +
    '    }, [_onSubmit, handleSubmit]);\n' +
    '    return {\n' +
    '        getFieldState,\n' +
    '        getValues,\n' +
    '        isValid: formState.isValid,\n' +
    '        onSubmit,\n' +
    '        registerField,\n' +
    '        reset,\n' +
    '        setFormValue,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { DEFAULT_ERROR_MESSAGE, useForm as default };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { useForm, FormProvider as FormProvider$1 } from 'react-hook-form';\n" +
    '\n' +
    "const DEFAULT_MODE = 'onTouched';\n" +
    'const FormProvider = React__default.forwardRef(function FormProvider({ children, defaultValues, mode = DEFAULT_MODE }, ref) {\n' +
    '    const formProviderProps = useForm({\n' +
    '        defaultValues,\n' +
    '        mode,\n' +
    '    });\n' +
    '    const { getValues, reset } = formProviderProps;\n' +
    '    React__default.useImperativeHandle(ref, () => ({ getValues, reset: () => reset(defaultValues) }), [defaultValues, getValues, reset]);\n' +
    '    return (React__default.createElement(FormProvider$1, { ...formProviderProps }, children));\n' +
    '});\n' +
    '\n' +
    'export { FormProvider as default };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import FormProvider from './FormProvider.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @param Child `Form` base component wrapped inside `FormProvider`\n' +
    ' * @returns Composed `Form` component exposing `FormContext` values to descendents\n' +
    ' */\n' +
    'function withFormProvider(Child) {\n' +
    '    return React__default.forwardRef(function Form({ defaultValues, mode, ...props }, ref) {\n' +
    '        return (React__default.createElement(FormProvider, { defaultValues: defaultValues, mode: mode, ref: ref },\n' +
    '            React__default.createElement(Child, { ...props })));\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { withFormProvider as default };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Utility component for rendering nothing.\n' +
    ' */\n' +
    'function RenderNothing(_) {\n' +
    '    return null;\n' +
    '}\n' +
    '\n' +
    'export { RenderNothing as default };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    '/**\n' +
    ' * Logs a deprecation warning message.\n' +
    ' *\n' +
    ' * @important Please use the React/React Native specific platform implementations.\n' +
    ' * This version of the hook is a base implementation that the others extend from due\n' +
    ' * to env differences between running in RN or the browser\n' +
    ' */\n' +
    'const useDeprecationWarning = ({ shouldWarn, message, }) => {\n' +
    '    React.useEffect(() => {\n' +
    '        if (shouldWarn) {\n' +
    '            // eslint-disable-next-line no-console\n' +
    '            console.warn(message);\n' +
    '        }\n' +
    '    }, [shouldWarn, message]);\n' +
    '};\n' +
    '\n' +
    'export { useDeprecationWarning as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { isUndefined } from '@aws-amplify/ui';\n" +
    "import usePreviousValue from './usePreviousValue.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @param value `value` to track for updates\n' +
    ' * @param ignoreFirstRender whether to ignore initial render. defaults to `false`\n' +
    ' * @returns a boolean representing whether the tracked `value` has updated between renders\n' +
    ' *\n' +
    ' * Returns `false`:\n' +
    ' * - on initial render when ignoring first render\n' +
    ' * - current and previous `value` are equal\n' +
    ' *\n' +
    ' * Returns `true`:\n' +
    ' * - on initial render when not ignoring first render (default behavior)\n' +
    ' * - current and previous `value` are not equal\n' +
    ' */\n' +
    'function useHasValueUpdated(value, ignoreFirstRender = false) {\n' +
    '    const previous = usePreviousValue(value);\n' +
    '    const shouldIgnoreChange = isUndefined(previous) && ignoreFirstRender;\n' +
    '    if (shouldIgnoreChange) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return previous !== value;\n' +
    '}\n' +
    '\n' +
    'export { useHasValueUpdated as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { useEffect } from 'react';\n" +
    "import { setUserAgent } from '@aws-amplify/ui';\n" +
    '\n' +
    'function useSetUserAgent({ componentName, packageName, version, }) {\n' +
    '    useEffect(() => {\n' +
    '        const clearUserAgent = setUserAgent({\n' +
    '            componentName,\n' +
    '            packageName,\n' +
    '            version,\n' +
    '        });\n' +
    '        return clearUserAgent;\n' +
    '    }, [componentName, packageName, version]);\n' +
    '}\n' +
    '\n' +
    'export { useSetUserAgent as default };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { isTypedFunction } from '@aws-amplify/ui';\n" +
    '\n' +
    'function useTimeout({ callback, delay, }) {\n' +
    '    const storedCallback = React__default.useRef(callback);\n' +
    '    React__default.useLayoutEffect(() => {\n' +
    '        storedCallback.current = callback;\n' +
    '    }, [callback]);\n' +
    '    React__default.useEffect(() => {\n' +
    '        if (!isTypedFunction(storedCallback.current) || !delay) {\n' +
    '            return;\n' +
    '        }\n' +
    '        const timeoutId = setTimeout(() => {\n' +
    '            storedCallback.current?.();\n' +
    '        }, delay);\n' +
    '        return () => {\n' +
    '            clearTimeout(timeoutId);\n' +
    '        };\n' +
    '    }, [delay]);\n' +
    '}\n' +
    '\n' +
    'export { useTimeout as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { useRef, useEffect } from 'react';\n" +
    '\n' +
    'function usePreviousValue(value) {\n' +
    '    const previous = useRef();\n' +
    '    // update ref post render\n' +
    '    useEffect(() => {\n' +
    '        previous.current = value;\n' +
    '    }, [value]);\n' +
    '    // return previous ref\n' +
    '    return previous.current;\n' +
    '}\n' +
    '\n' +
    'export { usePreviousValue as default };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    '/**\n' +
    ' * Updates the return type for primitives wrapped in `React.forwardRef` to\n' +
    ' * `React.ReactElement`. In React 18 the return type of `React.ExoticComponent`\n' +
    ' * was changed from `React.ReactElement` to `React.ReactNode`, which breaks\n' +
    ' * clients using React 16 and 17.\n' +
    ' *\n' +
    ' * @param primitive UI Primitive to be wrapped with `React.forwardRef`\n' +
    ' * @returns ForwaredRef wrapped UI Primitive\n' +
    ' */\n' +
    'const primitiveWithForwardRef = (primitive) => React.forwardRef(primitive);\n' +
    '\n' +
    'export { primitiveWithForwardRef };\n'
} [Function: logger]
____9999999____ {
  code: 'import {createContext as $7Gjcd$createContext, createElement as $7Gjcd$createElement, useContext as $7Gjcd$useContext} from "react";\n' +
    '\n' +
    '\n' +
    'const $f631663db3294ace$var$DirectionContext = /*#__PURE__*/ $7Gjcd$createContext(undefined);\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Direction\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const $f631663db3294ace$export$c760c09fdd558351 = (props)=>{\n' +
    '    const { dir: dir , children: children  } = props;\n' +
    '    return /*#__PURE__*/ $7Gjcd$createElement($f631663db3294ace$var$DirectionContext.Provider, {\n' +
    '        value: dir\n' +
    '    }, children);\n' +
    '};\n' +
    '/* -----------------------------------------------------------------------------------------------*/ function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {\n' +
    '    const globalDir = $7Gjcd$useContext($f631663db3294ace$var$DirectionContext);\n' +
    "    return localDir || globalDir || 'ltr';\n" +
    '}\n' +
    'const $f631663db3294ace$export$2881499e37b75b9a = $f631663db3294ace$export$c760c09fdd558351;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$f631663db3294ace$export$b39126d51d94e6f3 as useDirection, $f631663db3294ace$export$2881499e37b75b9a as Provider, $f631663db3294ace$export$c760c09fdd558351 as DirectionProvider};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { isUndefined, isString } from '@aws-amplify/ui';\n" +
    '\n' +
    "const INVALID_OPTIONS_MESSAGE = 'an `errorMessage` or a `defaultValue` must be provided in `options`';\n" +
    '/**\n' +
    ' * Uses `ContextType`/`Name` generics and `options` to create:\n' +
    ' * - `${Name}Context`: React Context of type `ContextType`\n' +
    ' * - `Provider${Name}`: React Context `Provider` component exposing the `ContextType`\n' +
    ' *   as optional props\n' +
    ' * - `use${Name}`: Utility Hook exposing the values of `ContextType`. Allows\n' +
    ' *   params with `errorMessage` for granular error messaging\n' +
    ' *\n' +
    ' * @template ContextType Type definition of the Context.\n' +
    ' * > For most use cases the keys of `ContextType` should not be optional in\n' +
    ' * preference of explicit `undefined` to avoid optional types on the\n' +
    ' * Utility Hook return\n' +
    ' *\n' +
    ' * @param options Context utility options. Requires a `contextName`, and\n' +
    ' * either a `defaultValue` of `ContextType` **or** an `errorMessage`\n' +
    ' * allowing for differing behaviors of the Utility Hook when used outside a\n' +
    ' * parent `Provider`:\n' +
    ' *\n' +
    ' * - `defaultValue`: Ensures the Utility Hook returns a default value for\n' +
    ' *   scenarios **where the missing context values should not impact usage**\n' +
    ' * - `errorMessage`: Ensures the Utility Hook throws an error for\n' +
    ' *   scenarios **where the missing context values should prevent** usage\n' +
    ' *\n' +
    ' * @returns `Context`, `Provider` Component and `useContext` Utility Hook\n' +
    ' *\n' +
    ' * @usage\n' +
    ' * ```ts\n' +
    ' * interface StuffContextType {\n' +
    ' *   things: number;\n' +
    ' * }\n' +
    ' *\n' +
    ' * // with `defaultValue`\n' +
    ' * const defaultValue: StuffContextType = { things: 7 };\n' +
    ' *\n' +
    ' * const { StuffProvider, useStuff } = createContextUtilities({\n' +
    " *   contextName: 'Stuff',\n" +
    ' *   defaultValue,\n' +
    ' * });\n' +
    ' *\n' +
    ' * // with `errorMessage`\n' +
    ' * const { StuffProvider, useStuff } = createContextUtilities<StuffContextType>({\n' +
    " *   contextName: 'Stuff',\n" +
    " *   errorMessage: '`useStuff` must be used in a `StuffProvider`'\n" +
    ' * });\n' +
    ' * ```\n' +
    ' */\n' +
    'function createContextUtilities(options) {\n' +
    '    const { contextName, defaultValue, errorMessage } = options ?? {};\n' +
    '    if (isUndefined(defaultValue) && !isString(errorMessage)) {\n' +
    '        throw new Error(INVALID_OPTIONS_MESSAGE);\n' +
    '    }\n' +
    '    const Context = React__default.createContext(defaultValue);\n' +
    '    function Provider(props) {\n' +
    '        const { children, ...context } = props;\n' +
    '        const value = React__default.useMemo(() => context, \n' +
    '        // Unpack `context` for the dep array; using `[context]` results in\n' +
    '        // evaluation on every render\n' +
    '        // eslint-disable-next-line react-hooks/exhaustive-deps\n' +
    '        Object.values(context));\n' +
    '        return React__default.createElement(Context.Provider, { value: value }, children);\n' +
    '    }\n' +
    '    Provider.displayName = `${contextName}Provider`;\n' +
    '    return {\n' +
    '        [`use${contextName}`]: function (params) {\n' +
    '            const context = React__default.useContext(Context);\n' +
    '            if (isUndefined(context)) {\n' +
    '                throw new Error(params?.errorMessage ?? errorMessage);\n' +
    '            }\n' +
    '            return context;\n' +
    '        },\n' +
    '        [`${contextName}Provider`]: Provider,\n' +
    '        [`${contextName}Context`]: Context,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { INVALID_OPTIONS_MESSAGE, createContextUtilities as default };\n'
} [Function: logger]
____9999999____ {
  code: '// For internal use, no need to export\n' +
    'const ComponentText = {\n' +
    '    Alert: {\n' +
    "        dismissButtonLabel: 'Dismiss alert',\n" +
    '    },\n' +
    '    Autocomplete: {\n' +
    "        emptyText: 'No options found',\n" +
    "        loadingText: 'Loading options...',\n" +
    '    },\n' +
    '    Collection: {\n' +
    "        searchButtonLabel: 'Search',\n" +
    "        searchNoResultsFound: 'No results found',\n" +
    '    },\n' +
    '    Fields: {\n' +
    "        clearButtonLabel: 'Clear input',\n" +
    '    },\n' +
    '    Message: {\n' +
    "        dismissLabel: 'Dismiss message',\n" +
    '    },\n' +
    '    PaginationItem: {\n' +
    "        currentPageLabel: 'Page',\n" +
    "        nextLabel: 'Go to next page',\n" +
    "        pageLabel: 'Go to page',\n" +
    "        previousLabel: 'Go to previous page',\n" +
    '    },\n' +
    '    PhoneNumberField: {\n' +
    "        countryCodeLabel: 'Country code',\n" +
    '    },\n' +
    '    SearchField: {\n' +
    "        searchButtonLabel: 'Search',\n" +
    '    },\n' +
    '    PasswordField: {\n' +
    "        passwordIsHidden: 'Password is hidden',\n" +
    "        passwordIsShown: 'Password is shown',\n" +
    "        showPassword: 'Show password',\n" +
    '    },\n' +
    '    StepperField: {\n' +
    "        increaseButtonLabel: 'Increase to',\n" +
    "        decreaseButtonLabel: 'Decrease to',\n" +
    '    },\n' +
    '};\n' +
    'const stylePropsToThemeKeys = {\n' +
    "    backgroundColor: 'colors',\n" +
    "    borderColor: 'colors',\n" +
    "    borderWidth: 'borderWidths',\n" +
    "    color: 'colors',\n" +
    "    borderRadius: 'radii',\n" +
    "    fontSize: 'fontSizes',\n" +
    "    fontWeight: 'fontWeights',\n" +
    "    fontFamily: 'fonts',\n" +
    "    lineHeight: 'lineHeights',\n" +
    "    opacity: 'opacities',\n" +
    "    boxShadow: 'shadows',\n" +
    "    transform: 'transforms',\n" +
    "    left: 'space',\n" +
    "    right: 'space',\n" +
    "    top: 'space',\n" +
    "    bottom: 'space',\n" +
    "    height: 'space',\n" +
    "    width: 'space',\n" +
    "    letterSpacing: 'space',\n" +
    "    margin: 'space',\n" +
    "    marginBlock: 'space',\n" +
    "    marginBlockEnd: 'space',\n" +
    "    marginBlockStart: 'space',\n" +
    "    marginInline: 'space',\n" +
    "    marginInlineEnd: 'space',\n" +
    "    marginInlineStart: 'space',\n" +
    "    marginLeft: 'space',\n" +
    "    marginRight: 'space',\n" +
    "    marginTop: 'space',\n" +
    "    marginBottom: 'space',\n" +
    "    maxHeight: 'space',\n" +
    "    maxWidth: 'space',\n" +
    "    minHeight: 'space',\n" +
    "    minWidth: 'space',\n" +
    "    padding: 'space',\n" +
    "    paddingBlock: 'space',\n" +
    "    paddingBlockEnd: 'space',\n" +
    "    paddingBlockStart: 'space',\n" +
    "    paddingInline: 'space',\n" +
    "    paddingInlineEnd: 'space',\n" +
    "    paddingInlineStart: 'space',\n" +
    "    paddingLeft: 'space',\n" +
    "    paddingRight: 'space',\n" +
    "    paddingTop: 'space',\n" +
    "    paddingBottom: 'space',\n" +
    "    gap: 'space',\n" +
    "    columnGap: 'space',\n" +
    "    rowGap: 'space',\n" +
    '};\n' +
    '// key name\n' +
    "const ESCAPE_KEY = 'Escape';\n" +
    "const ENTER_KEY = 'Enter';\n" +
    "const ARROW_UP = 'ArrowUp';\n" +
    "const ARROW_DOWN = 'ArrowDown';\n" +
    '\n' +
    'export { ARROW_DOWN, ARROW_UP, ComponentText, ENTER_KEY, ESCAPE_KEY, stylePropsToThemeKeys };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { IconsContext } from './IconsContext.mjs';\n" +
    '\n' +
    'function useIcons(component) {\n' +
    '    const context = React.useContext(IconsContext);\n' +
    '    if (component && context) {\n' +
    '        return context[component];\n' +
    '    }\n' +
    '    return undefined;\n' +
    '}\n' +
    '\n' +
    'export { useIcons };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconClose = (props) => {\n' +
    '    const { className, size, ...rest } = props;\n' +
    `    return (React.createElement(View, { as: "span", width: size ?? '1em', height: size ?? '1em', className: classNames(ComponentClassName.Icon, className), ...rest },\n` +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: size ? { width: size, height: size } : undefined },\n' +
    '            React.createElement("path", { d: "M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconClose };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const AutocompleteOptionPrimitive = ({ children, className, isActive, ...rest }, ref) => {\n' +
    `    return (React.createElement(View, { "aria-selected": isActive, as: "li", role: "option", className: classNames(ComponentClassName.AutocompleteMenuOption, classNameModifierByFlag(ComponentClassName.AutocompleteMenuOption, 'active', isActive), className), ref: ref, ...rest }, children));\n` +
    '};\n' +
    'const AutocompleteOption = primitiveWithForwardRef(AutocompleteOptionPrimitive);\n' +
    "AutocompleteOption.displayName = 'AutocompleteOption';\n" +
    '\n' +
    'export { AutocompleteOption };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName } from '@aws-amplify/ui';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconCheckCircle } from '../Icon/icons/IconCheckCircle.mjs';\n" +
    "import { IconError } from '../Icon/icons/IconError.mjs';\n" +
    "import { IconInfo } from '../Icon/icons/IconInfo.mjs';\n" +
    "import { IconWarning } from '../Icon/icons/IconWarning.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const AlertIcon = ({ variation, ariaHidden, ariaLabel, role, }) => {\n' +
    "    const icons = useIcons('alert');\n" +
    '    let icon;\n' +
    '    switch (variation) {\n' +
    "        case 'info':\n" +
    '            icon = icons?.info ?? (React.createElement(IconInfo, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role: role }));\n' +
    '            break;\n' +
    "        case 'error':\n" +
    '            icon = icons?.error ?? (React.createElement(IconError, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role: role }));\n' +
    '            break;\n' +
    "        case 'warning':\n" +
    '            icon = icons?.warning ?? (React.createElement(IconWarning, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role: role }));\n' +
    '            break;\n' +
    "        case 'success':\n" +
    '            icon = icons?.success ?? (React.createElement(IconCheckCircle, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role: role }));\n' +
    '            break;\n' +
    '    }\n' +
    '    return icon ? (React.createElement("span", { className: ComponentClassName.AlertIcon }, icon)) : null;\n' +
    '};\n' +
    "AlertIcon.displayName = 'AlertIcon';\n" +
    '\n' +
    'export { AlertIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { Link } from '../Link/Link.mjs';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    '\n' +
    'const BreadcrumbLinkPrimitive = ({ className, children, href, isCurrent, ...rest }, ref) => {\n' +
    "    const componentClasses = classNames(ComponentClassName.BreadcrumbsLink, classNameModifierByFlag(ComponentClassName.BreadcrumbsLink, 'current', isCurrent), className);\n" +
    '    if (isCurrent) {\n' +
    "        const ariaCurrent = rest['aria-current'] ?? 'page';\n" +
    "        const as = rest.as ?? 'span';\n" +
    '        return (React.createElement(Text, { ...rest, as: as, "aria-current": ariaCurrent, className: componentClasses, ref: ref }, children));\n' +
    '    }\n' +
    '    else {\n' +
    '        return (React.createElement(Link, { ...rest, className: componentClasses, ref: ref, href: href }, children));\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/breadcrumbs)\n' +
    ' */\n' +
    'const BreadcrumbLink = primitiveWithForwardRef(BreadcrumbLinkPrimitive);\n' +
    "BreadcrumbLink.displayName = 'Breadcrumbs.Link';\n" +
    '\n' +
    'export { BreadcrumbLink };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    "const BreadcrumbSeparatorPrimitive = ({ className, children = '/', as = 'span', ...rest }, ref) => {\n" +
    "    const ariaHidden = rest['aria-hidden'] ?? 'true';\n" +
    '    return (React.createElement(View, { ...rest, as: as, ref: ref, "aria-hidden": ariaHidden, className: classNames(ComponentClassName.BreadcrumbsSeparator, className) }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/breadcrumbs)\n' +
    ' */\n' +
    'const BreadcrumbSeparator = primitiveWithForwardRef(BreadcrumbSeparatorPrimitive);\n' +
    "BreadcrumbSeparator.displayName = 'Breadcrumbs.Separator';\n" +
    '\n' +
    'export { BreadcrumbSeparator };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    "const BreadcrumbItemPrimitive = ({ className, children, as = 'li', ...rest }, ref) => {\n" +
    '    const componentClasses = classNames(ComponentClassName.BreadcrumbsItem, className);\n' +
    '    return (React.createElement(View, { ...rest, as: as, className: componentClasses, ref: ref }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/breadcrumbs)\n' +
    ' */\n' +
    'const BreadcrumbItem = primitiveWithForwardRef(BreadcrumbItemPrimitive);\n' +
    "BreadcrumbItem.displayName = 'Breadcrumbs.Item';\n" +
    '\n' +
    'export { BreadcrumbItem };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Loader } from '../Loader/Loader.mjs';\n" +
    "import { ScrollView } from '../ScrollView/ScrollView.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const MenuHeader = ({ children }) => {\n' +
    '    if (!children) {\n' +
    '        return null;\n' +
    '    }\n' +
    '    return (React.createElement(View, { className: ComponentClassName.AutocompleteMenuHeader }, children));\n' +
    '};\n' +
    'const MenuFooter = ({ children }) => {\n' +
    '    if (!children) {\n' +
    '        return null;\n' +
    '    }\n' +
    '    return (React.createElement(View, { className: ComponentClassName.AutocompleteMenuFooter }, children));\n' +
    '};\n' +
    'const MenuLoading = ({ children }) => {\n' +
    '    return (React.createElement(View, { className: ComponentClassName.AutocompleteMenuLoading }, children ?? (React.createElement(React.Fragment, null,\n' +
    '        React.createElement(Loader, null),\n' +
    '        ComponentText.Autocomplete.loadingText))));\n' +
    '};\n' +
    'const MenuEmpty = ({ children }) => (React.createElement(View, { className: ComponentClassName.AutocompleteMenuEmpty }, children ?? ComponentText.Autocomplete.emptyText));\n' +
    'const AutocompleteMenuPrimitive = ({ ariaLabel, children, Header = null, Footer = null, LoadingIndicator = null, Empty = null, isLoading, listboxId, ...rest }, ref) => {\n' +
    '    return (React.createElement(ScrollView, { className: ComponentClassName.AutocompleteMenu, ref: ref, ...rest }, isLoading ? (React.createElement(MenuLoading, null, LoadingIndicator)) : (React.createElement(React.Fragment, null,\n' +
    '        React.createElement(MenuHeader, null, Header),\n' +
    '        children.length > 0 ? (React.createElement(ScrollView, { as: "ul", ariaLabel: ariaLabel, className: ComponentClassName.AutocompleteMenuOptions, id: listboxId, role: "listbox" }, children)) : (React.createElement(MenuEmpty, null, Empty)),\n' +
    '        React.createElement(MenuFooter, null, Footer)))));\n' +
    '};\n' +
    'const AutocompleteMenu = primitiveWithForwardRef(AutocompleteMenuPrimitive);\n' +
    "AutocompleteMenu.displayName = 'AutocompleteMenu';\n" +
    '\n' +
    'export { AutocompleteMenu };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const BreadcrumbContainerPrimitive = ({ className, children, ...rest }, ref) => {\n' +
    '    const componentClasses = classNames(ComponentClassName.Breadcrumbs, className);\n' +
    "    const ariaLabel = rest['aria-label'] ?? 'Breadcrumb';\n" +
    '    return (React.createElement(View, { ...rest, as: "nav", "aria-label": ariaLabel, className: componentClasses, ref: ref },\n' +
    '        React.createElement(View, { as: "ol", className: ComponentClassName.BreadcrumbsList }, children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/breadcrumbs)\n' +
    ' */\n' +
    'const BreadcrumbContainer = primitiveWithForwardRef(BreadcrumbContainerPrimitive);\n' +
    "BreadcrumbContainer.displayName = 'Breadcrumbs.Container';\n" +
    '\n' +
    'export { BreadcrumbContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import '../FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import { FieldGroupIconButton } from '../FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconClose } from '../Icon/icons/IconClose.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ariaLabelText = ComponentText.Fields.clearButtonLabel;\n' +
    'const FieldClearButtonPrimitive = ({ ariaLabel = ariaLabelText, size, ...rest }, ref) => {\n' +
    "    const icons = useIcons('field');\n" +
    '    return (React.createElement(FieldGroupIconButton, { ariaLabel: ariaLabel, size: size, ref: ref, ...rest }, icons?.clear ?? React.createElement(IconClose, null)));\n' +
    '};\n' +
    'const FieldClearButton = primitiveWithForwardRef(FieldClearButtonPrimitive);\n' +
    "FieldClearButton.displayName = 'FieldClearButton';\n" +
    '\n' +
    'export { FieldClearButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    '\n' +
    "const QA_FIELD_DESCRIPTION = 'qa-field-description';\n" +
    'const FieldDescription = ({ descriptiveText, labelHidden, ...rest }) => descriptiveText ? (React.createElement(Text, { "data-testid": QA_FIELD_DESCRIPTION, className: classNames(ComponentClassName.FieldDescription, {\n' +
    '        [ComponentClassName.VisuallyHidden]: labelHidden,\n' +
    '    }), ...rest }, descriptiveText)) : null;\n' +
    "FieldDescription.displayName = 'FieldDescription';\n" +
    '\n' +
    'export { FieldDescription, QA_FIELD_DESCRIPTION };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    "import { ARROW_UP, ARROW_DOWN, ENTER_KEY, ESCAPE_KEY } from '../shared/constants.mjs';\n" +
    "import { strHasLength } from '../shared/utils.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    '\n' +
    'const DEFAULT_KEYS = new Set([ARROW_DOWN, ARROW_UP, ENTER_KEY, ESCAPE_KEY]);\n' +
    "const useAutocomplete = ({ defaultValue = '', value, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit, }) => {\n" +
    '    const isControlled = value !== undefined;\n' +
    '    const [internalValue, setInternalValue] = React.useState(defaultValue);\n' +
    '    const composedValue = isControlled ? value : internalValue;\n' +
    '    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n' +
    '    const [activeOption, setActiveOption] = React.useState(null);\n' +
    '    const isCustomFiltering = isFunction(optionFilter);\n' +
    '    const filteredOptions = React.useMemo(() => {\n' +
    '        const defaultFilter = (option) => {\n' +
    '            const { label } = option;\n' +
    '            return label\n' +
    '                ?.toLocaleLowerCase()\n' +
    '                .includes(composedValue?.toLocaleLowerCase());\n' +
    '        };\n' +
    '        const filter = isCustomFiltering\n' +
    '            ? (option) => optionFilter(option, composedValue)\n' +
    '            : defaultFilter;\n' +
    '        return options?.filter(filter) ?? [];\n' +
    '    }, [composedValue, optionFilter, isCustomFiltering, options]);\n' +
    '    const autocompleteId = useStableId();\n' +
    '    const listboxId = useStableId();\n' +
    '    const menuId = useStableId();\n' +
    '    const optionBaseId = useStableId();\n' +
    '    const activeIndex = filteredOptions.findIndex((option) => option === activeOption);\n' +
    '    const activeOptionId = activeOption?.id ??\n' +
    '        (activeIndex !== -1 ? `${optionBaseId}-option-${activeIndex}` : undefined);\n' +
    '    const handleOnBlur = React.useCallback((event) => {\n' +
    '        setIsMenuOpen(false);\n' +
    '        setActiveOption(null);\n' +
    '        if (isFunction(onBlur)) {\n' +
    '            onBlur(event);\n' +
    '        }\n' +
    '    }, [onBlur]);\n' +
    '    const handleOnChange = React.useCallback((event) => {\n' +
    '        setActiveOption(null);\n' +
    '        setIsMenuOpen(true);\n' +
    '        if (!isControlled) {\n' +
    '            setInternalValue(event.target.value);\n' +
    '        }\n' +
    '        if (isFunction(onChange)) {\n' +
    '            onChange(event);\n' +
    '        }\n' +
    '    }, [isControlled, onChange]);\n' +
    '    const handleOnClear = React.useCallback(() => {\n' +
    '        if (!isControlled) {\n' +
    "            setInternalValue('');\n" +
    '        }\n' +
    '        if (isFunction(onClear)) {\n' +
    '            onClear();\n' +
    '        }\n' +
    '    }, [isControlled, onClear]);\n' +
    '    const handleOnClick = React.useCallback((event) => {\n' +
    '        setIsMenuOpen(true);\n' +
    '        if (isFunction(onClick)) {\n' +
    '            onClick(event);\n' +
    '        }\n' +
    '    }, [onClick]);\n' +
    '    const handleOnKeyDown = (event) => {\n' +
    '        const { key } = event;\n' +
    '        if (!DEFAULT_KEYS.has(key)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        event.preventDefault();\n' +
    '        switch (key) {\n' +
    '            case ESCAPE_KEY: {\n' +
    '                if (isMenuOpen) {\n' +
    '                    setIsMenuOpen(false);\n' +
    '                    setActiveOption(null);\n' +
    '                }\n' +
    '                else {\n' +
    '                    handleOnClear();\n' +
    '                }\n' +
    '                break;\n' +
    '            }\n' +
    '            case ENTER_KEY: {\n' +
    '                if (!activeOption) {\n' +
    '                    if (isFunction(onSubmit)) {\n' +
    '                        onSubmit(composedValue);\n' +
    '                    }\n' +
    '                }\n' +
    '                else {\n' +
    '                    const { label } = activeOption;\n' +
    '                    if (!isControlled) {\n' +
    '                        setInternalValue(label);\n' +
    '                    }\n' +
    '                    if (isFunction(onSelect)) {\n' +
    '                        onSelect(activeOption);\n' +
    '                    }\n' +
    '                }\n' +
    '                setIsMenuOpen(false);\n' +
    '                setActiveOption(null);\n' +
    '                break;\n' +
    '            }\n' +
    '            case ARROW_DOWN: {\n' +
    '                if (filteredOptions.length <= 0) {\n' +
    '                    return;\n' +
    '                }\n' +
    '                setIsMenuOpen(true);\n' +
    '                const newActiveIndex = activeIndex >= filteredOptions.length - 1 ? 0 : activeIndex + 1;\n' +
    '                setActiveOption(filteredOptions[newActiveIndex]);\n' +
    '                break;\n' +
    '            }\n' +
    '            case ARROW_UP: {\n' +
    '                if (filteredOptions.length <= 0) {\n' +
    '                    return;\n' +
    '                }\n' +
    '                setIsMenuOpen(true);\n' +
    '                const newActiveIndex = activeIndex <= 0 ? filteredOptions.length - 1 : activeIndex - 1;\n' +
    '                setActiveOption(filteredOptions[newActiveIndex]);\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    // The window will scroll down to the right place to show the whole menu\n' +
    '    // if space is not enough in current viewport\n' +
    '    React.useEffect(() => {\n' +
    '        const autocompleteElement = document.getElementById(autocompleteId);\n' +
    '        const menuElement = document.getElementById(menuId);\n' +
    '        if (menuElement && isMenuOpen && autocompleteElement) {\n' +
    '            const { bottom } = menuElement.getBoundingClientRect();\n' +
    '            const { offsetParent, offsetTop } = autocompleteElement;\n' +
    '            if (offsetParent === document.body &&\n' +
    '                bottom > document.documentElement.clientHeight) {\n' +
    '                window.scrollTo({\n' +
    '                    top: Math.min(bottom -\n' +
    '                        document.documentElement.clientHeight +\n' +
    '                        window.scrollY +\n' +
    '                        20, // Add 20 gap between menu bottom and window viewport bottom\n' +
    '                    offsetTop),\n' +
    "                    behavior: 'smooth',\n" +
    '                });\n' +
    '            }\n' +
    '        }\n' +
    '    }, [autocompleteId, isMenuOpen, menuId]);\n' +
    '    // This will make the menu able to scroll with keyboard,\n' +
    '    // and scroll each option into window viewport if necessary\n' +
    '    React.useEffect(() => {\n' +
    '        const listboxElement = document.getElementById(listboxId);\n' +
    '        const activeOptionElement = strHasLength(activeOptionId)\n' +
    '            ? document.getElementById(activeOptionId)\n' +
    '            : null;\n' +
    '        if (activeOptionElement && listboxElement) {\n' +
    '            const { scrollTop, clientHeight } = listboxElement;\n' +
    '            const { offsetHeight, offsetTop } = activeOptionElement;\n' +
    '            const { top, bottom } = activeOptionElement.getBoundingClientRect();\n' +
    '            if (scrollTop > offsetTop) {\n' +
    '                listboxElement.scrollTop = offsetTop;\n' +
    '            }\n' +
    '            if (scrollTop + clientHeight < offsetTop + offsetHeight) {\n' +
    '                listboxElement.scrollTop = offsetTop + offsetHeight - clientHeight;\n' +
    '            }\n' +
    '            if (top < 0 || bottom > document.documentElement.clientHeight) {\n' +
    '                activeOptionElement.scrollIntoView({\n' +
    "                    behavior: 'smooth',\n" +
    "                    block: 'nearest',\n" +
    '                });\n' +
    '            }\n' +
    '        }\n' +
    '    }, [activeOptionId, listboxId]);\n' +
    '    return {\n' +
    '        activeOptionId,\n' +
    '        autocompleteId,\n' +
    '        composedValue,\n' +
    '        filteredOptions,\n' +
    '        handleOnBlur,\n' +
    '        handleOnClear,\n' +
    '        handleOnClick,\n' +
    '        handleOnChange,\n' +
    '        handleOnKeyDown,\n' +
    '        isControlled,\n' +
    '        isCustomFiltering,\n' +
    '        isMenuOpen,\n' +
    '        listboxId,\n' +
    '        menuId,\n' +
    '        optionBaseId,\n' +
    '        setActiveOption,\n' +
    '        setIsMenuOpen,\n' +
    '        setInternalValue,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { useAutocomplete };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames, classNameModifierByFlag, isFunction } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { IconCheck } from '../Icon/icons/IconCheck.mjs';\n" +
    "import { IconIndeterminate } from '../Icon/icons/IconIndeterminate.mjs';\n" +
    "import { Input } from '../Input/Input.mjs';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { getTestId } from '../utils/getTestId.mjs';\n" +
    "import { useStableId } from '../utils/useStableId.mjs';\n" +
    "import { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const CheckboxPrimitive = ({ checked: controlledChecked, className, defaultChecked, hasError, isDisabled, isIndeterminate, label, labelHidden, labelPosition, onBlur: _onBlur, onFocus: _onFocus, onChange: _onChange, testId, inputStyles, ..._rest }, ref) => {\n' +
    '    const { styleProps, rest } = splitPrimitiveProps(_rest);\n' +
    '    const [focused, setFocused] = React.useState(false);\n' +
    "    const icons = useIcons('checkbox');\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n' +
    '    const isControlled = controlledChecked !== undefined;\n' +
    '    const [localChecked, setLocalChecked] = React.useState(() => \n' +
    '    // if controlled, initialize to `controlledChecked` else `defaultChecked`\n' +
    '    isControlled ? controlledChecked : defaultChecked);\n' +
    '    const checked = isControlled ? controlledChecked : localChecked;\n' +
    '    const onChange = (e) => {\n' +
    '        if (isFunction(_onChange)) {\n' +
    '            _onChange(e);\n' +
    '        }\n' +
    '        // in controlled mode, `controlledChecked` determines checked state\n' +
    '        if (!isControlled) {\n' +
    '            setLocalChecked(e.target.checked);\n' +
    '        }\n' +
    '    };\n' +
    '    const onFocus = (e) => {\n' +
    '        if (isFunction(_onFocus)) {\n' +
    '            _onFocus(e);\n' +
    '        }\n' +
    '        setFocused(true);\n' +
    '    };\n' +
    '    const onBlur = (e) => {\n' +
    '        if (isFunction(_onBlur)) {\n' +
    '            _onBlur(e);\n' +
    '        }\n' +
    '        setFocused(false);\n' +
    '    };\n' +
    '    const dataId = useStableId();\n' +
    '    React.useEffect(() => {\n' +
    '        const input = document.querySelector(`[data-id="${dataId}"]`);\n' +
    "        if (input && typeof isIndeterminate === 'boolean') {\n" +
    '            // HTMLInputElement does not have an `indeterminate` attribute\n' +
    '            input.indeterminate =\n' +
    '                isIndeterminate;\n' +
    '        }\n' +
    '    }, [dataId, isIndeterminate]);\n' +
    '    const buttonTestId = getTestId(testId, ComponentClassName.CheckboxButton);\n' +
    '    const iconTestId = getTestId(testId, ComponentClassName.CheckboxIcon);\n' +
    '    const labelTestId = getTestId(testId, ComponentClassName.CheckboxLabel);\n' +
    "    const flexClasses = classNames(ComponentClassName.CheckboxButton, classNameModifierByFlag(ComponentClassName.CheckboxButton, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.CheckboxButton, 'error', hasError), classNameModifierByFlag(ComponentClassName.CheckboxButton, 'focused', focused));\n" +
    "    const iconClasses = classNames(ComponentClassName.CheckboxIcon, classNameModifierByFlag(ComponentClassName.CheckboxIcon, 'checked', checked), classNameModifierByFlag(ComponentClassName.CheckboxIcon, 'disabled', shouldBeDisabled), classNameModifierByFlag(ComponentClassName.CheckboxIcon, 'indeterminate', isIndeterminate));\n" +
    '    const iconProps = {\n' +
    '        className: classNames(iconClasses),\n' +
    "        'data-checked': localChecked,\n" +
    "        'data-disabled': shouldBeDisabled,\n" +
    "        'data-testid': iconTestId,\n" +
    '    };\n' +
    '    const checkedIcon = icons?.checked ? (React.createElement(View, { as: "span", className: classNames(iconClasses) }, icons.checked)) : (React.createElement(IconCheck, { ...iconProps }));\n' +
    '    const indeterminateIcon = icons?.indeterminate ? (React.createElement(View, { as: "span", className: classNames(iconClasses) }, icons.indeterminate)) : (React.createElement(IconIndeterminate, { ...iconProps }));\n' +
    '    return (React.createElement(Flex, { as: "label", className: classNames(ComponentClassName.Checkbox, classNameModifierByFlag(ComponentClassName.Checkbox, \'disabled\', shouldBeDisabled), labelPosition ? `amplify-label-${labelPosition}` : null, className), testId: testId, ...styleProps },\n' +
    '        React.createElement(VisuallyHidden, null,\n' +
    '            React.createElement(Input, { checked: controlledChecked, className: ComponentClassName.CheckboxInput, "data-id": dataId, defaultChecked: defaultChecked, isDisabled: shouldBeDisabled, onBlur: onBlur, onChange: onChange, onFocus: onFocus, ref: ref, type: "checkbox", ...rest })),\n' +
    '        label && (React.createElement(Text, { as: "span", className: classNames(ComponentClassName.CheckboxLabel, classNameModifierByFlag(ComponentClassName.CheckboxLabel, `disabled`, shouldBeDisabled), {\n' +
    '                [ComponentClassName.VisuallyHidden]: labelHidden,\n' +
    '            }), "data-disabled": shouldBeDisabled, testId: labelTestId }, label)),\n' +
    '        React.createElement(Flex, { "aria-hidden": "true", as: "span", className: flexClasses, "data-checked": checked, "data-disabled": shouldBeDisabled, "data-focus": focused, "data-error": hasError, testId: buttonTestId, ...inputStyles }, isIndeterminate ? indeterminateIcon : checkedIcon)));\n' +
    '};\n' +
    'const Checkbox = primitiveWithForwardRef(CheckboxPrimitive);\n' +
    "Checkbox.displayName = 'Checkbox';\n" +
    '\n' +
    'export { Checkbox };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { Text } from '../Text/Text.mjs';\n" +
    "import { ComponentClassName } from '@aws-amplify/ui';\n" +
    '\n' +
    'const FieldErrorMessage = ({ errorMessage, hasError, ...rest }) => {\n' +
    '    return hasError && errorMessage ? (React.createElement(Text, { className: ComponentClassName.FieldErrorMessage, ...rest }, errorMessage)) : null;\n' +
    '};\n' +
    "FieldErrorMessage.displayName = 'FieldErrorMessage';\n" +
    '\n' +
    'export { FieldErrorMessage };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { FieldDescription } from './FieldDescription.mjs';\n" +
    "import { FieldErrorMessage } from './FieldErrorMessage.mjs';\n" +
    "import { Label } from '../Label/Label.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const FieldPrimitive = (props, ref) => {\n' +
    '    const { className, size, testId, children, label, labelHidden, errorMessage, hasError, descriptiveText, ...rest } = props;\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), className), testId: testId, ref: ref, ...rest },\n' +
    '        label ? React.createElement(Label, { visuallyHidden: labelHidden }, label) : null,\n' +
    '        React.createElement(FieldDescription, { labelHidden: labelHidden, descriptiveText: descriptiveText }),\n' +
    '        children,\n' +
    '        errorMessage ? (React.createElement(FieldErrorMessage, { hasError: hasError, errorMessage: errorMessage })) : null));\n' +
    '};\n' +
    'const Field = primitiveWithForwardRef(FieldPrimitive);\n' +
    "Field.displayName = 'Field';\n" +
    '\n' +
    'export { Field };\n'
} [Function: logger]
____9999999____ {
  code: 'const getTestId = (testId, component) => testId && component ? `${testId}-${component}` : undefined;\n' +
    '\n' +
    'export { getTestId };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { AccordionContext, AccordionItemContext } from './AccordionContext.mjs';\n" +
    '\n' +
    "const AccordionItemPrimitive = ({ children, className, value, as = 'details', ...rest }, ref) => {\n" +
    '    const context = React.useContext(AccordionContext);\n' +
    '    const open = value ? context?.value?.includes(value) : undefined;\n' +
    '    return (React.createElement(AccordionItemContext.Provider, { value: value },\n' +
    '        React.createElement(View, { ...rest, open: open, ref: ref, as: as, className: classNames(ComponentClassName.AccordionItem, className) }, children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const AccordionItem = primitiveWithForwardRef(AccordionItemPrimitive);\n' +
    "AccordionItem.displayName = 'AccordionItem';\n" +
    '\n' +
    'export { AccordionItem };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const AccordionContentPrimitive = ({ className, children, ...rest }, ref) => {\n' +
    '    return (React.createElement(View, { ...rest, className: classNames(ComponentClassName.AccordionItemContent, className), ref: ref }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const AccordionContent = primitiveWithForwardRef(AccordionContentPrimitive);\n' +
    "AccordionContent.displayName = 'Accordion.Content';\n" +
    '\n' +
    'export { AccordionContent };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, isTypedFunction } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { AccordionContext, AccordionItemContext } from './AccordionContext.mjs';\n" +
    '\n' +
    'const AccordionTriggerPrimitive = ({ children, className, ...rest }, ref) => {\n' +
    '    const context = React.useContext(AccordionContext);\n' +
    '    const value = React.useContext(AccordionItemContext);\n' +
    '    const handleOnClick = (e) => {\n' +
    '        if (isTypedFunction(rest.onClick)) {\n' +
    '            rest.onClick(e);\n' +
    '        }\n' +
    '        if (context?.setValue && value) {\n' +
    '            e.preventDefault();\n' +
    '            context.setValue(value);\n' +
    '        }\n' +
    '    };\n' +
    '    return (React.createElement(View, { ...rest, ref: ref, as: "summary", className: classNames(ComponentClassName.AccordionItemTrigger, className), onClick: handleOnClick }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const AccordionTrigger = primitiveWithForwardRef(AccordionTriggerPrimitive);\n' +
    "AccordionTrigger.displayName = 'Accordion.Trigger';\n" +
    '\n' +
    'export { AccordionTrigger };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    "const DropZoneContext = React.createContext('inactive');\n" +
    'const DropZoneProvider = ({ value, children, }) => {\n' +
    '    return (React.createElement(DropZoneContext.Provider, { value: value }, children));\n' +
    '};\n' +
    '\n' +
    'export { DropZoneContext, DropZoneProvider };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { IconExpandMore } from '../Icon/icons/IconExpandMore.mjs';\n" +
    '\n' +
    "const AccordionIconPrimitive = ({ className, as = 'span', ...rest }, ref) => {\n" +
    "    const icons = useIcons('accordion');\n" +
    '    return (React.createElement(View, { ...rest, ref: ref, as: as, className: classNames(ComponentClassName.AccordionItemIcon, className), "aria-hidden": "true" }, icons?.more ?? React.createElement(IconExpandMore, null)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const AccordionIcon = primitiveWithForwardRef(AccordionIconPrimitive);\n' +
    "AccordionIcon.displayName = 'Accordion.Icon';\n" +
    '\n' +
    'export { AccordionIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { AccordionContext } from './AccordionContext.mjs';\n" +
    '\n' +
    'const AccordionContainerPrimitive = ({ children, className, defaultValue, allowMultiple, preventCollapse, onValueChange, testId, value: controlledValue, ...rest }, ref) => {\n' +
    '    const isControlled = controlledValue !== undefined;\n' +
    '    const [localValue, setLocalValue] = React.useState(() => isControlled ? controlledValue : defaultValue ?? []);\n' +
    '    const value = isControlled ? controlledValue : localValue;\n' +
    '    const setValue = React.useCallback((_value) => {\n' +
    '        let newValue;\n' +
    '        // if the value has the incoming value we try to close it by removing it from the array\n' +
    '        if (value.includes(_value)) {\n' +
    '            // only remove it from the array if preventCollapse is false/undefined OR\n' +
    "            // the number of open accordions is more than 1 (so it won't fully collapse anyways)\n" +
    '            newValue =\n' +
    '                !preventCollapse || value.length > 1\n' +
    '                    ? value.filter((v) => v !== _value)\n' +
    '                    : value;\n' +
    '        }\n' +
    '        else {\n' +
    '            // open the item by adding it to the array if allowMultiple is true\n' +
    '            // or make it the whole array\n' +
    '            newValue = allowMultiple ? [...value, _value] : [_value];\n' +
    '        }\n' +
    '        if (isFunction(onValueChange)) {\n' +
    '            onValueChange(newValue);\n' +
    '        }\n' +
    '        if (!isControlled) {\n' +
    '            setLocalValue(newValue);\n' +
    '        }\n' +
    '    }, [onValueChange, value, isControlled, allowMultiple, preventCollapse]);\n' +
    '    const contextValue = React.useMemo(() => {\n' +
    '        return {\n' +
    '            value,\n' +
    '            setValue,\n' +
    '        };\n' +
    '    }, [value, setValue]);\n' +
    '    return (React.createElement(AccordionContext.Provider, { value: contextValue },\n' +
    '        React.createElement(View, { ...rest, className: classNames(ComponentClassName.Accordion, className), "data-testid": testId, ref: ref }, children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/accordion)\n' +
    ' */\n' +
    'const AccordionContainer = primitiveWithForwardRef(AccordionContainerPrimitive);\n' +
    "AccordionContainer.displayName = 'Accordion.Container';\n" +
    '\n' +
    'export { AccordionContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import { useState } from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    "import { filterAllowedFiles } from './filterAllowedFiles.mjs';\n" +
    '\n' +
    'function useDropZone({ onDropComplete, onDragEnter: _onDragEnter, onDragLeave: _onDragLeave, onDragOver: _onDragOver, onDragStart: _onDragStart, onDrop: _onDrop, acceptedFileTypes = [], }) {\n' +
    "    const [dragState, setDragState] = useState('inactive');\n" +
    '    const onDragStart = (event) => {\n' +
    '        event.dataTransfer.clearData();\n' +
    '        if (isFunction(_onDragStart)) {\n' +
    '            _onDragStart(event);\n' +
    '        }\n' +
    '    };\n' +
    '    const onDragEnter = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        event.stopPropagation();\n' +
    '        if (isFunction(_onDragEnter)) {\n' +
    '            _onDragEnter(event);\n' +
    '        }\n' +
    '    };\n' +
    '    const onDragLeave = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        event.stopPropagation();\n' +
    "        setDragState('inactive');\n" +
    '        if (isFunction(_onDragLeave)) {\n' +
    '            _onDragLeave(event);\n' +
    '        }\n' +
    '    };\n' +
    '    const onDragOver = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        event.stopPropagation();\n' +
    "        event.dataTransfer.dropEffect = 'copy';\n" +
    '        if (isFunction(_onDragOver)) {\n' +
    '            _onDragOver(event);\n' +
    '        }\n' +
    '        const files = Array.from(event.dataTransfer.items).map(({ kind, type }) => ({\n' +
    '            kind,\n' +
    '            type,\n' +
    '        }));\n' +
    '        const { rejectedFiles } = filterAllowedFiles(files, acceptedFileTypes);\n' +
    "        setDragState(rejectedFiles.length > 0 ? 'reject' : 'accept');\n" +
    '    };\n' +
    '    const onDrop = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        event.stopPropagation();\n' +
    "        setDragState('inactive');\n" +
    '        const files = Array.from(event.dataTransfer.files);\n' +
    '        const { acceptedFiles, rejectedFiles } = filterAllowedFiles(files, acceptedFileTypes);\n' +
    '        if (isFunction(_onDrop)) {\n' +
    '            _onDrop(event);\n' +
    '        }\n' +
    '        if (isFunction(onDropComplete)) {\n' +
    '            onDropComplete({ acceptedFiles, rejectedFiles });\n' +
    '        }\n' +
    '    };\n' +
    '    return {\n' +
    '        onDragStart,\n' +
    '        onDragEnter,\n' +
    '        onDragLeave,\n' +
    '        onDragOver,\n' +
    '        onDrop,\n' +
    '        dragState,\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { useDropZone };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { DropZoneContext } from './DropZoneProvider.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * These are syntactic sugar components that make it easy to compose children\n' +
    ' * in DropZone without having to expose the DropZoneContext.\n' +
    ' */\n' +
    '/**\n' +
    ' * This component renders when the user is dragging ONLY accepted files on the DropZone.\n' +
    ' */\n' +
    'const Accepted = ({ children, }) => {\n' +
    '    const dragState = React.useContext(DropZoneContext);\n' +
    '    if (!dragState) {\n' +
    "        throw new Error('`DropZone.Accept` must be used inside a DropZone');\n" +
    '    }\n' +
    "    return dragState === 'accept' ? React.createElement(React.Fragment, null, children) : null;\n" +
    '};\n' +
    '/**\n' +
    ' * This component renders when the user is dragging ANY rejected files on the DropZone.\n' +
    ' */\n' +
    'const Rejected = ({ children, }) => {\n' +
    '    const dragState = React.useContext(DropZoneContext);\n' +
    '    if (!dragState) {\n' +
    "        throw new Error('`DropZone.Rejected` must be used inside a DropZone');\n" +
    '    }\n' +
    "    return dragState === 'reject' ? React.createElement(React.Fragment, null, children) : null;\n" +
    '};\n' +
    '/**\n' +
    ' * This component renders by default when the user is not dragging.\n' +
    ' */\n' +
    'const Default = ({ children, }) => {\n' +
    '    const dragState = React.useContext(DropZoneContext);\n' +
    '    if (!dragState) {\n' +
    "        throw new Error('`DropZone.Default` must be used inside a DropZone');\n" +
    '    }\n' +
    "    return dragState === 'inactive' ? React.createElement(React.Fragment, null, children) : null;\n" +
    '};\n' +
    '\n' +
    'export { Accepted, Default, Rejected };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { classNames, classNameModifierByFlag, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { DropZoneContext } from './DropZoneProvider.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const Container = ({ className, children, testId, isDisabled, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop, ...rest }, ref) => {\n' +
    '    const dragState = React__default.useContext(DropZoneContext);\n' +
    "    // Don't add drag event handlers if it is disabled.\n" +
    '    const dragProps = isDisabled\n' +
    '        ? {}\n' +
    '        : { onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop };\n' +
    `    return (React__default.createElement(View, { ...rest, ...dragProps, isDisabled: isDisabled, className: classNames(className, classNameModifierByFlag(ComponentClassName.DropZone, 'rejected', dragState === 'reject'), classNameModifierByFlag(ComponentClassName.DropZone, 'accepted', dragState === 'accept'), classNameModifierByFlag(ComponentClassName.DropZone, 'disabled', isDisabled), ComponentClassName.DropZone), "data-testid": testId, ref: ref }, children));\n` +
    '};\n' +
    'const DropZoneContainer = primitiveWithForwardRef(Container);\n' +
    "DropZoneContainer.displayName = 'DropZoneContainer';\n" +
    '\n' +
    'export { DropZoneContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import { isDesignToken, cssNameTransform } from '@aws-amplify/ui';\n" +
    "export { classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { isThemeStylePropKey } from '../types/theme.mjs';\n" +
    "import { stylePropsToThemeKeys } from './constants.mjs';\n" +
    '\n' +
    "const strHasLength = (str) => typeof str === 'string' && str.length > 0;\n" +
    "const isEmptyString = (value) => typeof value === 'string' && value.length === 0;\n" +
    'const isNullOrEmptyString = (value) => value == null || isEmptyString(value);\n' +
    '/**\n' +
    ' * Create a consecutive integer array from start value to end value.\n' +
    ' * @param start start value\n' +
    ' * @param end end value\n' +
    ' * @returns an integer array with elements from start to end consecutively\n' +
    ' */\n' +
    'const getConsecutiveIntArray = (start, end) => {\n' +
    '    const length = end - start + 1;\n' +
    '    return Array.from({ length }, (_, idx) => idx + start);\n' +
    '};\n' +
    '/**\n' +
    ' * TS helper function to make using Object.keys more typesafe\n' +
    ' */\n' +
    'const objectKeys = (obj) => {\n' +
    '    return Object.keys(obj);\n' +
    '};\n' +
    'const getCSSVariableIfValueIsThemeKey = (propKey, value, tokens) => {\n' +
    "    if (typeof value !== 'string') {\n" +
    '        return value;\n' +
    '    }\n' +
    '    // For shorthand properties like `padding` which can accept 1, 2, 3, or 4 values\n' +
    '    // run this function on each value. This would not work on CSS shorthands that\n' +
    '    // mix types, like border which is a composite of borderWidth, borderStyle, and\n' +
    '    // borderColor.\n' +
    "    if (value.includes(' ')) {\n" +
    '        return value\n' +
    "            .split(' ')\n" +
    '            .map((val) => getCSSVariableIfValueIsThemeKey(propKey, val, tokens))\n' +
    "            .join(' ');\n" +
    '    }\n' +
    '    if (isThemeStylePropKey(propKey)) {\n' +
    "        const path = value.split('.');\n" +
    '        const tokenKey = stylePropsToThemeKeys[propKey];\n' +
    '        let tokenProps = tokens[tokenKey];\n' +
    '        for (let i = 0; i < path.length; i++) {\n' +
    '            if (tokenProps) {\n' +
    '                // overwrite tokenProps with next nested value of tokenProps\n' +
    '                tokenProps = tokenProps[path[i]];\n' +
    '                continue;\n' +
    '            }\n' +
    '            break;\n' +
    '        }\n' +
    '        return isDesignToken(tokenProps)\n' +
    '            ? `var(--${cssNameTransform({\n' +
    '                path: [stylePropsToThemeKeys[propKey], ...path],\n' +
    '            })})`\n' +
    '            : value;\n' +
    '    }\n' +
    '    return value;\n' +
    '};\n' +
    '\n' +
    'export { getCSSVariableIfValueIsThemeKey, getConsecutiveIntArray, isEmptyString, isNullOrEmptyString, objectKeys, strHasLength };\n'
} [Function: logger]
____9999999____ {
  code: "var isObject = require('./isObject'),\n" +
    "    now = require('./now'),\n" +
    "    toNumber = require('./toNumber');\n" +
    '\n' +
    '/** Error message constants. */\n' +
    "var FUNC_ERROR_TEXT = 'Expected a function';\n" +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeMax = Math.max,\n' +
    '    nativeMin = Math.min;\n' +
    '\n' +
    '/**\n' +
    ' * Creates a debounced function that delays invoking `func` until after `wait`\n' +
    ' * milliseconds have elapsed since the last time the debounced function was\n' +
    ' * invoked. The debounced function comes with a `cancel` method to cancel\n' +
    ' * delayed `func` invocations and a `flush` method to immediately invoke them.\n' +
    ' * Provide `options` to indicate whether `func` should be invoked on the\n' +
    ' * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n' +
    ' * with the last arguments provided to the debounced function. Subsequent\n' +
    ' * calls to the debounced function return the result of the last `func`\n' +
    ' * invocation.\n' +
    ' *\n' +
    ' * **Note:** If `leading` and `trailing` options are `true`, `func` is\n' +
    ' * invoked on the trailing edge of the timeout only if the debounced function\n' +
    ' * is invoked more than once during the `wait` timeout.\n' +
    ' *\n' +
    ' * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n' +
    ' * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n' +
    ' *\n' +
    " * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n" +
    ' * for details over the differences between `_.debounce` and `_.throttle`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Function\n' +
    ' * @param {Function} func The function to debounce.\n' +
    ' * @param {number} [wait=0] The number of milliseconds to delay.\n' +
    ' * @param {Object} [options={}] The options object.\n' +
    ' * @param {boolean} [options.leading=false]\n' +
    ' *  Specify invoking on the leading edge of the timeout.\n' +
    ' * @param {number} [options.maxWait]\n' +
    " *  The maximum time `func` is allowed to be delayed before it's invoked.\n" +
    ' * @param {boolean} [options.trailing=true]\n' +
    ' *  Specify invoking on the trailing edge of the timeout.\n' +
    ' * @returns {Function} Returns the new debounced function.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * // Avoid costly calculations while the window size is in flux.\n' +
    " * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n" +
    ' *\n' +
    ' * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n' +
    " * jQuery(element).on('click', _.debounce(sendMail, 300, {\n" +
    " *   'leading': true,\n" +
    " *   'trailing': false\n" +
    ' * }));\n' +
    ' *\n' +
    ' * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n' +
    " * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n" +
    " * var source = new EventSource('/stream');\n" +
    " * jQuery(source).on('message', debounced);\n" +
    ' *\n' +
    ' * // Cancel the trailing debounced invocation.\n' +
    " * jQuery(window).on('popstate', debounced.cancel);\n" +
    ' */\n' +
    'function debounce(func, wait, options) {\n' +
    '  var lastArgs,\n' +
    '      lastThis,\n' +
    '      maxWait,\n' +
    '      result,\n' +
    '      timerId,\n' +
    '      lastCallTime,\n' +
    '      lastInvokeTime = 0,\n' +
    '      leading = false,\n' +
    '      maxing = false,\n' +
    '      trailing = true;\n' +
    '\n' +
    "  if (typeof func != 'function') {\n" +
    '    throw new TypeError(FUNC_ERROR_TEXT);\n' +
    '  }\n' +
    '  wait = toNumber(wait) || 0;\n' +
    '  if (isObject(options)) {\n' +
    '    leading = !!options.leading;\n' +
    "    maxing = 'maxWait' in options;\n" +
    '    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n' +
    "    trailing = 'trailing' in options ? !!options.trailing : trailing;\n" +
    '  }\n' +
    '\n' +
    '  function invokeFunc(time) {\n' +
    '    var args = lastArgs,\n' +
    '        thisArg = lastThis;\n' +
    '\n' +
    '    lastArgs = lastThis = undefined;\n' +
    '    lastInvokeTime = time;\n' +
    '    result = func.apply(thisArg, args);\n' +
    '    return result;\n' +
    '  }\n' +
    '\n' +
    '  function leadingEdge(time) {\n' +
    '    // Reset any `maxWait` timer.\n' +
    '    lastInvokeTime = time;\n' +
    '    // Start the timer for the trailing edge.\n' +
    '    timerId = setTimeout(timerExpired, wait);\n' +
    '    // Invoke the leading edge.\n' +
    '    return leading ? invokeFunc(time) : result;\n' +
    '  }\n' +
    '\n' +
    '  function remainingWait(time) {\n' +
    '    var timeSinceLastCall = time - lastCallTime,\n' +
    '        timeSinceLastInvoke = time - lastInvokeTime,\n' +
    '        timeWaiting = wait - timeSinceLastCall;\n' +
    '\n' +
    '    return maxing\n' +
    '      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n' +
    '      : timeWaiting;\n' +
    '  }\n' +
    '\n' +
    '  function shouldInvoke(time) {\n' +
    '    var timeSinceLastCall = time - lastCallTime,\n' +
    '        timeSinceLastInvoke = time - lastInvokeTime;\n' +
    '\n' +
    "    // Either this is the first call, activity has stopped and we're at the\n" +
    "    // trailing edge, the system time has gone backwards and we're treating\n" +
    "    // it as the trailing edge, or we've hit the `maxWait` limit.\n" +
    '    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n' +
    '      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n' +
    '  }\n' +
    '\n' +
    '  function timerExpired() {\n' +
    '    var time = now();\n' +
    '    if (shouldInvoke(time)) {\n' +
    '      return trailingEdge(time);\n' +
    '    }\n' +
    '    // Restart the timer.\n' +
    '    timerId = setTimeout(timerExpired, remainingWait(time));\n' +
    '  }\n' +
    '\n' +
    '  function trailingEdge(time) {\n' +
    '    timerId = undefined;\n' +
    '\n' +
    '    // Only invoke if we have `lastArgs` which means `func` has been\n' +
    '    // debounced at least once.\n' +
    '    if (trailing && lastArgs) {\n' +
    '      return invokeFunc(time);\n' +
    '    }\n' +
    '    lastArgs = lastThis = undefined;\n' +
    '    return result;\n' +
    '  }\n' +
    '\n' +
    '  function cancel() {\n' +
    '    if (timerId !== undefined) {\n' +
    '      clearTimeout(timerId);\n' +
    '    }\n' +
    '    lastInvokeTime = 0;\n' +
    '    lastArgs = lastCallTime = lastThis = timerId = undefined;\n' +
    '  }\n' +
    '\n' +
    '  function flush() {\n' +
    '    return timerId === undefined ? result : trailingEdge(now());\n' +
    '  }\n' +
    '\n' +
    '  function debounced() {\n' +
    '    var time = now(),\n' +
    '        isInvoking = shouldInvoke(time);\n' +
    '\n' +
    '    lastArgs = arguments;\n' +
    '    lastThis = this;\n' +
    '    lastCallTime = time;\n' +
    '\n' +
    '    if (isInvoking) {\n' +
    '      if (timerId === undefined) {\n' +
    '        return leadingEdge(lastCallTime);\n' +
    '      }\n' +
    '      if (maxing) {\n' +
    '        // Handle invocations in a tight loop.\n' +
    '        clearTimeout(timerId);\n' +
    '        timerId = setTimeout(timerExpired, wait);\n' +
    '        return invokeFunc(lastCallTime);\n' +
    '      }\n' +
    '    }\n' +
    '    if (timerId === undefined) {\n' +
    '      timerId = setTimeout(timerExpired, wait);\n' +
    '    }\n' +
    '    return result;\n' +
    '  }\n' +
    '  debounced.cancel = cancel;\n' +
    '  debounced.flush = flush;\n' +
    '  return debounced;\n' +
    '}\n' +
    '\n' +
    'module.exports = debounce;\n'
} [Function: logger]
____9999999____ {
  code: "import { strHasLength } from '../shared/utils.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * Slice a collection based on page index (starting at 1)\n' +
    ' */\n' +
    'const getItemsAtPage = (items, page, itemsPerPage) => {\n' +
    '    if (page < 1 || itemsPerPage < 1) {\n' +
    '        return [];\n' +
    '    }\n' +
    '    const startIndex = (page - 1) * itemsPerPage;\n' +
    '    return items.slice(startIndex, startIndex + itemsPerPage);\n' +
    '};\n' +
    '/**\n' +
    ' * Recursively find a keyword within an object (case insensitive)\n' +
    ' */\n' +
    'const itemHasText = (item, text) => {\n' +
    '    if (strHasLength(item)) {\n' +
    '        return item.toLowerCase().includes(text.toLowerCase());\n' +
    '    }\n' +
    "    if (typeof item === 'object' && item !== null) {\n" +
    '        return Object.values(item).some((subItem) => itemHasText(subItem, text));\n' +
    '    }\n' +
    '    return false;\n' +
    '};\n' +
    '/**\n' +
    ' * Computes the amount of available pages\n' +
    ' */\n' +
    'const getPageCount = (totalItems, itemsPerPage) => Math.ceil(totalItems / itemsPerPage);\n' +
    '\n' +
    'export { getItemsAtPage, getPageCount, itemHasText };\n'
} [Function: logger]
____9999999____ {
  code: 'import $9kmUS$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {useRef as $9kmUS$useRef, createElement as $9kmUS$createElement, useCallback as $9kmUS$useCallback, forwardRef as $9kmUS$forwardRef} from "react";\n' +
    'import {composeEventHandlers as $9kmUS$composeEventHandlers} from "@radix-ui/primitive";\n' +
    'import {composeRefs as $9kmUS$composeRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {createContextScope as $9kmUS$createContextScope} from "@radix-ui/react-context";\n' +
    'import {useControllableState as $9kmUS$useControllableState} from "@radix-ui/react-use-controllable-state";\n' +
    'import {Primitive as $9kmUS$Primitive} from "@radix-ui/react-primitive";\n' +
    'import {createMenuScope as $9kmUS$createMenuScope, Root as $9kmUS$Root, Anchor as $9kmUS$Anchor, Portal as $9kmUS$Portal, Content as $9kmUS$Content, Group as $9kmUS$Group, Label as $9kmUS$Label, Item as $9kmUS$Item, CheckboxItem as $9kmUS$CheckboxItem, RadioGroup as $9kmUS$RadioGroup, RadioItem as $9kmUS$RadioItem, ItemIndicator as $9kmUS$ItemIndicator, Separator as $9kmUS$Separator, Arrow as $9kmUS$Arrow, Sub as $9kmUS$Sub, SubTrigger as $9kmUS$SubTrigger, SubContent as $9kmUS$SubContent} from "@radix-ui/react-menu";\n' +
    'import {useId as $9kmUS$useId} from "@radix-ui/react-id";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenu\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d08ef79370b62062$var$DROPDOWN_MENU_NAME = 'DropdownMenu';\n" +
    'const [$d08ef79370b62062$var$createDropdownMenuContext, $d08ef79370b62062$export$c0623cd925aeb687] = $9kmUS$createContextScope($d08ef79370b62062$var$DROPDOWN_MENU_NAME, [\n' +
    '    $9kmUS$createMenuScope\n' +
    ']);\n' +
    'const $d08ef79370b62062$var$useMenuScope = $9kmUS$createMenuScope();\n' +
    'const [$d08ef79370b62062$var$DropdownMenuProvider, $d08ef79370b62062$var$useDropdownMenuContext] = $d08ef79370b62062$var$createDropdownMenuContext($d08ef79370b62062$var$DROPDOWN_MENU_NAME);\n' +
    'const $d08ef79370b62062$export$e44a253a59704894 = (props)=>{\n' +
    '    const { __scopeDropdownMenu: __scopeDropdownMenu , children: children , dir: dir , open: openProp , defaultOpen: defaultOpen , onOpenChange: onOpenChange , modal: modal = true  } = props;\n' +
    '    const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);\n' +
    '    const triggerRef = $9kmUS$useRef(null);\n' +
    '    const [open = false, setOpen] = $9kmUS$useControllableState({\n' +
    '        prop: openProp,\n' +
    '        defaultProp: defaultOpen,\n' +
    '        onChange: onOpenChange\n' +
    '    });\n' +
    '    return /*#__PURE__*/ $9kmUS$createElement($d08ef79370b62062$var$DropdownMenuProvider, {\n' +
    '        scope: __scopeDropdownMenu,\n' +
    '        triggerId: $9kmUS$useId(),\n' +
    '        triggerRef: triggerRef,\n' +
    '        contentId: $9kmUS$useId(),\n' +
    '        open: open,\n' +
    '        onOpenChange: setOpen,\n' +
    '        onOpenToggle: $9kmUS$useCallback(()=>setOpen((prevOpen)=>!prevOpen\n' +
    '            )\n' +
    '        , [\n' +
    '            setOpen\n' +
    '        ]),\n' +
    '        modal: modal\n' +
    '    }, /*#__PURE__*/ $9kmUS$createElement($9kmUS$Root, $9kmUS$babelruntimehelpersesmextends({}, menuScope, {\n' +
    '        open: open,\n' +
    '        onOpenChange: setOpen,\n' +
    '        dir: dir,\n' +
    '        modal: modal\n' +
    '    }), children));\n' +
    '};\n' +
    '/*#__PURE__*/ Object.assign($d08ef79370b62062$export$e44a253a59704894, {\n' +
    '    displayName: $d08ef79370b62062$var$DROPDOWN_MENU_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenuTrigger\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d08ef79370b62062$var$TRIGGER_NAME = 'DropdownMenuTrigger';\n" +
    'const $d08ef79370b62062$export$d2469213b3befba9 = /*#__PURE__*/ $9kmUS$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeDropdownMenu: __scopeDropdownMenu , disabled: disabled = false , ...triggerProps } = props;\n' +
    '    const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$TRIGGER_NAME, __scopeDropdownMenu);\n' +
    '    const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);\n' +
    '    return /*#__PURE__*/ $9kmUS$createElement($9kmUS$Anchor, $9kmUS$babelruntimehelpersesmextends({\n' +
    '        asChild: true\n' +
    '    }, menuScope), /*#__PURE__*/ $9kmUS$createElement($9kmUS$Primitive.button, $9kmUS$babelruntimehelpersesmextends({\n' +
    '        type: "button",\n' +
    '        id: context.triggerId,\n' +
    '        "aria-haspopup": "menu",\n' +
    '        "aria-expanded": context.open ? true : undefined,\n' +
    '        "aria-controls": context.open ? context.contentId : undefined,\n' +
    `        "data-state": context.open ? 'open' : 'closed',\n` +
    `        "data-disabled": disabled ? '' : undefined,\n` +
    '        disabled: disabled\n' +
    '    }, triggerProps, {\n' +
    '        ref: $9kmUS$composeRefs(forwardedRef, context.triggerRef),\n' +
    '        onPointerDown: $9kmUS$composeEventHandlers(props.onPointerDown, (event)=>{\n' +
    "            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n" +
    '            // but not when the control key is pressed (avoiding MacOS right click)\n' +
    '            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n' +
    '                context.onOpenToggle(); // prevent trigger focusing when opening\n' +
    '                // this allows the content to be given focus without competition\n' +
    '                if (!context.open) event.preventDefault();\n' +
    '            }\n' +
    '        }),\n' +
    '        onKeyDown: $9kmUS$composeEventHandlers(props.onKeyDown, (event)=>{\n' +
    '            if (disabled) return;\n' +
    '            if ([\n' +
    "                'Enter',\n" +
    "                ' '\n" +
    '            ].includes(event.key)) context.onOpenToggle();\n' +
    "            if (event.key === 'ArrowDown') context.onOpenChange(true); // prevent keypresses from scrolling window\n" +
    '            if ([\n' +
    "                ' ',\n" +
    "                'ArrowDown'\n" +
    '            ].includes(event.key)) event.preventDefault();\n' +
    '        })\n' +
    '    })));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($d08ef79370b62062$export$d2469213b3befba9, {\n' +
    '    displayName: $d08ef79370b62062$var$TRIGGER_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenuPortal\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d08ef79370b62062$var$PORTAL_NAME = 'DropdownMenuPortal';\n" +
    'const $d08ef79370b62062$export$cd369b4d4d54efc9 = (props)=>{\n' +
    '    const { __scopeDropdownMenu: __scopeDropdownMenu , ...portalProps } = props;\n' +
    '    const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);\n' +
    '    return /*#__PURE__*/ $9kmUS$createElement($9kmUS$Portal, $9kmUS$babelruntimehelpersesmextends({}, menuScope, portalProps));\n' +
    '};\n' +
    '/*#__PURE__*/ Object.assign($d08ef79370b62062$export$cd369b4d4d54efc9, {\n' +
    '    displayName: $d08ef79370b62062$var$PORTAL_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenuContent\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d08ef79370b62062$var$CONTENT_NAME = 'DropdownMenuContent';\n" +
    'const $d08ef79370b62062$export$6e76d93a37c01248 = /*#__PURE__*/ $9kmUS$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeDropdownMenu: __scopeDropdownMenu , ...contentProps } = props;\n' +
    '    const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$CONTENT_NAME, __scopeDropdownMenu);\n' +
    '    const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);\n' +
    '    const hasInteractedOutsideRef = $9kmUS$useRef(false);\n' +
    '    return /*#__PURE__*/ $9kmUS$createElement($9kmUS$Content, $9kmUS$babelruntimehelpersesmextends({\n' +
    '        id: context.contentId,\n' +
    '        "aria-labelledby": context.triggerId\n' +
    '    }, menuScope, contentProps, {\n' +
    '        ref: forwardedRef,\n' +
    '        onCloseAutoFocus: $9kmUS$composeEventHandlers(props.onCloseAutoFocus, (event)=>{\n' +
    '            var _context$triggerRef$c;\n' +
    '            if (!hasInteractedOutsideRef.current) (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n' +
    '            hasInteractedOutsideRef.current = false; // Always prevent auto focus because we either focus manually or want user agent focus\n' +
    '            event.preventDefault();\n' +
    '        }),\n' +
    '        onInteractOutside: $9kmUS$composeEventHandlers(props.onInteractOutside, (event)=>{\n' +
    '            const originalEvent = event.detail.originalEvent;\n' +
    '            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n' +
    '            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n' +
    '            if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n' +
    '        }),\n' +
    '        style: {\n' +
    '            ...props.style,\n' +
    '            // re-namespace exposed content custom property\n' +
    "            ['--radix-dropdown-menu-content-transform-origin']: 'var(--radix-popper-transform-origin)'\n" +
    '        }\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($d08ef79370b62062$export$6e76d93a37c01248, {\n' +
    '    displayName: $d08ef79370b62062$var$CONTENT_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenuGroup\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d08ef79370b62062$var$GROUP_NAME = 'DropdownMenuGroup';\n" +
    'const $d08ef79370b62062$export$246bebaba3a2f70e = /*#__PURE__*/ $9kmUS$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeDropdownMenu: __scopeDropdownMenu , ...groupProps } = props;\n' +
    '    const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);\n' +
    '    return /*#__PURE__*/ $9kmUS$createElement($9kmUS$Group, $9kmUS$babelruntimehelpersesmextends({}, menuScope, groupProps, {\n' +
    '        ref: forwardedRef\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($d08ef79370b62062$export$246bebaba3a2f70e, {\n' +
    '    displayName: $d08ef79370b62062$var$GROUP_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DropdownMenuLabel\n' +
    ' * -------------------------------------'... 13258 more characters
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconMenu = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M3 18H21V16H3V18ZM3 13H21V11H3V13ZM3 6V8H21V6H3Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconMenu };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isDesignToken } from '@aws-amplify/ui';\n" +
    "import { ComponentPropsToStylePropsMap } from '../types/style.mjs';\n" +
    "import { getValueAtCurrentBreakpoint } from './responsive/utils.mjs';\n" +
    "import { useBreakpoint } from './responsive/useBreakpoint.mjs';\n" +
    "import { useTheme } from '../../hooks/useTheme.mjs';\n" +
    "import { getStyleValue } from './getStyleValue.mjs';\n" +
    "import { isNullOrEmptyString, isEmptyString, getCSSVariableIfValueIsThemeKey } from './utils.mjs';\n" +
    '\n' +
    'const isSpanPrimitiveValue = (spanValue) => {\n' +
    "    return (spanValue === 'auto' ||\n" +
    "        (typeof spanValue === 'number' && !isNaN(spanValue)) ||\n" +
    "        (typeof spanValue === 'string' && !isNaN(parseFloat(spanValue))));\n" +
    '};\n' +
    'const getGridSpan = (spanValue) => {\n' +
    "    return spanValue === 'auto' ? 'auto' : `span ${spanValue}`;\n" +
    '};\n' +
    'const convertGridSpan = (spanValue) => {\n' +
    '    // PropertyType\n' +
    '    if (isSpanPrimitiveValue(spanValue)) {\n' +
    '        return getGridSpan(spanValue);\n' +
    '    }\n' +
    '    // PropertyType[]\n' +
    '    if (Array.isArray(spanValue)) {\n' +
    '        return spanValue.map((value) => getGridSpan(value));\n' +
    '    }\n' +
    '    // ResponsiveObject<PropertyType>\n' +
    "    if (typeof spanValue === 'object' && spanValue != null) {\n" +
    '        return Object.entries(spanValue).reduce((acc, [key, value]) => ({ ...acc, [key]: getGridSpan(value) }), {});\n' +
    '    }\n' +
    '    return null;\n' +
    '};\n' +
    '/**\n' +
    ' * Transforms style props to another target prop\n' +
    ' * where the original is a simpler API than the target.\n' +
    ' * This function will remove the original prop and\n' +
    ' * replace target prop values with calculated\n' +
    ' * E.g. rowSpan => row, columnSpan => column\n' +
    ' */\n' +
    'const useTransformStyleProps = (props) => {\n' +
    '    const { rowSpan, columnSpan, row, column, ...rest } = props;\n' +
    '    const { rowFromSpanValue, columnFromSpanValue } = React.useMemo(() => {\n' +
    '        return {\n' +
    '            rowFromSpanValue: convertGridSpan(rowSpan),\n' +
    '            columnFromSpanValue: convertGridSpan(columnSpan),\n' +
    '        };\n' +
    '    }, [rowSpan, columnSpan]);\n' +
    '    return {\n' +
    '        row: !isNullOrEmptyString(row) ? row : rowFromSpanValue,\n' +
    '        column: !isNullOrEmptyString(column) ? column : columnFromSpanValue,\n' +
    '        ...rest,\n' +
    '    };\n' +
    '};\n' +
    'const isComponentStyleProp = (key) => {\n' +
    '    return key in ComponentPropsToStylePropsMap;\n' +
    '};\n' +
    '/**\n' +
    ' * Convert style props to CSS variables for React style prop\n' +
    ' * Note: Will filter out undefined, null, and empty string prop values\n' +
    ' */\n' +
    'const convertStylePropsToStyleObj = ({ props = {}, style = {}, breakpoint, breakpoints, tokens, }) => {\n' +
    '    const nonStyleProps = {};\n' +
    '    Object.keys(props)\n' +
    '        .filter((propKey) => props[propKey] !== null)\n' +
    '        .forEach((propKey) => {\n' +
    '        if (isComponentStyleProp(propKey)) {\n' +
    '            const values = props[propKey];\n' +
    '            if (!values || isEmptyString(values))\n' +
    '                return;\n' +
    '            const reactStyleProp = ComponentPropsToStylePropsMap[propKey];\n' +
    '            // short circuit the style prop here if it is a string or design token\n' +
    "            // so we don't have to call getValueAtCurrentBreakpoint every time\n" +
    "            let value = '';\n" +
    '            if (isDesignToken(values)) {\n' +
    '                value = values.toString();\n' +
    '            }\n' +
    "            else if (typeof values === 'string') {\n" +
    '                value = getCSSVariableIfValueIsThemeKey(propKey, values, tokens);\n' +
    '            }\n' +
    "            else if (typeof values === 'number') {\n" +
    '                value = values;\n' +
    '            }\n' +
    "            else if (typeof values === 'object') {\n" +
    '                // here values should be a responsive array or object\n' +
    '                value = getStyleValue({\n' +
    '                    propKey,\n' +
    '                    tokens,\n' +
    '                    value: getValueAtCurrentBreakpoint({\n' +
    '                        values,\n' +
    '                        breakpoint,\n' +
    '                        breakpoints,\n' +
    '                    }),\n' +
    '                });\n' +
    '            }\n' +
    '            style = {\n' +
    '                ...style,\n' +
    '                [reactStyleProp]: value,\n' +
    '            };\n' +
    '        }\n' +
    "        else if (typeof props[propKey] !== 'undefined') {\n" +
    '            nonStyleProps[propKey] = props[propKey];\n' +
    '        }\n' +
    '    });\n' +
    '    return { propStyles: style, nonStyleProps };\n' +
    '};\n' +
    'const useStyles = (props, style) => {\n' +
    '    const { breakpoints: { values: breakpoints, defaultBreakpoint }, tokens, } = useTheme();\n' +
    '    const breakpoint = useBreakpoint({\n' +
    '        breakpoints,\n' +
    '        defaultBreakpoint,\n' +
    '    });\n' +
    '    const propStyles = useTransformStyleProps(props);\n' +
    '    return React.useMemo(() => convertStylePropsToStyleObj({\n' +
    '        props: propStyles,\n' +
    '        style,\n' +
    '        breakpoint,\n' +
    '        breakpoints,\n' +
    '        tokens,\n' +
    '    }), [propStyles, style, breakpoints, breakpoint, tokens]);\n' +
    '};\n' +
    '\n' +
    'export { convertGridSpan, convertStylePropsToStyleObj, getGridSpan, isSpanPrimitiveValue, useStyles, useTransformStyleProps };\n'
} [Function: logger]
____9999999____ {
  code: 'var reactJsxRuntime_production_min = {}; export {reactJsxRuntime_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/react/index.js";'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { useMessage } from './useMessage.mjs';\n" +
    "import { IconCheckCircle } from '../Icon/icons/IconCheckCircle.mjs';\n" +
    "import { IconError } from '../Icon/icons/IconError.mjs';\n" +
    "import { IconInfo } from '../Icon/icons/IconInfo.mjs';\n" +
    "import { IconWarning } from '../Icon/icons/IconWarning.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const MessageIconPrimitive = ({ className, ...rest }, ref) => {\n' +
    "    const icons = useIcons('message');\n" +
    '    const { colorTheme } = useMessage();\n' +
    '    let icon;\n' +
    '    switch (colorTheme) {\n' +
    "        case 'info':\n" +
    '            icon = icons?.info ?? React.createElement(IconInfo, null);\n' +
    '            break;\n' +
    "        case 'error':\n" +
    '            icon = icons?.error ?? React.createElement(IconError, null);\n' +
    '            break;\n' +
    "        case 'warning':\n" +
    '            icon = icons?.warning ?? React.createElement(IconWarning, null);\n' +
    '            break;\n' +
    "        case 'success':\n" +
    '            icon = icons?.success ?? React.createElement(IconCheckCircle, null);\n' +
    '            break;\n' +
    '    }\n' +
    '    return icon ? (React.createElement(View, { className: classNames(ComponentClassName.MessageIcon, className), "aria-hidden": "true", ref: ref, ...rest }, icon)) : null;\n' +
    '};\n' +
    'const MessageIcon = primitiveWithForwardRef(MessageIconPrimitive);\n' +
    "MessageIcon.displayName = 'MessageIcon';\n" +
    '\n' +
    'export { MessageIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const MessageContentPrimitive = ({ children, className, ...rest }, ref) => {\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.MessageContent, className), ref: ref, ...rest }, children));\n' +
    '};\n' +
    'const MessageContent = primitiveWithForwardRef(MessageContentPrimitive);\n' +
    "MessageContent.displayName = 'MessageContent';\n" +
    '\n' +
    'export { MessageContent };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconClose } from '../Icon/icons/IconClose.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import { useMessage } from './useMessage.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const MessageDismissPrimitive = ({ onDismiss, dismissLabel, hasIcon = true, children, className, ...rest }, ref) => {\n' +
    '    const { setDismissed } = useMessage();\n' +
    "    const icons = useIcons('message');\n" +
    '    const dismissMessage = React.useCallback(() => {\n' +
    '        setDismissed(true);\n' +
    '        if (isFunction(onDismiss)) {\n' +
    '            onDismiss();\n' +
    '        }\n' +
    '    }, [setDismissed, onDismiss]);\n' +
    '    return (React.createElement(Button, { variation: "link", colorTheme: "overlay", className: classNames(ComponentClassName.MessageDismiss, className), ref: ref, onClick: dismissMessage, ...rest },\n' +
    '        hasIcon ? icons?.close ?? React.createElement(IconClose, { "aria-hidden": "true" }) : null,\n' +
    '        children ? (children) : (React.createElement(VisuallyHidden, null, dismissLabel ? dismissLabel : ComponentText.Message.dismissLabel))));\n' +
    '};\n' +
    'const MessageDismiss = primitiveWithForwardRef(MessageDismissPrimitive);\n' +
    "MessageDismiss.displayName = 'MessageContent';\n" +
    '\n' +
    'export { MessageDismiss };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const MessageHeadingPrimitive = ({ children, className, ...rest }, ref) => {\n' +
    '    return (React.createElement(Flex, { className: classNames(ComponentClassName.MessageHeading, className), ref: ref, ...rest }, children));\n' +
    '};\n' +
    'const MessageHeading = primitiveWithForwardRef(MessageHeadingPrimitive);\n' +
    "MessageHeading.displayName = 'MessageHeading';\n" +
    '\n' +
    'export { MessageHeading };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { MessageContext } from './useMessage.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const MessageContainerPrimitive = ({ children, className, colorTheme = 'neutral', variation = 'filled', ...rest }, ref) => {\n" +
    '    const [dismissed, setDismissed] = React.useState(false);\n' +
    '    const value = React.useMemo(() => ({\n' +
    '        colorTheme,\n' +
    '        dismissed,\n' +
    '        setDismissed,\n' +
    '    }), [colorTheme, dismissed]);\n' +
    '    return (React.createElement(MessageContext.Provider, { value: value }, !dismissed ? (React.createElement(Flex, { className: classNames(ComponentClassName.Message, classNameModifier(ComponentClassName.Message, variation), classNameModifier(ComponentClassName.Message, colorTheme), className), ref: ref, ...rest }, children)) : null));\n' +
    '};\n' +
    'const MessageContainer = primitiveWithForwardRef(MessageContainerPrimitive);\n' +
    "MessageContainer.displayName = 'MessageContainer';\n" +
    '\n' +
    'export { MessageContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { useRange, ELLIPSIS } from './useRange.mjs';\n" +
    "import { PaginationItem } from './PaginationItem.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * This hook will be used to get the pagination items to be rendered in the pagination primitive\n' +
    ' * @param currentPage current page number\n' +
    ' * @param totalPages total number of pages\n' +
    ' * @param siblingCount the number of siblings on each side of\n' +
    ' * @param onNext callback function triggered when the next-page button is pressed\n' +
    ' * @param onPrevious callback function triggered when the prev-page button is pressed\n' +
    ' * @param onChange callback function triggered every time the page changes\n' +
    ' * @returns an array of pagination items\n' +
    ' */\n' +
    'const usePaginationItems = ({ currentPage, totalPages, hasMorePages, siblingCount, currentPageLabel = ComponentText.PaginationItem.currentPageLabel, pageLabel = ComponentText.PaginationItem.pageLabel, previousLabel = ComponentText.PaginationItem.previousLabel, nextLabel = ComponentText.PaginationItem.nextLabel, onNext, onPrevious, onChange, }) => {\n' +
    '    const previousItem = (React.createElement(PaginationItem, { type: "previous", key: "previous", currentPage: currentPage, onClick: onPrevious, isDisabled: currentPage <= 1, ariaLabel: previousLabel }));\n' +
    '    const nextItem = (React.createElement(PaginationItem, { type: "next", key: "next", currentPage: currentPage, onClick: onNext, isDisabled: currentPage >= totalPages && !hasMorePages, ariaLabel: nextLabel }));\n' +
    '    // To get the range of page numbers to be rendered in the pagination primitive\n' +
    '    const range = useRange(currentPage, totalPages, siblingCount);\n' +
    '    const pageItems = React.useMemo(() => range.map((item, idx) => {\n' +
    '        if (item === ELLIPSIS) {\n' +
    `            return (React.createElement(PaginationItem, { type: "ellipsis", key: idx === 1 ? 'start-ellipsis' : 'end-ellipsis' }));\n` +
    '        }\n' +
    '        return (\n' +
    '        // Note: Do NOT use index for `key` and instead use page number\n' +
    '        // otherwise, react cannot update the component correctly with its diff mechanism\n' +
    '        React.createElement(PaginationItem, { key: item, type: "page", page: item, currentPage: currentPage, currentPageLabel: currentPageLabel, onClick: () => onChange?.(item, currentPage), \n' +
    '            /**\n' +
    '             * @todo We should consider how we would support interpolation in our string translations.\n' +
    '             * This works for "Go to page 31" or "translatedText {s}" as the supplied string\n' +
    '             * But for Arabic or Japanese or some other languages the supplied string might look like: "{s} translatedText".\n' +
    '             */\n' +
    '            ariaLabel: `${pageLabel} ${item}` }));\n' +
    '    }), [range, currentPage, currentPageLabel, pageLabel, onChange]);\n' +
    '    return [previousItem, ...pageItems, nextItem];\n' +
    '};\n' +
    '\n' +
    'export { usePaginationItems };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconVisibilityOff } from '../Icon/icons/IconVisibilityOff.mjs';\n" +
    "import { IconVisibility } from '../Icon/icons/IconVisibility.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const { passwordIsHidden, passwordIsShown, showPassword } = ComponentText.PasswordField;\n' +
    'const ShowPasswordButtonPrimitive = ({ fieldType, passwordIsHiddenLabel = passwordIsHidden, passwordIsShownLabel = passwordIsShown, showPasswordButtonLabel = showPassword, size, hasError, ...rest }, ref) => {\n' +
    "    const icons = useIcons('passwordField');\n" +
    "    const showPasswordButtonClass = classNames(ComponentClassName.FieldShowPassword, classNameModifierByFlag(ComponentClassName.FieldShowPassword, 'error', hasError));\n" +
    "    const icon = fieldType === 'password'\n" +
    '        ? icons?.visibility ?? React.createElement(IconVisibility, { "aria-hidden": "true" })\n' +
    '        : icons?.visibilityOff ?? React.createElement(IconVisibilityOff, { "aria-hidden": "true" });\n' +
    `    return (React.createElement(Button, { "aria-checked": fieldType !== 'password', ariaLabel: showPasswordButtonLabel, className: showPasswordButtonClass, colorTheme: hasError ? 'error' : undefined, ref: ref, role: "switch", size: size, ...rest },\n` +
    `        React.createElement(VisuallyHidden, { "aria-live": "polite" }, fieldType === 'password'\n` +
    '            ? passwordIsHiddenLabel\n' +
    '            : passwordIsShownLabel),\n' +
    '        icon));\n' +
    '};\n' +
    'const ShowPasswordButton = primitiveWithForwardRef(ShowPasswordButtonPrimitive);\n' +
    "ShowPasswordButton.displayName = 'ShowPasswordButton';\n" +
    '\n' +
    'export { ShowPasswordButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, countryDialCodes } from '@aws-amplify/ui';\n" +
    "import { SelectField } from '../SelectField/SelectField.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const DialCodeSelectPrimitive = ({ className, dialCodeList, isReadOnly, ...props }, ref) => {\n' +
    '    const dialList = dialCodeList ?? countryDialCodes;\n' +
    '    const dialCodeOptions = React.useMemo(() => dialList.map((dialCode) => (\n' +
    '    // Regarding the `disabled` attribute, see comment in SelectField below\n' +
    '    React.createElement("option", { key: dialCode, value: dialCode, disabled: isReadOnly }, dialCode))), [dialList, isReadOnly]);\n' +
    '    return (React.createElement(SelectField\n' +
    '    /*\n' +
    '        Since <select> elements do not support the `readonly` html attribute, it is suggested to use the `disabled` html attribute\n' +
    '        so that a screen reader will announce something to the user about the interactivity of the options list ( https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n' +
    '      */\n' +
    '    , { "aria-disabled": isReadOnly, autoComplete: "tel-country-code", className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className), labelHidden: true, ref: ref, ...props }, dialCodeOptions));\n' +
    '};\n' +
    'const DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);\n' +
    "DialCodeSelect.displayName = 'DialCodeSelect';\n" +
    '\n' +
    'export { DialCodeSelect };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default, { useContext } from 'react';\n" +
    '\n' +
    "const defaultValue = { name: 'default' };\n" +
    'const RadioGroupContext = React__default.createContext(defaultValue);\n' +
    'const useRadioGroupContext = () => {\n' +
    '    return useContext(RadioGroupContext);\n' +
    '};\n' +
    '\n' +
    'export { RadioGroupContext, useRadioGroupContext };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { useLayoutEffect } from './useLayoutEffect.mjs';\n" +
    '\n' +
    '// Adapted from https://github.com/radix-ui/primitives/blob/main/packages/react/id/src/id.tsx#L8\n' +
    '// Prefixed autogenerated id created by useStableId\n' +
    "const AUTO_GENERATED_ID_PREFIX = 'amplify-id';\n" +
    '// Create a local version of React.useId which will reference React.useId for React 18\n' +
    '// and fallback to noop for React 17 and below\n' +
    "// Note: We use `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\n" +
    "// since it doesn't exist in React 17 and below (prevents https://github.com/aws-amplify/amplify-ui/issues/1154)\n" +
    'const useReactId = \n' +
    '// disable eslint below to allow usage of casting React to `any`, which ensures that TS\n' +
    '// does not get confused about the existence of `useId` in React 17 and below\n' +
    '// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n' +
    "React['useId'.toString()] || (() => undefined);\n" +
    'let count = 0;\n' +
    '/**\n' +
    ' * Create a uuid to use with amplify fields unless\n' +
    ' * an id is provided\n' +
    ' * @param id user specified id\n' +
    ' * @returns string\n' +
    ' */\n' +
    'const useStableId = (id) => {\n' +
    '    const [stableId, setStableId] = React.useState(useReactId());\n' +
    '    // React versions older than 18 will have client-side ids only\n' +
    '    useLayoutEffect(() => {\n' +
    '        if (!id) {\n' +
    '            setStableId((reactId) => reactId ?? String(count++));\n' +
    '        }\n' +
    '    }, [id]);\n' +
    "    return id ?? (stableId ? `${AUTO_GENERATED_ID_PREFIX}-${stableId}` : '');\n" +
    '};\n' +
    '\n' +
    'export { AUTO_GENERATED_ID_PREFIX, useStableId };\n'
} [Function: logger]
____9999999____ {
  code: 'const isIconFilled = (currentIconIndex, ratingValue) => {\n' +
    '    if (currentIconIndex <= ratingValue)\n' +
    '        return true;\n' +
    '    return false;\n' +
    '};\n' +
    'const isIconEmpty = (currentIconIndex, ratingValue) => {\n' +
    '    if (currentIconIndex - 1 >= ratingValue)\n' +
    '        return true;\n' +
    '    return false;\n' +
    '};\n' +
    'const isIconMixed = (currentIconIndex, ratingValue) => {\n' +
    '    if (currentIconIndex > ratingValue && currentIconIndex - 1 < ratingValue) {\n' +
    '        return true;\n' +
    '    }\n' +
    '    return false;\n' +
    '};\n' +
    '\n' +
    'export { isIconEmpty, isIconFilled, isIconMixed };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconStar = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconStar };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const RatingIcon = ({ icon, fill, className, }) => {\n' +
    '    return (React.createElement(View, { as: "span", className: ComponentClassName.RatingItem, "aria-hidden": "true" },\n' +
    '        React.createElement(View, { as: "span", className: classNames(className), color: fill }, icon)));\n' +
    '};\n' +
    "RatingIcon.displayName = 'RatingIcon';\n" +
    '\n' +
    'export { RatingIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    '\n' +
    'const RatingMixedIcon = ({ emptyColor, emptyIcon, fillColor, fillIcon, value, }) => {\n' +
    '    const widthPercentage = `${(value % 1) * 100}%`;\n' +
    '    return (React.createElement(View, { as: "span", className: ComponentClassName.RatingItem, "aria-hidden": "true" },\n' +
    `        React.createElement(View, { as: "span", className: classNames(ComponentClassName.RatingIcon, classNameModifier(ComponentClassName.RatingIcon, 'empty')), color: emptyColor }, emptyIcon),\n` +
    `        React.createElement(View, { as: "span", className: classNames(ComponentClassName.RatingIcon, classNameModifier(ComponentClassName.RatingIcon, 'filled')), width: widthPercentage, color: fillColor }, fillIcon)));\n` +
    '};\n' +
    "RatingMixedIcon.displayName = 'RatingMixedIcon';\n" +
    '\n' +
    'export { RatingMixedIcon };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconSearch = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14V14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconSearch };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    "import '../FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import { FieldGroupIconButton } from '../FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import '../View/View.mjs';\n" +
    "import { IconSearch } from '../Icon/icons/IconSearch.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const ariaLabelText = ComponentText.SearchField.searchButtonLabel;\n' +
    'const SearchFieldButtonPrimitive = ({ size, ...props }, ref) => {\n' +
    "    const icons = useIcons('searchField');\n" +
    '    return (React.createElement(FieldGroupIconButton, { ariaLabel: ariaLabelText, className: ComponentClassName.SearchFieldSearch, size: size, ref: ref, type: "submit", ...props }, icons?.search ?? React.createElement(IconSearch, null)));\n' +
    '};\n' +
    'const SearchFieldButton = primitiveWithForwardRef(SearchFieldButtonPrimitive);\n' +
    "SearchFieldButton.displayName = 'SearchFieldButton';\n" +
    '\n' +
    'export { SearchFieldButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    "import { ESCAPE_KEY, ENTER_KEY } from '../shared/constants.mjs';\n" +
    "import { useComposeRefsCallback } from '../../hooks/useComposeRefsCallback.mjs';\n" +
    '\n' +
    'const DEFAULT_KEYS = new Set([ESCAPE_KEY, ENTER_KEY]);\n' +
    "const useSearchField = ({ defaultValue = '', value, onChange, onClear, onSubmit, externalRef, }) => {\n" +
    '    const isControlled = value !== undefined;\n' +
    '    const [internalValue, setInternalValue] = React.useState(defaultValue);\n' +
    '    const composedValue = isControlled ? value : internalValue;\n' +
    '    const internalRef = React.useRef(null);\n' +
    '    const composedRefs = useComposeRefsCallback({\n' +
    '        externalRef,\n' +
    '        internalRef,\n' +
    '    });\n' +
    '    const onClearHandler = React.useCallback(() => {\n' +
    '        if (!isControlled) {\n' +
    "            setInternalValue('');\n" +
    '        }\n' +
    '        internalRef?.current?.focus();\n' +
    '        if (isFunction(onClear)) {\n' +
    '            onClear();\n' +
    '        }\n' +
    '    }, [isControlled, setInternalValue, onClear]);\n' +
    '    const onSubmitHandler = React.useCallback((value) => {\n' +
    '        if (isFunction(onSubmit)) {\n' +
    '            onSubmit(value);\n' +
    '        }\n' +
    '    }, [onSubmit]);\n' +
    '    const onKeyDown = React.useCallback((event) => {\n' +
    '        const { key } = event;\n' +
    '        if (!DEFAULT_KEYS.has(key)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        event.preventDefault();\n' +
    '        if (key === ESCAPE_KEY) {\n' +
    '            onClearHandler();\n' +
    '        }\n' +
    '        else if (key === ENTER_KEY) {\n' +
    '            onSubmitHandler(composedValue);\n' +
    '        }\n' +
    '    }, [composedValue, onClearHandler, onSubmitHandler]);\n' +
    '    const handleOnChange = React.useCallback((event) => {\n' +
    '        if (!isControlled) {\n' +
    '            setInternalValue(event.target.value);\n' +
    '        }\n' +
    '        if (isFunction(onChange)) {\n' +
    '            onChange(event);\n' +
    '        }\n' +
    '    }, [isControlled, onChange, setInternalValue]);\n' +
    '    const onClick = React.useCallback(() => {\n' +
    '        onSubmitHandler(composedValue);\n' +
    '    }, [onSubmitHandler, composedValue]);\n' +
    '    return {\n' +
    '        composedValue,\n' +
    '        onClearHandler,\n' +
    '        onKeyDown,\n' +
    '        onClick,\n' +
    '        handleOnChange,\n' +
    '        composedRefs,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { useSearchField };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { IconExpandMore } from '../Icon/icons/IconExpandMore.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const SelectPrimitive = ({ autoComplete, className, size, variation, value, defaultValue, hasError, icon, iconColor, children, placeholder, isDisabled, isRequired, isMultiple = false, selectSize = 1, ...rest }, ref) => {\n' +
    "    const DEFAULT_PLACEHOLDER_VALUE = '';\n" +
    '    // value === undefined is to make sure that component is used in uncontrolled way so that setting defaultValue is valid\n' +
    '    const shouldSetDefaultPlaceholderValue = value === undefined && defaultValue === undefined && placeholder;\n' +
    '    const isExpanded = isMultiple || selectSize > 1;\n' +
    "    const componentClasses = classNames(ComponentClassName.Select, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Select, size), classNameModifier(ComponentClassName.Select, variation), classNameModifierByFlag(ComponentClassName.Select, 'error', hasError), classNameModifierByFlag(ComponentClassName.Select, 'expanded', isExpanded), className);\n" +
    "    const icons = useIcons('select');\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    return (React.createElement(View, { className: ComponentClassName.SelectWrapper },\n' +
    '        React.createElement(View, { "aria-invalid": hasError, as: "select", autoComplete: autoComplete, value: value, defaultValue: shouldSetDefaultPlaceholderValue\n' +
    '                ? DEFAULT_PLACEHOLDER_VALUE\n' +
    '                : defaultValue, isDisabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, multiple: isMultiple, size: selectSize, required: isRequired, className: componentClasses, ref: ref, ...rest },\n' +
    '            placeholder && React.createElement("option", { value: "" }, placeholder),\n' +
    '            children),\n' +
    '        isExpanded ? null : (React.createElement(Flex, { className: classNames(ComponentClassName.SelectIcon, classNameModifier(ComponentClassName.SelectIcon, size)), color: iconColor }, icon ?? icons?.expand ?? React.createElement(IconExpandMore, null)))));\n' +
    '};\n' +
    'const Select = primitiveWithForwardRef(SelectPrimitive);\n' +
    "Select.displayName = 'Select';\n" +
    '\n' +
    'export { Select };\n'
} [Function: logger]
____9999999____ {
  code: "import { ComponentPropsToStylePropsMap } from '../types/style.mjs';\n" +
    '\n' +
    'const isStyleKey = (prop) => {\n' +
    '    return prop in ComponentPropsToStylePropsMap;\n' +
    '};\n' +
    '/**\n' +
    ' * This function splits props into style props and non-style props. This is used\n' +
    ' * on Field primitives so we can apply style props on the wrapper element and\n' +
    ' * the rest on the input.\n' +
    " * @param props this should be a destructured `rest` from the component's props\n" +
    ' */\n' +
    'const splitPrimitiveProps = (props) => {\n' +
    '    const splitProps = {\n' +
    '        styleProps: {},\n' +
    '        rest: {},\n' +
    '    };\n' +
    '    Object.keys(props).forEach((prop) => {\n' +
    '        if (isStyleKey(prop)) {\n' +
    '            // we know it is a style key\n' +
    '            // so we know we can assign the key in styleProps\n' +
    '            splitProps.styleProps = {\n' +
    '                ...splitProps.styleProps,\n' +
    '                [prop]: props[prop],\n' +
    '            };\n' +
    '        }\n' +
    '        else {\n' +
    '            splitProps.rest = {\n' +
    '                ...splitProps.rest,\n' +
    '                [prop]: props[prop],\n' +
    '            };\n' +
    '        }\n' +
    '    });\n' +
    '    return splitProps;\n' +
    '};\n' +
    '\n' +
    'export { splitPrimitiveProps };\n'
} [Function: logger]
____9999999____ {
  code: 'import $g1Vy2$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $g1Vy2$forwardRef, useState as $g1Vy2$useState, useRef as $g1Vy2$useRef, createElement as $g1Vy2$createElement, useMemo as $g1Vy2$useMemo, useEffect as $g1Vy2$useEffect} from "react";\n' +
    'import {clamp as $g1Vy2$clamp} from "@radix-ui/number";\n' +
    'import {composeEventHandlers as $g1Vy2$composeEventHandlers} from "@radix-ui/primitive";\n' +
    'import {useComposedRefs as $g1Vy2$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {createContextScope as $g1Vy2$createContextScope} from "@radix-ui/react-context";\n' +
    'import {useControllableState as $g1Vy2$useControllableState} from "@radix-ui/react-use-controllable-state";\n' +
    'import {useDirection as $g1Vy2$useDirection} from "@radix-ui/react-direction";\n' +
    'import {usePrevious as $g1Vy2$usePrevious} from "@radix-ui/react-use-previous";\n' +
    'import {useSize as $g1Vy2$useSize} from "@radix-ui/react-use-size";\n' +
    'import {Primitive as $g1Vy2$Primitive} from "@radix-ui/react-primitive";\n' +
    'import {createCollection as $g1Vy2$createCollection} from "@radix-ui/react-collection";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'const $faa2e61a3361514f$var$PAGE_KEYS = [\n' +
    "    'PageUp',\n" +
    "    'PageDown'\n" +
    '];\n' +
    'const $faa2e61a3361514f$var$ARROW_KEYS = [\n' +
    "    'ArrowUp',\n" +
    "    'ArrowDown',\n" +
    "    'ArrowLeft',\n" +
    "    'ArrowRight'\n" +
    '];\n' +
    'const $faa2e61a3361514f$var$BACK_KEYS = {\n' +
    '    ltr: [\n' +
    "        'ArrowDown',\n" +
    "        'Home',\n" +
    "        'ArrowLeft',\n" +
    "        'PageDown'\n" +
    '    ],\n' +
    '    rtl: [\n' +
    "        'ArrowDown',\n" +
    "        'Home',\n" +
    "        'ArrowRight',\n" +
    "        'PageDown'\n" +
    '    ]\n' +
    '};\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Slider\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $faa2e61a3361514f$var$SLIDER_NAME = 'Slider';\n" +
    'const [$faa2e61a3361514f$var$Collection, $faa2e61a3361514f$var$useCollection, $faa2e61a3361514f$var$createCollectionScope] = $g1Vy2$createCollection($faa2e61a3361514f$var$SLIDER_NAME);\n' +
    'const [$faa2e61a3361514f$var$createSliderContext, $faa2e61a3361514f$export$ef72632d7b901f97] = $g1Vy2$createContextScope($faa2e61a3361514f$var$SLIDER_NAME, [\n' +
    '    $faa2e61a3361514f$var$createCollectionScope\n' +
    ']);\n' +
    'const [$faa2e61a3361514f$var$SliderProvider, $faa2e61a3361514f$var$useSliderContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME);\n' +
    'const $faa2e61a3361514f$export$472062a354075cee = /*#__PURE__*/ $g1Vy2$forwardRef((props, forwardedRef)=>{\n' +
    "    const { name: name , min: min = 0 , max: max = 100 , step: step = 1 , orientation: orientation = 'horizontal' , disabled: disabled = false , minStepsBetweenThumbs: minStepsBetweenThumbs = 0 , defaultValue: defaultValue = [\n" +
    '        min\n' +
    '    ] , value: value1 , onValueChange: onValueChange = ()=>{} , ...sliderProps } = props;\n' +
    '    const [slider, setSlider] = $g1Vy2$useState(null);\n' +
    '    const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, (node)=>setSlider(node)\n' +
    '    );\n' +
    '    const thumbRefs = $g1Vy2$useRef(new Set());\n' +
    '    const valueIndexToChangeRef = $g1Vy2$useRef(0);\n' +
    "    const isHorizontal = orientation === 'horizontal'; // We set this to true by default so that events bubble to forms without JS (SSR)\n" +
    "    const isFormControl = slider ? Boolean(slider.closest('form')) : true;\n" +
    '    const SliderOrientation = isHorizontal ? $faa2e61a3361514f$var$SliderHorizontal : $faa2e61a3361514f$var$SliderVertical;\n' +
    '    const [values = [], setValues] = $g1Vy2$useControllableState({\n' +
    '        prop: value1,\n' +
    '        defaultProp: defaultValue,\n' +
    '        onChange: (value)=>{\n' +
    '            var _thumbs$valueIndexToC;\n' +
    '            const thumbs = [\n' +
    '                ...thumbRefs.current\n' +
    '            ];\n' +
    '            (_thumbs$valueIndexToC = thumbs[valueIndexToChangeRef.current]) === null || _thumbs$valueIndexToC === void 0 || _thumbs$valueIndexToC.focus();\n' +
    '            onValueChange(value);\n' +
    '        }\n' +
    '    });\n' +
    '    function handleSlideStart(value) {\n' +
    '        const closestIndex = $faa2e61a3361514f$var$getClosestValueIndex(values, value);\n' +
    '        updateValues(value, closestIndex);\n' +
    '    }\n' +
    '    function handleSlideMove(value) {\n' +
    '        updateValues(value, valueIndexToChangeRef.current);\n' +
    '    }\n' +
    '    function updateValues(value, atIndex) {\n' +
    '        const decimalCount = $faa2e61a3361514f$var$getDecimalCount(step);\n' +
    '        const snapToStep = $faa2e61a3361514f$var$roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n' +
    '        const nextValue = $g1Vy2$clamp(snapToStep, [\n' +
    '            min,\n' +
    '            max\n' +
    '        ]);\n' +
    '        setValues((prevValues = [])=>{\n' +
    '            const nextValues = $faa2e61a3361514f$var$getNextSortedValues(prevValues, nextValue, atIndex);\n' +
    '            if ($faa2e61a3361514f$var$hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n' +
    '                valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n' +
    '                return String(nextValues) === String(prevValues) ? prevValues : nextValues;\n' +
    '            } else return prevValues;\n' +
    '        });\n' +
    '    }\n' +
    '    return /*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$SliderProvider, {\n' +
    '        scope: props.__scopeSlider,\n' +
    '        disabled: disabled,\n' +
    '        min: min,\n' +
    '        max: max,\n' +
    '        valueIndexToChangeRef: valueIndexToChangeRef,\n' +
    '        thumbs: thumbRefs.current,\n' +
    '        values: values,\n' +
    '        orientation: orientation\n' +
    '    }, /*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$Collection.Provider, {\n' +
    '        scope: props.__scopeSlider\n' +
    '    }, /*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$Collection.Slot, {\n' +
    '        scope: props.__scopeSlider\n' +
    '    }, /*#__PURE__*/ $g1Vy2$createElement(SliderOrientation, $g1Vy2$babelruntimehelpersesmextends({\n' +
    '        "aria-disabled": disabled,\n' +
    `        "data-disabled": disabled ? '' : undefined\n` +
    '    }, sliderProps, {\n' +
    '        ref: composedRefs,\n' +
    '        min: min,\n' +
    '        max: max,\n' +
    '        onSlideStart: disabled ? undefined : handleSlideStart,\n' +
    '        onSlideMove: disabled ? undefined : handleSlideMove,\n' +
    '        onHomeKeyDown: ()=>!disabled && updateValues(min, 0)\n' +
    '        ,\n' +
    '        onEndKeyDown: ()=>!disabled && updateValues(max, values.length - 1)\n' +
    '        ,\n' +
    '        onStepKeyDown: ({ event: event , direction: stepDirection  })=>{\n' +
    '            if (!disabled) {\n' +
    '                const isPageKey = $faa2e61a3361514f$var$PAGE_KEYS.includes(event.key);\n' +
    '                const isSkipKey = isPageKey || event.shiftKey && $faa2e61a3361514f$var$ARROW_KEYS.includes(event.key);\n' +
    '                const multiplier = isSkipKey ? 10 : 1;\n' +
    '                const atIndex = valueIndexToChangeRef.current;\n' +
    '                const value = values[atIndex];\n' +
    '                const stepInDirection = step * multiplier * stepDirection;\n' +
    '                updateValues(value + stepInDirection, atIndex);\n' +
    '            }\n' +
    '        }\n' +
    '    })))), isFormControl && values.map((value, index)=>/*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$BubbleInput, {\n' +
    '            key: index,\n' +
    "            name: name ? name + (values.length > 1 ? '[]' : '') : undefined,\n" +
    '            value: value\n' +
    '        })\n' +
    '    ));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($faa2e61a3361514f$export$472062a354075cee, {\n' +
    '    displayName: $faa2e61a3361514f$var$SLIDER_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * SliderHorizontal\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const [$faa2e61a3361514f$var$SliderOrientationProvider, $faa2e61a3361514f$var$useSliderOrientationContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME, {\n' +
    "    startEdge: 'left',\n" +
    "    endEdge: 'right',\n" +
    "    size: 'width',\n" +
    '    direction: 1\n' +
    '});\n' +
    'const $faa2e61a3361514f$var$SliderHorizontal = /*#__PURE__*/ $g1Vy2$forwardRef((props, forwardedRef)=>{\n' +
    '    const { min: min , max: max , dir: dir , onSlideStart: onSlideStart , onSlideMove: onSlideMove , onStepKeyDown: onStepKeyDown , ...sliderProps } = props;\n' +
    '    const [slider, setSlider] = $g1Vy2$useState(null);\n' +
    '    const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, (node)=>setSlider(node)\n' +
    '    );\n' +
    '    const rectRef = $g1Vy2$useRef();\n' +
    '    const direction = $g1Vy2$useDirection(dir);\n' +
    "    const isDirectionLTR = direction === 'ltr';\n" +
    '    function getValueFromPointer(pointerPosition) {\n' +
    '        const rect = rectRef.current || slider.getBoundingClientRect();\n' +
    '        const input = [\n' +
    '            0,\n' +
    '            rect.width\n' +
    '        ];\n' +
    '        const output = isDirectionLTR ? [\n' +
    '            min,\n' +
    '            max\n' +
    '        ] : [\n' +
    '            max,\n' +
    '            min\n' +
    '        ];\n' +
    '        const value = $faa2e61a3361514f$var$linearScale(input, output);\n' +
    '        rectRef.current = rect;\n' +
    '        return value(pointerPosition - rect.left);\n' +
    '    }\n' +
    '    return /*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$SliderOrientationProvider, {\n' +
    '        scope: props.__scopeSlider,\n' +
    "        startEdge: isDirectionLTR ? 'left' : 'right',\n" +
    "        endEdge: isDirectionLTR ? 'right' : 'left',\n" +
    '        direction: isDirectionLTR ? 1 : -1,\n' +
    '        size: "width"\n' +
    '    }, /*#__PURE__*/ $g1Vy2$createElement($faa2e61a3361514f$var$SliderImpl, $g1Vy2$babelruntimehelpersesmextends({\n' +
    '        dir: direction,\n' +
    '        "data-orientation": "horizontal"\n' +
    '    }, sliderProps, {\n' +
    '        ref: composedRefs,\n' +
    '        style: {\n' +
    '            ...sliderProps.style,\n' +
    "            ['--radix-slider-thumb-transform']: 'translateX(-50%)'\n" +
    '        },\n' +
    '        onSlideStart: (event)=>{\n' +
    '            const value = getValueFromPointer(event.clientX);\n' +
    '            onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);\n' +
    '        },\n' +
    '        onSlideMove: (event)=>{\n' +
    '            const value = getValueFromPointer(event.clientX);\n' +
    '            onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);\n' +
    '        },\n' +
    '        onSlideEnd: ()=>rectRef.current = undefined\n' +
    '        ,\n' +
    '        onStepKeyDown: (event)=>{\n' +
    '            const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[direction].includes(event.key);\n' +
    '            onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({\n' +
    '                event: even'... 17118 more characters
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { ComponentClassName, classNames, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    "const FieldGroupPrimitive = ({ children, className, innerEndComponent, innerStartComponent, orientation = 'horizontal', outerEndComponent, outerStartComponent, variation, ...rest }, ref) => {\n" +
    "    // Don't apply hasInner classnames unless a component was provided\n" +
    '    const hasInnerStartComponent = innerStartComponent != null;\n' +
    '    const hasInnerEndComponent = innerEndComponent != null;\n' +
    '    const fieldGroupHasInnerStartClassName = hasInnerStartComponent\n' +
    '        ? ComponentClassName.FieldGroupHasInnerStart\n' +
    '        : null;\n' +
    '    const fieldGroupHasInnerEndClassName = hasInnerEndComponent\n' +
    '        ? ComponentClassName.FieldGroupHasInnerEnd\n' +
    '        : null;\n' +
    '    const componentClasses = classNames(ComponentClassName.FieldGroup, fieldGroupHasInnerStartClassName, fieldGroupHasInnerEndClassName, classNameModifier(ComponentClassName.FieldGroup, orientation), className);\n' +
    '    return (React.createElement(Flex, { className: componentClasses, ref: ref, ...rest },\n' +
    '        outerStartComponent && (React.createElement(View, { className: classNames(ComponentClassName.FieldGroupOuterStart, classNameModifier(ComponentClassName.FieldGroupOuterStart, variation)) }, outerStartComponent)),\n' +
    '        React.createElement(View, { className: classNames(ComponentClassName.FieldGroupFieldWrapper, classNameModifier(ComponentClassName.FieldGroupFieldWrapper, orientation)) },\n' +
    '            innerStartComponent && (React.createElement(View, { className: ComponentClassName.FieldGroupInnerStart }, innerStartComponent)),\n' +
    '            children,\n' +
    '            innerEndComponent && (React.createElement(View, { className: ComponentClassName.FieldGroupInnerEnd }, innerEndComponent))),\n' +
    '        outerEndComponent && (React.createElement(View, { className: classNames(ComponentClassName.FieldGroupOuterEnd, classNameModifier(ComponentClassName.FieldGroupOuterEnd, variation)) }, outerEndComponent))));\n' +
    '};\n' +
    'const FieldGroup = primitiveWithForwardRef(FieldGroupPrimitive);\n' +
    "FieldGroup.displayName = 'FieldGroup';\n" +
    '\n' +
    'export { FieldGroup };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    '\n' +
    'const getCorrectSteppingValue = ({ max, min, step, value, }) => {\n' +
    '    // Round it to the closest step value\n' +
    '    // It will be based off min to be consistent with native input[type="number"]\n' +
    '    // This allows keyboard accessible\n' +
    '    const remainder = (value - min) % step;\n' +
    '    value = value - remainder + Math.round(remainder / step) * step;\n' +
    '    // Make sure new value is not outside the bound\n' +
    '    value = Math.max(min, value);\n' +
    '    if (value > max) {\n' +
    '        value = max - ((max - min) % step);\n' +
    '    }\n' +
    '    return value;\n' +
    '};\n' +
    'const useStepper = ({ defaultValue = 0, value: controlledValue, step = 1, max = Number.MAX_SAFE_INTEGER, min = Number.MIN_SAFE_INTEGER, isDisabled, isReadOnly, onChange, onDecrease, onIncrease, onStepChange, }) => {\n' +
    '    const isControlled = controlledValue !== undefined;\n' +
    '    // Make sure max value is greater than or equal to min value\n' +
    '    max = Math.max(min, max);\n' +
    '    // Maintain an internal state for uncontrolled components\n' +
    '    // This allows to take over the input value and correct any invalid versus purely relying on the native uncontrolled input\n' +
    '    const [uncontrolledValue, setUncontrolledValue] = React.useState(() => \n' +
    '    // This is required for users could provide any defaultValue\n' +
    '    getCorrectSteppingValue({ min, max, step, value: defaultValue }));\n' +
    '    // Same for controlled components on the first render because users could provide invalid initial value.\n' +
    '    // It seems redundant afterwards but necessary for the first render\n' +
    '    const value = isControlled\n' +
    '        ? getCorrectSteppingValue({ min, max, step, value: controlledValue })\n' +
    '        : uncontrolledValue;\n' +
    '    const shouldDisableIncreaseButton = isDisabled ?? isReadOnly ?? value + step > max;\n' +
    '    const shouldDisableDecreaseButton = isDisabled ?? isReadOnly ?? value - step < min;\n' +
    '    // This is the exact value to be rendered on screen\n' +
    "    // It could be a string, like '-' or empty string when users clear the input\n" +
    '    const [inputValue, setInputValue] = React.useState(value);\n' +
    '    const handleOnChange = React.useCallback((event) => {\n' +
    '        setInputValue(event.target.value);\n' +
    '        if (isFunction(onChange)) {\n' +
    '            onChange(event);\n' +
    '        }\n' +
    '    }, [onChange]);\n' +
    '    const handleOnBlur = React.useCallback((event) => {\n' +
    '        const parsedValue = parseFloat(event.target.value);\n' +
    "        // Though input[type='number'] has built-in validation to reject non-numerical entries\n" +
    "        // The entered value could still be empty string or minus '-'\n" +
    '        // in these cases, no need to do the following validation\n' +
    '        if (isNaN(parsedValue)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        const newValue = getCorrectSteppingValue({\n' +
    '            min,\n' +
    '            max,\n' +
    '            step,\n' +
    '            value: parsedValue,\n' +
    '        });\n' +
    '        if (!isControlled) {\n' +
    '            setUncontrolledValue(newValue);\n' +
    '        }\n' +
    '        if (isFunction(onStepChange)) {\n' +
    '            onStepChange(newValue);\n' +
    '        }\n' +
    '        setInputValue(newValue);\n' +
    '    }, [min, max, step, isControlled, onStepChange]);\n' +
    '    const handleIncrease = React.useCallback(() => {\n' +
    '        // No need to check if the value will be outside the bounds\n' +
    '        // The button will be disabled if so\n' +
    '        if (!isControlled) {\n' +
    '            setUncontrolledValue(value + step);\n' +
    '        }\n' +
    '        if (isFunction(onStepChange)) {\n' +
    '            onStepChange(value + step);\n' +
    '        }\n' +
    '        if (isFunction(onIncrease)) {\n' +
    '            onIncrease();\n' +
    '        }\n' +
    '        setInputValue(value + step);\n' +
    '    }, [step, value, isControlled, onIncrease, onStepChange]);\n' +
    '    const handleDecrease = React.useCallback(() => {\n' +
    '        // No need to check if the value will be outside the bounds\n' +
    '        // The button will be disabled if so\n' +
    '        if (!isControlled) {\n' +
    '            setUncontrolledValue(value - step);\n' +
    '        }\n' +
    '        if (isFunction(onStepChange)) {\n' +
    '            onStepChange(value - step);\n' +
    '        }\n' +
    '        if (isFunction(onDecrease)) {\n' +
    '            onDecrease();\n' +
    '        }\n' +
    '        setInputValue(value - step);\n' +
    '    }, [step, value, isControlled, onDecrease, onStepChange]);\n' +
    "    // This aims to disable unwanted behaviors on React input[type='number']\n" +
    '    // When the input gets focused, rotating a wheel will change its value\n' +
    '    // But the parent container(mostly the entire window) will be scrolling to elsewhere\n' +
    '    const handleOnWheel = React.useCallback((event) => {\n' +
    '        event.currentTarget.blur();\n' +
    '    }, []);\n' +
    '    return {\n' +
    '        step,\n' +
    '        value,\n' +
    '        inputValue,\n' +
    '        handleDecrease,\n' +
    '        handleIncrease,\n' +
    '        handleOnBlur,\n' +
    '        handleOnChange,\n' +
    '        handleOnWheel,\n' +
    '        setInputValue,\n' +
    '        shouldDisableDecreaseButton,\n' +
    '        shouldDisableIncreaseButton,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { useStepper };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconAdd = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconAdd };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconRemove = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M19 13H5V11H19V13Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconRemove };\n'
} [Function: logger]
____9999999____ {
  code: "import { useState, useCallback } from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    '\n' +
    'const useSwitch = (props) => {\n' +
    '    const { onChange, isChecked, defaultChecked, isDisabled } = props;\n' +
    "    const isControlled = typeof isChecked !== 'undefined';\n" +
    '    const [isOn, setIsOn] = useState(isControlled ? isChecked : !!defaultChecked);\n' +
    '    const [isFocused, setIsFocused] = useState(false);\n' +
    '    const changeHandler = useCallback((event) => {\n' +
    '        if (isDisabled) {\n' +
    '            event.preventDefault();\n' +
    '            return;\n' +
    '        }\n' +
    '        if (isFunction(onChange)) {\n' +
    '            onChange(event);\n' +
    '        }\n' +
    '        setIsOn(event.target.checked);\n' +
    '    }, [onChange, isDisabled]);\n' +
    '    if (isControlled && isOn !== isChecked) {\n' +
    '        setIsOn(isChecked);\n' +
    '    }\n' +
    '    return {\n' +
    '        isOn,\n' +
    '        changeHandler,\n' +
    '        isFocused,\n' +
    '        setIsFocused,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { useSwitch };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag, isTypedFunction } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { TabsContext } from './TabsContext.mjs';\n" +
    '\n' +
    "const TabsItemPrimitive = ({ className, value, children, onClick, as = 'button', role = 'tab', ...rest }, ref) => {\n" +
    '    const { activeTab, setActiveTab } = React.useContext(TabsContext);\n' +
    '    const isActive = activeTab === value;\n' +
    '    const handleOnClick = (e) => {\n' +
    '        if (isTypedFunction(onClick)) {\n' +
    '            onClick?.(e);\n' +
    '        }\n' +
    '        setActiveTab(value);\n' +
    '    };\n' +
    '    return (React.createElement(View, { ...rest, role: role, as: as, id: `${value}-tab`, "aria-selected": isActive, "aria-controls": `${value}-panel`, tabIndex: !isActive ? -1 : undefined, className: classNames(ComponentClassName.TabsItem, classNameModifierByFlag(ComponentClassName.TabsItem, \'active\', activeTab === value), className), ref: ref, onClick: handleOnClick }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/tabs)\n' +
    ' */\n' +
    'const TabsItem = primitiveWithForwardRef(TabsItemPrimitive);\n' +
    "TabsItem.displayName = 'Tabs.Item';\n" +
    '\n' +
    'export { TabsItem };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { TabsContext } from './TabsContext.mjs';\n" +
    '\n' +
    'const isValidTab = (child) => React.isValidElement(child);\n' +
    "const TabListPrimitive = ({ className, children, indicatorPosition, spacing, role = 'tablist', ...rest }, ref) => {\n" +
    '    const internalRef = React.useRef(null);\n' +
    '    const { activeTab, setActiveTab } = React.useContext(TabsContext);\n' +
    '    React.useImperativeHandle(ref, () => internalRef.current);\n' +
    '    const values = React.useMemo(() => React.Children.toArray(children)\n' +
    '        .map((child) => {\n' +
    '        if (child && isValidTab(child)) {\n' +
    '            return child.props.value;\n' +
    '        }\n' +
    '    })\n' +
    '        .filter((child) => !!child), [children]);\n' +
    '    const currentIndex = values.indexOf(activeTab);\n' +
    '    const nextTab = React.useCallback(() => {\n' +
    '        let nextIndex = currentIndex === values.length - 1 ? 0 : currentIndex + 1;\n' +
    "        const elems = internalRef.current?.querySelectorAll('button') ?? [];\n" +
    '        while (elems[nextIndex].disabled) {\n' +
    '            if (nextIndex === values.length - 1) {\n' +
    '                nextIndex = 0;\n' +
    '            }\n' +
    '            else {\n' +
    '                nextIndex++;\n' +
    '            }\n' +
    '        }\n' +
    '        const value = values[nextIndex];\n' +
    '        if (value) {\n' +
    '            setActiveTab(value);\n' +
    '            const elem = elems[nextIndex];\n' +
    '            elem?.focus();\n' +
    '            elem?.click();\n' +
    '        }\n' +
    '    }, [currentIndex, setActiveTab, values]);\n' +
    '    const prevTab = React.useCallback(() => {\n' +
    '        let prevIndex = currentIndex === 0 ? values.length - 1 : currentIndex - 1;\n' +
    "        const elems = internalRef.current?.querySelectorAll('button') ?? [];\n" +
    '        while (elems[prevIndex].disabled) {\n' +
    '            if (prevIndex === 0) {\n' +
    '                prevIndex = values.length - 1;\n' +
    '            }\n' +
    '            else {\n' +
    '                prevIndex--;\n' +
    '            }\n' +
    '        }\n' +
    '        const value = values[prevIndex];\n' +
    '        if (value) {\n' +
    '            setActiveTab(value);\n' +
    '            const elem = elems[prevIndex];\n' +
    '            elem?.focus();\n' +
    '            elem?.click();\n' +
    '        }\n' +
    '    }, [currentIndex, setActiveTab, values]);\n' +
    '    const onKeyDown = React.useCallback((event) => {\n' +
    '        switch (event.key) {\n' +
    "            case 'ArrowLeft':\n" +
    '                event.preventDefault();\n' +
    '                event.stopPropagation();\n' +
    '                prevTab();\n' +
    '                break;\n' +
    "            case 'ArrowUp':\n" +
    "            case 'ArrowRight':\n" +
    '                event.preventDefault();\n' +
    '                event.stopPropagation();\n' +
    '                nextTab();\n' +
    '                break;\n' +
    '        }\n' +
    '    }, [prevTab, nextTab]);\n' +
    '    return (React.createElement(View, { ...rest, role: role, onKeyDown: onKeyDown, className: classNames(ComponentClassName.TabsList, indicatorPosition\n' +
    '            ? classNameModifier(ComponentClassName.TabsList, indicatorPosition)\n' +
    '            : null, spacing\n' +
    '            ? classNameModifier(ComponentClassName.TabsList, spacing)\n' +
    '            : null, className), ref: internalRef }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/tabs)\n' +
    ' */\n' +
    'const TabList = primitiveWithForwardRef(TabListPrimitive);\n' +
    "TabList.displayName = 'Tabs.List';\n" +
    '\n' +
    'export { TabList };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { TabsContext } from './TabsContext.mjs';\n" +
    '\n' +
    "const TabPanelPrimitive = ({ className, value, children, role = 'tabpanel', ...rest }, ref) => {\n" +
    '    const { activeTab, isLazy } = React.useContext(TabsContext);\n' +
    '    if (isLazy && activeTab !== value)\n' +
    '        return null;\n' +
    '    return (React.createElement(View, { ...rest, role: role, id: `${value}-panel`, "aria-labelledby": `${value}-tab`, className: classNames(ComponentClassName.TabsPanel, classNameModifierByFlag(ComponentClassName.TabsPanel, \'active\', activeTab === value), className), ref: ref }, children));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/tabs)\n' +
    ' */\n' +
    'const TabPanel = primitiveWithForwardRef(TabPanelPrimitive);\n' +
    "TabPanel.displayName = 'Tabs.Panel';\n" +
    '\n' +
    'export { TabPanel };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction, classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { TabsContext } from './TabsContext.mjs';\n" +
    '\n' +
    'const TabsContainerPrimitive = ({ children, defaultValue, className, value: controlledValue, onValueChange, isLazy, ...rest }, ref) => {\n' +
    '    const isControlled = controlledValue !== undefined;\n' +
    '    const [localValue, setLocalValue] = React.useState(() => isControlled ? controlledValue : defaultValue);\n' +
    "    const activeTab = isControlled ? controlledValue : localValue ?? '';\n" +
    '    const setActiveTab = React.useCallback((newValue) => {\n' +
    '        if (isFunction(onValueChange)) {\n' +
    '            onValueChange(newValue);\n' +
    '        }\n' +
    '        if (!isControlled) {\n' +
    '            setLocalValue(newValue);\n' +
    '        }\n' +
    '    }, [onValueChange, isControlled]);\n' +
    '    const _value = React.useMemo(() => {\n' +
    '        return {\n' +
    '            activeTab,\n' +
    '            isLazy,\n' +
    '            setActiveTab,\n' +
    '        };\n' +
    '    }, [activeTab, setActiveTab, isLazy]);\n' +
    '    return (React.createElement(TabsContext.Provider, { value: _value },\n' +
    '        React.createElement(View, { ...rest, ref: ref, className: classNames(className, ComponentClassName.Tabs) }, children)));\n' +
    '};\n' +
    '/**\n' +
    ' * [📖 Docs](https://ui.docs.amplify.aws/react/components/tabs)\n' +
    ' */\n' +
    'const TabsContainer = primitiveWithForwardRef(TabsContainerPrimitive);\n' +
    "TabsContainer.displayName = 'Tabs.Container';\n" +
    '\n' +
    'export { TabsContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { useFieldset } from '../Fieldset/useFieldset.mjs';\n" +
    "import { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n" +
    '\n' +
    'const TextAreaPrimitive = ({ className, isDisabled, isReadOnly, isRequired, size, hasError = false, variation, ...rest }, ref) => {\n' +
    "    const componentClasses = classNames(ComponentClassName.Textarea, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Textarea, variation), classNameModifier(ComponentClassName.Textarea, size), classNameModifierByFlag(ComponentClassName.Textarea, 'error', hasError), className);\n" +
    '    const { isFieldsetDisabled } = useFieldset();\n' +
    '    return (React.createElement(View, { "aria-invalid": hasError, as: "textarea", className: componentClasses, disabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, readOnly: isReadOnly, ref: ref, required: isRequired, ...rest }));\n' +
    '};\n' +
    'const TextArea = primitiveWithForwardRef(TextAreaPrimitive);\n' +
    "TextArea.displayName = 'TextArea';\n" +
    '\n' +
    'export { TextArea };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    '\n' +
    'const useToggleButton = ({ isPressed, defaultPressed, onClick, onChange, value, }) => {\n' +
    '    const isControlled = isPressed !== undefined;\n' +
    '    // Maintain internal selected state for uncontrolled component\n' +
    '    const [pressed, setPressed] = React.useState(defaultPressed);\n' +
    '    isPressed = isControlled ? isPressed : pressed;\n' +
    '    const handleClick = React.useCallback((event) => {\n' +
    '        if (isFunction(onClick)) {\n' +
    '            onClick(event);\n' +
    '        }\n' +
    '        if (!isControlled) {\n' +
    '            setPressed(!pressed);\n' +
    '        }\n' +
    '        if (isControlled && isFunction(onChange)) {\n' +
    '            onChange(value);\n' +
    '        }\n' +
    '    }, [isControlled, onClick, onChange, pressed, value]);\n' +
    '    return { isPressed, handleClick };\n' +
    '};\n' +
    '\n' +
    'export { useToggleButton };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction, isString } from '@aws-amplify/ui';\n" +
    '\n' +
    'const useToggleButtonGroup = ({ onChange, value, isExclusive = false, isSelectionRequired = false, }) => {\n' +
    '    // Multiple selection\n' +
    '    const handleChange = React.useCallback((buttonValue) => {\n' +
    '        if (!isFunction(onChange) || !Array.isArray(value)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        const index = isString(buttonValue) ? value.indexOf(buttonValue) : -1;\n' +
    '        let newValue;\n' +
    '        const shouldToggleOff = index >= 0;\n' +
    '        if (shouldToggleOff) {\n' +
    '            // Toggle off\n' +
    '            newValue = [...value];\n' +
    '            if (!isSelectionRequired || newValue.length > 1) {\n' +
    '                newValue.splice(index, 1);\n' +
    '            }\n' +
    '        }\n' +
    '        else {\n' +
    '            // Toggle on\n' +
    '            newValue = [...value, buttonValue];\n' +
    '        }\n' +
    '        onChange(newValue);\n' +
    '    }, [onChange, value, isSelectionRequired]);\n' +
    '    // Exclusive selection\n' +
    '    const handleExclusiveChange = React.useCallback((buttonValue) => {\n' +
    '        if (!isFunction(onChange)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        onChange(value === buttonValue && !isSelectionRequired ? undefined : buttonValue);\n' +
    '    }, [onChange, value, isSelectionRequired]);\n' +
    '    return isExclusive ? handleExclusiveChange : handleChange;\n' +
    '};\n' +
    '\n' +
    'export { useToggleButtonGroup };\n'
} [Function: logger]
____9999999____ {
  code: "import { InMemoryStorage } from './InMemoryStorage.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n' +
    ' */\n' +
    "const getLocalStorageWithFallback = () => typeof window !== 'undefined' && window.localStorage\n" +
    '    ? window.localStorage\n' +
    '    : new InMemoryStorage();\n' +
    '/**\n' +
    ' * @internal\n' +
    ' * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n' +
    ' */\n' +
    "const getSessionStorageWithFallback = () => typeof window !== 'undefined' && window.sessionStorage\n" +
    '    ? window.sessionStorage\n' +
    '    : new InMemoryStorage();\n' +
    '\n' +
    'export { getLocalStorageWithFallback, getSessionStorageWithFallback };\n' +
    '//# sourceMappingURL=utils.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'import { __awaiter, __generator } from "tslib";\n' +
    'import { BLOCK_SIZE } from "./constants";\n' +
    'import { RawSha256 } from "./RawSha256";\n' +
    'import { isEmptyData, convertToBuffer } from "@aws-crypto/util";\n' +
    'var Sha256 = /** @class */ (function () {\n' +
    '    function Sha256(secret) {\n' +
    '        this.secret = secret;\n' +
    '        this.hash = new RawSha256();\n' +
    '        this.reset();\n' +
    '    }\n' +
    '    Sha256.prototype.update = function (toHash) {\n' +
    '        if (isEmptyData(toHash) || this.error) {\n' +
    '            return;\n' +
    '        }\n' +
    '        try {\n' +
    '            this.hash.update(convertToBuffer(toHash));\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            this.error = e;\n' +
    '        }\n' +
    '    };\n' +
    '    /* This synchronous method keeps compatibility\n' +
    '     * with the v2 aws-sdk.\n' +
    '     */\n' +
    '    Sha256.prototype.digestSync = function () {\n' +
    '        if (this.error) {\n' +
    '            throw this.error;\n' +
    '        }\n' +
    '        if (this.outer) {\n' +
    '            if (!this.outer.finished) {\n' +
    '                this.outer.update(this.hash.digest());\n' +
    '            }\n' +
    '            return this.outer.digest();\n' +
    '        }\n' +
    '        return this.hash.digest();\n' +
    '    };\n' +
    '    /* The underlying digest method here is synchronous.\n' +
    '     * To keep the same interface with the other hash functions\n' +
    '     * the default is to expose this as an async method.\n' +
    '     * However, it can sometimes be useful to have a sync method.\n' +
    '     */\n' +
    '    Sha256.prototype.digest = function () {\n' +
    '        return __awaiter(this, void 0, void 0, function () {\n' +
    '            return __generator(this, function (_a) {\n' +
    '                return [2 /*return*/, this.digestSync()];\n' +
    '            });\n' +
    '        });\n' +
    '    };\n' +
    '    Sha256.prototype.reset = function () {\n' +
    '        this.hash = new RawSha256();\n' +
    '        if (this.secret) {\n' +
    '            this.outer = new RawSha256();\n' +
    '            var inner = bufferFromSecret(this.secret);\n' +
    '            var outer = new Uint8Array(BLOCK_SIZE);\n' +
    '            outer.set(inner);\n' +
    '            for (var i = 0; i < BLOCK_SIZE; i++) {\n' +
    '                inner[i] ^= 0x36;\n' +
    '                outer[i] ^= 0x5c;\n' +
    '            }\n' +
    '            this.hash.update(inner);\n' +
    '            this.outer.update(outer);\n' +
    '            // overwrite the copied key in memory\n' +
    '            for (var i = 0; i < inner.byteLength; i++) {\n' +
    '                inner[i] = 0;\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    return Sha256;\n' +
    '}());\n' +
    'export { Sha256 };\n' +
    'function bufferFromSecret(secret) {\n' +
    '    var input = convertToBuffer(secret);\n' +
    '    if (input.byteLength > BLOCK_SIZE) {\n' +
    '        var bufferHash = new RawSha256();\n' +
    '        bufferHash.update(input);\n' +
    '        input = bufferHash.digest();\n' +
    '    }\n' +
    '    var buffer = new Uint8Array(BLOCK_SIZE);\n' +
    '    buffer.set(input);\n' +
    '    return buffer;\n' +
    '}\n' +
    '//# sourceMappingURL=jsSha256.js.map'
} [Function: logger]
____9999999____ {
  code: "import { defaultPartition, partitionsInfo } from './partitions.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n" +
    ' * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n' +
    ' * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n' +
    ' *\n' +
    ' * @param region\n' +
    ' * @returns The DNS suffix\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getDnsSuffix = (region) => {\n' +
    '    const { partitions } = partitionsInfo;\n' +
    '    for (const { regions, outputs, regionRegex } of partitions) {\n' +
    '        const regex = new RegExp(regionRegex);\n' +
    '        if (regions.includes(region) || regex.test(region)) {\n' +
    '            return outputs.dnsSuffix;\n' +
    '        }\n' +
    '    }\n' +
    '    return defaultPartition.outputs.dnsSuffix;\n' +
    '};\n' +
    '\n' +
    'export { getDnsSuffix };\n' +
    '//# sourceMappingURL=getDnsSuffix.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\n" +
    "import '../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../utils/retry/retry.mjs';\n" +
    "import { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\n" +
    "import { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\n" +
    "import { fetchTransferHandler } from './fetch.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n' +
    '\n' +
    'export { unauthenticatedHandler };\n' +
    '//# sourceMappingURL=unauthenticated.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import '../../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\n" +
    "import '../../../utils/retry/retry.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\n' +
    'const DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\n' +
    'const jitteredBackoff = attempt => {\n' +
    '    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n' +
    '    const delay = delayFunction(attempt);\n' +
    '    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n' +
    '    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n' +
    '    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n' +
    '};\n' +
    '\n' +
    'export { jitteredBackoff };\n' +
    '//# sourceMappingURL=jitteredBackoff.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { isClockSkewError } from './isClockSkewError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Get retry decider function\n' +
    ' * @param errorParser Function to load JavaScript error from HTTP response\n' +
    ' */\n' +
    'const getRetryDecider = (errorParser) => async (response, error) => {\n' +
    '    const parsedError = error ??\n' +
    '        (await errorParser(response)) ??\n' +
    '        undefined;\n' +
    '    const errorCode = parsedError?.code;\n' +
    '    const statusCode = response?.statusCode;\n' +
    '    return (isConnectionError(error) ||\n' +
    '        isThrottlingError(statusCode, errorCode) ||\n' +
    '        isClockSkewError(errorCode) ||\n' +
    '        isServerSideError(statusCode, errorCode));\n' +
    '};\n' +
    '// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\n' +
    'const THROTTLING_ERROR_CODES = [\n' +
    "    'BandwidthLimitExceeded',\n" +
    "    'EC2ThrottledException',\n" +
    "    'LimitExceededException',\n" +
    "    'PriorRequestNotComplete',\n" +
    "    'ProvisionedThroughputExceededException',\n" +
    "    'RequestLimitExceeded',\n" +
    "    'RequestThrottled',\n" +
    "    'RequestThrottledException',\n" +
    "    'SlowDown',\n" +
    "    'ThrottledException',\n" +
    "    'Throttling',\n" +
    "    'ThrottlingException',\n" +
    "    'TooManyRequestsException',\n" +
    '];\n' +
    'const TIMEOUT_ERROR_CODES = [\n' +
    "    'TimeoutError',\n" +
    "    'RequestTimeout',\n" +
    "    'RequestTimeoutException',\n" +
    '];\n' +
    'const isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n' +
    '    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\n' +
    "const isConnectionError = (error) => error?.name === 'Network error';\n" +
    'const isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n' +
    '    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n' +
    '\n' +
    'export { getRetryDecider };\n' +
    '//# sourceMappingURL=defaultRetryDecider.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Compose a transfer handler with a core transfer handler and a list of middleware.\n' +
    ' * @param coreHandler Core transfer handler\n' +
    ' * @param middleware\tList of middleware\n' +
    ' * @returns A transfer handler whose option type is the union of the core\n' +
    " * \ttransfer handler's option type and the middleware's option type.\n" +
    ' * @internal\n' +
    ' */\n' +
    'const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n' +
    '    const context = {};\n' +
    '    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n' +
    '    for (let i = middleware.length - 1; i >= 0; i--) {\n' +
    '        const m = middleware[i];\n' +
    '        const resolvedMiddleware = m(options);\n' +
    '        composedHandler = resolvedMiddleware(composedHandler, context);\n' +
    '    }\n' +
    '    return composedHandler(request);\n' +
    '};\n' +
    '\n' +
    'export { composeTransferHandler };\n' +
    '//# sourceMappingURL=composeTransferHandler.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Default cache config\n' +
    ' */\n' +
    'const defaultConfig = {\n' +
    "    keyPrefix: 'aws-amplify-cache',\n" +
    '    capacityInBytes: 1048576,\n' +
    '    itemMaxSize: 210000,\n' +
    '    defaultTTL: 259200000,\n' +
    '    defaultPriority: 5,\n' +
    '    warningThreshold: 0.8,\n' +
    '};\n' +
    "const currentSizeKey = 'CurSize';\n" +
    '\n' +
    'export { currentSizeKey, defaultConfig };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n" +
    "import { defaultConfig, currentSizeKey } from './constants.mjs';\n" +
    "import { getCurrentSizeKey, getCurrentTime, getByteLength } from './utils/cacheHelpers.mjs';\n" +
    "import { assert, CacheErrorCode } from './utils/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('StorageCache');\n" +
    '/**\n' +
    ' * Initialization of the cache\n' +
    ' *\n' +
    ' */\n' +
    'class StorageCacheCommon {\n' +
    '    /**\n' +
    '     * Initialize the cache\n' +
    '     *\n' +
    '     * @param config - Custom configuration for this instance.\n' +
    '     */\n' +
    '    constructor({ config, keyValueStorage, }) {\n' +
    '        this.config = {\n' +
    '            ...defaultConfig,\n' +
    '            ...config,\n' +
    '        };\n' +
    '        this.keyValueStorage = keyValueStorage;\n' +
    '        this.sanitizeConfig();\n' +
    '    }\n' +
    '    getModuleName() {\n' +
    "        return 'Cache';\n" +
    '    }\n' +
    '    /**\n' +
    '     * Set custom configuration for the cache instance.\n' +
    '     *\n' +
    "     * @param config - customized configuration (without keyPrefix, which can't be changed)\n" +
    '     *\n' +
    '     * @return - the current configuration\n' +
    '     */\n' +
    '    configure(config) {\n' +
    '        if (config) {\n' +
    '            if (config.keyPrefix) {\n' +
    "                logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n" +
    '            }\n' +
    '            this.config = {\n' +
    '                ...this.config,\n' +
    '                ...config,\n' +
    '            };\n' +
    '        }\n' +
    '        this.sanitizeConfig();\n' +
    '        return this.config;\n' +
    '    }\n' +
    '    /**\n' +
    '     * return the current size of the cache\n' +
    '     * @return {Promise}\n' +
    '     */\n' +
    '    async getCurrentCacheSize() {\n' +
    '        let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n' +
    '        if (!size) {\n' +
    "            await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n" +
    "            size = '0';\n" +
    '        }\n' +
    '        return Number(size);\n' +
    '    }\n' +
    '    /**\n' +
    '     * Set item into cache. You can put number, string, boolean or object.\n' +
    '     * The cache will first check whether has the same key.\n' +
    '     * If it has, it will delete the old item and then put the new item in\n' +
    '     * The cache will pop out items if it is full\n' +
    '     * You can specify the cache item options. The cache will abort and output a warning:\n' +
    '     * If the key is invalid\n' +
    '     * If the size of the item exceeds itemMaxSize.\n' +
    '     * If the value is undefined\n' +
    '     * If incorrect cache item configuration\n' +
    '     * If error happened with browser storage\n' +
    '     *\n' +
    '     * @param {String} key - the key of the item\n' +
    '     * @param {Object} value - the value of the item\n' +
    '     * @param {Object} [options] - optional, the specified meta-data\n' +
    '     *\n' +
    '     * @return {Promise}\n' +
    '     */\n' +
    '    async setItem(key, value, options) {\n' +
    '        logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n' +
    '        if (!key || key === currentSizeKey) {\n' +
    "            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n" +
    '            return;\n' +
    '        }\n' +
    "        if (typeof value === 'undefined') {\n" +
    '            logger.warn(`The value of item should not be undefined!`);\n' +
    '            return;\n' +
    '        }\n' +
    '        const cacheItemOptions = {\n' +
    '            priority: options?.priority !== undefined\n' +
    '                ? options.priority\n' +
    '                : this.config.defaultPriority,\n' +
    '            expires: options?.expires !== undefined\n' +
    '                ? options.expires\n' +
    '                : this.config.defaultTTL + getCurrentTime(),\n' +
    '        };\n' +
    '        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n' +
    '            logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n' +
    '            return;\n' +
    '        }\n' +
    '        const prefixedKey = `${this.config.keyPrefix}${key}`;\n' +
    '        const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n' +
    '        // check whether this item is too big;\n' +
    '        if (item.byteSize > this.config.itemMaxSize) {\n' +
    '            logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n' +
    '            return;\n' +
    '        }\n' +
    '        try {\n' +
    '            // first look into the storage, if it exists, delete it.\n' +
    '            const val = await this.getStorage().getItem(prefixedKey);\n' +
    '            if (val) {\n' +
    '                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n' +
    '            }\n' +
    '            // check whether the cache is full\n' +
    '            if (await this.isCacheFull(item.byteSize)) {\n' +
    '                const validKeys = await this.clearInvalidAndGetRemainingKeys();\n' +
    '                if (await this.isCacheFull(item.byteSize)) {\n' +
    '                    const sizeToPop = await this.sizeToPop(item.byteSize);\n' +
    '                    await this.popOutItems(validKeys, sizeToPop);\n' +
    '                }\n' +
    '            }\n' +
    '            // put item in the cache\n' +
    '            return this.setCacheItem(prefixedKey, item);\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            logger.warn(`setItem failed! ${e}`);\n' +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n' +
    '     * If you specified callback function in the options,\n' +
    '     * then the function will be executed if no such item in the cache\n' +
    '     * and finally put the return value into cache.\n' +
    '     * Please make sure the callback function will return the value you want to put into the cache.\n' +
    '     * The cache will abort output a warning:\n' +
    '     * If the key is invalid\n' +
    '     * If error happened with AsyncStorage\n' +
    '     *\n' +
    '     * @param {String} key - the key of the item\n' +
    '     * @param {Object} [options] - the options of callback function\n' +
    '     *\n' +
    '     * @return {Promise} - return a promise resolves to be the value of the item\n' +
    '     */\n' +
    '    async getItem(key, options) {\n' +
    '        logger.debug(`Get item: key is ${key} with options ${options}`);\n' +
    '        let cached;\n' +
    '        if (!key || key === currentSizeKey) {\n' +
    "            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n" +
    '            return null;\n' +
    '        }\n' +
    '        const prefixedKey = `${this.config.keyPrefix}${key}`;\n' +
    '        try {\n' +
    '            cached = await this.getStorage().getItem(prefixedKey);\n' +
    '            if (cached != null) {\n' +
    '                if (await this.isExpired(prefixedKey)) {\n' +
    '                    // if expired, remove that item and return null\n' +
    '                    await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n' +
    '                }\n' +
    '                else {\n' +
    '                    // if not expired, update its visitedTime and return the value\n' +
    '                    const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n' +
    '                    return item.data;\n' +
    '                }\n' +
    '            }\n' +
    '            if (options?.callback) {\n' +
    '                const val = options.callback();\n' +
    '                if (val !== null) {\n' +
    '                    await this.setItem(key, val, options);\n' +
    '                }\n' +
    '                return val;\n' +
    '            }\n' +
    '            return null;\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            logger.warn(`getItem failed! ${e}`);\n' +
    '            return null;\n' +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * remove item from the cache\n' +
    '     * The cache will abort output a warning:\n' +
    '     * If error happened with AsyncStorage\n' +
    '     * @param {String} key - the key of the item\n' +
    '     * @return {Promise}\n' +
    '     */\n' +
    '    async removeItem(key) {\n' +
    '        logger.debug(`Remove item: key is ${key}`);\n' +
    '        if (!key || key === currentSizeKey) {\n' +
    "            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n" +
    '            return;\n' +
    '        }\n' +
    '        const prefixedKey = `${this.config.keyPrefix}${key}`;\n' +
    '        try {\n' +
    '            const val = await this.getStorage().getItem(prefixedKey);\n' +
    '            if (val) {\n' +
    '                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n' +
    '            }\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            logger.warn(`removeItem failed! ${e}`);\n' +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * Return all the keys owned by this cache.\n' +
    '     * Will return an empty array if error occurred.\n' +
    '     *\n' +
    '     * @return {Promise}\n' +
    '     */\n' +
    '    async getAllKeys() {\n' +
    '        try {\n' +
    '            return await this.getAllCacheKeys();\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            logger.warn(`getAllkeys failed! ${e}`);\n' +
    '            return [];\n' +
    '        }\n' +
    '    }\n' +
    '    getStorage() {\n' +
    '        return this.keyValueStorage;\n' +
    '    }\n' +
    '    /**\n' +
    '     * check whether item is expired\n' +
    '     *\n' +
    '     * @param key - the key of the item\n' +
    '     *\n' +
    '     * @return true if the item is expired.\n' +
    '     */\n' +
    '    async isExpired(key) {\n' +
    '        const text = await this.getStorage().getItem(key);\n' +
    '        assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n' +
    '        const item = JSON.parse(text);\n' +
    '        if (getCurrentTime() >= item.expires) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return false;\n' +
    '    }\n' +
    '    /**\n' +
    '     * delete item from cache\n' +
    '     *\n' +
    '     * @param prefixedKey - the key of the item\n' +
    '     * @param size - optional, the byte size of the item\n' +
    '     */\n' +
    '    async removeCacheItem(prefixedKey, size) {\n' +
    '        const item = await this.getStorage().getItem(prefixedKey);\n' +
    '        assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n' +
    '        const itemSize = size ?? JSON.parse(item).byteSize;\n' +
    '        // first try to update the current size of the cache\n' +
    '        await this.decreaseCurrentSizeInBytes(itemSize);\n' +
    '        // try to remove the item from cache\n' +
    '        try {\n' +
    '            await this.getStorage().removeItem(prefixedKey);\n' +
    '        }\n' +
    '        catch (removeItemError) {\n' +
    '            // if some error happened, we need to rollback the current size\n' +
    '            await this.increaseCurrentSizeInBytes(itemSize);\n' +
    '            logger.error(`Failed to remove item: ${removeItemError}`);\n' +
    '        }\n' +
    '    }\n' +
    '    /**\n' +
    '     * produce a JSON object with meta-data and data value\n' +
    '     * @param value - the value of the item\n' +
    '     * @param options - optional, the specified meta-data\n' +
    '     *\n' +
    '     * @return - the item which has the meta-data and the value\n' +
    '     */\n' +
    '    fillCacheItem(key, value, options) {\n' +
    '        const item = {\n' +
    '            key,\n' +
    '            data: value,\n' +
    '            '... 7125 more characters
} [Function: logger]
____9999999____ {
  code: "import { currentSizeKey } from '../constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * return the byte size of the string\n' +
    ' * @param str\n' +
    ' */\n' +
    'function getByteLength(str) {\n' +
    '    let ret = 0;\n' +
    '    ret = str.length;\n' +
    '    for (let i = str.length; i >= 0; i -= 1) {\n' +
    '        const charCode = str.charCodeAt(i);\n' +
    '        if (charCode > 0x7f && charCode <= 0x7ff) {\n' +
    '            ret += 1;\n' +
    '        }\n' +
    '        else if (charCode > 0x7ff && charCode <= 0xffff) {\n' +
    '            ret += 2;\n' +
    '        }\n' +
    '        // trail surrogate\n' +
    '        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n' +
    '            i -= 1;\n' +
    '        }\n' +
    '    }\n' +
    '    return ret;\n' +
    '}\n' +
    '/**\n' +
    ' * get current time\n' +
    ' */\n' +
    'function getCurrentTime() {\n' +
    '    const currentTime = new Date();\n' +
    '    return currentTime.getTime();\n' +
    '}\n' +
    '/**\n' +
    ' * check if passed value is an integer\n' +
    ' */\n' +
    'function isInteger(value) {\n' +
    '    if (Number.isInteger) {\n' +
    '        return Number.isInteger(value);\n' +
    '    }\n' +
    "    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n" +
    '}\n' +
    'const getCurrentSizeKey = (keyPrefix) => `${keyPrefix}${currentSizeKey}`;\n' +
    '\n' +
    'export { getByteLength, getCurrentSizeKey, getCurrentTime, isInteger };\n' +
    '//# sourceMappingURL=cacheHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import v35 from './v35.js';\n" +
    "import md5 from './md5.js';\n" +
    "const v3 = v35('v3', 0x30, md5);\n" +
    'export default v3;'
} [Function: logger]
____9999999____ {
  code: "import v35 from './v35.js';\n" +
    "import sha1 from './sha1.js';\n" +
    "const v5 = v35('v5', 0x50, sha1);\n" +
    'export default v5;'
} [Function: logger]
____9999999____ {
  code: "import native from './native.js';\n" +
    "import rng from './rng.js';\n" +
    "import { unsafeStringify } from './stringify.js';\n" +
    '\n' +
    'function v4(options, buf, offset) {\n' +
    '  if (native.randomUUID && !buf && !options) {\n' +
    '    return native.randomUUID();\n' +
    '  }\n' +
    '\n' +
    '  options = options || {};\n' +
    '  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n' +
    '\n' +
    '  rnds[6] = rnds[6] & 0x0f | 0x40;\n' +
    '  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n' +
    '\n' +
    '  if (buf) {\n' +
    '    offset = offset || 0;\n' +
    '\n' +
    '    for (let i = 0; i < 16; ++i) {\n' +
    '      buf[offset + i] = rnds[i];\n' +
    '    }\n' +
    '\n' +
    '    return buf;\n' +
    '  }\n' +
    '\n' +
    '  return unsafeStringify(rnds);\n' +
    '}\n' +
    '\n' +
    'export default v4;'
} [Function: logger]
____9999999____ { code: "export default '00000000-0000-0000-0000-000000000000';" } [Function: logger]
____9999999____ {
  code: "import rng from './rng.js';\n" +
    "import { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n" +
    '//\n' +
    '// Inspired by https://github.com/LiosK/UUID.js\n' +
    '// and http://docs.python.org/library/uuid.html\n' +
    '\n' +
    'let _nodeId;\n' +
    '\n' +
    'let _clockseq; // Previous uuid creation time\n' +
    '\n' +
    '\n' +
    'let _lastMSecs = 0;\n' +
    'let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n' +
    '\n' +
    'function v1(options, buf, offset) {\n' +
    '  let i = buf && offset || 0;\n' +
    '  const b = buf || new Array(16);\n' +
    '  options = options || {};\n' +
    '  let node = options.node || _nodeId;\n' +
    "  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n" +
    '  // specified.  We do this lazily to minimize issues related to insufficient\n' +
    '  // system entropy.  See #189\n' +
    '\n' +
    '  if (node == null || clockseq == null) {\n' +
    '    const seedBytes = options.random || (options.rng || rng)();\n' +
    '\n' +
    '    if (node == null) {\n' +
    '      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n' +
    '      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n' +
    '    }\n' +
    '\n' +
    '    if (clockseq == null) {\n' +
    '      // Per 4.2.2, randomize (14 bit) clockseq\n' +
    '      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n' +
    '    }\n' +
    '  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n' +
    "  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n" +
    "  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n" +
    '  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n' +
    '\n' +
    '\n' +
    "  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n" +
    '  // cycle to simulate higher resolution clock\n' +
    '\n' +
    '  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n' +
    '\n' +
    '  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n' +
    '\n' +
    '  if (dt < 0 && options.clockseq === undefined) {\n' +
    '    clockseq = clockseq + 1 & 0x3fff;\n' +
    "  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n" +
    '  // time interval\n' +
    '\n' +
    '\n' +
    '  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n' +
    '    nsecs = 0;\n' +
    '  } // Per 4.2.1.2 Throw error if too many uuids are requested\n' +
    '\n' +
    '\n' +
    '  if (nsecs >= 10000) {\n' +
    `    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");\n` +
    '  }\n' +
    '\n' +
    '  _lastMSecs = msecs;\n' +
    '  _lastNSecs = nsecs;\n' +
    '  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n' +
    '\n' +
    '  msecs += 12219292800000; // `time_low`\n' +
    '\n' +
    '  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n' +
    '  b[i++] = tl >>> 24 & 0xff;\n' +
    '  b[i++] = tl >>> 16 & 0xff;\n' +
    '  b[i++] = tl >>> 8 & 0xff;\n' +
    '  b[i++] = tl & 0xff; // `time_mid`\n' +
    '\n' +
    '  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n' +
    '  b[i++] = tmh >>> 8 & 0xff;\n' +
    '  b[i++] = tmh & 0xff; // `time_high_and_version`\n' +
    '\n' +
    '  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n' +
    '\n' +
    '  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n' +
    '\n' +
    '  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n' +
    '\n' +
    '  b[i++] = clockseq & 0xff; // `node`\n' +
    '\n' +
    '  for (let n = 0; n < 6; ++n) {\n' +
    '    b[i + n] = node[n];\n' +
    '  }\n' +
    '\n' +
    '  return buf || unsafeStringify(b);\n' +
    '}\n' +
    '\n' +
    'export default v1;'
} [Function: logger]
____9999999____ {
  code: "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\n" +
    "import '../../types/errors.mjs';\n" +
    "import '../../errors/errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var CacheErrorCode;\n' +
    '(function (CacheErrorCode) {\n' +
    '    CacheErrorCode["NoCacheItem"] = "NoCacheItem";\n' +
    '    CacheErrorCode["NullNextNode"] = "NullNextNode";\n' +
    '    CacheErrorCode["NullPreviousNode"] = "NullPreviousNode";\n' +
    '})(CacheErrorCode || (CacheErrorCode = {}));\n' +
    'const cacheErrorMap = {\n' +
    '    [CacheErrorCode.NoCacheItem]: {\n' +
    "        message: 'Item not found in the cache storage.',\n" +
    '    },\n' +
    '    [CacheErrorCode.NullNextNode]: {\n' +
    "        message: 'Next node is null.',\n" +
    '    },\n' +
    '    [CacheErrorCode.NullPreviousNode]: {\n' +
    "        message: 'Previous node is null.',\n" +
    '    },\n' +
    '};\n' +
    'const assert = createAssertionFunction(cacheErrorMap);\n' +
    '\n' +
    'export { CacheErrorCode, assert };\n' +
    '//# sourceMappingURL=errorHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import validate from './validate.js';\n" +
    '\n' +
    'function version(uuid) {\n' +
    '  if (!validate(uuid)) {\n' +
    "    throw TypeError('Invalid UUID');\n" +
    '  }\n' +
    '\n' +
    '  return parseInt(uuid.slice(14, 15), 16);\n' +
    '}\n' +
    '\n' +
    'export default version;'
} [Function: logger]
____9999999____ {
  code: "import REGEX from './regex.js';\n" +
    '\n' +
    'function validate(uuid) {\n' +
    "  return typeof uuid === 'string' && REGEX.test(uuid);\n" +
    '}\n' +
    '\n' +
    'export default validate;'
} [Function: logger]
____9999999____ {
  code: "import validate from './validate.js';\n" +
    '/**\n' +
    ' * Convert array of 16 byte values to UUID string format of the form:\n' +
    ' * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n' +
    ' */\n' +
    '\n' +
    'const byteToHex = [];\n' +
    '\n' +
    'for (let i = 0; i < 256; ++i) {\n' +
    '  byteToHex.push((i + 0x100).toString(16).slice(1));\n' +
    '}\n' +
    '\n' +
    'export function unsafeStringify(arr, offset = 0) {\n' +
    "  // Note: Be careful editing this code!  It's been tuned for performance\n" +
    '  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n' +
    "  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n" +
    '}\n' +
    '\n' +
    'function stringify(arr, offset = 0) {\n' +
    "  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n" +
    '  // of the following:\n' +
    "  // - One or more input array values don't map to a hex octet (leading to\n" +
    '  // "undefined" in the uuid)\n' +
    '  // - Invalid input values for the RFC `version` or `variant` fields\n' +
    '\n' +
    '  if (!validate(uuid)) {\n' +
    "    throw TypeError('Stringified UUID is invalid');\n" +
    '  }\n' +
    '\n' +
    '  return uuid;\n' +
    '}\n' +
    '\n' +
    'export default stringify;'
} [Function: logger]
____9999999____ {
  code: "import validate from './validate.js';\n" +
    '\n' +
    'function parse(uuid) {\n' +
    '  if (!validate(uuid)) {\n' +
    "    throw TypeError('Invalid UUID');\n" +
    '  }\n' +
    '\n' +
    '  let v;\n' +
    '  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n' +
    '\n' +
    '  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n' +
    '  arr[1] = v >>> 16 & 0xff;\n' +
    '  arr[2] = v >>> 8 & 0xff;\n' +
    '  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n' +
    '\n' +
    '  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n' +
    '  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n' +
    '\n' +
    '  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n' +
    '  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n' +
    '\n' +
    '  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n' +
    '  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n' +
    '  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)\n' +
    '\n' +
    '  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n' +
    '  arr[11] = v / 0x100000000 & 0xff;\n' +
    '  arr[12] = v >>> 24 & 0xff;\n' +
    '  arr[13] = v >>> 16 & 0xff;\n' +
    '  arr[14] = v >>> 8 & 0xff;\n' +
    '  arr[15] = v & 0xff;\n' +
    '  return arr;\n' +
    '}\n' +
    '\n' +
    'export default parse;'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Default buffer constants\n' +
    'const BUFFER_SIZE = 1000;\n' +
    'const FLUSH_SIZE = 100;\n' +
    'const FLUSH_INTERVAL = 5 * 1000; // 5s\n' +
    'const RESEND_LIMIT = 5;\n' +
    '\n' +
    'export { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyErrorCode } from '../../../types/errors.mjs';\n" +
    "import { assert } from '../../../errors/errorHelpers.mjs';\n" +
    "import { updateEndpoint } from '../apis/updateEndpoint.mjs';\n" +
    "import { getEndpointId } from './getEndpointId.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Resolves an endpoint id from cache or prepare via updateEndpoint if one does not already exist,\n' +
    ' * which will generate and cache an endpoint id between calls.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const resolveEndpointId = async ({ address, appId, category, channelType, credentials, identityId, region, userAgentValue, }) => {\n' +
    '    let endpointId = await getEndpointId(appId, category);\n' +
    '    if (!endpointId) {\n' +
    '        await updateEndpoint({\n' +
    '            address,\n' +
    '            appId,\n' +
    '            category,\n' +
    '            channelType,\n' +
    '            credentials,\n' +
    '            identityId,\n' +
    '            region,\n' +
    '            userAgentValue,\n' +
    '        });\n' +
    '        endpointId = await getEndpointId(appId, category);\n' +
    '    }\n' +
    '    assert(!!endpointId, AmplifyErrorCode.NoEndpointId);\n' +
    '    return endpointId;\n' +
    '};\n' +
    '\n' +
    'export { resolveEndpointId };\n' +
    '//# sourceMappingURL=resolveEndpointId.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { PinpointEventBuffer } from './PinpointEventBuffer.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Map of buffers by region -> appId\n' +
    'const eventBufferMap = {};\n' +
    '/**\n' +
    ' * Returns a PinpointEventBuffer instance for the specified region & app ID, creating one if it does not yet exist.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getEventBuffer = ({ appId, region, credentials, bufferSize, flushInterval, flushSize, resendLimit, identityId, userAgentValue, }) => {\n' +
    '    if (eventBufferMap[region]?.[appId]) {\n' +
    '        const buffer = eventBufferMap[region][appId];\n' +
    '        /*\n' +
    '        If the identity has changed flush out the buffer and create a new instance. The old instance will be garbage\n' +
    '        collected.\n' +
    '        */\n' +
    '        if (buffer.identityHasChanged(identityId)) {\n' +
    '            buffer.flush();\n' +
    '        }\n' +
    '        else {\n' +
    '            return buffer;\n' +
    '        }\n' +
    '    }\n' +
    '    const buffer = new PinpointEventBuffer({\n' +
    '        appId,\n' +
    '        bufferSize,\n' +
    '        credentials,\n' +
    '        flushInterval,\n' +
    '        flushSize,\n' +
    '        identityId,\n' +
    '        region,\n' +
    '        resendLimit,\n' +
    '        userAgentValue,\n' +
    '    });\n' +
    '    if (!eventBufferMap[region]) {\n' +
    '        eventBufferMap[region] = {};\n' +
    '    }\n' +
    '    eventBufferMap[region][appId] = buffer;\n' +
    '    return buffer;\n' +
    '};\n' +
    '\n' +
    'export { getEventBuffer };\n' +
    '//# sourceMappingURL=getEventBuffer.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { authenticatedHandler } from '../../clients/handlers/authenticated.mjs';\n" +
    "import { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\n" +
    "import { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\n" +
    "import { parseMetadata } from '../../clients/serde/responseInfo.mjs';\n" +
    "import { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\n" +
    "import { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n" +
    "import { defaultConfig, getSharedHeaders } from './base.mjs';\n" +
    "import { assert, PinpointValidationErrorCode } from './errorHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const putEventsSerializer = ({ ApplicationId, EventsRequest }, endpoint) => {\n' +
    '    assert(!!ApplicationId, PinpointValidationErrorCode.NoAppId);\n' +
    '    const headers = getSharedHeaders();\n' +
    '    const url = new AmplifyUrl(endpoint.url);\n' +
    '    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/events`;\n' +
    '    const body = JSON.stringify(EventsRequest ?? {});\n' +
    "    return { method: 'POST', headers, url, body };\n" +
    '};\n' +
    'const putEventsDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = await parseJsonError(response);\n' +
    '        throw error;\n' +
    '    }\n' +
    '    else {\n' +
    '        const { Results } = await parseJsonBody(response);\n' +
    '        return {\n' +
    '            EventsResponse: { Results },\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const putEvents = composeServiceApi(authenticatedHandler, putEventsSerializer, putEventsDeserializer, defaultConfig);\n' +
    '\n' +
    'export { putEvents };\n' +
    '//# sourceMappingURL=putEvents.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const isAppInForeground = () => true;\n' +
    '\n' +
    'export { isAppInForeground };\n' +
    '//# sourceMappingURL=isAppInForeground.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { signUp } from './providers/cognito/apis/signUp.mjs';\n" +
    "export { resetPassword } from './providers/cognito/apis/resetPassword.mjs';\n" +
    "export { confirmResetPassword } from './providers/cognito/apis/confirmResetPassword.mjs';\n" +
    "export { signIn } from './providers/cognito/apis/signIn.mjs';\n" +
    "export { resendSignUpCode } from './providers/cognito/apis/resendSignUpCode.mjs';\n" +
    "export { confirmSignUp } from './providers/cognito/apis/confirmSignUp.mjs';\n" +
    "export { confirmSignIn } from './providers/cognito/apis/confirmSignIn.mjs';\n" +
    "export { updateMFAPreference } from './providers/cognito/apis/updateMFAPreference.mjs';\n" +
    "export { fetchMFAPreference } from './providers/cognito/apis/fetchMFAPreference.mjs';\n" +
    "export { verifyTOTPSetup } from './providers/cognito/apis/verifyTOTPSetup.mjs';\n" +
    "export { updatePassword } from './providers/cognito/apis/updatePassword.mjs';\n" +
    "export { setUpTOTP } from './providers/cognito/apis/setUpTOTP.mjs';\n" +
    "export { updateUserAttributes } from './providers/cognito/apis/updateUserAttributes.mjs';\n" +
    "export { updateUserAttribute } from './providers/cognito/apis/updateUserAttribute.mjs';\n" +
    "export { getCurrentUser } from './providers/cognito/apis/getCurrentUser.mjs';\n" +
    "export { confirmUserAttribute } from './providers/cognito/apis/confirmUserAttribute.mjs';\n" +
    "export { signInWithRedirect } from './providers/cognito/apis/signInWithRedirect.mjs';\n" +
    "export { fetchUserAttributes } from './providers/cognito/apis/fetchUserAttributes.mjs';\n" +
    "export { signOut } from './providers/cognito/apis/signOut.mjs';\n" +
    "export { sendUserAttributeVerificationCode } from './providers/cognito/apis/sendUserAttributeVerificationCode.mjs';\n" +
    "export { deleteUserAttributes } from './providers/cognito/apis/deleteUserAttributes.mjs';\n" +
    "export { deleteUser } from './providers/cognito/apis/deleteUser.mjs';\n" +
    "export { rememberDevice } from './providers/cognito/apis/rememberDevice.mjs';\n" +
    "export { forgetDevice } from './providers/cognito/apis/forgetDevice.mjs';\n" +
    "export { fetchDevices } from './providers/cognito/apis/fetchDevices.mjs';\n" +
    "export { autoSignIn } from './providers/cognito/apis/autoSignIn.mjs';\n" +
    "import './providers/cognito/credentialsProvider/IdentityIdStore.mjs';\n" +
    "import './providers/cognito/credentialsProvider/credentialsProvider.mjs';\n" +
    "export { decodeJWT, fetchAuthSession } from '@aws-amplify/core';\n" +
    "import './providers/cognito/utils/refreshAuthTokens.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "export { AuthError } from './errors/AuthError.mjs';\n" +
    "import './providers/cognito/tokenProvider/errorHelpers.mjs';\n" +
    "import './providers/cognito/tokenProvider/tokenProvider.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns signed headers.\n' +
    ' *\n' +
    ' * @param headers `headers` from the request.\n' +
    ' * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n' +
    ' * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSignedHeaders = (headers) => Object.keys(headers)\n' +
    '    .map(key => key.toLowerCase())\n' +
    '    .sort()\n' +
    "    .join(';');\n" +
    '\n' +
    'export { getSignedHeaders };\n' +
    '//# sourceMappingURL=getSignedHeaders.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getCredentialScope } from './getCredentialScope.mjs';\n" +
    "import { getFormattedDates } from './getFormattedDates.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Extracts common values used for signing both requests and urls.\n' +
    ' *\n' +
    ' * @param options `SignRequestOptions` object containing values used to construct the signature.\n' +
    ' * @returns Common `SigningValues` used for signing.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n' +
    '    // get properties from credentials\n' +
    '    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n' +
    '    // get formatted dates for signing\n' +
    '    const { longDate, shortDate } = getFormattedDates(signingDate);\n' +
    '    // copy header and set signing properties\n' +
    '    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n' +
    '    return {\n' +
    '        accessKeyId,\n' +
    '        credentialScope,\n' +
    '        longDate,\n' +
    '        secretAccessKey,\n' +
    '        sessionToken,\n' +
    '        shortDate,\n' +
    '        signingRegion,\n' +
    '        signingService,\n' +
    '        uriEscapePath,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getSigningValues };\n' +
    '//# sourceMappingURL=getSigningValues.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getHashedDataAsHex } from './dataHashHelpers.mjs';\n" +
    "import { getCanonicalRequest } from './getCanonicalRequest.mjs';\n" +
    "import { getSigningKey } from './getSigningKey.mjs';\n" +
    "import { getStringToSign } from './getStringToSign.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Calculates and returns an AWS API Signature.\n' +
    ' * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n' +
    ' *\n' +
    ' * @param request `HttpRequest` to be signed.\n' +
    ' * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n' +
    ' * @returns AWS API Signature to sign a request or url with.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n' +
    '    // step 1: create a canonical request\n' +
    '    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n' +
    '    // step 2: create a hash of the canonical request\n' +
    '    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n' +
    '    // step 3: create a string to sign\n' +
    '    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n' +
    '    // step 4: calculate the signature\n' +
    '    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n' +
    '    return signature;\n' +
    '};\n' +
    '\n' +
    'export { getSignature };\n' +
    '//# sourceMappingURL=getSignature.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Framework } from '../types.mjs';\n" +
    "import { reactWebDetect, reactSSRDetect } from './React.mjs';\n" +
    "import { vueWebDetect, vueSSRDetect } from './Vue.mjs';\n" +
    "import { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\n" +
    "import { nextWebDetect, nextSSRDetect } from './Next.mjs';\n" +
    "import { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\n" +
    "import { angularWebDetect, angularSSRDetect } from './Angular.mjs';\n" +
    "import { reactNativeDetect } from './ReactNative.mjs';\n" +
    "import { expoDetect } from './Expo.mjs';\n" +
    "import { webDetect } from './Web.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// These are in the order of detection where when both are detectable, the early Framework will be reported\n' +
    'const detectionMap = [\n' +
    '    // First, detect mobile\n' +
    '    { platform: Framework.Expo, detectionMethod: expoDetect },\n' +
    '    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n' +
    '    // Next, detect web frameworks\n' +
    '    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n' +
    '    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n' +
    '    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n' +
    '    { platform: Framework.React, detectionMethod: reactWebDetect },\n' +
    '    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n' +
    '    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n' +
    '    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n' +
    '    // Last, detect ssr frameworks\n' +
    '    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n' +
    '    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n' +
    '    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n' +
    '    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n' +
    '    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n' +
    '    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n' +
    '];\n' +
    'function detect() {\n' +
    '    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n' +
    '        ?.platform || Framework.ServerSideUnknown);\n' +
    '}\n' +
    '\n' +
    'export { detect };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n" +
    '//# sourceMappingURL=observable.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Observable } from '../Observable';\n" +
    "import { Subscription } from '../Subscription';\n" +
    "import { refCount as higherOrderRefCount } from '../operators/refCount';\n" +
    "import { createOperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    "import { hasLift } from '../util/lift';\n" +
    'var ConnectableObservable = (function (_super) {\n' +
    '    __extends(ConnectableObservable, _super);\n' +
    '    function ConnectableObservable(source, subjectFactory) {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this.source = source;\n' +
    '        _this.subjectFactory = subjectFactory;\n' +
    '        _this._subject = null;\n' +
    '        _this._refCount = 0;\n' +
    '        _this._connection = null;\n' +
    '        if (hasLift(source)) {\n' +
    '            _this.lift = source.lift;\n' +
    '        }\n' +
    '        return _this;\n' +
    '    }\n' +
    '    ConnectableObservable.prototype._subscribe = function (subscriber) {\n' +
    '        return this.getSubject().subscribe(subscriber);\n' +
    '    };\n' +
    '    ConnectableObservable.prototype.getSubject = function () {\n' +
    '        var subject = this._subject;\n' +
    '        if (!subject || subject.isStopped) {\n' +
    '            this._subject = this.subjectFactory();\n' +
    '        }\n' +
    '        return this._subject;\n' +
    '    };\n' +
    '    ConnectableObservable.prototype._teardown = function () {\n' +
    '        this._refCount = 0;\n' +
    '        var _connection = this._connection;\n' +
    '        this._subject = this._connection = null;\n' +
    '        _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();\n' +
    '    };\n' +
    '    ConnectableObservable.prototype.connect = function () {\n' +
    '        var _this = this;\n' +
    '        var connection = this._connection;\n' +
    '        if (!connection) {\n' +
    '            connection = this._connection = new Subscription();\n' +
    '            var subject_1 = this.getSubject();\n' +
    '            connection.add(this.source.subscribe(createOperatorSubscriber(subject_1, undefined, function () {\n' +
    '                _this._teardown();\n' +
    '                subject_1.complete();\n' +
    '            }, function (err) {\n' +
    '                _this._teardown();\n' +
    '                subject_1.error(err);\n' +
    '            }, function () { return _this._teardown(); })));\n' +
    '            if (connection.closed) {\n' +
    '                this._connection = null;\n' +
    '                connection = Subscription.EMPTY;\n' +
    '            }\n' +
    '        }\n' +
    '        return connection;\n' +
    '    };\n' +
    '    ConnectableObservable.prototype.refCount = function () {\n' +
    '        return higherOrderRefCount()(this);\n' +
    '    };\n' +
    '    return ConnectableObservable;\n' +
    '}(Observable));\n' +
    'export { ConnectableObservable };\n' +
    '//# sourceMappingURL=ConnectableObservable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { SafeSubscriber, Subscriber } from './Subscriber';\n" +
    "import { isSubscription } from './Subscription';\n" +
    "import { observable as Symbol_observable } from './symbol/observable';\n" +
    "import { pipeFromArray } from './util/pipe';\n" +
    "import { config } from './config';\n" +
    "import { isFunction } from './util/isFunction';\n" +
    "import { errorContext } from './util/errorContext';\n" +
    'var Observable = (function () {\n' +
    '    function Observable(subscribe) {\n' +
    '        if (subscribe) {\n' +
    '            this._subscribe = subscribe;\n' +
    '        }\n' +
    '    }\n' +
    '    Observable.prototype.lift = function (operator) {\n' +
    '        var observable = new Observable();\n' +
    '        observable.source = this;\n' +
    '        observable.operator = operator;\n' +
    '        return observable;\n' +
    '    };\n' +
    '    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n' +
    '        var _this = this;\n' +
    '        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n' +
    '        errorContext(function () {\n' +
    '            var _a = _this, operator = _a.operator, source = _a.source;\n' +
    '            subscriber.add(operator\n' +
    '                ?\n' +
    '                    operator.call(subscriber, source)\n' +
    '                : source\n' +
    '                    ?\n' +
    '                        _this._subscribe(subscriber)\n' +
    '                    :\n' +
    '                        _this._trySubscribe(subscriber));\n' +
    '        });\n' +
    '        return subscriber;\n' +
    '    };\n' +
    '    Observable.prototype._trySubscribe = function (sink) {\n' +
    '        try {\n' +
    '            return this._subscribe(sink);\n' +
    '        }\n' +
    '        catch (err) {\n' +
    '            sink.error(err);\n' +
    '        }\n' +
    '    };\n' +
    '    Observable.prototype.forEach = function (next, promiseCtor) {\n' +
    '        var _this = this;\n' +
    '        promiseCtor = getPromiseCtor(promiseCtor);\n' +
    '        return new promiseCtor(function (resolve, reject) {\n' +
    '            var subscriber = new SafeSubscriber({\n' +
    '                next: function (value) {\n' +
    '                    try {\n' +
    '                        next(value);\n' +
    '                    }\n' +
    '                    catch (err) {\n' +
    '                        reject(err);\n' +
    '                        subscriber.unsubscribe();\n' +
    '                    }\n' +
    '                },\n' +
    '                error: reject,\n' +
    '                complete: resolve,\n' +
    '            });\n' +
    '            _this.subscribe(subscriber);\n' +
    '        });\n' +
    '    };\n' +
    '    Observable.prototype._subscribe = function (subscriber) {\n' +
    '        var _a;\n' +
    '        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n' +
    '    };\n' +
    '    Observable.prototype[Symbol_observable] = function () {\n' +
    '        return this;\n' +
    '    };\n' +
    '    Observable.prototype.pipe = function () {\n' +
    '        var operations = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            operations[_i] = arguments[_i];\n' +
    '        }\n' +
    '        return pipeFromArray(operations)(this);\n' +
    '    };\n' +
    '    Observable.prototype.toPromise = function (promiseCtor) {\n' +
    '        var _this = this;\n' +
    '        promiseCtor = getPromiseCtor(promiseCtor);\n' +
    '        return new promiseCtor(function (resolve, reject) {\n' +
    '            var value;\n' +
    '            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n' +
    '        });\n' +
    '    };\n' +
    '    Observable.create = function (subscribe) {\n' +
    '        return new Observable(subscribe);\n' +
    '    };\n' +
    '    return Observable;\n' +
    '}());\n' +
    'export { Observable };\n' +
    'function getPromiseCtor(promiseCtor) {\n' +
    '    var _a;\n' +
    '    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n' +
    '}\n' +
    'function isObserver(value) {\n' +
    '    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n' +
    '}\n' +
    'function isSubscriber(value) {\n' +
    '    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n' +
    '}\n' +
    '//# sourceMappingURL=Observable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../../Observable';\n" +
    "import { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\n" +
    "import { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n" +
    'export function animationFrames(timestampProvider) {\n' +
    '    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n' +
    '}\n' +
    'function animationFramesFactory(timestampProvider) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var provider = timestampProvider || performanceTimestampProvider;\n' +
    '        var start = provider.now();\n' +
    '        var id = 0;\n' +
    '        var run = function () {\n' +
    '            if (!subscriber.closed) {\n' +
    '                id = animationFrameProvider.requestAnimationFrame(function (timestamp) {\n' +
    '                    id = 0;\n' +
    '                    var now = provider.now();\n' +
    '                    subscriber.next({\n' +
    '                        timestamp: timestampProvider ? now : timestamp,\n' +
    '                        elapsed: now - start,\n' +
    '                    });\n' +
    '                    run();\n' +
    '                });\n' +
    '            }\n' +
    '        };\n' +
    '        run();\n' +
    '        return function () {\n' +
    '            if (id) {\n' +
    '                animationFrameProvider.cancelAnimationFrame(id);\n' +
    '            }\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    'var DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n' +
    '//# sourceMappingURL=animationFrames.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Subject } from './Subject';\n" +
    'var BehaviorSubject = (function (_super) {\n' +
    '    __extends(BehaviorSubject, _super);\n' +
    '    function BehaviorSubject(_value) {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this._value = _value;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    Object.defineProperty(BehaviorSubject.prototype, "value", {\n' +
    '        get: function () {\n' +
    '            return this.getValue();\n' +
    '        },\n' +
    '        enumerable: false,\n' +
    '        configurable: true\n' +
    '    });\n' +
    '    BehaviorSubject.prototype._subscribe = function (subscriber) {\n' +
    '        var subscription = _super.prototype._subscribe.call(this, subscriber);\n' +
    '        !subscription.closed && subscriber.next(this._value);\n' +
    '        return subscription;\n' +
    '    };\n' +
    '    BehaviorSubject.prototype.getValue = function () {\n' +
    '        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;\n' +
    '        if (hasError) {\n' +
    '            throw thrownError;\n' +
    '        }\n' +
    '        this._throwIfClosed();\n' +
    '        return _value;\n' +
    '    };\n' +
    '    BehaviorSubject.prototype.next = function (value) {\n' +
    '        _super.prototype.next.call(this, (this._value = value));\n' +
    '    };\n' +
    '    return BehaviorSubject;\n' +
    '}(Subject));\n' +
    'export { BehaviorSubject };\n' +
    '//# sourceMappingURL=BehaviorSubject.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends, __values } from "tslib";\n' +
    "import { Observable } from './Observable';\n" +
    "import { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\n" +
    "import { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n" +
    "import { arrRemove } from './util/arrRemove';\n" +
    "import { errorContext } from './util/errorContext';\n" +
    'var Subject = (function (_super) {\n' +
    '    __extends(Subject, _super);\n' +
    '    function Subject() {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this.closed = false;\n' +
    '        _this.currentObservers = null;\n' +
    '        _this.observers = [];\n' +
    '        _this.isStopped = false;\n' +
    '        _this.hasError = false;\n' +
    '        _this.thrownError = null;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    Subject.prototype.lift = function (operator) {\n' +
    '        var subject = new AnonymousSubject(this, this);\n' +
    '        subject.operator = operator;\n' +
    '        return subject;\n' +
    '    };\n' +
    '    Subject.prototype._throwIfClosed = function () {\n' +
    '        if (this.closed) {\n' +
    '            throw new ObjectUnsubscribedError();\n' +
    '        }\n' +
    '    };\n' +
    '    Subject.prototype.next = function (value) {\n' +
    '        var _this = this;\n' +
    '        errorContext(function () {\n' +
    '            var e_1, _a;\n' +
    '            _this._throwIfClosed();\n' +
    '            if (!_this.isStopped) {\n' +
    '                if (!_this.currentObservers) {\n' +
    '                    _this.currentObservers = Array.from(_this.observers);\n' +
    '                }\n' +
    '                try {\n' +
    '                    for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {\n' +
    '                        var observer = _c.value;\n' +
    '                        observer.next(value);\n' +
    '                    }\n' +
    '                }\n' +
    '                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '                finally {\n' +
    '                    try {\n' +
    '                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n' +
    '                    }\n' +
    '                    finally { if (e_1) throw e_1.error; }\n' +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    };\n' +
    '    Subject.prototype.error = function (err) {\n' +
    '        var _this = this;\n' +
    '        errorContext(function () {\n' +
    '            _this._throwIfClosed();\n' +
    '            if (!_this.isStopped) {\n' +
    '                _this.hasError = _this.isStopped = true;\n' +
    '                _this.thrownError = err;\n' +
    '                var observers = _this.observers;\n' +
    '                while (observers.length) {\n' +
    '                    observers.shift().error(err);\n' +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    };\n' +
    '    Subject.prototype.complete = function () {\n' +
    '        var _this = this;\n' +
    '        errorContext(function () {\n' +
    '            _this._throwIfClosed();\n' +
    '            if (!_this.isStopped) {\n' +
    '                _this.isStopped = true;\n' +
    '                var observers = _this.observers;\n' +
    '                while (observers.length) {\n' +
    '                    observers.shift().complete();\n' +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    };\n' +
    '    Subject.prototype.unsubscribe = function () {\n' +
    '        this.isStopped = this.closed = true;\n' +
    '        this.observers = this.currentObservers = null;\n' +
    '    };\n' +
    '    Object.defineProperty(Subject.prototype, "observed", {\n' +
    '        get: function () {\n' +
    '            var _a;\n' +
    '            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n' +
    '        },\n' +
    '        enumerable: false,\n' +
    '        configurable: true\n' +
    '    });\n' +
    '    Subject.prototype._trySubscribe = function (subscriber) {\n' +
    '        this._throwIfClosed();\n' +
    '        return _super.prototype._trySubscribe.call(this, subscriber);\n' +
    '    };\n' +
    '    Subject.prototype._subscribe = function (subscriber) {\n' +
    '        this._throwIfClosed();\n' +
    '        this._checkFinalizedStatuses(subscriber);\n' +
    '        return this._innerSubscribe(subscriber);\n' +
    '    };\n' +
    '    Subject.prototype._innerSubscribe = function (subscriber) {\n' +
    '        var _this = this;\n' +
    '        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n' +
    '        if (hasError || isStopped) {\n' +
    '            return EMPTY_SUBSCRIPTION;\n' +
    '        }\n' +
    '        this.currentObservers = null;\n' +
    '        observers.push(subscriber);\n' +
    '        return new Subscription(function () {\n' +
    '            _this.currentObservers = null;\n' +
    '            arrRemove(observers, subscriber);\n' +
    '        });\n' +
    '    };\n' +
    '    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n' +
    '        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n' +
    '        if (hasError) {\n' +
    '            subscriber.error(thrownError);\n' +
    '        }\n' +
    '        else if (isStopped) {\n' +
    '            subscriber.complete();\n' +
    '        }\n' +
    '    };\n' +
    '    Subject.prototype.asObservable = function () {\n' +
    '        var observable = new Observable();\n' +
    '        observable.source = this;\n' +
    '        return observable;\n' +
    '    };\n' +
    '    Subject.create = function (destination, source) {\n' +
    '        return new AnonymousSubject(destination, source);\n' +
    '    };\n' +
    '    return Subject;\n' +
    '}(Observable));\n' +
    'export { Subject };\n' +
    'var AnonymousSubject = (function (_super) {\n' +
    '    __extends(AnonymousSubject, _super);\n' +
    '    function AnonymousSubject(destination, source) {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this.destination = destination;\n' +
    '        _this.source = source;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AnonymousSubject.prototype.next = function (value) {\n' +
    '        var _a, _b;\n' +
    '        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n' +
    '    };\n' +
    '    AnonymousSubject.prototype.error = function (err) {\n' +
    '        var _a, _b;\n' +
    '        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n' +
    '    };\n' +
    '    AnonymousSubject.prototype.complete = function () {\n' +
    '        var _a, _b;\n' +
    '        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n' +
    '    };\n' +
    '    AnonymousSubject.prototype._subscribe = function (subscriber) {\n' +
    '        var _a, _b;\n' +
    '        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n' +
    '    };\n' +
    '    return AnonymousSubject;\n' +
    '}(Subject));\n' +
    'export { AnonymousSubject };\n' +
    '//# sourceMappingURL=Subject.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Subject } from './Subject';\n" +
    "import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n" +
    'var ReplaySubject = (function (_super) {\n' +
    '    __extends(ReplaySubject, _super);\n' +
    '    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n' +
    '        if (_bufferSize === void 0) { _bufferSize = Infinity; }\n' +
    '        if (_windowTime === void 0) { _windowTime = Infinity; }\n' +
    '        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider; }\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this._bufferSize = _bufferSize;\n' +
    '        _this._windowTime = _windowTime;\n' +
    '        _this._timestampProvider = _timestampProvider;\n' +
    '        _this._buffer = [];\n' +
    '        _this._infiniteTimeWindow = true;\n' +
    '        _this._infiniteTimeWindow = _windowTime === Infinity;\n' +
    '        _this._bufferSize = Math.max(1, _bufferSize);\n' +
    '        _this._windowTime = Math.max(1, _windowTime);\n' +
    '        return _this;\n' +
    '    }\n' +
    '    ReplaySubject.prototype.next = function (value) {\n' +
    '        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n' +
    '        if (!isStopped) {\n' +
    '            _buffer.push(value);\n' +
    '            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n' +
    '        }\n' +
    '        this._trimBuffer();\n' +
    '        _super.prototype.next.call(this, value);\n' +
    '    };\n' +
    '    ReplaySubject.prototype._subscribe = function (subscriber) {\n' +
    '        this._throwIfClosed();\n' +
    '        this._trimBuffer();\n' +
    '        var subscription = this._innerSubscribe(subscriber);\n' +
    '        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n' +
    '        var copy = _buffer.slice();\n' +
    '        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n' +
    '            subscriber.next(copy[i]);\n' +
    '        }\n' +
    '        this._checkFinalizedStatuses(subscriber);\n' +
    '        return subscription;\n' +
    '    };\n' +
    '    ReplaySubject.prototype._trimBuffer = function () {\n' +
    '        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n' +
    '        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n' +
    '        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n' +
    '        if (!_infiniteTimeWindow) {\n' +
    '            var now = _timestampProvider.now();\n' +
    '            var last = 0;\n' +
    '            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n' +
    '                last = i;\n' +
    '            }\n' +
    '            last && _buffer.splice(0, last + 1);\n' +
    '        }\n' +
    '    };\n' +
    '    return ReplaySubject;\n' +
    '}(Subject));\n' +
    'export { ReplaySubject };\n' +
    '//# sourceMappingURL=ReplaySubject.js.map'
} [Function: logger]
____9999999____ {
  code: "import { AsapAction } from './AsapAction';\n" +
    "import { AsapScheduler } from './AsapScheduler';\n" +
    'export var asapScheduler = new AsapScheduler(AsapAction);\n' +
    'export var asap = asapScheduler;\n' +
    '//# sourceMappingURL=asap.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Subject } from './Subject';\n" +
    'var AsyncSubject = (function (_super) {\n' +
    '    __extends(AsyncSubject, _super);\n' +
    '    function AsyncSubject() {\n' +
    '        var _this = _super !== null && _super.apply(this, arguments) || this;\n' +
    '        _this._value = null;\n' +
    '        _this._hasValue = false;\n' +
    '        _this._isComplete = false;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AsyncSubject.prototype._checkFinalizedStatuses = function (subscriber) {\n' +
    '        var _a = this, hasError = _a.hasError, _hasValue = _a._hasValue, _value = _a._value, thrownError = _a.thrownError, isStopped = _a.isStopped, _isComplete = _a._isComplete;\n' +
    '        if (hasError) {\n' +
    '            subscriber.error(thrownError);\n' +
    '        }\n' +
    '        else if (isStopped || _isComplete) {\n' +
    '            _hasValue && subscriber.next(_value);\n' +
    '            subscriber.complete();\n' +
    '        }\n' +
    '    };\n' +
    '    AsyncSubject.prototype.next = function (value) {\n' +
    '        if (!this.isStopped) {\n' +
    '            this._value = value;\n' +
    '            this._hasValue = true;\n' +
    '        }\n' +
    '    };\n' +
    '    AsyncSubject.prototype.complete = function () {\n' +
    '        var _a = this, _hasValue = _a._hasValue, _value = _a._value, _isComplete = _a._isComplete;\n' +
    '        if (!_isComplete) {\n' +
    '            this._isComplete = true;\n' +
    '            _hasValue && _super.prototype.next.call(this, _value);\n' +
    '            _super.prototype.complete.call(this);\n' +
    '        }\n' +
    '    };\n' +
    '    return AsyncSubject;\n' +
    '}(Subject));\n' +
    'export { AsyncSubject };\n' +
    '//# sourceMappingURL=AsyncSubject.js.map'
} [Function: logger]
____9999999____ {
  code: "import { AsyncAction } from './AsyncAction';\n" +
    "import { AsyncScheduler } from './AsyncScheduler';\n" +
    'export var asyncScheduler = new AsyncScheduler(AsyncAction);\n' +
    'export var async = asyncScheduler;\n' +
    '//# sourceMappingURL=async.js.map'
} [Function: logger]
____9999999____ {
  code: "import { QueueAction } from './QueueAction';\n" +
    "import { QueueScheduler } from './QueueScheduler';\n" +
    'export var queueScheduler = new QueueScheduler(QueueAction);\n' +
    'export var queue = queueScheduler;\n' +
    '//# sourceMappingURL=queue.js.map'
} [Function: logger]
____9999999____ {
  code: "import { AnimationFrameAction } from './AnimationFrameAction';\n" +
    "import { AnimationFrameScheduler } from './AnimationFrameScheduler';\n" +
    'export var animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n' +
    'export var animationFrame = animationFrameScheduler;\n' +
    '//# sourceMappingURL=animationFrame.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncAction } from './AsyncAction';\n" +
    "import { Subscription } from '../Subscription';\n" +
    "import { AsyncScheduler } from './AsyncScheduler';\n" +
    'var VirtualTimeScheduler = (function (_super) {\n' +
    '    __extends(VirtualTimeScheduler, _super);\n' +
    '    function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {\n' +
    '        if (schedulerActionCtor === void 0) { schedulerActionCtor = VirtualAction; }\n' +
    '        if (maxFrames === void 0) { maxFrames = Infinity; }\n' +
    '        var _this = _super.call(this, schedulerActionCtor, function () { return _this.frame; }) || this;\n' +
    '        _this.maxFrames = maxFrames;\n' +
    '        _this.frame = 0;\n' +
    '        _this.index = -1;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    VirtualTimeScheduler.prototype.flush = function () {\n' +
    '        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n' +
    '        var error;\n' +
    '        var action;\n' +
    '        while ((action = actions[0]) && action.delay <= maxFrames) {\n' +
    '            actions.shift();\n' +
    '            this.frame = action.delay;\n' +
    '            if ((error = action.execute(action.state, action.delay))) {\n' +
    '                break;\n' +
    '            }\n' +
    '        }\n' +
    '        if (error) {\n' +
    '            while ((action = actions.shift())) {\n' +
    '                action.unsubscribe();\n' +
    '            }\n' +
    '            throw error;\n' +
    '        }\n' +
    '    };\n' +
    '    VirtualTimeScheduler.frameTimeFactor = 10;\n' +
    '    return VirtualTimeScheduler;\n' +
    '}(AsyncScheduler));\n' +
    'export { VirtualTimeScheduler };\n' +
    'var VirtualAction = (function (_super) {\n' +
    '    __extends(VirtualAction, _super);\n' +
    '    function VirtualAction(scheduler, work, index) {\n' +
    '        if (index === void 0) { index = (scheduler.index += 1); }\n' +
    '        var _this = _super.call(this, scheduler, work) || this;\n' +
    '        _this.scheduler = scheduler;\n' +
    '        _this.work = work;\n' +
    '        _this.index = index;\n' +
    '        _this.active = true;\n' +
    '        _this.index = scheduler.index = index;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    VirtualAction.prototype.schedule = function (state, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (Number.isFinite(delay)) {\n' +
    '            if (!this.id) {\n' +
    '                return _super.prototype.schedule.call(this, state, delay);\n' +
    '            }\n' +
    '            this.active = false;\n' +
    '            var action = new VirtualAction(this.scheduler, this.work);\n' +
    '            this.add(action);\n' +
    '            return action.schedule(state, delay);\n' +
    '        }\n' +
    '        else {\n' +
    '            return Subscription.EMPTY;\n' +
    '        }\n' +
    '    };\n' +
    '    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        this.delay = scheduler.frame + delay;\n' +
    '        var actions = scheduler.actions;\n' +
    '        actions.push(this);\n' +
    '        actions.sort(VirtualAction.sortActions);\n' +
    '        return 1;\n' +
    '    };\n' +
    '    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        return undefined;\n' +
    '    };\n' +
    '    VirtualAction.prototype._execute = function (state, delay) {\n' +
    '        if (this.active === true) {\n' +
    '            return _super.prototype._execute.call(this, state, delay);\n' +
    '        }\n' +
    '    };\n' +
    '    VirtualAction.sortActions = function (a, b) {\n' +
    '        if (a.delay === b.delay) {\n' +
    '            if (a.index === b.index) {\n' +
    '                return 0;\n' +
    '            }\n' +
    '            else if (a.index > b.index) {\n' +
    '                return 1;\n' +
    '            }\n' +
    '            else {\n' +
    '                return -1;\n' +
    '            }\n' +
    '        }\n' +
    '        else if (a.delay > b.delay) {\n' +
    '            return 1;\n' +
    '        }\n' +
    '        else {\n' +
    '            return -1;\n' +
    '        }\n' +
    '    };\n' +
    '    return VirtualAction;\n' +
    '}(AsyncAction));\n' +
    'export { VirtualAction };\n' +
    '//# sourceMappingURL=VirtualTimeScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: "import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n" +
    'var Scheduler = (function () {\n' +
    '    function Scheduler(schedulerActionCtor, now) {\n' +
    '        if (now === void 0) { now = Scheduler.now; }\n' +
    '        this.schedulerActionCtor = schedulerActionCtor;\n' +
    '        this.now = now;\n' +
    '    }\n' +
    '    Scheduler.prototype.schedule = function (work, delay, state) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n' +
    '    };\n' +
    '    Scheduler.now = dateTimestampProvider.now;\n' +
    '    return Scheduler;\n' +
    '}());\n' +
    'export { Scheduler };\n' +
    '//# sourceMappingURL=Scheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray, __values } from "tslib";\n' +
    "import { isFunction } from './util/isFunction';\n" +
    "import { UnsubscriptionError } from './util/UnsubscriptionError';\n" +
    "import { arrRemove } from './util/arrRemove';\n" +
    'var Subscription = (function () {\n' +
    '    function Subscription(initialTeardown) {\n' +
    '        this.initialTeardown = initialTeardown;\n' +
    '        this.closed = false;\n' +
    '        this._parentage = null;\n' +
    '        this._finalizers = null;\n' +
    '    }\n' +
    '    Subscription.prototype.unsubscribe = function () {\n' +
    '        var e_1, _a, e_2, _b;\n' +
    '        var errors;\n' +
    '        if (!this.closed) {\n' +
    '            this.closed = true;\n' +
    '            var _parentage = this._parentage;\n' +
    '            if (_parentage) {\n' +
    '                this._parentage = null;\n' +
    '                if (Array.isArray(_parentage)) {\n' +
    '                    try {\n' +
    '                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n' +
    '                            var parent_1 = _parentage_1_1.value;\n' +
    '                            parent_1.remove(this);\n' +
    '                        }\n' +
    '                    }\n' +
    '                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '                    finally {\n' +
    '                        try {\n' +
    '                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n' +
    '                        }\n' +
    '                        finally { if (e_1) throw e_1.error; }\n' +
    '                    }\n' +
    '                }\n' +
    '                else {\n' +
    '                    _parentage.remove(this);\n' +
    '                }\n' +
    '            }\n' +
    '            var initialFinalizer = this.initialTeardown;\n' +
    '            if (isFunction(initialFinalizer)) {\n' +
    '                try {\n' +
    '                    initialFinalizer();\n' +
    '                }\n' +
    '                catch (e) {\n' +
    '                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n' +
    '                }\n' +
    '            }\n' +
    '            var _finalizers = this._finalizers;\n' +
    '            if (_finalizers) {\n' +
    '                this._finalizers = null;\n' +
    '                try {\n' +
    '                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n' +
    '                        var finalizer = _finalizers_1_1.value;\n' +
    '                        try {\n' +
    '                            execFinalizer(finalizer);\n' +
    '                        }\n' +
    '                        catch (err) {\n' +
    '                            errors = errors !== null && errors !== void 0 ? errors : [];\n' +
    '                            if (err instanceof UnsubscriptionError) {\n' +
    '                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n' +
    '                            }\n' +
    '                            else {\n' +
    '                                errors.push(err);\n' +
    '                            }\n' +
    '                        }\n' +
    '                    }\n' +
    '                }\n' +
    '                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n' +
    '                finally {\n' +
    '                    try {\n' +
    '                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n' +
    '                    }\n' +
    '                    finally { if (e_2) throw e_2.error; }\n' +
    '                }\n' +
    '            }\n' +
    '            if (errors) {\n' +
    '                throw new UnsubscriptionError(errors);\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    Subscription.prototype.add = function (teardown) {\n' +
    '        var _a;\n' +
    '        if (teardown && teardown !== this) {\n' +
    '            if (this.closed) {\n' +
    '                execFinalizer(teardown);\n' +
    '            }\n' +
    '            else {\n' +
    '                if (teardown instanceof Subscription) {\n' +
    '                    if (teardown.closed || teardown._hasParent(this)) {\n' +
    '                        return;\n' +
    '                    }\n' +
    '                    teardown._addParent(this);\n' +
    '                }\n' +
    '                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    Subscription.prototype._hasParent = function (parent) {\n' +
    '        var _parentage = this._parentage;\n' +
    '        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n' +
    '    };\n' +
    '    Subscription.prototype._addParent = function (parent) {\n' +
    '        var _parentage = this._parentage;\n' +
    '        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n' +
    '    };\n' +
    '    Subscription.prototype._removeParent = function (parent) {\n' +
    '        var _parentage = this._parentage;\n' +
    '        if (_parentage === parent) {\n' +
    '            this._parentage = null;\n' +
    '        }\n' +
    '        else if (Array.isArray(_parentage)) {\n' +
    '            arrRemove(_parentage, parent);\n' +
    '        }\n' +
    '    };\n' +
    '    Subscription.prototype.remove = function (teardown) {\n' +
    '        var _finalizers = this._finalizers;\n' +
    '        _finalizers && arrRemove(_finalizers, teardown);\n' +
    '        if (teardown instanceof Subscription) {\n' +
    '            teardown._removeParent(this);\n' +
    '        }\n' +
    '    };\n' +
    '    Subscription.EMPTY = (function () {\n' +
    '        var empty = new Subscription();\n' +
    '        empty.closed = true;\n' +
    '        return empty;\n' +
    '    })();\n' +
    '    return Subscription;\n' +
    '}());\n' +
    'export { Subscription };\n' +
    'export var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n' +
    'export function isSubscription(value) {\n' +
    '    return (value instanceof Subscription ||\n' +
    "        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n" +
    '}\n' +
    'function execFinalizer(finalizer) {\n' +
    '    if (isFunction(finalizer)) {\n' +
    '        finalizer();\n' +
    '    }\n' +
    '    else {\n' +
    '        finalizer.unsubscribe();\n' +
    '    }\n' +
    '}\n' +
    '//# sourceMappingURL=Subscription.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { isFunction } from './util/isFunction';\n" +
    "import { isSubscription, Subscription } from './Subscription';\n" +
    "import { config } from './config';\n" +
    "import { reportUnhandledError } from './util/reportUnhandledError';\n" +
    "import { noop } from './util/noop';\n" +
    "import { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\n" +
    "import { timeoutProvider } from './scheduler/timeoutProvider';\n" +
    "import { captureError } from './util/errorContext';\n" +
    'var Subscriber = (function (_super) {\n' +
    '    __extends(Subscriber, _super);\n' +
    '    function Subscriber(destination) {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        _this.isStopped = false;\n' +
    '        if (destination) {\n' +
    '            _this.destination = destination;\n' +
    '            if (isSubscription(destination)) {\n' +
    '                destination.add(_this);\n' +
    '            }\n' +
    '        }\n' +
    '        else {\n' +
    '            _this.destination = EMPTY_OBSERVER;\n' +
    '        }\n' +
    '        return _this;\n' +
    '    }\n' +
    '    Subscriber.create = function (next, error, complete) {\n' +
    '        return new SafeSubscriber(next, error, complete);\n' +
    '    };\n' +
    '    Subscriber.prototype.next = function (value) {\n' +
    '        if (this.isStopped) {\n' +
    '            handleStoppedNotification(nextNotification(value), this);\n' +
    '        }\n' +
    '        else {\n' +
    '            this._next(value);\n' +
    '        }\n' +
    '    };\n' +
    '    Subscriber.prototype.error = function (err) {\n' +
    '        if (this.isStopped) {\n' +
    '            handleStoppedNotification(errorNotification(err), this);\n' +
    '        }\n' +
    '        else {\n' +
    '            this.isStopped = true;\n' +
    '            this._error(err);\n' +
    '        }\n' +
    '    };\n' +
    '    Subscriber.prototype.complete = function () {\n' +
    '        if (this.isStopped) {\n' +
    '            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n' +
    '        }\n' +
    '        else {\n' +
    '            this.isStopped = true;\n' +
    '            this._complete();\n' +
    '        }\n' +
    '    };\n' +
    '    Subscriber.prototype.unsubscribe = function () {\n' +
    '        if (!this.closed) {\n' +
    '            this.isStopped = true;\n' +
    '            _super.prototype.unsubscribe.call(this);\n' +
    '            this.destination = null;\n' +
    '        }\n' +
    '    };\n' +
    '    Subscriber.prototype._next = function (value) {\n' +
    '        this.destination.next(value);\n' +
    '    };\n' +
    '    Subscriber.prototype._error = function (err) {\n' +
    '        try {\n' +
    '            this.destination.error(err);\n' +
    '        }\n' +
    '        finally {\n' +
    '            this.unsubscribe();\n' +
    '        }\n' +
    '    };\n' +
    '    Subscriber.prototype._complete = function () {\n' +
    '        try {\n' +
    '            this.destination.complete();\n' +
    '        }\n' +
    '        finally {\n' +
    '            this.unsubscribe();\n' +
    '        }\n' +
    '    };\n' +
    '    return Subscriber;\n' +
    '}(Subscription));\n' +
    'export { Subscriber };\n' +
    'var _bind = Function.prototype.bind;\n' +
    'function bind(fn, thisArg) {\n' +
    '    return _bind.call(fn, thisArg);\n' +
    '}\n' +
    'var ConsumerObserver = (function () {\n' +
    '    function ConsumerObserver(partialObserver) {\n' +
    '        this.partialObserver = partialObserver;\n' +
    '    }\n' +
    '    ConsumerObserver.prototype.next = function (value) {\n' +
    '        var partialObserver = this.partialObserver;\n' +
    '        if (partialObserver.next) {\n' +
    '            try {\n' +
    '                partialObserver.next(value);\n' +
    '            }\n' +
    '            catch (error) {\n' +
    '                handleUnhandledError(error);\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    ConsumerObserver.prototype.error = function (err) {\n' +
    '        var partialObserver = this.partialObserver;\n' +
    '        if (partialObserver.error) {\n' +
    '            try {\n' +
    '                partialObserver.error(err);\n' +
    '            }\n' +
    '            catch (error) {\n' +
    '                handleUnhandledError(error);\n' +
    '            }\n' +
    '        }\n' +
    '        else {\n' +
    '            handleUnhandledError(err);\n' +
    '        }\n' +
    '    };\n' +
    '    ConsumerObserver.prototype.complete = function () {\n' +
    '        var partialObserver = this.partialObserver;\n' +
    '        if (partialObserver.complete) {\n' +
    '            try {\n' +
    '                partialObserver.complete();\n' +
    '            }\n' +
    '            catch (error) {\n' +
    '                handleUnhandledError(error);\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    return ConsumerObserver;\n' +
    '}());\n' +
    'var SafeSubscriber = (function (_super) {\n' +
    '    __extends(SafeSubscriber, _super);\n' +
    '    function SafeSubscriber(observerOrNext, error, complete) {\n' +
    '        var _this = _super.call(this) || this;\n' +
    '        var partialObserver;\n' +
    '        if (isFunction(observerOrNext) || !observerOrNext) {\n' +
    '            partialObserver = {\n' +
    '                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n' +
    '                error: error !== null && error !== void 0 ? error : undefined,\n' +
    '                complete: complete !== null && complete !== void 0 ? complete : undefined,\n' +
    '            };\n' +
    '        }\n' +
    '        else {\n' +
    '            var context_1;\n' +
    '            if (_this && config.useDeprecatedNextContext) {\n' +
    '                context_1 = Object.create(observerOrNext);\n' +
    '                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n' +
    '                partialObserver = {\n' +
    '                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n' +
    '                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n' +
    '                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n' +
    '                };\n' +
    '            }\n' +
    '            else {\n' +
    '                partialObserver = observerOrNext;\n' +
    '            }\n' +
    '        }\n' +
    '        _this.destination = new ConsumerObserver(partialObserver);\n' +
    '        return _this;\n' +
    '    }\n' +
    '    return SafeSubscriber;\n' +
    '}(Subscriber));\n' +
    'export { SafeSubscriber };\n' +
    'function handleUnhandledError(error) {\n' +
    '    if (config.useDeprecatedSynchronousErrorHandling) {\n' +
    '        captureError(error);\n' +
    '    }\n' +
    '    else {\n' +
    '        reportUnhandledError(error);\n' +
    '    }\n' +
    '}\n' +
    'function defaultErrorHandler(err) {\n' +
    '    throw err;\n' +
    '}\n' +
    'function handleStoppedNotification(notification, subscriber) {\n' +
    '    var onStoppedNotification = config.onStoppedNotification;\n' +
    '    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n' +
    '}\n' +
    'export var EMPTY_OBSERVER = {\n' +
    '    closed: true,\n' +
    '    next: noop,\n' +
    '    error: defaultErrorHandler,\n' +
    '    complete: noop,\n' +
    '};\n' +
    '//# sourceMappingURL=Subscriber.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EMPTY } from './observable/empty';\n" +
    "import { of } from './observable/of';\n" +
    "import { throwError } from './observable/throwError';\n" +
    "import { isFunction } from './util/isFunction';\n" +
    'export var NotificationKind;\n' +
    '(function (NotificationKind) {\n' +
    '    NotificationKind["NEXT"] = "N";\n' +
    '    NotificationKind["ERROR"] = "E";\n' +
    '    NotificationKind["COMPLETE"] = "C";\n' +
    '})(NotificationKind || (NotificationKind = {}));\n' +
    'var Notification = (function () {\n' +
    '    function Notification(kind, value, error) {\n' +
    '        this.kind = kind;\n' +
    '        this.value = value;\n' +
    '        this.error = error;\n' +
    "        this.hasValue = kind === 'N';\n" +
    '    }\n' +
    '    Notification.prototype.observe = function (observer) {\n' +
    '        return observeNotification(this, observer);\n' +
    '    };\n' +
    '    Notification.prototype.do = function (nextHandler, errorHandler, completeHandler) {\n' +
    '        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;\n' +
    "        return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n" +
    '    };\n' +
    '    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n' +
    '        var _a;\n' +
    '        return isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next)\n' +
    '            ? this.observe(nextOrObserver)\n' +
    '            : this.do(nextOrObserver, error, complete);\n' +
    '    };\n' +
    '    Notification.prototype.toObservable = function () {\n' +
    '        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;\n' +
    "        var result = kind === 'N'\n" +
    '            ?\n' +
    '                of(value)\n' +
    '            :\n' +
    "                kind === 'E'\n" +
    '                    ?\n' +
    '                        throwError(function () { return error; })\n' +
    '                    :\n' +
    "                        kind === 'C'\n" +
    '                            ?\n' +
    '                                EMPTY\n' +
    '                            :\n' +
    '                                0;\n' +
    '        if (!result) {\n' +
    '            throw new TypeError("Unexpected notification kind " + kind);\n' +
    '        }\n' +
    '        return result;\n' +
    '    };\n' +
    '    Notification.createNext = function (value) {\n' +
    "        return new Notification('N', value);\n" +
    '    };\n' +
    '    Notification.createError = function (err) {\n' +
    "        return new Notification('E', undefined, err);\n" +
    '    };\n' +
    '    Notification.createComplete = function () {\n' +
    '        return Notification.completeNotification;\n' +
    '    };\n' +
    "    Notification.completeNotification = new Notification('C');\n" +
    '    return Notification;\n' +
    '}());\n' +
    'export { Notification };\n' +
    'export function observeNotification(notification, observer) {\n' +
    '    var _a, _b, _c;\n' +
    '    var _d = notification, kind = _d.kind, value = _d.value, error = _d.error;\n' +
    "    if (typeof kind !== 'string') {\n" +
    `        throw new TypeError('Invalid notification, missing "kind"');\n` +
    '    }\n' +
    "    kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n" +
    '}\n' +
    '//# sourceMappingURL=Notification.js.map'
} [Function: logger]
____9999999____ {
  code: "import { identity } from './identity';\n" +
    'export function pipe() {\n' +
    '    var fns = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        fns[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return pipeFromArray(fns);\n' +
    '}\n' +
    'export function pipeFromArray(fns) {\n' +
    '    if (fns.length === 0) {\n' +
    '        return identity;\n' +
    '    }\n' +
    '    if (fns.length === 1) {\n' +
    '        return fns[0];\n' +
    '    }\n' +
    '    return function piped(input) {\n' +
    '        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=pipe.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function noop() { }\n//# sourceMappingURL=noop.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function identity(x) {\n' +
    '    return x;\n' +
    '}\n' +
    '//# sourceMappingURL=identity.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { isFunction } from './isFunction';\n" +
    'export function isObservable(obj) {\n' +
    '    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n' +
    '}\n' +
    '//# sourceMappingURL=isObservable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var ArgumentOutOfRangeError = createErrorClass(function (_super) {\n' +
    '    return function ArgumentOutOfRangeErrorImpl() {\n' +
    '        _super(this);\n' +
    "        this.name = 'ArgumentOutOfRangeError';\n" +
    "        this.message = 'argument out of range';\n" +
    '    };\n' +
    '});\n' +
    '//# sourceMappingURL=ArgumentOutOfRangeError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var NotFoundError = createErrorClass(function (_super) {\n' +
    '    return function NotFoundErrorImpl(message) {\n' +
    '        _super(this);\n' +
    "        this.name = 'NotFoundError';\n" +
    '        this.message = message;\n' +
    '    };\n' +
    '});\n' +
    '//# sourceMappingURL=NotFoundError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var ObjectUnsubscribedError = createErrorClass(function (_super) {\n' +
    '    return function ObjectUnsubscribedErrorImpl() {\n' +
    '        _super(this);\n' +
    "        this.name = 'ObjectUnsubscribedError';\n" +
    "        this.message = 'object unsubscribed';\n" +
    '    };\n' +
    '});\n' +
    '//# sourceMappingURL=ObjectUnsubscribedError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var EmptyError = createErrorClass(function (_super) { return function EmptyErrorImpl() {\n' +
    '    _super(this);\n' +
    "    this.name = 'EmptyError';\n" +
    "    this.message = 'no elements in sequence';\n" +
    '}; });\n' +
    '//# sourceMappingURL=EmptyError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var SequenceError = createErrorClass(function (_super) {\n' +
    '    return function SequenceErrorImpl(message) {\n' +
    '        _super(this);\n' +
    "        this.name = 'SequenceError';\n" +
    '        this.message = message;\n' +
    '    };\n' +
    '});\n' +
    '//# sourceMappingURL=SequenceError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from './util/EmptyError';\n" +
    "import { SafeSubscriber } from './Subscriber';\n" +
    'export function firstValueFrom(source, config) {\n' +
    "    var hasConfig = typeof config === 'object';\n" +
    '    return new Promise(function (resolve, reject) {\n' +
    '        var subscriber = new SafeSubscriber({\n' +
    '            next: function (value) {\n' +
    '                resolve(value);\n' +
    '                subscriber.unsubscribe();\n' +
    '            },\n' +
    '            error: reject,\n' +
    '            complete: function () {\n' +
    '                if (hasConfig) {\n' +
    '                    resolve(config.defaultValue);\n' +
    '                }\n' +
    '                else {\n' +
    '                    reject(new EmptyError());\n' +
    '                }\n' +
    '            },\n' +
    '        });\n' +
    '        source.subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=firstValueFrom.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createErrorClass } from './createErrorClass';\n" +
    'export var UnsubscriptionError = createErrorClass(function (_super) {\n' +
    '    return function UnsubscriptionErrorImpl(errors) {\n' +
    '        _super(this);\n' +
    '        this.message = errors\n' +
    `            ? errors.length + " errors occurred during unsubscription:\\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\\n  ')\n` +
    "            : '';\n" +
    "        this.name = 'UnsubscriptionError';\n" +
    '        this.errors = errors;\n' +
    '    };\n' +
    '});\n' +
    '//# sourceMappingURL=UnsubscriptionError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from './util/EmptyError';\n" +
    'export function lastValueFrom(source, config) {\n' +
    "    var hasConfig = typeof config === 'object';\n" +
    '    return new Promise(function (resolve, reject) {\n' +
    '        var _hasValue = false;\n' +
    '        var _value;\n' +
    '        source.subscribe({\n' +
    '            next: function (value) {\n' +
    '                _value = value;\n' +
    '                _hasValue = true;\n' +
    '            },\n' +
    '            error: reject,\n' +
    '            complete: function () {\n' +
    '                if (_hasValue) {\n' +
    '                    resolve(_value);\n' +
    '                }\n' +
    '                else if (hasConfig) {\n' +
    '                    resolve(config.defaultValue);\n' +
    '                }\n' +
    '                else {\n' +
    '                    reject(new EmptyError());\n' +
    '                }\n' +
    '            },\n' +
    '        });\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=lastValueFrom.js.map'
} [Function: logger]
____9999999____ {
  code: "import { bindCallbackInternals } from './bindCallbackInternals';\n" +
    'export function bindCallback(callbackFunc, resultSelector, scheduler) {\n' +
    '    return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=bindCallback.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { isValidDate } from '../util/isDate';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { createErrorClass } from '../util/createErrorClass';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export var TimeoutError = createErrorClass(function (_super) {\n' +
    '    return function TimeoutErrorImpl(info) {\n' +
    '        if (info === void 0) { info = null; }\n' +
    '        _super(this);\n' +
    "        this.message = 'Timeout has occurred';\n" +
    "        this.name = 'TimeoutError';\n" +
    '        this.info = info;\n' +
    '    };\n' +
    '});\n' +
    'export function timeout(config, schedulerArg) {\n' +
    "    var _a = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config), first = _a.first, each = _a.each, _b = _a.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler : _c, _d = _a.meta, meta = _d === void 0 ? null : _d;\n" +
    '    if (first == null && each == null) {\n' +
    "        throw new TypeError('No timeout provided.');\n" +
    '    }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var originalSourceSubscription;\n' +
    '        var timerSubscription;\n' +
    '        var lastValue = null;\n' +
    '        var seen = 0;\n' +
    '        var startTimer = function (delay) {\n' +
    '            timerSubscription = executeSchedule(subscriber, scheduler, function () {\n' +
    '                try {\n' +
    '                    originalSourceSubscription.unsubscribe();\n' +
    '                    innerFrom(_with({\n' +
    '                        meta: meta,\n' +
    '                        lastValue: lastValue,\n' +
    '                        seen: seen,\n' +
    '                    })).subscribe(subscriber);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    subscriber.error(err);\n' +
    '                }\n' +
    '            }, delay);\n' +
    '        };\n' +
    '        originalSourceSubscription = source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n' +
    '            seen++;\n' +
    '            subscriber.next((lastValue = value));\n' +
    '            each > 0 && startTimer(each);\n' +
    '        }, undefined, undefined, function () {\n' +
    '            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\n' +
    '                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n' +
    '            }\n' +
    '            lastValue = null;\n' +
    '        }));\n' +
    "        !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);\n" +
    '    });\n' +
    '}\n' +
    'function timeoutErrorFactory(info) {\n' +
    '    throw new TimeoutError(info);\n' +
    '}\n' +
    '//# sourceMappingURL=timeout.js.map'
} [Function: logger]
____9999999____ {
  code: "import { bindCallbackInternals } from './bindCallbackInternals';\n" +
    'export function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n' +
    '    return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=bindNodeCallback.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\n" +
    "import { from } from './from';\n" +
    "import { identity } from '../util/identity';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "import { popResultSelector, popScheduler } from '../util/args';\n" +
    "import { createObject } from '../util/createObject';\n" +
    "import { createOperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export function combineLatest() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(args);\n' +
    '    var resultSelector = popResultSelector(args);\n' +
    '    var _a = argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;\n' +
    '    if (observables.length === 0) {\n' +
    '        return from([], scheduler);\n' +
    '    }\n' +
    '    var result = new Observable(combineLatestInit(observables, scheduler, keys\n' +
    '        ?\n' +
    '            function (values) { return createObject(keys, values); }\n' +
    '        :\n' +
    '            identity));\n' +
    '    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n' +
    '}\n' +
    'export function combineLatestInit(observables, scheduler, valueTransform) {\n' +
    '    if (valueTransform === void 0) { valueTransform = identity; }\n' +
    '    return function (subscriber) {\n' +
    '        maybeSchedule(scheduler, function () {\n' +
    '            var length = observables.length;\n' +
    '            var values = new Array(length);\n' +
    '            var active = length;\n' +
    '            var remainingFirstValues = length;\n' +
    '            var _loop_1 = function (i) {\n' +
    '                maybeSchedule(scheduler, function () {\n' +
    '                    var source = from(observables[i], scheduler);\n' +
    '                    var hasFirstValue = false;\n' +
    '                    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                        values[i] = value;\n' +
    '                        if (!hasFirstValue) {\n' +
    '                            hasFirstValue = true;\n' +
    '                            remainingFirstValues--;\n' +
    '                        }\n' +
    '                        if (!remainingFirstValues) {\n' +
    '                            subscriber.next(valueTransform(values.slice()));\n' +
    '                        }\n' +
    '                    }, function () {\n' +
    '                        if (!--active) {\n' +
    '                            subscriber.complete();\n' +
    '                        }\n' +
    '                    }));\n' +
    '                }, subscriber);\n' +
    '            };\n' +
    '            for (var i = 0; i < length; i++) {\n' +
    '                _loop_1(i);\n' +
    '            }\n' +
    '        }, subscriber);\n' +
    '    };\n' +
    '}\n' +
    'function maybeSchedule(scheduler, execute, subscription) {\n' +
    '    if (scheduler) {\n' +
    '        executeSchedule(subscription, scheduler, execute);\n' +
    '    }\n' +
    '    else {\n' +
    '        execute();\n' +
    '    }\n' +
    '}\n' +
    '//# sourceMappingURL=combineLatest.js.map'
} [Function: logger]
____9999999____ {
  code: "import { concatAll } from '../operators/concatAll';\n" +
    "import { popScheduler } from '../util/args';\n" +
    "import { from } from './from';\n" +
    'export function concat() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return concatAll()(from(args, popScheduler(args)));\n' +
    '}\n' +
    '//# sourceMappingURL=concat.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { Observable } from '../Observable';\n" +
    "import { defer } from './defer';\n" +
    'var DEFAULT_CONFIG = {\n' +
    '    connector: function () { return new Subject(); },\n' +
    '    resetOnDisconnect: true,\n' +
    '};\n' +
    'export function connectable(source, config) {\n' +
    '    if (config === void 0) { config = DEFAULT_CONFIG; }\n' +
    '    var connection = null;\n' +
    '    var connector = config.connector, _a = config.resetOnDisconnect, resetOnDisconnect = _a === void 0 ? true : _a;\n' +
    '    var subject = connector();\n' +
    '    var result = new Observable(function (subscriber) {\n' +
    '        return subject.subscribe(subscriber);\n' +
    '    });\n' +
    '    result.connect = function () {\n' +
    '        if (!connection || connection.closed) {\n' +
    '            connection = defer(function () { return source; }).subscribe(subject);\n' +
    '            if (resetOnDisconnect) {\n' +
    '                connection.add(function () { return (subject = connector()); });\n' +
    '            }\n' +
    '        }\n' +
    '        return connection;\n' +
    '    };\n' +
    '    return result;\n' +
    '}\n' +
    '//# sourceMappingURL=connectable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    'export function defer(observableFactory) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        innerFrom(observableFactory()).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=defer.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    "import { popResultSelector } from '../util/args';\n" +
    "import { createOperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "import { createObject } from '../util/createObject';\n" +
    'export function forkJoin() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var resultSelector = popResultSelector(args);\n' +
    '    var _a = argsArgArrayOrObject(args), sources = _a.args, keys = _a.keys;\n' +
    '    var result = new Observable(function (subscriber) {\n' +
    '        var length = sources.length;\n' +
    '        if (!length) {\n' +
    '            subscriber.complete();\n' +
    '            return;\n' +
    '        }\n' +
    '        var values = new Array(length);\n' +
    '        var remainingCompletions = length;\n' +
    '        var remainingEmissions = length;\n' +
    '        var _loop_1 = function (sourceIndex) {\n' +
    '            var hasValue = false;\n' +
    '            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                if (!hasValue) {\n' +
    '                    hasValue = true;\n' +
    '                    remainingEmissions--;\n' +
    '                }\n' +
    '                values[sourceIndex] = value;\n' +
    '            }, function () { return remainingCompletions--; }, undefined, function () {\n' +
    '                if (!remainingCompletions || !hasValue) {\n' +
    '                    if (!remainingEmissions) {\n' +
    '                        subscriber.next(keys ? createObject(keys, values) : values);\n' +
    '                    }\n' +
    '                    subscriber.complete();\n' +
    '                }\n' +
    '            }));\n' +
    '        };\n' +
    '        for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n' +
    '            _loop_1(sourceIndex);\n' +
    '        }\n' +
    '    });\n' +
    '    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n' +
    '}\n' +
    '//# sourceMappingURL=forkJoin.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    'export var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });\n' +
    'export function empty(scheduler) {\n' +
    '    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n' +
    '}\n' +
    'function emptyScheduled(scheduler) {\n' +
    '    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n' +
    '}\n' +
    '//# sourceMappingURL=empty.js.map'
} [Function: logger]
____9999999____ {
  code: "import { scheduled } from '../scheduled/scheduled';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    'export function from(input, scheduler) {\n' +
    '    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n' +
    '}\n' +
    '//# sourceMappingURL=from.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    'export function fromEventPattern(addHandler, removeHandler, resultSelector) {\n' +
    '    if (resultSelector) {\n' +
    '        return fromEventPattern(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n' +
    '    }\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var handler = function () {\n' +
    '            var e = [];\n' +
    '            for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                e[_i] = arguments[_i];\n' +
    '            }\n' +
    '            return subscriber.next(e.length === 1 ? e[0] : e);\n' +
    '        };\n' +
    '        var retValue = addHandler(handler);\n' +
    '        return isFunction(removeHandler) ? function () { return removeHandler(handler, retValue); } : undefined;\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=fromEventPattern.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read } from "tslib";\n' +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { Observable } from '../Observable';\n" +
    "import { mergeMap } from '../operators/mergeMap';\n" +
    "import { isArrayLike } from '../util/isArrayLike';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "var nodeEventEmitterMethods = ['addListener', 'removeListener'];\n" +
    "var eventTargetMethods = ['addEventListener', 'removeEventListener'];\n" +
    "var jqueryMethods = ['on', 'off'];\n" +
    'export function fromEvent(target, eventName, options, resultSelector) {\n' +
    '    if (isFunction(options)) {\n' +
    '        resultSelector = options;\n' +
    '        options = undefined;\n' +
    '    }\n' +
    '    if (resultSelector) {\n' +
    '        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n' +
    '    }\n' +
    '    var _a = __read(isEventTarget(target)\n' +
    '        ? eventTargetMethods.map(function (methodName) { return function (handler) { return target[methodName](eventName, handler, options); }; })\n' +
    '        :\n' +
    '            isNodeStyleEventEmitter(target)\n' +
    '                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n' +
    '                : isJQueryStyleEventEmitter(target)\n' +
    '                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n' +
    '                    : [], 2), add = _a[0], remove = _a[1];\n' +
    '    if (!add) {\n' +
    '        if (isArrayLike(target)) {\n' +
    '            return mergeMap(function (subTarget) { return fromEvent(subTarget, eventName, options); })(innerFrom(target));\n' +
    '        }\n' +
    '    }\n' +
    '    if (!add) {\n' +
    "        throw new TypeError('Invalid event target');\n" +
    '    }\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var handler = function () {\n' +
    '            var args = [];\n' +
    '            for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                args[_i] = arguments[_i];\n' +
    '            }\n' +
    '            return subscriber.next(1 < args.length ? args : args[0]);\n' +
    '        };\n' +
    '        add(handler);\n' +
    '        return function () { return remove(handler); };\n' +
    '    });\n' +
    '}\n' +
    'function toCommonHandlerRegistry(target, eventName) {\n' +
    '    return function (methodName) { return function (handler) { return target[methodName](eventName, handler); }; };\n' +
    '}\n' +
    'function isNodeStyleEventEmitter(target) {\n' +
    '    return isFunction(target.addListener) && isFunction(target.removeListener);\n' +
    '}\n' +
    'function isJQueryStyleEventEmitter(target) {\n' +
    '    return isFunction(target.on) && isFunction(target.off);\n' +
    '}\n' +
    'function isEventTarget(target) {\n' +
    '    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n' +
    '}\n' +
    '//# sourceMappingURL=fromEvent.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __generator } from "tslib";\n' +
    "import { identity } from '../util/identity';\n" +
    "import { isScheduler } from '../util/isScheduler';\n" +
    "import { defer } from './defer';\n" +
    "import { scheduleIterable } from '../scheduled/scheduleIterable';\n" +
    'export function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {\n' +
    '    var _a, _b;\n' +
    '    var resultSelector;\n' +
    '    var initialState;\n' +
    '    if (arguments.length === 1) {\n' +
    '        (_a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? identity : _b, scheduler = _a.scheduler);\n' +
    '    }\n' +
    '    else {\n' +
    '        initialState = initialStateOrOptions;\n' +
    '        if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n' +
    '            resultSelector = identity;\n' +
    '            scheduler = resultSelectorOrScheduler;\n' +
    '        }\n' +
    '        else {\n' +
    '            resultSelector = resultSelectorOrScheduler;\n' +
    '        }\n' +
    '    }\n' +
    '    function gen() {\n' +
    '        var state;\n' +
    '        return __generator(this, function (_a) {\n' +
    '            switch (_a.label) {\n' +
    '                case 0:\n' +
    '                    state = initialState;\n' +
    '                    _a.label = 1;\n' +
    '                case 1:\n' +
    '                    if (!(!condition || condition(state))) return [3, 4];\n' +
    '                    return [4, resultSelector(state)];\n' +
    '                case 2:\n' +
    '                    _a.sent();\n' +
    '                    _a.label = 3;\n' +
    '                case 3:\n' +
    '                    state = iterate(state);\n' +
    '                    return [3, 1];\n' +
    '                case 4: return [2];\n' +
    '            }\n' +
    '        });\n' +
    '    }\n' +
    '    return defer((scheduler\n' +
    '        ?\n' +
    '            function () { return scheduleIterable(gen(), scheduler); }\n' +
    '        :\n' +
    '            gen));\n' +
    '}\n' +
    '//# sourceMappingURL=generate.js.map'
} [Function: logger]
____9999999____ {
  code: "import { defer } from './defer';\n" +
    'export function iif(condition, trueResult, falseResult) {\n' +
    '    return defer(function () { return (condition() ? trueResult : falseResult); });\n' +
    '}\n' +
    '//# sourceMappingURL=iif.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeAll } from '../operators/mergeAll';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    "import { EMPTY } from './empty';\n" +
    "import { popNumber, popScheduler } from '../util/args';\n" +
    "import { from } from './from';\n" +
    'export function merge() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(args);\n' +
    '    var concurrent = popNumber(args, Infinity);\n' +
    '    var sources = args;\n' +
    '    return !sources.length\n' +
    '        ?\n' +
    '            EMPTY\n' +
    '        : sources.length === 1\n' +
    '            ?\n' +
    '                innerFrom(sources[0])\n' +
    '            :\n' +
    '                mergeAll(concurrent)(from(sources, scheduler));\n' +
    '}\n' +
    '//# sourceMappingURL=merge.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { timer } from './timer';\n" +
    'export function interval(period, scheduler) {\n' +
    '    if (period === void 0) { period = 0; }\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    if (period < 0) {\n' +
    '        period = 0;\n' +
    '    }\n' +
    '    return timer(period, period, scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=interval.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { noop } from '../util/noop';\n" +
    'export var NEVER = new Observable(noop);\n' +
    'export function never() {\n' +
    '    return NEVER;\n' +
    '}\n' +
    '//# sourceMappingURL=never.js.map'
} [Function: logger]
____9999999____ {
  code: "import { popScheduler } from '../util/args';\n" +
    "import { from } from './from';\n" +
    'export function of() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(args);\n' +
    '    return from(args, scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=of.js.map'
} [Function: logger]
____9999999____ {
  code: "import { from } from './from';\n" +
    'export function pairs(obj, scheduler) {\n' +
    '    return from(Object.entries(obj), scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=pairs.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { OperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    'export function onErrorResumeNext() {\n' +
    '    var sources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        sources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var nextSources = argsOrArgArray(sources);\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var sourceIndex = 0;\n' +
    '        var subscribeNext = function () {\n' +
    '            if (sourceIndex < nextSources.length) {\n' +
    '                var nextSource = void 0;\n' +
    '                try {\n' +
    '                    nextSource = innerFrom(nextSources[sourceIndex++]);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    subscribeNext();\n' +
    '                    return;\n' +
    '                }\n' +
    '                var innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n' +
    '                nextSource.subscribe(innerSubscriber);\n' +
    '                innerSubscriber.add(subscribeNext);\n' +
    '            }\n' +
    '            else {\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '        };\n' +
    '        subscribeNext();\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=onErrorResumeNext.js.map'
} [Function: logger]
____9999999____ {
  code: "import { not } from '../util/not';\n" +
    "import { filter } from '../operators/filter';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    'export function partition(source, predicate, thisArg) {\n' +
    '    return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))];\n' +
    '}\n' +
    '//# sourceMappingURL=partition.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { createOperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    'export function race() {\n' +
    '    var sources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        sources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    sources = argsOrArgArray(sources);\n' +
    '    return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n' +
    '}\n' +
    'export function raceInit(sources) {\n' +
    '    return function (subscriber) {\n' +
    '        var subscriptions = [];\n' +
    '        var _loop_1 = function (i) {\n' +
    '            subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                if (subscriptions) {\n' +
    '                    for (var s = 0; s < subscriptions.length; s++) {\n' +
    '                        s !== i && subscriptions[s].unsubscribe();\n' +
    '                    }\n' +
    '                    subscriptions = null;\n' +
    '                }\n' +
    '                subscriber.next(value);\n' +
    '            })));\n' +
    '        };\n' +
    '        for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n' +
    '            _loop_1(i);\n' +
    '        }\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=race.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { EMPTY } from './empty';\n" +
    'export function range(start, count, scheduler) {\n' +
    '    if (count == null) {\n' +
    '        count = start;\n' +
    '        start = 0;\n' +
    '    }\n' +
    '    if (count <= 0) {\n' +
    '        return EMPTY;\n' +
    '    }\n' +
    '    var end = count + start;\n' +
    '    return new Observable(scheduler\n' +
    '        ?\n' +
    '            function (subscriber) {\n' +
    '                var n = start;\n' +
    '                return scheduler.schedule(function () {\n' +
    '                    if (n < end) {\n' +
    '                        subscriber.next(n++);\n' +
    '                        this.schedule();\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        subscriber.complete();\n' +
    '                    }\n' +
    '                });\n' +
    '            }\n' +
    '        :\n' +
    '            function (subscriber) {\n' +
    '                var n = start;\n' +
    '                while (n < end && !subscriber.closed) {\n' +
    '                    subscriber.next(n++);\n' +
    '                }\n' +
    '                subscriber.complete();\n' +
    '            });\n' +
    '}\n' +
    '//# sourceMappingURL=range.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function throwError(errorOrErrorFactory, scheduler) {\n' +
    '    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n' +
    '    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n' +
    '    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n' +
    '}\n' +
    '//# sourceMappingURL=throwError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { async as asyncScheduler } from '../scheduler/async';\n" +
    "import { isScheduler } from '../util/isScheduler';\n" +
    "import { isValidDate } from '../util/isDate';\n" +
    'export function timer(dueTime, intervalOrScheduler, scheduler) {\n' +
    '    if (dueTime === void 0) { dueTime = 0; }\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    var intervalDuration = -1;\n' +
    '    if (intervalOrScheduler != null) {\n' +
    '        if (isScheduler(intervalOrScheduler)) {\n' +
    '            scheduler = intervalOrScheduler;\n' +
    '        }\n' +
    '        else {\n' +
    '            intervalDuration = intervalOrScheduler;\n' +
    '        }\n' +
    '    }\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n' +
    '        if (due < 0) {\n' +
    '            due = 0;\n' +
    '        }\n' +
    '        var n = 0;\n' +
    '        return scheduler.schedule(function () {\n' +
    '            if (!subscriber.closed) {\n' +
    '                subscriber.next(n++);\n' +
    '                if (0 <= intervalDuration) {\n' +
    '                    this.schedule(undefined, intervalDuration);\n' +
    '                }\n' +
    '                else {\n' +
    '                    subscriber.complete();\n' +
    '                }\n' +
    '            }\n' +
    '        }, due);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=timer.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    "import { EMPTY } from './empty';\n" +
    'export function using(resourceFactory, observableFactory) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var resource = resourceFactory();\n' +
    '        var result = observableFactory(resource);\n' +
    '        var source = result ? innerFrom(result) : EMPTY;\n' +
    '        source.subscribe(subscriber);\n' +
    '        return function () {\n' +
    '            if (resource) {\n' +
    '                resource.unsubscribe();\n' +
    '            }\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=using.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { Observable } from '../Observable';\n" +
    "import { innerFrom } from './innerFrom';\n" +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { EMPTY } from './empty';\n" +
    "import { createOperatorSubscriber } from '../operators/OperatorSubscriber';\n" +
    "import { popResultSelector } from '../util/args';\n" +
    'export function zip() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var resultSelector = popResultSelector(args);\n' +
    '    var sources = argsOrArgArray(args);\n' +
    '    return sources.length\n' +
    '        ? new Observable(function (subscriber) {\n' +
    '            var buffers = sources.map(function () { return []; });\n' +
    '            var completed = sources.map(function () { return false; });\n' +
    '            subscriber.add(function () {\n' +
    '                buffers = completed = null;\n' +
    '            });\n' +
    '            var _loop_1 = function (sourceIndex) {\n' +
    '                innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                    buffers[sourceIndex].push(value);\n' +
    '                    if (buffers.every(function (buffer) { return buffer.length; })) {\n' +
    '                        var result = buffers.map(function (buffer) { return buffer.shift(); });\n' +
    '                        subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray([], __read(result))) : result);\n' +
    '                        if (buffers.some(function (buffer, i) { return !buffer.length && completed[i]; })) {\n' +
    '                            subscriber.complete();\n' +
    '                        }\n' +
    '                    }\n' +
    '                }, function () {\n' +
    '                    completed[sourceIndex] = true;\n' +
    '                    !buffers[sourceIndex].length && subscriber.complete();\n' +
    '                }));\n' +
    '            };\n' +
    '            for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n' +
    '                _loop_1(sourceIndex);\n' +
    '            }\n' +
    '            return function () {\n' +
    '                buffers = completed = null;\n' +
    '            };\n' +
    '        })\n' +
    '        : EMPTY;\n' +
    '}\n' +
    '//# sourceMappingURL=zip.js.map'
} [Function: logger]
____9999999____ {
  code: "import { scheduleObservable } from './scheduleObservable';\n" +
    "import { schedulePromise } from './schedulePromise';\n" +
    "import { scheduleArray } from './scheduleArray';\n" +
    "import { scheduleIterable } from './scheduleIterable';\n" +
    "import { scheduleAsyncIterable } from './scheduleAsyncIterable';\n" +
    "import { isInteropObservable } from '../util/isInteropObservable';\n" +
    "import { isPromise } from '../util/isPromise';\n" +
    "import { isArrayLike } from '../util/isArrayLike';\n" +
    "import { isIterable } from '../util/isIterable';\n" +
    "import { isAsyncIterable } from '../util/isAsyncIterable';\n" +
    "import { createInvalidObservableTypeError } from '../util/throwUnobservableError';\n" +
    "import { isReadableStreamLike } from '../util/isReadableStreamLike';\n" +
    "import { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n" +
    'export function scheduled(input, scheduler) {\n' +
    '    if (input != null) {\n' +
    '        if (isInteropObservable(input)) {\n' +
    '            return scheduleObservable(input, scheduler);\n' +
    '        }\n' +
    '        if (isArrayLike(input)) {\n' +
    '            return scheduleArray(input, scheduler);\n' +
    '        }\n' +
    '        if (isPromise(input)) {\n' +
    '            return schedulePromise(input, scheduler);\n' +
    '        }\n' +
    '        if (isAsyncIterable(input)) {\n' +
    '            return scheduleAsyncIterable(input, scheduler);\n' +
    '        }\n' +
    '        if (isIterable(input)) {\n' +
    '            return scheduleIterable(input, scheduler);\n' +
    '        }\n' +
    '        if (isReadableStreamLike(input)) {\n' +
    '            return scheduleReadableStreamLike(input, scheduler);\n' +
    '        }\n' +
    '    }\n' +
    '    throw createInvalidObservableTypeError(input);\n' +
    '}\n' +
    '//# sourceMappingURL=scheduled.js.map'
} [Function: logger]
____9999999____ { code: 'export {};\n//# sourceMappingURL=types.js.map' } [Function: logger]
____9999999____ {
  code: 'export var config = {\n' +
    '    onUnhandledError: null,\n' +
    '    onStoppedNotification: null,\n' +
    '    Promise: undefined,\n' +
    '    useDeprecatedSynchronousErrorHandling: false,\n' +
    '    useDeprecatedNextContext: false,\n' +
    '};\n' +
    '//# sourceMappingURL=config.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function audit(durationSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        var lastValue = null;\n' +
    '        var durationSubscriber = null;\n' +
    '        var isComplete = false;\n' +
    '        var endDuration = function () {\n' +
    '            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n' +
    '            durationSubscriber = null;\n' +
    '            if (hasValue) {\n' +
    '                hasValue = false;\n' +
    '                var value = lastValue;\n' +
    '                lastValue = null;\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '            isComplete && subscriber.complete();\n' +
    '        };\n' +
    '        var cleanupDuration = function () {\n' +
    '            durationSubscriber = null;\n' +
    '            isComplete && subscriber.complete();\n' +
    '        };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            hasValue = true;\n' +
    '            lastValue = value;\n' +
    '            if (!durationSubscriber) {\n' +
    '                innerFrom(durationSelector(value)).subscribe((durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration)));\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            isComplete = true;\n' +
    '            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=audit.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { audit } from './audit';\n" +
    "import { timer } from '../observable/timer';\n" +
    'export function auditTime(duration, scheduler) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    return audit(function () { return timer(duration, scheduler); });\n' +
    '}\n' +
    '//# sourceMappingURL=auditTime.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function buffer(closingNotifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var currentBuffer = [];\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return currentBuffer.push(value); }, function () {\n' +
    '            subscriber.next(currentBuffer);\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '        innerFrom(closingNotifier).subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '            var b = currentBuffer;\n' +
    '            currentBuffer = [];\n' +
    '            subscriber.next(b);\n' +
    '        }, noop));\n' +
    '        return function () {\n' +
    '            currentBuffer = null;\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=buffer.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { Subscription } from '../Subscription';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { popScheduler } from '../util/args';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export function bufferTime(bufferTimeSpan) {\n' +
    '    var _a, _b;\n' +
    '    var otherArgs = [];\n' +
    '    for (var _i = 1; _i < arguments.length; _i++) {\n' +
    '        otherArgs[_i - 1] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n' +
    '    var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n' +
    '    var maxBufferSize = otherArgs[1] || Infinity;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var bufferRecords = [];\n' +
    '        var restartOnEmit = false;\n' +
    '        var emit = function (record) {\n' +
    '            var buffer = record.buffer, subs = record.subs;\n' +
    '            subs.unsubscribe();\n' +
    '            arrRemove(bufferRecords, record);\n' +
    '            subscriber.next(buffer);\n' +
    '            restartOnEmit && startBuffer();\n' +
    '        };\n' +
    '        var startBuffer = function () {\n' +
    '            if (bufferRecords) {\n' +
    '                var subs = new Subscription();\n' +
    '                subscriber.add(subs);\n' +
    '                var buffer = [];\n' +
    '                var record_1 = {\n' +
    '                    buffer: buffer,\n' +
    '                    subs: subs,\n' +
    '                };\n' +
    '                bufferRecords.push(record_1);\n' +
    '                executeSchedule(subs, scheduler, function () { return emit(record_1); }, bufferTimeSpan);\n' +
    '            }\n' +
    '        };\n' +
    '        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n' +
    '            executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n' +
    '        }\n' +
    '        else {\n' +
    '            restartOnEmit = true;\n' +
    '        }\n' +
    '        startBuffer();\n' +
    '        var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var e_1, _a;\n' +
    '            var recordsCopy = bufferRecords.slice();\n' +
    '            try {\n' +
    '                for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n' +
    '                    var record = recordsCopy_1_1.value;\n' +
    '                    var buffer = record.buffer;\n' +
    '                    buffer.push(value);\n' +
    '                    maxBufferSize <= buffer.length && emit(record);\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n' +
    '                }\n' +
    '                finally { if (e_1) throw e_1.error; }\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n' +
    '                subscriber.next(bufferRecords.shift().buffer);\n' +
    '            }\n' +
    '            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n' +
    '            subscriber.complete();\n' +
    '            subscriber.unsubscribe();\n' +
    '        }, undefined, function () { return (bufferRecords = null); });\n' +
    '        source.subscribe(bufferTimeSubscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=bufferTime.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    'export function bufferCount(bufferSize, startBufferEvery) {\n' +
    '    if (startBufferEvery === void 0) { startBufferEvery = null; }\n' +
    '    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var buffers = [];\n' +
    '        var count = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var e_1, _a, e_2, _b;\n' +
    '            var toEmit = null;\n' +
    '            if (count++ % startBufferEvery === 0) {\n' +
    '                buffers.push([]);\n' +
    '            }\n' +
    '            try {\n' +
    '                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n' +
    '                    var buffer = buffers_1_1.value;\n' +
    '                    buffer.push(value);\n' +
    '                    if (bufferSize <= buffer.length) {\n' +
    '                        toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n' +
    '                        toEmit.push(buffer);\n' +
    '                    }\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n' +
    '                }\n' +
    '                finally { if (e_1) throw e_1.error; }\n' +
    '            }\n' +
    '            if (toEmit) {\n' +
    '                try {\n' +
    '                    for (var toEmit_1 = __values(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {\n' +
    '                        var buffer = toEmit_1_1.value;\n' +
    '                        arrRemove(buffers, buffer);\n' +
    '                        subscriber.next(buffer);\n' +
    '                    }\n' +
    '                }\n' +
    '                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n' +
    '                finally {\n' +
    '                    try {\n' +
    '                        if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);\n' +
    '                    }\n' +
    '                    finally { if (e_2) throw e_2.error; }\n' +
    '                }\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            var e_3, _a;\n' +
    '            try {\n' +
    '                for (var buffers_2 = __values(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {\n' +
    '                    var buffer = buffers_2_1.value;\n' +
    '                    subscriber.next(buffer);\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);\n' +
    '                }\n' +
    '                finally { if (e_3) throw e_3.error; }\n' +
    '            }\n' +
    '            subscriber.complete();\n' +
    '        }, undefined, function () {\n' +
    '            buffers = null;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=bufferCount.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { Subscription } from '../Subscription';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    'export function bufferToggle(openings, closingSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var buffers = [];\n' +
    '        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n' +
    '            var buffer = [];\n' +
    '            buffers.push(buffer);\n' +
    '            var closingSubscription = new Subscription();\n' +
    '            var emitBuffer = function () {\n' +
    '                arrRemove(buffers, buffer);\n' +
    '                subscriber.next(buffer);\n' +
    '                closingSubscription.unsubscribe();\n' +
    '            };\n' +
    '            closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n' +
    '        }, noop));\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var e_1, _a;\n' +
    '            try {\n' +
    '                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n' +
    '                    var buffer = buffers_1_1.value;\n' +
    '                    buffer.push(value);\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n' +
    '                }\n' +
    '                finally { if (e_1) throw e_1.error; }\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            while (buffers.length > 0) {\n' +
    '                subscriber.next(buffers.shift());\n' +
    '            }\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=bufferToggle.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function bufferWhen(closingSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var buffer = null;\n' +
    '        var closingSubscriber = null;\n' +
    '        var openBuffer = function () {\n' +
    '            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n' +
    '            var b = buffer;\n' +
    '            buffer = [];\n' +
    '            b && subscriber.next(b);\n' +
    '            innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n' +
    '        };\n' +
    '        openBuffer();\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return buffer === null || buffer === void 0 ? void 0 : buffer.push(value); }, function () {\n' +
    '            buffer && subscriber.next(buffer);\n' +
    '            subscriber.complete();\n' +
    '        }, undefined, function () { return (buffer = closingSubscriber = null); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=bufferWhen.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function catchError(selector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var innerSub = null;\n' +
    '        var syncUnsub = false;\n' +
    '        var handledResult;\n' +
    '        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n' +
    '            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n' +
    '            if (innerSub) {\n' +
    '                innerSub.unsubscribe();\n' +
    '                innerSub = null;\n' +
    '                handledResult.subscribe(subscriber);\n' +
    '            }\n' +
    '            else {\n' +
    '                syncUnsub = true;\n' +
    '            }\n' +
    '        }));\n' +
    '        if (syncUnsub) {\n' +
    '            innerSub.unsubscribe();\n' +
    '            innerSub = null;\n' +
    '            handledResult.subscribe(subscriber);\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=catchError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { combineLatestAll } from './combineLatestAll';\n" +
    'export var combineAll = combineLatestAll;\n' +
    '//# sourceMappingURL=combineAll.js.map'
} [Function: logger]
____9999999____ {
  code: "import { combineLatest } from '../observable/combineLatest';\n" +
    "import { joinAllInternals } from './joinAllInternals';\n" +
    'export function combineLatestAll(project) {\n' +
    '    return joinAllInternals(combineLatest, project);\n' +
    '}\n' +
    '//# sourceMappingURL=combineLatestAll.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { combineLatest } from './combineLatest';\n" +
    'export function combineLatestWith() {\n' +
    '    var otherSources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        otherSources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return combineLatest.apply(void 0, __spreadArray([], __read(otherSources)));\n' +
    '}\n' +
    '//# sourceMappingURL=combineLatestWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeAll } from './mergeAll';\n" +
    'export function concatAll() {\n' +
    '    return mergeAll(1);\n' +
    '}\n' +
    '//# sourceMappingURL=concatAll.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeMap } from './mergeMap';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function concatMap(project, resultSelector) {\n' +
    '    return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n' +
    '}\n' +
    '//# sourceMappingURL=concatMap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { concatMap } from './concatMap';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function concatMapTo(innerObservable, resultSelector) {\n' +
    '    return isFunction(resultSelector) ? concatMap(function () { return innerObservable; }, resultSelector) : concatMap(function () { return innerObservable; });\n' +
    '}\n' +
    '//# sourceMappingURL=concatMapTo.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { concat } from './concat';\n" +
    'export function concatWith() {\n' +
    '    var otherSources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        otherSources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return concat.apply(void 0, __spreadArray([], __read(otherSources)));\n' +
    '}\n' +
    '//# sourceMappingURL=concatWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { fromSubscribable } from '../observable/fromSubscribable';\n" +
    'var DEFAULT_CONFIG = {\n' +
    '    connector: function () { return new Subject(); },\n' +
    '};\n' +
    'export function connect(selector, config) {\n' +
    '    if (config === void 0) { config = DEFAULT_CONFIG; }\n' +
    '    var connector = config.connector;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var subject = connector();\n' +
    '        innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n' +
    '        subscriber.add(source.subscribe(subject));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=connect.js.map'
} [Function: logger]
____9999999____ {
  code: "import { reduce } from './reduce';\n" +
    'export function count(predicate) {\n' +
    '    return reduce(function (total, value, i) { return (!predicate || predicate(value, i) ? total + 1 : total); }, 0);\n' +
    '}\n' +
    '//# sourceMappingURL=count.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function debounce(durationSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        var lastValue = null;\n' +
    '        var durationSubscriber = null;\n' +
    '        var emit = function () {\n' +
    '            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n' +
    '            durationSubscriber = null;\n' +
    '            if (hasValue) {\n' +
    '                hasValue = false;\n' +
    '                var value = lastValue;\n' +
    '                lastValue = null;\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '        };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n' +
    '            hasValue = true;\n' +
    '            lastValue = value;\n' +
    '            durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n' +
    '            innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n' +
    '        }, function () {\n' +
    '            emit();\n' +
    '            subscriber.complete();\n' +
    '        }, undefined, function () {\n' +
    '            lastValue = durationSubscriber = null;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=debounce.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function debounceTime(dueTime, scheduler) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var activeTask = null;\n' +
    '        var lastValue = null;\n' +
    '        var lastTime = null;\n' +
    '        var emit = function () {\n' +
    '            if (activeTask) {\n' +
    '                activeTask.unsubscribe();\n' +
    '                activeTask = null;\n' +
    '                var value = lastValue;\n' +
    '                lastValue = null;\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '        };\n' +
    '        function emitWhenIdle() {\n' +
    '            var targetTime = lastTime + dueTime;\n' +
    '            var now = scheduler.now();\n' +
    '            if (now < targetTime) {\n' +
    '                activeTask = this.schedule(undefined, targetTime - now);\n' +
    '                subscriber.add(activeTask);\n' +
    '                return;\n' +
    '            }\n' +
    '            emit();\n' +
    '        }\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            lastValue = value;\n' +
    '            lastTime = scheduler.now();\n' +
    '            if (!activeTask) {\n' +
    '                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n' +
    '                subscriber.add(activeTask);\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            emit();\n' +
    '            subscriber.complete();\n' +
    '        }, undefined, function () {\n' +
    '            lastValue = activeTask = null;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=debounceTime.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function defaultIfEmpty(defaultValue) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            hasValue = true;\n' +
    '            subscriber.next(value);\n' +
    '        }, function () {\n' +
    '            if (!hasValue) {\n' +
    '                subscriber.next(defaultValue);\n' +
    '            }\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=defaultIfEmpty.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { delayWhen } from './delayWhen';\n" +
    "import { timer } from '../observable/timer';\n" +
    'export function delay(due, scheduler) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    var duration = timer(due, scheduler);\n' +
    '    return delayWhen(function () { return duration; });\n' +
    '}\n' +
    '//# sourceMappingURL=delay.js.map'
} [Function: logger]
____9999999____ {
  code: "import { concat } from '../observable/concat';\n" +
    "import { take } from './take';\n" +
    "import { ignoreElements } from './ignoreElements';\n" +
    "import { mapTo } from './mapTo';\n" +
    "import { mergeMap } from './mergeMap';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function delayWhen(delayDurationSelector, subscriptionDelay) {\n' +
    '    if (subscriptionDelay) {\n' +
    '        return function (source) {\n' +
    '            return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n' +
    '        };\n' +
    '    }\n' +
    '    return mergeMap(function (value, index) { return innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)); });\n' +
    '}\n' +
    '//# sourceMappingURL=delayWhen.js.map'
} [Function: logger]
____9999999____ {
  code: "import { observeNotification } from '../Notification';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function dematerialize() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (notification) { return observeNotification(notification, subscriber); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=dematerialize.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function distinct(keySelector, flushes) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var distinctKeys = new Set();\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var key = keySelector ? keySelector(value) : value;\n' +
    '            if (!distinctKeys.has(key)) {\n' +
    '                distinctKeys.add(key);\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '        }));\n' +
    '        flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=distinct.js.map'
} [Function: logger]
____9999999____ {
  code: "import { distinctUntilChanged } from './distinctUntilChanged';\n" +
    'export function distinctUntilKeyChanged(key, compare) {\n' +
    '    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n' +
    '}\n' +
    '//# sourceMappingURL=distinctUntilKeyChanged.js.map'
} [Function: logger]
____9999999____ {
  code: "import { identity } from '../util/identity';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function distinctUntilChanged(comparator, keySelector) {\n' +
    '    if (keySelector === void 0) { keySelector = identity; }\n' +
    '    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var previousKey;\n' +
    '        var first = true;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var currentKey = keySelector(value);\n' +
    '            if (first || !comparator(previousKey, currentKey)) {\n' +
    '                first = false;\n' +
    '                previousKey = currentKey;\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    'function defaultCompare(a, b) {\n' +
    '    return a === b;\n' +
    '}\n' +
    '//# sourceMappingURL=distinctUntilChanged.js.map'
} [Function: logger]
____9999999____ {
  code: "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n" +
    "import { filter } from './filter';\n" +
    "import { throwIfEmpty } from './throwIfEmpty';\n" +
    "import { defaultIfEmpty } from './defaultIfEmpty';\n" +
    "import { take } from './take';\n" +
    'export function elementAt(index, defaultValue) {\n' +
    '    if (index < 0) {\n' +
    '        throw new ArgumentOutOfRangeError();\n' +
    '    }\n' +
    '    var hasDefaultValue = arguments.length >= 2;\n' +
    '    return function (source) {\n' +
    '        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=elementAt.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { concat } from '../observable/concat';\n" +
    "import { of } from '../observable/of';\n" +
    'export function endWith() {\n' +
    '    var values = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        values[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return function (source) { return concat(source, of.apply(void 0, __spreadArray([], __read(values)))); };\n' +
    '}\n' +
    '//# sourceMappingURL=endWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function every(predicate, thisArg) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            if (!predicate.call(thisArg, value, index++, source)) {\n' +
    '                subscriber.next(false);\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            subscriber.next(true);\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=every.js.map'
} [Function: logger]
____9999999____ {
  code: "import { exhaustAll } from './exhaustAll';\n" +
    'export var exhaust = exhaustAll;\n' +
    '//# sourceMappingURL=exhaust.js.map'
} [Function: logger]
____9999999____ {
  code: "import { exhaustMap } from './exhaustMap';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function exhaustAll() {\n' +
    '    return exhaustMap(identity);\n' +
    '}\n' +
    '//# sourceMappingURL=exhaustAll.js.map'
} [Function: logger]
____9999999____ {
  code: "import { map } from './map';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function exhaustMap(project, resultSelector) {\n' +
    '    if (resultSelector) {\n' +
    '        return function (source) {\n' +
    '            return source.pipe(exhaustMap(function (a, i) { return innerFrom(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }));\n' +
    '        };\n' +
    '    }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        var innerSub = null;\n' +
    '        var isComplete = false;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (outerValue) {\n' +
    '            if (!innerSub) {\n' +
    '                innerSub = createOperatorSubscriber(subscriber, undefined, function () {\n' +
    '                    innerSub = null;\n' +
    '                    isComplete && subscriber.complete();\n' +
    '                });\n' +
    '                innerFrom(project(outerValue, index++)).subscribe(innerSub);\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            isComplete = true;\n' +
    '            !innerSub && subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=exhaustMap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { mergeInternals } from './mergeInternals';\n" +
    'export function expand(project, concurrent, scheduler) {\n' +
    '    if (concurrent === void 0) { concurrent = Infinity; }\n' +
    '    concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        return mergeInternals(source, subscriber, project, concurrent, undefined, true, scheduler);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=expand.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function filter(predicate, thisArg) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=filter.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    'export function finalize(callback) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        try {\n' +
    '            source.subscribe(subscriber);\n' +
    '        }\n' +
    '        finally {\n' +
    '            subscriber.add(callback);\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=finalize.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function find(predicate, thisArg) {\n' +
    "    return operate(createFind(predicate, thisArg, 'value'));\n" +
    '}\n' +
    'export function createFind(predicate, thisArg, emit) {\n' +
    "    var findIndex = emit === 'index';\n" +
    '    return function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var i = index++;\n' +
    '            if (predicate.call(thisArg, value, i, source)) {\n' +
    '                subscriber.next(findIndex ? i : value);\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            subscriber.next(findIndex ? -1 : undefined);\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=find.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createFind } from './find';\n" +
    'export function findIndex(predicate, thisArg) {\n' +
    "    return operate(createFind(predicate, thisArg, 'index'));\n" +
    '}\n' +
    '//# sourceMappingURL=findIndex.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from '../util/EmptyError';\n" +
    "import { filter } from './filter';\n" +
    "import { take } from './take';\n" +
    "import { defaultIfEmpty } from './defaultIfEmpty';\n" +
    "import { throwIfEmpty } from './throwIfEmpty';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function first(predicate, defaultValue) {\n' +
    '    var hasDefaultValue = arguments.length >= 2;\n' +
    '    return function (source) {\n' +
    '        return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); }));\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=first.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function groupBy(keySelector, elementOrOptions, duration, connector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var element;\n' +
    "        if (!elementOrOptions || typeof elementOrOptions === 'function') {\n" +
    '            element = elementOrOptions;\n' +
    '        }\n' +
    '        else {\n' +
    '            (duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector);\n' +
    '        }\n' +
    '        var groups = new Map();\n' +
    '        var notify = function (cb) {\n' +
    '            groups.forEach(cb);\n' +
    '            cb(subscriber);\n' +
    '        };\n' +
    '        var handleError = function (err) { return notify(function (consumer) { return consumer.error(err); }); };\n' +
    '        var activeGroups = 0;\n' +
    '        var teardownAttempted = false;\n' +
    '        var groupBySourceSubscriber = new OperatorSubscriber(subscriber, function (value) {\n' +
    '            try {\n' +
    '                var key_1 = keySelector(value);\n' +
    '                var group_1 = groups.get(key_1);\n' +
    '                if (!group_1) {\n' +
    '                    groups.set(key_1, (group_1 = connector ? connector() : new Subject()));\n' +
    '                    var grouped = createGroupedObservable(key_1, group_1);\n' +
    '                    subscriber.next(grouped);\n' +
    '                    if (duration) {\n' +
    '                        var durationSubscriber_1 = createOperatorSubscriber(group_1, function () {\n' +
    '                            group_1.complete();\n' +
    '                            durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();\n' +
    '                        }, undefined, undefined, function () { return groups.delete(key_1); });\n' +
    '                        groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber_1));\n' +
    '                    }\n' +
    '                }\n' +
    '                group_1.next(element ? element(value) : value);\n' +
    '            }\n' +
    '            catch (err) {\n' +
    '                handleError(err);\n' +
    '            }\n' +
    '        }, function () { return notify(function (consumer) { return consumer.complete(); }); }, handleError, function () { return groups.clear(); }, function () {\n' +
    '            teardownAttempted = true;\n' +
    '            return activeGroups === 0;\n' +
    '        });\n' +
    '        source.subscribe(groupBySourceSubscriber);\n' +
    '        function createGroupedObservable(key, groupSubject) {\n' +
    '            var result = new Observable(function (groupSubscriber) {\n' +
    '                activeGroups++;\n' +
    '                var innerSub = groupSubject.subscribe(groupSubscriber);\n' +
    '                return function () {\n' +
    '                    innerSub.unsubscribe();\n' +
    '                    --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n' +
    '                };\n' +
    '            });\n' +
    '            result.key = key;\n' +
    '            return result;\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=groupBy.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    'export function ignoreElements() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, noop));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=ignoreElements.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function isEmpty() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '            subscriber.next(false);\n' +
    '            subscriber.complete();\n' +
    '        }, function () {\n' +
    '            subscriber.next(true);\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=isEmpty.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function map(project, thisArg) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            subscriber.next(project.call(thisArg, value, index++));\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=map.js.map'
} [Function: logger]
____9999999____ {
  code: "import { map } from './map';\n" +
    'export function mapTo(value) {\n' +
    '    return map(function () { return value; });\n' +
    '}\n' +
    '//# sourceMappingURL=mapTo.js.map'
} [Function: logger]
____9999999____ {
  code: "import { reduce } from './reduce';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function max(comparer) {\n' +
    '    return reduce(isFunction(comparer) ? function (x, y) { return (comparer(x, y) > 0 ? x : y); } : function (x, y) { return (x > y ? x : y); });\n' +
    '}\n' +
    '//# sourceMappingURL=max.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeMap } from './mergeMap';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function mergeAll(concurrent) {\n' +
    '    if (concurrent === void 0) { concurrent = Infinity; }\n' +
    '    return mergeMap(identity, concurrent);\n' +
    '}\n' +
    '//# sourceMappingURL=mergeAll.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeMap } from './mergeMap';\n" +
    'export var flatMap = mergeMap;\n' +
    '//# sourceMappingURL=flatMap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { mergeMap } from './mergeMap';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function mergeMapTo(innerObservable, resultSelector, concurrent) {\n' +
    '    if (concurrent === void 0) { concurrent = Infinity; }\n' +
    '    if (isFunction(resultSelector)) {\n' +
    '        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n' +
    '    }\n' +
    "    if (typeof resultSelector === 'number') {\n" +
    '        concurrent = resultSelector;\n' +
    '    }\n' +
    '    return mergeMap(function () { return innerObservable; }, concurrent);\n' +
    '}\n' +
    '//# sourceMappingURL=mergeMapTo.js.map'
} [Function: logger]
____9999999____ {
  code: "import { map } from './map';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { mergeInternals } from './mergeInternals';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function mergeMap(project, resultSelector, concurrent) {\n' +
    '    if (concurrent === void 0) { concurrent = Infinity; }\n' +
    '    if (isFunction(resultSelector)) {\n' +
    '        return mergeMap(function (a, i) { return map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom(project(a, i))); }, concurrent);\n' +
    '    }\n' +
    "    else if (typeof resultSelector === 'number') {\n" +
    '        concurrent = resultSelector;\n' +
    '    }\n' +
    '    return operate(function (source, subscriber) { return mergeInternals(source, subscriber, project, concurrent); });\n' +
    '}\n' +
    '//# sourceMappingURL=mergeMap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { mergeInternals } from './mergeInternals';\n" +
    'export function mergeScan(accumulator, seed, concurrent) {\n' +
    '    if (concurrent === void 0) { concurrent = Infinity; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var state = seed;\n' +
    '        return mergeInternals(source, subscriber, function (value, index) { return accumulator(state, value, index); }, concurrent, function (value) {\n' +
    '            state = value;\n' +
    '        }, false, undefined, function () { return (state = null); });\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=mergeScan.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from '../util/EmptyError';\n" +
    "import { filter } from './filter';\n" +
    "import { takeLast } from './takeLast';\n" +
    "import { throwIfEmpty } from './throwIfEmpty';\n" +
    "import { defaultIfEmpty } from './defaultIfEmpty';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function last(predicate, defaultValue) {\n' +
    '    var hasDefaultValue = arguments.length >= 2;\n' +
    '    return function (source) {\n' +
    '        return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); }));\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=last.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { merge } from './merge';\n" +
    'export function mergeWith() {\n' +
    '    var otherSources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        otherSources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return merge.apply(void 0, __spreadArray([], __read(otherSources)));\n' +
    '}\n' +
    '//# sourceMappingURL=mergeWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { reduce } from './reduce';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function min(comparer) {\n' +
    '    return reduce(isFunction(comparer) ? function (x, y) { return (comparer(x, y) < 0 ? x : y); } : function (x, y) { return (x < y ? x : y); });\n' +
    '}\n' +
    '//# sourceMappingURL=min.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Notification } from '../Notification';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function materialize() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            subscriber.next(Notification.createNext(value));\n' +
    '        }, function () {\n' +
    '            subscriber.next(Notification.createComplete());\n' +
    '            subscriber.complete();\n' +
    '        }, function (err) {\n' +
    '            subscriber.next(Notification.createError(err));\n' +
    '            subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=materialize.js.map'
} [Function: logger]
____9999999____ {
  code: "import { ConnectableObservable } from '../observable/ConnectableObservable';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    "import { connect } from './connect';\n" +
    'export function multicast(subjectOrSubjectFactory, selector) {\n' +
    '    var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };\n' +
    '    if (isFunction(selector)) {\n' +
    '        return connect(selector, {\n' +
    '            connector: subjectFactory,\n' +
    '        });\n' +
    '    }\n' +
    '    return function (source) { return new ConnectableObservable(source, subjectFactory); };\n' +
    '}\n' +
    '//# sourceMappingURL=multicast.js.map'
} [Function: logger]
____9999999____ {
  code: "import { executeSchedule } from '../util/executeSchedule';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function observeOn(scheduler, delay) {\n' +
    '    if (delay === void 0) { delay = 0; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=observeOn.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n" +
    'export function onErrorResumeNextWith() {\n' +
    '    var sources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        sources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var nextSources = argsOrArgArray(sources);\n' +
    '    return function (source) { return oERNCreate.apply(void 0, __spreadArray([source], __read(nextSources))); };\n' +
    '}\n' +
    'export var onErrorResumeNext = onErrorResumeNextWith;\n' +
    '//# sourceMappingURL=onErrorResumeNextWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function pairwise() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var prev;\n' +
    '        var hasPrev = false;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var p = prev;\n' +
    '            prev = value;\n' +
    '            hasPrev && subscriber.next([p, value]);\n' +
    '            hasPrev = true;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=pairwise.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { multicast } from './multicast';\n" +
    "import { connect } from './connect';\n" +
    'export function publish(selector) {\n' +
    '    return selector ? function (source) { return connect(selector)(source); } : function (source) { return multicast(new Subject())(source); };\n' +
    '}\n' +
    '//# sourceMappingURL=publish.js.map'
} [Function: logger]
____9999999____ {
  code: "import { map } from './map';\n" +
    'export function pluck() {\n' +
    '    var properties = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        properties[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var length = properties.length;\n' +
    '    if (length === 0) {\n' +
    "        throw new Error('list of properties cannot be empty.');\n" +
    '    }\n' +
    '    return map(function (x) {\n' +
    '        var currentProp = x;\n' +
    '        for (var i = 0; i < length; i++) {\n' +
    '            var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];\n' +
    "            if (typeof p !== 'undefined') {\n" +
    '                currentProp = p;\n' +
    '            }\n' +
    '            else {\n' +
    '                return undefined;\n' +
    '            }\n' +
    '        }\n' +
    '        return currentProp;\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=pluck.js.map'
} [Function: logger]
____9999999____ {
  code: "import { BehaviorSubject } from '../BehaviorSubject';\n" +
    "import { ConnectableObservable } from '../observable/ConnectableObservable';\n" +
    'export function publishBehavior(initialValue) {\n' +
    '    return function (source) {\n' +
    '        var subject = new BehaviorSubject(initialValue);\n' +
    '        return new ConnectableObservable(source, function () { return subject; });\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=publishBehavior.js.map'
} [Function: logger]
____9999999____ {
  code: "import { AsyncSubject } from '../AsyncSubject';\n" +
    "import { ConnectableObservable } from '../observable/ConnectableObservable';\n" +
    'export function publishLast() {\n' +
    '    return function (source) {\n' +
    '        var subject = new AsyncSubject();\n' +
    '        return new ConnectableObservable(source, function () { return subject; });\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=publishLast.js.map'
} [Function: logger]
____9999999____ {
  code: "import { ReplaySubject } from '../ReplaySubject';\n" +
    "import { multicast } from './multicast';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n' +
    '    if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n' +
    '        timestampProvider = selectorOrScheduler;\n' +
    '    }\n' +
    '    var selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n' +
    '    return function (source) { return multicast(new ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source); };\n' +
    '}\n' +
    '//# sourceMappingURL=publishReplay.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { raceInit } from '../observable/race';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function raceWith() {\n' +
    '    var otherSources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        otherSources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return !otherSources.length\n' +
    '        ? identity\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            raceInit(__spreadArray([source], __read(otherSources)))(subscriber);\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=raceWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function repeatWhen(notifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var innerSub;\n' +
    '        var syncResub = false;\n' +
    '        var completions$;\n' +
    '        var isNotifierComplete = false;\n' +
    '        var isMainComplete = false;\n' +
    '        var checkComplete = function () { return isMainComplete && isNotifierComplete && (subscriber.complete(), true); };\n' +
    '        var getCompletionSubject = function () {\n' +
    '            if (!completions$) {\n' +
    '                completions$ = new Subject();\n' +
    '                innerFrom(notifier(completions$)).subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '                    if (innerSub) {\n' +
    '                        subscribeForRepeatWhen();\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        syncResub = true;\n' +
    '                    }\n' +
    '                }, function () {\n' +
    '                    isNotifierComplete = true;\n' +
    '                    checkComplete();\n' +
    '                }));\n' +
    '            }\n' +
    '            return completions$;\n' +
    '        };\n' +
    '        var subscribeForRepeatWhen = function () {\n' +
    '            isMainComplete = false;\n' +
    '            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n' +
    '                isMainComplete = true;\n' +
    '                !checkComplete() && getCompletionSubject().next();\n' +
    '            }));\n' +
    '            if (syncResub) {\n' +
    '                innerSub.unsubscribe();\n' +
    '                innerSub = null;\n' +
    '                syncResub = false;\n' +
    '                subscribeForRepeatWhen();\n' +
    '            }\n' +
    '        };\n' +
    '        subscribeForRepeatWhen();\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=repeatWhen.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { identity } from '../util/identity';\n" +
    "import { timer } from '../observable/timer';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function retry(configOrCount) {\n' +
    '    if (configOrCount === void 0) { configOrCount = Infinity; }\n' +
    '    var config;\n' +
    "    if (configOrCount && typeof configOrCount === 'object') {\n" +
    '        config = configOrCount;\n' +
    '    }\n' +
    '    else {\n' +
    '        config = {\n' +
    '            count: configOrCount,\n' +
    '        };\n' +
    '    }\n' +
    '    var _a = config.count, count = _a === void 0 ? Infinity : _a, delay = config.delay, _b = config.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;\n' +
    '    return count <= 0\n' +
    '        ? identity\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            var soFar = 0;\n' +
    '            var innerSub;\n' +
    '            var subscribeForRetry = function () {\n' +
    '                var syncUnsub = false;\n' +
    '                innerSub = source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                    if (resetOnSuccess) {\n' +
    '                        soFar = 0;\n' +
    '                    }\n' +
    '                    subscriber.next(value);\n' +
    '                }, undefined, function (err) {\n' +
    '                    if (soFar++ < count) {\n' +
    '                        var resub_1 = function () {\n' +
    '                            if (innerSub) {\n' +
    '                                innerSub.unsubscribe();\n' +
    '                                innerSub = null;\n' +
    '                                subscribeForRetry();\n' +
    '                            }\n' +
    '                            else {\n' +
    '                                syncUnsub = true;\n' +
    '                            }\n' +
    '                        };\n' +
    '                        if (delay != null) {\n' +
    "                            var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n" +
    '                            var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n' +
    '                                notifierSubscriber_1.unsubscribe();\n' +
    '                                resub_1();\n' +
    '                            }, function () {\n' +
    '                                subscriber.complete();\n' +
    '                            });\n' +
    '                            notifier.subscribe(notifierSubscriber_1);\n' +
    '                        }\n' +
    '                        else {\n' +
    '                            resub_1();\n' +
    '                        }\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        subscriber.error(err);\n' +
    '                    }\n' +
    '                }));\n' +
    '                if (syncUnsub) {\n' +
    '                    innerSub.unsubscribe();\n' +
    '                    innerSub = null;\n' +
    '                    subscribeForRetry();\n' +
    '                }\n' +
    '            };\n' +
    '            subscribeForRetry();\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=retry.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function retryWhen(notifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var innerSub;\n' +
    '        var syncResub = false;\n' +
    '        var errors$;\n' +
    '        var subscribeForRetryWhen = function () {\n' +
    '            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n' +
    '                if (!errors$) {\n' +
    '                    errors$ = new Subject();\n' +
    '                    innerFrom(notifier(errors$)).subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '                        return innerSub ? subscribeForRetryWhen() : (syncResub = true);\n' +
    '                    }));\n' +
    '                }\n' +
    '                if (errors$) {\n' +
    '                    errors$.next(err);\n' +
    '                }\n' +
    '            }));\n' +
    '            if (syncResub) {\n' +
    '                innerSub.unsubscribe();\n' +
    '                innerSub = null;\n' +
    '                syncResub = false;\n' +
    '                subscribeForRetryWhen();\n' +
    '            }\n' +
    '        };\n' +
    '        subscribeForRetryWhen();\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=retryWhen.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { scanInternals } from './scanInternals';\n" +
    'export function scan(accumulator, seed) {\n' +
    '    return operate(scanInternals(accumulator, seed, arguments.length >= 2, true));\n' +
    '}\n' +
    '//# sourceMappingURL=scan.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { sample } from './sample';\n" +
    "import { interval } from '../observable/interval';\n" +
    'export function sampleTime(period, scheduler) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    return sample(interval(period, scheduler));\n' +
    '}\n' +
    '//# sourceMappingURL=sampleTime.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function refCount() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var connection = null;\n' +
    '        source._refCount++;\n' +
    '        var refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, function () {\n' +
    '            if (!source || source._refCount <= 0 || 0 < --source._refCount) {\n' +
    '                connection = null;\n' +
    '                return;\n' +
    '            }\n' +
    '            var sharedConnection = source._connection;\n' +
    '            var conn = connection;\n' +
    '            connection = null;\n' +
    '            if (sharedConnection && (!conn || sharedConnection === conn)) {\n' +
    '                sharedConnection.unsubscribe();\n' +
    '            }\n' +
    '            subscriber.unsubscribe();\n' +
    '        });\n' +
    '        source.subscribe(refCounter);\n' +
    '        if (!refCounter.closed) {\n' +
    '            connection = source.connect();\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=refCount.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function sequenceEqual(compareTo, comparator) {\n' +
    '    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var aState = createState();\n' +
    '        var bState = createState();\n' +
    '        var emit = function (isEqual) {\n' +
    '            subscriber.next(isEqual);\n' +
    '            subscriber.complete();\n' +
    '        };\n' +
    '        var createSubscriber = function (selfState, otherState) {\n' +
    '            var sequenceEqualSubscriber = createOperatorSubscriber(subscriber, function (a) {\n' +
    '                var buffer = otherState.buffer, complete = otherState.complete;\n' +
    '                if (buffer.length === 0) {\n' +
    '                    complete ? emit(false) : selfState.buffer.push(a);\n' +
    '                }\n' +
    '                else {\n' +
    '                    !comparator(a, buffer.shift()) && emit(false);\n' +
    '                }\n' +
    '            }, function () {\n' +
    '                selfState.complete = true;\n' +
    '                var complete = otherState.complete, buffer = otherState.buffer;\n' +
    '                complete && emit(buffer.length === 0);\n' +
    '                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n' +
    '            });\n' +
    '            return sequenceEqualSubscriber;\n' +
    '        };\n' +
    '        source.subscribe(createSubscriber(aState, bState));\n' +
    '        innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n' +
    '    });\n' +
    '}\n' +
    'function createState() {\n' +
    '    return {\n' +
    '        buffer: [],\n' +
    '        complete: false,\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=sequenceEqual.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function sample(notifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        var lastValue = null;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            hasValue = true;\n' +
    '            lastValue = value;\n' +
    '        }));\n' +
    '        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '            if (hasValue) {\n' +
    '                hasValue = false;\n' +
    '                var value = lastValue;\n' +
    '                lastValue = null;\n' +
    '                subscriber.next(value);\n' +
    '            }\n' +
    '        }, noop));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=sample.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EMPTY } from '../observable/empty';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { timer } from '../observable/timer';\n" +
    'export function repeat(countOrConfig) {\n' +
    '    var _a;\n' +
    '    var count = Infinity;\n' +
    '    var delay;\n' +
    '    if (countOrConfig != null) {\n' +
    "        if (typeof countOrConfig === 'object') {\n" +
    '            (_a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay);\n' +
    '        }\n' +
    '        else {\n' +
    '            count = countOrConfig;\n' +
    '        }\n' +
    '    }\n' +
    '    return count <= 0\n' +
    '        ? function () { return EMPTY; }\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            var soFar = 0;\n' +
    '            var sourceSub;\n' +
    '            var resubscribe = function () {\n' +
    '                sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n' +
    '                sourceSub = null;\n' +
    '                if (delay != null) {\n' +
    "                    var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n" +
    '                    var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n' +
    '                        notifierSubscriber_1.unsubscribe();\n' +
    '                        subscribeToSource();\n' +
    '                    });\n' +
    '                    notifier.subscribe(notifierSubscriber_1);\n' +
    '                }\n' +
    '                else {\n' +
    '                    subscribeToSource();\n' +
    '                }\n' +
    '            };\n' +
    '            var subscribeToSource = function () {\n' +
    '                var syncUnsub = false;\n' +
    '                sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n' +
    '                    if (++soFar < count) {\n' +
    '                        if (sourceSub) {\n' +
    '                            resubscribe();\n' +
    '                        }\n' +
    '                        else {\n' +
    '                            syncUnsub = true;\n' +
    '                        }\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        subscriber.complete();\n' +
    '                    }\n' +
    '                }));\n' +
    '                if (syncUnsub) {\n' +
    '                    resubscribe();\n' +
    '                }\n' +
    '            };\n' +
    '            subscribeToSource();\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=repeat.js.map'
} [Function: logger]
____9999999____ {
  code: "import { scanInternals } from './scanInternals';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function reduce(accumulator, seed) {\n' +
    '    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n' +
    '}\n' +
    '//# sourceMappingURL=reduce.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { Subject } from '../Subject';\n" +
    "import { SafeSubscriber } from '../Subscriber';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function share(options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n' +
    '    return function (wrapperSource) {\n' +
    '        var connection;\n' +
    '        var resetConnection;\n' +
    '        var subject;\n' +
    '        var refCount = 0;\n' +
    '        var hasCompleted = false;\n' +
    '        var hasErrored = false;\n' +
    '        var cancelReset = function () {\n' +
    '            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n' +
    '            resetConnection = undefined;\n' +
    '        };\n' +
    '        var reset = function () {\n' +
    '            cancelReset();\n' +
    '            connection = subject = undefined;\n' +
    '            hasCompleted = hasErrored = false;\n' +
    '        };\n' +
    '        var resetAndUnsubscribe = function () {\n' +
    '            var conn = connection;\n' +
    '            reset();\n' +
    '            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n' +
    '        };\n' +
    '        return operate(function (source, subscriber) {\n' +
    '            refCount++;\n' +
    '            if (!hasErrored && !hasCompleted) {\n' +
    '                cancelReset();\n' +
    '            }\n' +
    '            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n' +
    '            subscriber.add(function () {\n' +
    '                refCount--;\n' +
    '                if (refCount === 0 && !hasErrored && !hasCompleted) {\n' +
    '                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n' +
    '                }\n' +
    '            });\n' +
    '            dest.subscribe(subscriber);\n' +
    '            if (!connection &&\n' +
    '                refCount > 0) {\n' +
    '                connection = new SafeSubscriber({\n' +
    '                    next: function (value) { return dest.next(value); },\n' +
    '                    error: function (err) {\n' +
    '                        hasErrored = true;\n' +
    '                        cancelReset();\n' +
    '                        resetConnection = handleReset(reset, resetOnError, err);\n' +
    '                        dest.error(err);\n' +
    '                    },\n' +
    '                    complete: function () {\n' +
    '                        hasCompleted = true;\n' +
    '                        cancelReset();\n' +
    '                        resetConnection = handleReset(reset, resetOnComplete);\n' +
    '                        dest.complete();\n' +
    '                    },\n' +
    '                });\n' +
    '                innerFrom(source).subscribe(connection);\n' +
    '            }\n' +
    '        })(wrapperSource);\n' +
    '    };\n' +
    '}\n' +
    'function handleReset(reset, on) {\n' +
    '    var args = [];\n' +
    '    for (var _i = 2; _i < arguments.length; _i++) {\n' +
    '        args[_i - 2] = arguments[_i];\n' +
    '    }\n' +
    '    if (on === true) {\n' +
    '        reset();\n' +
    '        return;\n' +
    '    }\n' +
    '    if (on === false) {\n' +
    '        return;\n' +
    '    }\n' +
    '    var onSubscriber = new SafeSubscriber({\n' +
    '        next: function () {\n' +
    '            onSubscriber.unsubscribe();\n' +
    '            reset();\n' +
    '        },\n' +
    '    });\n' +
    '    return innerFrom(on.apply(void 0, __spreadArray([], __read(args)))).subscribe(onSubscriber);\n' +
    '}\n' +
    '//# sourceMappingURL=share.js.map'
} [Function: logger]
____9999999____ {
  code: "import { ReplaySubject } from '../ReplaySubject';\n" +
    "import { share } from './share';\n" +
    'export function shareReplay(configOrBufferSize, windowTime, scheduler) {\n' +
    '    var _a, _b, _c;\n' +
    '    var bufferSize;\n' +
    '    var refCount = false;\n' +
    "    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n" +
    '        (_a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler);\n' +
    '    }\n' +
    '    else {\n' +
    '        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n' +
    '    }\n' +
    '    return share({\n' +
    '        connector: function () { return new ReplaySubject(bufferSize, windowTime, scheduler); },\n' +
    '        resetOnError: true,\n' +
    '        resetOnComplete: false,\n' +
    '        resetOnRefCountZero: refCount,\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=shareReplay.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from '../util/EmptyError';\n" +
    "import { SequenceError } from '../util/SequenceError';\n" +
    "import { NotFoundError } from '../util/NotFoundError';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function single(predicate) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        var singleValue;\n' +
    '        var seenValue = false;\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            seenValue = true;\n' +
    '            if (!predicate || predicate(value, index++, source)) {\n' +
    "                hasValue && subscriber.error(new SequenceError('Too many matching values'));\n" +
    '                hasValue = true;\n' +
    '                singleValue = value;\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            if (hasValue) {\n' +
    '                subscriber.next(singleValue);\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '            else {\n' +
    "                subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n" +
    '            }\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=single.js.map'
} [Function: logger]
____9999999____ {
  code: "import { filter } from './filter';\n" +
    'export function skip(count) {\n' +
    '    return filter(function (_, index) { return count <= index; });\n' +
    '}\n' +
    '//# sourceMappingURL=skip.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function skipWhile(predicate) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var taking = false;\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return (taking || (taking = !predicate(value, index++))) && subscriber.next(value); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=skipWhile.js.map'
} [Function: logger]
____9999999____ {
  code: "import { concat } from '../observable/concat';\n" +
    "import { popScheduler } from '../util/args';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function startWith() {\n' +
    '    var values = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        values[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(values);\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=startWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    'export function subscribeOn(scheduler, delay) {\n' +
    '    if (delay === void 0) { delay = 0; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=subscribeOn.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { noop } from '../util/noop';\n" +
    'export function skipUntil(notifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var taking = false;\n' +
    '        var skipSubscriber = createOperatorSubscriber(subscriber, function () {\n' +
    '            skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();\n' +
    '            taking = true;\n' +
    '        }, noop);\n' +
    '        innerFrom(notifier).subscribe(skipSubscriber);\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return taking && subscriber.next(value); }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=skipUntil.js.map'
} [Function: logger]
____9999999____ {
  code: "import { identity } from '../util/identity';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function skipLast(skipCount) {\n' +
    '    return skipCount <= 0\n' +
    '        ?\n' +
    '            identity\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            var ring = new Array(skipCount);\n' +
    '            var seen = 0;\n' +
    '            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                var valueIndex = seen++;\n' +
    '                if (valueIndex < skipCount) {\n' +
    '                    ring[valueIndex] = value;\n' +
    '                }\n' +
    '                else {\n' +
    '                    var index = valueIndex % skipCount;\n' +
    '                    var oldValue = ring[index];\n' +
    '                    ring[index] = value;\n' +
    '                    subscriber.next(oldValue);\n' +
    '                }\n' +
    '            }));\n' +
    '            return function () {\n' +
    '                ring = null;\n' +
    '            };\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=skipLast.js.map'
} [Function: logger]
____9999999____ {
  code: "import { switchMap } from './switchMap';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function switchAll() {\n' +
    '    return switchMap(identity);\n' +
    '}\n' +
    '//# sourceMappingURL=switchAll.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function switchMap(project, resultSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var innerSubscriber = null;\n' +
    '        var index = 0;\n' +
    '        var isComplete = false;\n' +
    '        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n' +
    '            var innerIndex = 0;\n' +
    '            var outerIndex = index++;\n' +
    '            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = createOperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {\n' +
    '                innerSubscriber = null;\n' +
    '                checkComplete();\n' +
    '            })));\n' +
    '        }, function () {\n' +
    '            isComplete = true;\n' +
    '            checkComplete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=switchMap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { switchMap } from './switchMap';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    'export function switchMapTo(innerObservable, resultSelector) {\n' +
    '    return isFunction(resultSelector) ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });\n' +
    '}\n' +
    '//# sourceMappingURL=switchMapTo.js.map'
} [Function: logger]
____9999999____ {
  code: "import { switchMap } from './switchMap';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function switchScan(accumulator, seed) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var state = seed;\n' +
    '        switchMap(function (value, index) { return accumulator(state, value, index); }, function (_, innerValue) { return ((state = innerValue), innerValue); })(source).subscribe(subscriber);\n' +
    '        return function () {\n' +
    '            state = null;\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=switchScan.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { noop } from '../util/noop';\n" +
    'export function takeUntil(notifier) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n' +
    '        !subscriber.closed && source.subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=takeUntil.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { EMPTY } from '../observable/empty';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function takeLast(count) {\n' +
    '    return count <= 0\n' +
    '        ? function () { return EMPTY; }\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            var buffer = [];\n' +
    '            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                buffer.push(value);\n' +
    '                count < buffer.length && buffer.shift();\n' +
    '            }, function () {\n' +
    '                var e_1, _a;\n' +
    '                try {\n' +
    '                    for (var buffer_1 = __values(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {\n' +
    '                        var value = buffer_1_1.value;\n' +
    '                        subscriber.next(value);\n' +
    '                    }\n' +
    '                }\n' +
    '                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '                finally {\n' +
    '                    try {\n' +
    '                        if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);\n' +
    '                    }\n' +
    '                    finally { if (e_1) throw e_1.error; }\n' +
    '                }\n' +
    '                subscriber.complete();\n' +
    '            }, undefined, function () {\n' +
    '                buffer = null;\n' +
    '            }));\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=takeLast.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function takeWhile(predicate, inclusive) {\n' +
    '    if (inclusive === void 0) { inclusive = false; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var result = predicate(value, index++);\n' +
    '            (result || inclusive) && subscriber.next(value);\n' +
    '            !result && subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=takeWhile.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { throttle } from './throttle';\n" +
    "import { timer } from '../observable/timer';\n" +
    'export function throttleTime(duration, scheduler, config) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    var duration$ = timer(duration, scheduler);\n' +
    '    return throttle(function () { return duration$; }, config);\n' +
    '}\n' +
    '//# sourceMappingURL=throttleTime.js.map'
} [Function: logger]
____9999999____ {
  code: "import { isFunction } from '../util/isFunction';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { identity } from '../util/identity';\n" +
    'export function tap(observerOrNext, error, complete) {\n' +
    '    var tapObserver = isFunction(observerOrNext) || error || complete\n' +
    '        ?\n' +
    '            { next: observerOrNext, error: error, complete: complete }\n' +
    '        : observerOrNext;\n' +
    '    return tapObserver\n' +
    '        ? operate(function (source, subscriber) {\n' +
    '            var _a;\n' +
    '            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n' +
    '            var isUnsub = true;\n' +
    '            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                var _a;\n' +
    '                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n' +
    '                subscriber.next(value);\n' +
    '            }, function () {\n' +
    '                var _a;\n' +
    '                isUnsub = false;\n' +
    '                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n' +
    '                subscriber.complete();\n' +
    '            }, function (err) {\n' +
    '                var _a;\n' +
    '                isUnsub = false;\n' +
    '                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n' +
    '                subscriber.error(err);\n' +
    '            }, function () {\n' +
    '                var _a, _b;\n' +
    '                if (isUnsub) {\n' +
    '                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n' +
    '                }\n' +
    '                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n' +
    '            }));\n' +
    '        })\n' +
    '        :\n' +
    '            identity;\n' +
    '}\n' +
    '//# sourceMappingURL=tap.js.map'
} [Function: logger]
____9999999____ {
  code: "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function throttle(durationSelector, config) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var _a = config !== null && config !== void 0 ? config : {}, _b = _a.leading, leading = _b === void 0 ? true : _b, _c = _a.trailing, trailing = _c === void 0 ? false : _c;\n' +
    '        var hasValue = false;\n' +
    '        var sendValue = null;\n' +
    '        var throttled = null;\n' +
    '        var isComplete = false;\n' +
    '        var endThrottling = function () {\n' +
    '            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n' +
    '            throttled = null;\n' +
    '            if (trailing) {\n' +
    '                send();\n' +
    '                isComplete && subscriber.complete();\n' +
    '            }\n' +
    '        };\n' +
    '        var cleanupThrottling = function () {\n' +
    '            throttled = null;\n' +
    '            isComplete && subscriber.complete();\n' +
    '        };\n' +
    '        var startThrottle = function (value) {\n' +
    '            return (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n' +
    '        };\n' +
    '        var send = function () {\n' +
    '            if (hasValue) {\n' +
    '                hasValue = false;\n' +
    '                var value = sendValue;\n' +
    '                sendValue = null;\n' +
    '                subscriber.next(value);\n' +
    '                !isComplete && startThrottle(value);\n' +
    '            }\n' +
    '        };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            hasValue = true;\n' +
    '            sendValue = value;\n' +
    '            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n' +
    '        }, function () {\n' +
    '            isComplete = true;\n' +
    '            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=throttle.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EmptyError } from '../util/EmptyError';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function throwIfEmpty(errorFactory) {\n' +
    '    if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var hasValue = false;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            hasValue = true;\n' +
    '            subscriber.next(value);\n' +
    '        }, function () { return (hasValue ? subscriber.complete() : subscriber.error(errorFactory())); }));\n' +
    '    });\n' +
    '}\n' +
    'function defaultErrorFactory() {\n' +
    '    return new EmptyError();\n' +
    '}\n' +
    '//# sourceMappingURL=throwIfEmpty.js.map'
} [Function: logger]
____9999999____ {
  code: "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function timeInterval(scheduler) {\n' +
    '    if (scheduler === void 0) { scheduler = asyncScheduler; }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var last = scheduler.now();\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var now = scheduler.now();\n' +
    '            var interval = now - last;\n' +
    '            last = now;\n' +
    '            subscriber.next(new TimeInterval(value, interval));\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    'var TimeInterval = (function () {\n' +
    '    function TimeInterval(value, interval) {\n' +
    '        this.value = value;\n' +
    '        this.interval = interval;\n' +
    '    }\n' +
    '    return TimeInterval;\n' +
    '}());\n' +
    'export { TimeInterval };\n' +
    '//# sourceMappingURL=timeInterval.js.map'
} [Function: logger]
____9999999____ {
  code: "import { async } from '../scheduler/async';\n" +
    "import { isValidDate } from '../util/isDate';\n" +
    "import { timeout } from './timeout';\n" +
    'export function timeoutWith(due, withObservable, scheduler) {\n' +
    '    var first;\n' +
    '    var each;\n' +
    '    var _with;\n' +
    '    scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async;\n' +
    '    if (isValidDate(due)) {\n' +
    '        first = due;\n' +
    '    }\n' +
    "    else if (typeof due === 'number') {\n" +
    '        each = due;\n' +
    '    }\n' +
    '    if (withObservable) {\n' +
    '        _with = function () { return withObservable; };\n' +
    '    }\n' +
    '    else {\n' +
    "        throw new TypeError('No observable provided to switch to');\n" +
    '    }\n' +
    '    if (first == null && each == null) {\n' +
    "        throw new TypeError('No timeout provided.');\n" +
    '    }\n' +
    '    return timeout({\n' +
    '        first: first,\n' +
    '        each: each,\n' +
    '        scheduler: scheduler,\n' +
    '        with: _with,\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=timeoutWith.js.map'
} [Function: logger]
____9999999____ {
  code: "import { EMPTY } from '../observable/empty';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function take(count) {\n' +
    '    return count <= 0\n' +
    '        ?\n' +
    '            function () { return EMPTY; }\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            var seen = 0;\n' +
    '            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                if (++seen <= count) {\n' +
    '                    subscriber.next(value);\n' +
    '                    if (count <= seen) {\n' +
    '                        subscriber.complete();\n' +
    '                    }\n' +
    '                }\n' +
    '            }));\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=take.js.map'
} [Function: logger]
____9999999____ {
  code: "import { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\n" +
    "import { map } from './map';\n" +
    'export function timestamp(timestampProvider) {\n' +
    '    if (timestampProvider === void 0) { timestampProvider = dateTimestampProvider; }\n' +
    '    return map(function (value) { return ({ value: value, timestamp: timestampProvider.now() }); });\n' +
    '}\n' +
    '//# sourceMappingURL=timestamp.js.map'
} [Function: logger]
____9999999____ {
  code: "import { reduce } from './reduce';\n" +
    "import { operate } from '../util/lift';\n" +
    'var arrReducer = function (arr, value) { return (arr.push(value), arr); };\n' +
    'export function toArray() {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        reduce(arrReducer, [])(source).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=toArray.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function window(windowBoundaries) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var windowSubject = new Subject();\n' +
    '        subscriber.next(windowSubject.asObservable());\n' +
    '        var errorHandler = function (err) {\n' +
    '            windowSubject.error(err);\n' +
    '            subscriber.error(err);\n' +
    '        };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value); }, function () {\n' +
    '            windowSubject.complete();\n' +
    '            subscriber.complete();\n' +
    '        }, errorHandler));\n' +
    '        innerFrom(windowBoundaries).subscribe(createOperatorSubscriber(subscriber, function () {\n' +
    '            windowSubject.complete();\n' +
    '            subscriber.next((windowSubject = new Subject()));\n' +
    '        }, noop, errorHandler));\n' +
    '        return function () {\n' +
    '            windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.unsubscribe();\n' +
    '            windowSubject = null;\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=window.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { Subject } from '../Subject';\n" +
    "import { Subscription } from '../Subscription';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    'export function windowToggle(openings, closingSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var windows = [];\n' +
    '        var handleError = function (err) {\n' +
    '            while (0 < windows.length) {\n' +
    '                windows.shift().error(err);\n' +
    '            }\n' +
    '            subscriber.error(err);\n' +
    '        };\n' +
    '        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n' +
    '            var window = new Subject();\n' +
    '            windows.push(window);\n' +
    '            var closingSubscription = new Subscription();\n' +
    '            var closeWindow = function () {\n' +
    '                arrRemove(windows, window);\n' +
    '                window.complete();\n' +
    '                closingSubscription.unsubscribe();\n' +
    '            };\n' +
    '            var closingNotifier;\n' +
    '            try {\n' +
    '                closingNotifier = innerFrom(closingSelector(openValue));\n' +
    '            }\n' +
    '            catch (err) {\n' +
    '                handleError(err);\n' +
    '                return;\n' +
    '            }\n' +
    '            subscriber.next(window.asObservable());\n' +
    '            closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n' +
    '        }, noop));\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var e_1, _a;\n' +
    '            var windowsCopy = windows.slice();\n' +
    '            try {\n' +
    '                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n' +
    '                    var window_1 = windowsCopy_1_1.value;\n' +
    '                    window_1.next(value);\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n' +
    '                }\n' +
    '                finally { if (e_1) throw e_1.error; }\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            while (0 < windows.length) {\n' +
    '                windows.shift().complete();\n' +
    '            }\n' +
    '            subscriber.complete();\n' +
    '        }, handleError, function () {\n' +
    '            while (0 < windows.length) {\n' +
    '                windows.shift().unsubscribe();\n' +
    '            }\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=windowToggle.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { asyncScheduler } from '../scheduler/async';\n" +
    "import { Subscription } from '../Subscription';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    "import { popScheduler } from '../util/args';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export function windowTime(windowTimeSpan) {\n' +
    '    var _a, _b;\n' +
    '    var otherArgs = [];\n' +
    '    for (var _i = 1; _i < arguments.length; _i++) {\n' +
    '        otherArgs[_i - 1] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n' +
    '    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n' +
    '    var maxWindowSize = otherArgs[1] || Infinity;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var windowRecords = [];\n' +
    '        var restartOnClose = false;\n' +
    '        var closeWindow = function (record) {\n' +
    '            var window = record.window, subs = record.subs;\n' +
    '            window.complete();\n' +
    '            subs.unsubscribe();\n' +
    '            arrRemove(windowRecords, record);\n' +
    '            restartOnClose && startWindow();\n' +
    '        };\n' +
    '        var startWindow = function () {\n' +
    '            if (windowRecords) {\n' +
    '                var subs = new Subscription();\n' +
    '                subscriber.add(subs);\n' +
    '                var window_1 = new Subject();\n' +
    '                var record_1 = {\n' +
    '                    window: window_1,\n' +
    '                    subs: subs,\n' +
    '                    seen: 0,\n' +
    '                };\n' +
    '                windowRecords.push(record_1);\n' +
    '                subscriber.next(window_1.asObservable());\n' +
    '                executeSchedule(subs, scheduler, function () { return closeWindow(record_1); }, windowTimeSpan);\n' +
    '            }\n' +
    '        };\n' +
    '        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n' +
    '            executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n' +
    '        }\n' +
    '        else {\n' +
    '            restartOnClose = true;\n' +
    '        }\n' +
    '        startWindow();\n' +
    '        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n' +
    '        var terminate = function (cb) {\n' +
    '            loop(function (_a) {\n' +
    '                var window = _a.window;\n' +
    '                return cb(window);\n' +
    '            });\n' +
    '            cb(subscriber);\n' +
    '            subscriber.unsubscribe();\n' +
    '        };\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            loop(function (record) {\n' +
    '                record.window.next(value);\n' +
    '                maxWindowSize <= ++record.seen && closeWindow(record);\n' +
    '            });\n' +
    '        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n' +
    '        return function () {\n' +
    '            windowRecords = null;\n' +
    '        };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=windowTime.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __values } from "tslib";\n' +
    "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function windowCount(windowSize, startWindowEvery) {\n' +
    '    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n' +
    '    var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var windows = [new Subject()];\n' +
    '        var starts = [];\n' +
    '        var count = 0;\n' +
    '        subscriber.next(windows[0].asObservable());\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var e_1, _a;\n' +
    '            try {\n' +
    '                for (var windows_1 = __values(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {\n' +
    '                    var window_1 = windows_1_1.value;\n' +
    '                    window_1.next(value);\n' +
    '                }\n' +
    '            }\n' +
    '            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '            finally {\n' +
    '                try {\n' +
    '                    if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);\n' +
    '                }\n' +
    '                finally { if (e_1) throw e_1.error; }\n' +
    '            }\n' +
    '            var c = count - windowSize + 1;\n' +
    '            if (c >= 0 && c % startEvery === 0) {\n' +
    '                windows.shift().complete();\n' +
    '            }\n' +
    '            if (++count % startEvery === 0) {\n' +
    '                var window_2 = new Subject();\n' +
    '                windows.push(window_2);\n' +
    '                subscriber.next(window_2.asObservable());\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            while (windows.length > 0) {\n' +
    '                windows.shift().complete();\n' +
    '            }\n' +
    '            subscriber.complete();\n' +
    '        }, function (err) {\n' +
    '            while (windows.length > 0) {\n' +
    '                windows.shift().error(err);\n' +
    '            }\n' +
    '            subscriber.error(err);\n' +
    '        }, function () {\n' +
    '            starts = null;\n' +
    '            windows = null;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=windowCount.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Subject } from '../Subject';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    'export function windowWhen(closingSelector) {\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var window;\n' +
    '        var closingSubscriber;\n' +
    '        var handleError = function (err) {\n' +
    '            window.error(err);\n' +
    '            subscriber.error(err);\n' +
    '        };\n' +
    '        var openWindow = function () {\n' +
    '            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n' +
    '            window === null || window === void 0 ? void 0 : window.complete();\n' +
    '            window = new Subject();\n' +
    '            subscriber.next(window.asObservable());\n' +
    '            var closingNotifier;\n' +
    '            try {\n' +
    '                closingNotifier = innerFrom(closingSelector());\n' +
    '            }\n' +
    '            catch (err) {\n' +
    '                handleError(err);\n' +
    '                return;\n' +
    '            }\n' +
    '            closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n' +
    '        };\n' +
    '        openWindow();\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return window.next(value); }, function () {\n' +
    '            window.complete();\n' +
    '            subscriber.complete();\n' +
    '        }, handleError, function () {\n' +
    '            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n' +
    '            window = null;\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=windowWhen.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { operate } from '../util/lift';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { identity } from '../util/identity';\n" +
    "import { noop } from '../util/noop';\n" +
    "import { popResultSelector } from '../util/args';\n" +
    'export function withLatestFrom() {\n' +
    '    var inputs = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        inputs[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var project = popResultSelector(inputs);\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        var len = inputs.length;\n' +
    '        var otherValues = new Array(len);\n' +
    '        var hasValue = inputs.map(function () { return false; });\n' +
    '        var ready = false;\n' +
    '        var _loop_1 = function (i) {\n' +
    '            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '                otherValues[i] = value;\n' +
    '                if (!ready && !hasValue[i]) {\n' +
    '                    hasValue[i] = true;\n' +
    '                    (ready = hasValue.every(identity)) && (hasValue = null);\n' +
    '                }\n' +
    '            }, noop));\n' +
    '        };\n' +
    '        for (var i = 0; i < len; i++) {\n' +
    '            _loop_1(i);\n' +
    '        }\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            if (ready) {\n' +
    '                var values = __spreadArray([value], __read(otherValues));\n' +
    '                subscriber.next(project ? project.apply(void 0, __spreadArray([], __read(values))) : values);\n' +
    '            }\n' +
    '        }));\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=withLatestFrom.js.map'
} [Function: logger]
____9999999____ {
  code: "import { zip } from '../observable/zip';\n" +
    "import { joinAllInternals } from './joinAllInternals';\n" +
    'export function zipAll(project) {\n' +
    '    return joinAllInternals(zip, project);\n' +
    '}\n' +
    '//# sourceMappingURL=zipAll.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { zip } from './zip';\n" +
    'export function zipWith() {\n' +
    '    var otherInputs = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        otherInputs[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return zip.apply(void 0, __spreadArray([], __read(otherInputs)));\n' +
    '}\n' +
    '//# sourceMappingURL=zipWith.js.map'
} [Function: logger]
____9999999____ {
  code: "export { composeServiceApi } from './composeServiceApi.mjs';\n" +
    "export { composeTransferHandler } from './composeTransferHandler.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export * as paycodeProxyApiAdapter from './paycode-proxy/api-adapter';\n" +
    "export * from './utils';\n" +
    "export * from './.generated/paycode-proxy/client';\n" +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLHNCQUFzQixNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsbUNBQW1DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBhcyBwYXljb2RlUHJveHlBcGlBZGFwdGVyIGZyb20gJy4vcGF5Y29kZS1wcm94eS9hcGktYWRhcHRlcic7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCAqIGZyb20gJy4vLmdlbmVyYXRlZC9wYXljb2RlLXByb3h5L2NsaWVudCc7XG4iXX0='
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { unauthenticatedHandler, getRetryDecider, parseJsonError, jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * The service name used to sign requests if the API requires authentication.\n' +
    ' */\n' +
    "const SERVICE_NAME = 'cognito-idp';\n" +
    '/**\n' +
    ' * The endpoint resolver function that returns the endpoint URL for a given region.\n' +
    ' */\n' +
    'const endpointResolver = ({ region }) => {\n' +
    '    const authConfig = Amplify.getConfig().Auth?.Cognito;\n' +
    '    const customURL = authConfig?.userPoolEndpoint;\n' +
    '    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n' +
    '    return {\n' +
    '        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n' +
    '    };\n' +
    '};\n' +
    '/**\n' +
    ' * A Cognito Identity-specific middleware that disables caching for all requests.\n' +
    ' */\n' +
    'const disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n' +
    "    request.headers['cache-control'] = 'no-store';\n" +
    '    return next(request);\n' +
    '};\n' +
    '/**\n' +
    ' * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n' +
    ' * disables caching.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const defaultConfig = {\n' +
    '    service: SERVICE_NAME,\n' +
    '    endpointResolver,\n' +
    '    retryDecider: getRetryDecider(parseJsonError),\n' +
    '    computeDelay: jitteredBackoff,\n' +
    '    userAgentValue: getAmplifyUserAgent(),\n' +
    "    cache: 'no-store',\n" +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSharedHeaders = (operation) => ({\n' +
    "    'content-type': 'application/x-amz-json-1.1',\n" +
    "    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n" +
    '});\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const buildHttpRpcRequest = ({ url }, headers, body) => ({\n' +
    '    headers,\n' +
    '    url,\n' +
    '    body,\n' +
    "    method: 'POST',\n" +
    '});\n' +
    '\n' +
    'export { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders };\n' +
    '//# sourceMappingURL=base.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/* tslint:disable */\n' +
    '// @ts-nocheck -> BigInteger is already a vended utility\n' +
    '// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n' +
    '//\n' +
    '// All public methods have been removed except the following:\n' +
    '//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n' +
    '//   toString (only radix 2, 4, 8, 16 and 32 supported)\n' +
    '//   negate\n' +
    '//   abs\n' +
    '//   compareTo\n' +
    '//   bitLength\n' +
    '//   mod\n' +
    '//   equals\n' +
    '//   add\n' +
    '//   subtract\n' +
    '//   multiply\n' +
    '//   divide\n' +
    '//   modPow\n' +
    '/*\n' +
    ' * Copyright (c) 2003-2005  Tom Wu\n' +
    ' * All Rights Reserved.\n' +
    ' *\n' +
    ' * Permission is hereby granted, free of charge, to any person obtaining\n' +
    ' * a copy of this software and associated documentation files (the\n' +
    ' * "Software"), to deal in the Software without restriction, including\n' +
    ' * without limitation the rights to use, copy, modify, merge, publish,\n' +
    ' * distribute, sublicense, and/or sell copies of the Software, and to\n' +
    ' * permit persons to whom the Software is furnished to do so, subject to\n' +
    ' * the following conditions:\n' +
    ' *\n' +
    ' * The above copyright notice and this permission notice shall be\n' +
    ' * included in all copies or substantial portions of the Software.\n' +
    ' *\n' +
    ' * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND,\n' +
    ' * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n' +
    ' * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n' +
    ' *\n' +
    ' * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n' +
    ' * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n' +
    ' * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n' +
    ' * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n' +
    ' * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n' +
    ' *\n' +
    ' * In addition, the following condition applies:\n' +
    ' *\n' +
    ' * All redistributions must retain an intact copy of this copyright notice\n' +
    ' * and disclaimer.\n' +
    ' */\n' +
    '// (public) Constructor\n' +
    'function BigInteger(a, b) {\n' +
    '    if (a != null)\n' +
    '        this.fromString(a, b);\n' +
    '}\n' +
    '// return new, unset BigInteger\n' +
    'function nbi() {\n' +
    '    return new BigInteger(null, null);\n' +
    '}\n' +
    '// Bits per digit\n' +
    'let dbits;\n' +
    '// JavaScript engine analysis\n' +
    'const canary = 0xdeadbeefcafe;\n' +
    'const j_lm = (canary & 0xffffff) === 0xefcafe;\n' +
    '// am: Compute w_j += (x*this_i), propagate carries,\n' +
    '// c is initial carry, returns final carry.\n' +
    '// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n' +
    '// We need to select the fastest one that works in this environment.\n' +
    '// am1: use a single mult and divide to get the high bits,\n' +
    '// max digit bits should be 26 because\n' +
    '// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n' +
    'function am1(i, x, w, j, c, n) {\n' +
    '    while (--n >= 0) {\n' +
    '        const v = x * this[i++] + w[j] + c;\n' +
    '        c = Math.floor(v / 0x4000000);\n' +
    '        w[j++] = v & 0x3ffffff;\n' +
    '    }\n' +
    '    return c;\n' +
    '}\n' +
    '// am2 avoids a big mult-and-extract completely.\n' +
    '// Max digit bits should be <= 30 because we do bitwise ops\n' +
    '// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n' +
    'function am2(i, x, w, j, c, n) {\n' +
    '    const xl = x & 0x7fff, xh = x >> 15;\n' +
    '    while (--n >= 0) {\n' +
    '        let l = this[i] & 0x7fff;\n' +
    '        const h = this[i++] >> 15;\n' +
    '        const m = xh * l + h * xl;\n' +
    '        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n' +
    '        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n' +
    '        w[j++] = l & 0x3fffffff;\n' +
    '    }\n' +
    '    return c;\n' +
    '}\n' +
    '// Alternately, set max digit bits to 28 since some\n' +
    '// browsers slow down when dealing with 32-bit numbers.\n' +
    'function am3(i, x, w, j, c, n) {\n' +
    '    const xl = x & 0x3fff, xh = x >> 14;\n' +
    '    while (--n >= 0) {\n' +
    '        let l = this[i] & 0x3fff;\n' +
    '        const h = this[i++] >> 14;\n' +
    '        const m = xh * l + h * xl;\n' +
    '        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n' +
    '        c = (l >> 28) + (m >> 14) + xh * h;\n' +
    '        w[j++] = l & 0xfffffff;\n' +
    '    }\n' +
    '    return c;\n' +
    '}\n' +
    "const inBrowser = typeof navigator !== 'undefined';\n" +
    "if (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n" +
    '    BigInteger.prototype.am = am2;\n' +
    '    dbits = 30;\n' +
    '}\n' +
    "else if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n" +
    '    BigInteger.prototype.am = am1;\n' +
    '    dbits = 26;\n' +
    '}\n' +
    'else {\n' +
    '    // Mozilla/Netscape seems to prefer am3\n' +
    '    BigInteger.prototype.am = am3;\n' +
    '    dbits = 28;\n' +
    '}\n' +
    'BigInteger.prototype.DB = dbits;\n' +
    'BigInteger.prototype.DM = (1 << dbits) - 1;\n' +
    'BigInteger.prototype.DV = 1 << dbits;\n' +
    'const BI_FP = 52;\n' +
    'BigInteger.prototype.FV = Math.pow(2, BI_FP);\n' +
    'BigInteger.prototype.F1 = BI_FP - dbits;\n' +
    'BigInteger.prototype.F2 = 2 * dbits - BI_FP;\n' +
    '// Digit conversions\n' +
    "const BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\n" +
    'const BI_RC = new Array();\n' +
    'let rr, vv;\n' +
    "rr = '0'.charCodeAt(0);\n" +
    'for (vv = 0; vv <= 9; ++vv)\n' +
    '    BI_RC[rr++] = vv;\n' +
    "rr = 'a'.charCodeAt(0);\n" +
    'for (vv = 10; vv < 36; ++vv)\n' +
    '    BI_RC[rr++] = vv;\n' +
    "rr = 'A'.charCodeAt(0);\n" +
    'for (vv = 10; vv < 36; ++vv)\n' +
    '    BI_RC[rr++] = vv;\n' +
    'function int2char(n) {\n' +
    '    return BI_RM.charAt(n);\n' +
    '}\n' +
    'function intAt(s, i) {\n' +
    '    var c = BI_RC[s.charCodeAt(i)];\n' +
    '    return c == null ? -1 : c;\n' +
    '}\n' +
    '// (protected) copy this to r\n' +
    'function bnpCopyTo(r) {\n' +
    '    for (var i = this.t - 1; i >= 0; --i)\n' +
    '        r[i] = this[i];\n' +
    '    r.t = this.t;\n' +
    '    r.s = this.s;\n' +
    '}\n' +
    '// (protected) set from integer value x, -DV <= x < DV\n' +
    'function bnpFromInt(x) {\n' +
    '    this.t = 1;\n' +
    '    this.s = x < 0 ? -1 : 0;\n' +
    '    if (x > 0)\n' +
    '        this[0] = x;\n' +
    '    else if (x < -1)\n' +
    '        this[0] = x + this.DV;\n' +
    '    else\n' +
    '        this.t = 0;\n' +
    '}\n' +
    '// return bigint initialized to value\n' +
    'function nbv(i) {\n' +
    '    var r = nbi();\n' +
    '    r.fromInt(i);\n' +
    '    return r;\n' +
    '}\n' +
    '// (protected) set from string and radix\n' +
    'function bnpFromString(s, b) {\n' +
    '    let k;\n' +
    '    if (b === 16)\n' +
    '        k = 4;\n' +
    '    else if (b === 8)\n' +
    '        k = 3;\n' +
    '    else if (b === 2)\n' +
    '        k = 1;\n' +
    '    else if (b === 32)\n' +
    '        k = 5;\n' +
    '    else if (b === 4)\n' +
    '        k = 2;\n' +
    '    else\n' +
    "        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n" +
    '    this.t = 0;\n' +
    '    this.s = 0;\n' +
    '    let i = s.length, mi = false, sh = 0;\n' +
    '    while (--i >= 0) {\n' +
    '        const x = intAt(s, i);\n' +
    '        if (x < 0) {\n' +
    "            if (s.charAt(i) === '-')\n" +
    '                mi = true;\n' +
    '            continue;\n' +
    '        }\n' +
    '        mi = false;\n' +
    '        if (sh === 0)\n' +
    '            this[this.t++] = x;\n' +
    '        else if (sh + k > this.DB) {\n' +
    '            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n' +
    '            this[this.t++] = x >> (this.DB - sh);\n' +
    '        }\n' +
    '        else\n' +
    '            this[this.t - 1] |= x << sh;\n' +
    '        sh += k;\n' +
    '        if (sh >= this.DB)\n' +
    '            sh -= this.DB;\n' +
    '    }\n' +
    '    this.clamp();\n' +
    '    if (mi)\n' +
    '        BigInteger.ZERO.subTo(this, this);\n' +
    '}\n' +
    '// (protected) clamp off excess high words\n' +
    'function bnpClamp() {\n' +
    '    var c = this.s & this.DM;\n' +
    '    while (this.t > 0 && this[this.t - 1] == c)\n' +
    '        --this.t;\n' +
    '}\n' +
    '// (public) return string representation in given radix\n' +
    'function bnToString(b) {\n' +
    '    if (this.s < 0)\n' +
    "        return '-' + this.negate().toString(b);\n" +
    '    var k;\n' +
    '    if (b == 16)\n' +
    '        k = 4;\n' +
    '    else if (b === 8)\n' +
    '        k = 3;\n' +
    '    else if (b === 2)\n' +
    '        k = 1;\n' +
    '    else if (b === 32)\n' +
    '        k = 5;\n' +
    '    else if (b === 4)\n' +
    '        k = 2;\n' +
    '    else\n' +
    "        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n" +
    "    let km = (1 << k) - 1, d, m = false, r = '', i = this.t;\n" +
    '    let p = this.DB - ((i * this.DB) % k);\n' +
    '    if (i-- > 0) {\n' +
    '        if (p < this.DB && (d = this[i] >> p) > 0) {\n' +
    '            m = true;\n' +
    '            r = int2char(d);\n' +
    '        }\n' +
    '        while (i >= 0) {\n' +
    '            if (p < k) {\n' +
    '                d = (this[i] & ((1 << p) - 1)) << (k - p);\n' +
    '                d |= this[--i] >> (p += this.DB - k);\n' +
    '            }\n' +
    '            else {\n' +
    '                d = (this[i] >> (p -= k)) & km;\n' +
    '                if (p <= 0) {\n' +
    '                    p += this.DB;\n' +
    '                    --i;\n' +
    '                }\n' +
    '            }\n' +
    '            if (d > 0)\n' +
    '                m = true;\n' +
    '            if (m)\n' +
    '                r += int2char(d);\n' +
    '        }\n' +
    '    }\n' +
    "    return m ? r : '0';\n" +
    '}\n' +
    '// (public) -this\n' +
    'function bnNegate() {\n' +
    '    var r = nbi();\n' +
    '    BigInteger.ZERO.subTo(this, r);\n' +
    '    return r;\n' +
    '}\n' +
    '// (public) |this|\n' +
    'function bnAbs() {\n' +
    '    return this.s < 0 ? this.negate() : this;\n' +
    '}\n' +
    '// (public) return + if this > a, - if this < a, 0 if equal\n' +
    'function bnCompareTo(a) {\n' +
    '    var r = this.s - a.s;\n' +
    '    if (r != 0)\n' +
    '        return r;\n' +
    '    var i = this.t;\n' +
    '    r = i - a.t;\n' +
    '    if (r != 0)\n' +
    '        return this.s < 0 ? -r : r;\n' +
    '    while (--i >= 0)\n' +
    '        if ((r = this[i] - a[i]) != 0)\n' +
    '            return r;\n' +
    '    return 0;\n' +
    '}\n' +
    '// returns bit length of the integer x\n' +
    'function nbits(x) {\n' +
    '    var r = 1, t;\n' +
    '    if ((t = x >>> 16) !== 0) {\n' +
    '        x = t;\n' +
    '        r += 16;\n' +
    '    }\n' +
    '    if ((t = x >> 8) !== 0) {\n' +
    '        x = t;\n' +
    '        r += 8;\n' +
    '    }\n' +
    '    if ((t = x >> 4) !== 0) {\n' +
    '        x = t;\n' +
    '        r += 4;\n' +
    '    }\n' +
    '    if ((t = x >> 2) !== 0) {\n' +
    '        x = t;\n' +
    '        r += 2;\n' +
    '    }\n' +
    '    if ((t = x >> 1) !== 0) {\n' +
    '        x = t;\n' +
    '        r += 1;\n' +
    '    }\n' +
    '    return r;\n' +
    '}\n' +
    '// (public) return the number of bits in "this"\n' +
    'function bnBitLength() {\n' +
    '    if (this.t <= 0)\n' +
    '        return 0;\n' +
    '    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n' +
    '}\n' +
    '// (protected) r = this << n*DB\n' +
    'function bnpDLShiftTo(n, r) {\n' +
    '    let i;\n' +
    '    for (i = this.t - 1; i >= 0; --i)\n' +
    '        r[i + n] = this[i];\n' +
    '    for (i = n - 1; i >= 0; --i)\n' +
    '        r[i] = 0;\n' +
    '    r.t = this.t + n;\n' +
    '    r.s = this.s;\n' +
    '}\n' +
    '// (protected) r = this >> n*DB\n' +
    'function bnpDRShiftTo(n, r) {\n' +
    '    for (let i = n; i < this.t; ++i)\n' +
    '        r[i - n] = this[i];\n' +
    '    r.t = Math.max(this.t - n, 0);\n' +
    '    r.s = this.s;\n' +
    '}\n' +
    '// (protected) r = this << n\n' +
    'function bnpLShiftTo(n, r) {\n' +
    '    const bs = n % this.DB;\n' +
    '    const cbs = this.DB - bs;\n' +
    '    const bm = (1 << cbs) - 1;\n' +
    '    let ds = Math.floor(n / this.DB), c = (this.s << bs) & this.DM, i;\n' +
    '    for (i = this.t - 1; i >= 0; --i) {\n' +
    '        r[i + ds + 1] = (this[i] >> cbs) | c;\n' +
    '        c = (this[i] & bm) << bs;\n' +
    '    }\n' +
    '    for (i = ds - 1; i >= 0; --i)\n' +
    '        r[i] = 0;\n' +
    '    r[ds] = c;\n' +
    '    r.t = this.t + ds + 1;\n' +
    '    r.s = this.s;\n' +
    '    r.clamp();\n' +
    '}\n' +
    '// (protected) r = this >> n\n' +
    'function bnpRShiftTo(n, r) {\n' +
    '    r.s = this.s;\n' +
    '    const ds = Math.floor(n / this.DB);\n' +
    '    if (ds >= this.t) {\n' +
    '        r.t = 0'... 11402 more characters
} [Function: logger]
____9999999____ {
  code: "import AuthenticationHelper from './AuthenticationHelper/AuthenticationHelper.mjs';\n" +
    "import BigInteger from './BigInteger/BigInteger.mjs';\n" +
    "import { calculateA } from './calculate/calculateA.mjs';\n" +
    "import { INIT_N } from './constants.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import { getHexFromBytes } from './getHexFromBytes.mjs';\n" +
    "import { getRandomBytes } from './getRandomBytes.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n' +
    ' *\n' +
    ' * @param userPoolName Cognito user pool name.\n' +
    ' * @returns An {@link AuthenticationHelper} instance.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getAuthenticationHelper = async (userPoolName) => {\n' +
    '    const N = new BigInteger(INIT_N, 16);\n' +
    "    const g = new BigInteger('2', 16);\n" +
    '    const a = generateRandomBigInteger();\n' +
    '    const A = await calculateA({ a, g, N });\n' +
    '    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n' +
    '};\n' +
    '/**\n' +
    ' * Generates a random BigInteger.\n' +
    ' *\n' +
    ' * @returns {BigInteger} a random value.\n' +
    ' */\n' +
    'const generateRandomBigInteger = () => {\n' +
    '    // This will be interpreted as a postive 128-bit integer\n' +
    '    const hexRandom = getHexFromBytes(getRandomBytes(128));\n' +
    '    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n' +
    '    return new BigInteger(hexRandom, 16);\n' +
    '};\n' +
    '\n' +
    'export { getAuthenticationHelper };\n' +
    '//# sourceMappingURL=getAuthenticationHelper.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { HEX_TO_SHORT } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n' +
    ' *\n' +
    ' * @param encoded The hexadecimal encoded string\n' +
    ' */\n' +
    'const getBytesFromHex = (encoded) => {\n' +
    '    if (encoded.length % 2 !== 0) {\n' +
    "        throw new Error('Hex encoded strings must have an even number length');\n" +
    '    }\n' +
    '    const out = new Uint8Array(encoded.length / 2);\n' +
    '    for (let i = 0; i < encoded.length; i += 2) {\n' +
    '        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n' +
    '        if (encodedByte in HEX_TO_SHORT) {\n' +
    '            out[i / 2] = HEX_TO_SHORT[encodedByte];\n' +
    '        }\n' +
    '        else {\n' +
    '            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n' +
    '        }\n' +
    '    }\n' +
    '    return out;\n' +
    '};\n' +
    '\n' +
    'export { getBytesFromHex };\n' +
    '//# sourceMappingURL=getBytesFromHex.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const MONTH_NAMES = [\n' +
    "    'Jan',\n" +
    "    'Feb',\n" +
    "    'Mar',\n" +
    "    'Apr',\n" +
    "    'May',\n" +
    "    'Jun',\n" +
    "    'Jul',\n" +
    "    'Aug',\n" +
    "    'Sep',\n" +
    "    'Oct',\n" +
    "    'Nov',\n" +
    "    'Dec',\n" +
    '];\n' +
    "const WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n" +
    'const getNowString = () => {\n' +
    '    const now = new Date();\n' +
    '    const weekDay = WEEK_NAMES[now.getUTCDay()];\n' +
    '    const month = MONTH_NAMES[now.getUTCMonth()];\n' +
    '    const day = now.getUTCDate();\n' +
    '    let hours = now.getUTCHours();\n' +
    '    if (hours < 10) {\n' +
    '        hours = `0${hours}`;\n' +
    '    }\n' +
    '    let minutes = now.getUTCMinutes();\n' +
    '    if (minutes < 10) {\n' +
    '        minutes = `0${minutes}`;\n' +
    '    }\n' +
    '    let seconds = now.getUTCSeconds();\n' +
    '    if (seconds < 10) {\n' +
    '        seconds = `0${seconds}`;\n' +
    '    }\n' +
    '    const year = now.getUTCFullYear();\n' +
    '    // ddd MMM D HH:mm:ss UTC YYYY\n' +
    '    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n' +
    '    return dateNow;\n' +
    '};\n' +
    '\n' +
    'export { getNowString };\n' +
    '//# sourceMappingURL=getNowString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { getDnsSuffix } from './endpoints/getDnsSuffix.mjs';\n" +
    "export { fetchTransferHandler } from './handlers/fetch.mjs';\n" +
    "export { unauthenticatedHandler } from './handlers/unauthenticated.mjs';\n" +
    "export { authenticatedHandler } from './handlers/authenticated.mjs';\n" +
    "export { signRequest } from './middleware/signing/signer/signatureV4/signRequest.mjs';\n" +
    "export { presignUrl } from './middleware/signing/signer/signatureV4/presignUrl.mjs';\n" +
    "export { EMPTY_HASH as EMPTY_SHA256_HASH } from './middleware/signing/signer/signatureV4/constants.mjs';\n" +
    "export { getHashedPayload } from './middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs';\n" +
    "export { extendedEncodeURIComponent } from './middleware/signing/utils/extendedEncodeURIComponent.mjs';\n" +
    "export { signingMiddlewareFactory } from './middleware/signing/middleware.mjs';\n" +
    "export { retryMiddlewareFactory } from './middleware/retry/middleware.mjs';\n" +
    "export { jitteredBackoff } from './middleware/retry/jitteredBackoff.mjs';\n" +
    "export { getRetryDecider } from './middleware/retry/defaultRetryDecider.mjs';\n" +
    "export { userAgentMiddlewareFactory } from './middleware/userAgent/middleware.mjs';\n" +
    "export { parseMetadata } from './serde/responseInfo.mjs';\n" +
    "export { parseJsonBody, parseJsonError } from './serde/json.mjs';\n" +
    "export { withMemoization } from './utils/memoization.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    "import { base64Encoder, base64Decoder } from '@aws-amplify/core/internals/utils';\n" +
    "import { textEncoder } from '../textEncoder/index.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n' +
    '    const bufUPIDaToB = textEncoder.convert(userPoolName);\n' +
    '    const bufUNaToB = textEncoder.convert(username);\n' +
    '    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n' +
    '    const bufDNaToB = textEncoder.convert(dateNow);\n' +
    '    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n' +
    '        bufUNaToB.byteLength +\n' +
    '        bufSBaToB.byteLength +\n' +
    '        bufDNaToB.byteLength);\n' +
    '    bufConcat.set(bufUPIDaToB, 0);\n' +
    '    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n' +
    '    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n' +
    '    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n' +
    '    const awsCryptoHash = new Sha256(hkdf);\n' +
    '    awsCryptoHash.update(bufConcat);\n' +
    '    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n' +
    '    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n' +
    '    return signatureString;\n' +
    '};\n' +
    'const urlB64ToUint8Array = (base64String) => {\n' +
    "    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n" +
    '    const base64 = (base64String + padding)\n' +
    "        .replace(/\\-/g, '+')\n" +
    "        .replace(/_/g, '/');\n" +
    '    const rawData = base64Decoder.convert(base64);\n' +
    '    const outputArray = new Uint8Array(rawData.length);\n' +
    '    for (let i = 0; i < rawData.length; ++i) {\n' +
    '        outputArray[i] = rawData.charCodeAt(i);\n' +
    '    }\n' +
    '    return outputArray;\n' +
    '};\n' +
    '\n' +
    'export { getSignatureString };\n' +
    '//# sourceMappingURL=getSignatureString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { oAuthStore } from './oAuthStore.mjs';\n" +
    "import { completeOAuthFlow } from './completeOAuthFlow.mjs';\n" +
    "import { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\n" +
    "import { getRedirectUrl } from './getRedirectUrl.mjs';\n" +
    "import { handleFailure } from './handleFailure.mjs';\n" +
    "import '../refreshAuthTokens.mjs';\n" +
    "import '../../tokenProvider/errorHelpers.mjs';\n" +
    "import '@aws-amplify/core';\n" +
    "import { cognitoUserPoolsTokenProvider } from '../../tokenProvider/tokenProvider.mjs';\n" +
    "import { addInflightPromise } from './inflightPromise.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const attemptCompleteOAuthFlow = async (authConfig) => {\n' +
    '    try {\n' +
    '        assertTokenProviderConfig(authConfig);\n' +
    '        assertOAuthConfig(authConfig);\n' +
    '        oAuthStore.setAuthConfig(authConfig);\n' +
    '    }\n' +
    '    catch (_) {\n' +
    '        // no-op\n' +
    '        // This should not happen as Amplify singleton checks the oauth config key\n' +
    "        // unless the oauth config object doesn't contain required properties\n" +
    '        return;\n' +
    '    }\n' +
    '    // No inflight OAuth\n' +
    '    if (!(await oAuthStore.loadOAuthInFlight())) {\n' +
    '        return;\n' +
    '    }\n' +
    '    // when there is valid oauth config and there is an inflight oauth flow, try\n' +
    '    // to block async calls that require fetching tokens before the oauth flow completes\n' +
    '    // e.g. getCurrentUser, fetchAuthSession etc.\n' +
    '    const asyncGetSessionBlocker = new Promise((resolve, _) => {\n' +
    '        addInflightPromise(resolve);\n' +
    '    });\n' +
    '    cognitoUserPoolsTokenProvider.setWaitForInflightOAuth(() => asyncGetSessionBlocker);\n' +
    '    try {\n' +
    '        const currentUrl = window.location.href;\n' +
    '        const { loginWith, userPoolClientId } = authConfig;\n' +
    '        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n' +
    '        const redirectUri = getRedirectUrl(redirectSignIn);\n' +
    '        await completeOAuthFlow({\n' +
    '            currentUrl,\n' +
    '            clientId: userPoolClientId,\n' +
    '            domain,\n' +
    '            redirectUri,\n' +
    '            responseType,\n' +
    '            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n' +
    '        });\n' +
    '    }\n' +
    '    catch (err) {\n' +
    '        await handleFailure(err);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { attemptCompleteOAuthFlow };\n' +
    '//# sourceMappingURL=attemptCompleteOAuthFlow.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const inflightPromises = [];\n' +
    'const addInflightPromise = (resolver) => {\n' +
    '    inflightPromises.push(resolver);\n' +
    '};\n' +
    'const resolveAndClearInflightPromises = () => {\n' +
    '    while (inflightPromises.length) {\n' +
    '        inflightPromises.pop()?.();\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { addInflightPromise, resolveAndClearInflightPromises };\n' +
    '//# sourceMappingURL=inflightPromise.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../../../../errors/AuthError.mjs';\n" +
    "import { AuthErrorTypes } from '../../../../types/Auth.mjs';\n" +
    "import { oAuthStore } from './oAuthStore.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\n" +
    "const validationFailedMessage = 'An error occurred while validating the state.';\n" +
    "const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\n" +
    'const validateState = async (state) => {\n' +
    '    const savedState = await oAuthStore.loadOAuthState();\n' +
    '    // This is because savedState only exists if the flow was initiated by Amplify\n' +
    '    const validatedState = state === savedState ? savedState : undefined;\n' +
    '    if (!validatedState) {\n' +
    '        throw new AuthError({\n' +
    '            name: AuthErrorTypes.OAuthSignInError,\n' +
    '            message: state === null ? flowCancelledMessage : validationFailedMessage,\n' +
    '            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n' +
    '        });\n' +
    '    }\n' +
    '    return validatedState;\n' +
    '};\n' +
    '\n' +
    'export { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n' +
    '//# sourceMappingURL=validateState.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { clearCredentials, Hub } from '@aws-amplify/core';\n" +
    "import { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n" +
    "import '../refreshAuthTokens.mjs';\n" +
    "import '../../tokenProvider/errorHelpers.mjs';\n" +
    "import { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const completeOAuthSignOut = async (store) => {\n' +
    '    await store.clearOAuthData();\n' +
    '    tokenOrchestrator.clearTokens();\n' +
    '    await clearCredentials();\n' +
    "    Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n" +
    '};\n' +
    '\n' +
    'export { completeOAuthSignOut };\n' +
    '//# sourceMappingURL=completeOAuthSignOut.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * scheduler.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    "'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\n" +
    'function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;\n' +
    '"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\n' +
    'function J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\n' +
    'function M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\n' +
    'exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\n' +
    'exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\n' +
    'exports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\n' +
    'exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\n' +
    'exports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n'
} [Function: logger]
____9999999____ {
  code: "import { assertOAuthConfig } from '@aws-amplify/core/internals/utils';\n" +
    "import { openAuthSession } from '../../../../utils/openAuthSession.mjs';\n" +
    "import { getRedirectUrl } from './getRedirectUrl.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const oAuthSignOutRedirect = async (authConfig, preferPrivateSession = false) => {\n' +
    '    assertOAuthConfig(authConfig);\n' +
    '    const { loginWith, userPoolClientId } = authConfig;\n' +
    '    const { domain, redirectSignOut } = loginWith.oauth;\n' +
    '    const signoutUri = getRedirectUrl(redirectSignOut);\n' +
    '    const oAuthLogoutEndpoint = `https://${domain}/logout?${Object.entries({\n' +
    '        client_id: userPoolClientId,\n' +
    '        logout_uri: encodeURIComponent(signoutUri),\n' +
    '    })\n' +
    '        .map(([k, v]) => `${k}=${v}`)\n' +
    "        .join('&')}`;\n" +
    '    return openAuthSession(oAuthLogoutEndpoint);\n' +
    '};\n' +
    '\n' +
    'export { oAuthSignOutRedirect };\n' +
    '//# sourceMappingURL=oAuthSignOutRedirect.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsEqual = require('./_baseIsEqual');\n" +
    '\n' +
    '/**\n' +
    ' * Performs a deep comparison between two values to determine if they are\n' +
    ' * equivalent.\n' +
    ' *\n' +
    ' * **Note:** This method supports comparing arrays, array buffers, booleans,\n' +
    ' * date objects, error objects, maps, numbers, `Object` objects, regexes,\n' +
    ' * sets, strings, symbols, and typed arrays. `Object` objects are compared\n' +
    ' * by their own, not inherited, enumerable properties. Functions and DOM\n' +
    ' * nodes are compared by strict equality, i.e. `===`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to compare.\n' +
    ' * @param {*} other The other value to compare.\n' +
    ' * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': 1 };\n" +
    " * var other = { 'a': 1 };\n" +
    ' *\n' +
    ' * _.isEqual(object, other);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * object === other;\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isEqual(value, other) {\n' +
    '  return baseIsEqual(value, other);\n' +
    '}\n' +
    '\n' +
    'module.exports = isEqual;\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { Hub } from '@aws-amplify/core';\n" +
    "import { getCurrentUser } from 'aws-amplify/auth';\n" +
    '\n' +
    '/**\n' +
    ' * Amplify Auth React hook\n' +
    ' * @internal\n' +
    ' */\n' +
    'const useAuth = () => {\n' +
    '    const [result, setResult] = React.useState({\n' +
    '        error: undefined,\n' +
    '        isLoading: true,\n' +
    '        user: undefined,\n' +
    '    });\n' +
    '    /**\n' +
    '     * Hub events like `tokenRefresh` will not give back the user object.\n' +
    '     * This util will be used to get current user after those events.\n' +
    '     */\n' +
    '    const fetchCurrentUser = React.useCallback(async () => {\n' +
    '        setResult((prevResult) => ({ ...prevResult, isLoading: true }));\n' +
    '        try {\n' +
    '            const user = await getCurrentUser();\n' +
    '            setResult({ user, isLoading: false });\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            const error = e;\n' +
    '            setResult({ error, isLoading: false });\n' +
    '        }\n' +
    '    }, []);\n' +
    '    const handleAuth = React.useCallback(({ payload }) => {\n' +
    '        switch (payload.event) {\n' +
    '            // success events\n' +
    "            case 'signedIn':\n" +
    "            case 'signUp':\n" +
    "            case 'autoSignIn': {\n" +
    '                setResult({ user: payload.data, isLoading: false });\n' +
    '                break;\n' +
    '            }\n' +
    "            case 'signedOut': {\n" +
    '                setResult({ user: undefined, isLoading: false });\n' +
    '                break;\n' +
    '            }\n' +
    '            // failure events\n' +
    "            case 'tokenRefresh_failure':\n" +
    "            case 'signIn_failure': {\n" +
    '                setResult({ error: payload.data, isLoading: false });\n' +
    '                break;\n' +
    '            }\n' +
    "            case 'autoSignIn_failure': {\n" +
    '                // autoSignIn just returns error message. Wrap it to an Error object\n' +
    '                setResult({ error: new Error(payload.message), isLoading: false });\n' +
    '                break;\n' +
    '            }\n' +
    '            // events that need another fetch\n' +
    "            case 'tokenRefresh': {\n" +
    '                fetchCurrentUser();\n' +
    '                break;\n' +
    '            }\n' +
    '        }\n' +
    '    }, [fetchCurrentUser]);\n' +
    '    React.useEffect(() => {\n' +
    "        const unsubscribe = Hub.listen('auth', handleAuth, 'useAuth');\n" +
    '        fetchCurrentUser(); // on init, see if user is already logged in\n' +
    '        return unsubscribe;\n' +
    '    }, [handleAuth, fetchCurrentUser]);\n' +
    '    return {\n' +
    '        ...result,\n' +
    '        /** @deprecated Fetch is handled automatically, do not use this directly */\n' +
    '        fetch: fetchCurrentUser,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { useAuth };\n'
} [Function: logger]
____9999999____ {
  code: "export * from '@aws-amplify/storage';\n//# sourceMappingURL=index.mjs.map\n"
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import '../../../primitives/Alert/Alert.mjs';\n" +
    "import '../../../primitives/Autocomplete/Autocomplete.mjs';\n" +
    "import '../../../primitives/Badge/Badge.mjs';\n" +
    "import '../../../primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "import '../../../primitives/Card/Card.mjs';\n" +
    "import '../../../primitives/CheckboxField/CheckboxField.mjs';\n" +
    "import '../../../primitives/Collection/Collection.mjs';\n" +
    "import '../../../primitives/Divider/Divider.mjs';\n" +
    "import '../../../primitives/DropZone/DropZone.mjs';\n" +
    "import '../../../primitives/Accordion/Accordion.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../../../primitives/Fieldset/Fieldset.mjs';\n" +
    "import '../../../primitives/Fieldset/useFieldset.mjs';\n" +
    "import '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Grid/Grid.mjs';\n" +
    "import '../../../primitives/Heading/Heading.mjs';\n" +
    "import '../../../primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "import '../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../primitives/View/View.mjs';\n" +
    "import '../../../primitives/Image/Image.mjs';\n" +
    "import '../../../primitives/Input/Input.mjs';\n" +
    "import '../../../primitives/Label/Label.mjs';\n" +
    "import '../../../primitives/Link/Link.mjs';\n" +
    "import '../../../primitives/Loader/Loader.mjs';\n" +
    "import '../../../primitives/Menu/Menu.mjs';\n" +
    "import '../../../primitives/Menu/MenuButton.mjs';\n" +
    "import '../../../primitives/Menu/MenuItem.mjs';\n" +
    "import '../../../primitives/Message/Message.mjs';\n" +
    "import '../../../primitives/Pagination/Pagination.mjs';\n" +
    "import { PasswordField } from '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import '../../../primitives/Placeholder/Placeholder.mjs';\n" +
    "import '../../../primitives/Radio/Radio.mjs';\n" +
    "import '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import '../../../primitives/Rating/Rating.mjs';\n" +
    "import '../../../primitives/ScrollView/ScrollView.mjs';\n" +
    "import '../../../primitives/SearchField/SearchField.mjs';\n" +
    "import '../../../primitives/SelectField/SelectField.mjs';\n" +
    "import '../../../primitives/SliderField/SliderField.mjs';\n" +
    "import '../../../primitives/StepperField/StepperField.mjs';\n" +
    "import '../../../primitives/SwitchField/SwitchField.mjs';\n" +
    "import '../../../primitives/Table/Table.mjs';\n" +
    "import '../../../primitives/Table/TableBody.mjs';\n" +
    "import '../../../primitives/Table/TableCell.mjs';\n" +
    "import '../../../primitives/Table/TableFoot.mjs';\n" +
    "import '../../../primitives/Table/TableHead.mjs';\n" +
    "import '../../../primitives/Table/TableRow.mjs';\n" +
    "import '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import '../../../primitives/Text/Text.mjs';\n" +
    "import '../../../primitives/TextAreaField/TextAreaField.mjs';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/ToggleButton/ToggleButton.mjs';\n" +
    "import '../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "import '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { ValidationErrors } from '../../shared/ValidationErrors.mjs';\n" +
    "import { DefaultErrorMessage } from '../shared/Defaults.mjs';\n" +
    '\n' +
    'const DefaultPasswordField = ({ fieldValidationErrors, label, ...rest }) => {\n' +
    '    return (React__default.createElement(React__default.Fragment, null,\n' +
    '        React__default.createElement(PasswordField, { ...rest, label: label }),\n' +
    '        fieldValidationErrors ? (React__default.createElement(ValidationErrors, { errors: fieldValidationErrors })) : null));\n' +
    '};\n' +
    'const DEFAULTS = {\n' +
    '    CurrentPasswordField: DefaultPasswordField,\n' +
    '    NewPasswordField: DefaultPasswordField,\n' +
    '    ConfirmPasswordField: DefaultPasswordField,\n' +
    '    SubmitButton: Button,\n' +
    '    ErrorMessage: DefaultErrorMessage,\n' +
    '};\n' +
    '\n' +
    'export { DEFAULTS as default };\n'
} [Function: logger]
____9999999____ {
  code: 'var ComponentClassName;\n' +
    '(function (ComponentClassName) {\n' +
    '    ComponentClassName["ChangePassword"] = "amplify-accountsettings-changepassword";\n' +
    '    ComponentClassName["DeleteUser"] = "amplify-accountsettings-deleteuser";\n' +
    '})(ComponentClassName || (ComponentClassName = {}));\n' +
    '\n' +
    'export { ComponentClassName };\n'
} [Function: logger]
____9999999____ {
  code: 'const defaultChangePasswordDisplayText = {\n' +
    "    confirmPasswordFieldLabel: 'Confirm Password',\n" +
    "    currentPasswordFieldLabel: 'Current Password',\n" +
    "    newPasswordFieldLabel: 'New Password',\n" +
    "    updatePasswordButtonText: 'Update password',\n" +
    '};\n' +
    'const defaultDeleteUserDisplayText = {\n' +
    "    cancelButtonText: 'Cancel',\n" +
    "    confirmDeleteButtonText: 'Delete',\n" +
    "    deleteAccountButtonText: 'Delete Account',\n" +
    "    warningText: 'Deleting your account is not reversible. You will lose access to your account and all data associated with it.',\n" +
    '};\n' +
    '\n' +
    'export { defaultChangePasswordDisplayText, defaultDeleteUserDisplayText };\n'
} [Function: logger]
____9999999____ {
  code: "export { Cache, ConsoleLogger, CookieStorage, Hub, I18n, ServiceWorker, defaultStorage, sessionStorage, sharedInMemoryStorage } from '@aws-amplify/core';\n" +
    "export { parseAWSExports as parseAmplifyConfig } from '@aws-amplify/core/internals/utils';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AuthAction, Category, InAppMessagingAction, GeoAction, StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    'const ACCOUNT_SETTINGS_INPUT_BASE = {\n' +
    '    apis: [AuthAction.DeleteUser, AuthAction.UpdatePassword],\n' +
    '    category: Category.Auth,\n' +
    '};\n' +
    'const AUTHENTICATOR_INPUT_BASE = {\n' +
    '    apis: [\n' +
    '        AuthAction.SignUp,\n' +
    '        AuthAction.ConfirmSignUp,\n' +
    '        AuthAction.ResendSignUpCode,\n' +
    '        AuthAction.SignIn,\n' +
    '        AuthAction.ConfirmSignIn,\n' +
    '        AuthAction.FetchUserAttributes,\n' +
    '        AuthAction.SignOut,\n' +
    '        AuthAction.ResetPassword,\n' +
    '        AuthAction.ConfirmResetPassword,\n' +
    '        AuthAction.SignInWithRedirect,\n' +
    '    ],\n' +
    '    category: Category.Auth,\n' +
    '};\n' +
    'const IN_APP_MESSAGING_INPUT_BASE = {\n' +
    '    apis: [InAppMessagingAction.NotifyMessageInteraction],\n' +
    '    category: Category.InAppMessaging,\n' +
    '};\n' +
    'const LOCATION_SEARCH_INPUT_BASE = {\n' +
    '    category: Category.Geo,\n' +
    '    apis: [\n' +
    '        GeoAction.SearchByText,\n' +
    '        GeoAction.SearchForSuggestions,\n' +
    '        GeoAction.SearchByPlaceId,\n' +
    '    ],\n' +
    '};\n' +
    'const MAP_VIEW_INPUT_BASE = {\n' +
    '    category: Category.Geo,\n' +
    '    apis: [],\n' +
    '};\n' +
    'const STORAGE_MANAGER_INPUT_BASE = {\n' +
    '    apis: [StorageAction.UploadData],\n' +
    '    category: Category.Storage,\n' +
    '};\n' +
    '\n' +
    'export { ACCOUNT_SETTINGS_INPUT_BASE, AUTHENTICATOR_INPUT_BASE, IN_APP_MESSAGING_INPUT_BASE, LOCATION_SEARCH_INPUT_BASE, MAP_VIEW_INPUT_BASE, STORAGE_MANAGER_INPUT_BASE };\n'
} [Function: logger]
____9999999____ {
  code: '// Breakpoint unit is in pixels\n' +
    'const breakpoints = {\n' +
    '    values: {\n' +
    '        base: 0,\n' +
    '        small: 480,\n' +
    '        medium: 768,\n' +
    '        large: 992,\n' +
    '        xl: 1280,\n' +
    '        xxl: 1536,\n' +
    '    },\n' +
    "    defaultBreakpoint: 'base',\n" +
    '};\n' +
    '\n' +
    'export { breakpoints };\n'
} [Function: logger]
____9999999____ {
  code: 'const getRoute = (state, actorState) => {\n' +
    "    // 'federatedSignIn' exists as a state on both the 'signInActor' and 'signUpActor',\n" +
    '    // match against the `actorState` initially to determine if the federated sign in flow\n' +
    '    // has begun, then which actor has begun the flow and return the corresponding `route`\n' +
    "    if (actorState?.matches('federatedSignIn')) {\n" +
    "        if (state.matches('signUpActor')) {\n" +
    "            return 'signUp';\n" +
    '        }\n' +
    "        if (state.matches('signInActor')) {\n" +
    "            return 'signIn';\n" +
    '        }\n' +
    '    }\n' +
    '    switch (true) {\n' +
    "        case state.matches('idle'):\n" +
    "            return 'idle';\n" +
    "        case state.matches('setup'):\n" +
    "            return 'setup';\n" +
    "        case state.matches('signOut'):\n" +
    "            return 'signOut';\n" +
    "        case state.matches('authenticated'):\n" +
    "            return 'authenticated';\n" +
    "        case actorState?.matches('confirmSignUp'):\n" +
    "        case actorState?.matches('resendSignUpCode'):\n" +
    "            return 'confirmSignUp';\n" +
    "        case actorState?.matches('confirmSignIn'):\n" +
    "            return 'confirmSignIn';\n" +
    "        case actorState?.matches('setupTotp.edit'):\n" +
    "        case actorState?.matches('setupTotp.submit'):\n" +
    "            return 'setupTotp';\n" +
    "        case actorState?.matches('signIn'):\n" +
    "            return 'signIn';\n" +
    "        case actorState?.matches('signUp'):\n" +
    "        case actorState?.matches('autoSignIn'):\n" +
    "            return 'signUp';\n" +
    "        case actorState?.matches('forceChangePassword'):\n" +
    "            return 'forceNewPassword';\n" +
    "        case actorState?.matches('forgotPassword'):\n" +
    "            return 'forgotPassword';\n" +
    "        case actorState?.matches('confirmResetPassword'):\n" +
    "            return 'confirmResetPassword';\n" +
    "        case actorState?.matches('selectUserAttributes'):\n" +
    "            return 'verifyUser';\n" +
    "        case actorState?.matches('confirmVerifyUserAttribute'):\n" +
    "            return 'confirmVerifyUser';\n" +
    "        case state.matches('getCurrentUser'):\n" +
    "        case actorState?.matches('fetchUserAttributes'):\n" +
    '            /**\n' +
    '             * This route is needed for autoSignIn to capture both the\n' +
    '             * autoSignIn.pending and the resolved states when the\n' +
    '             * signIn actor is running.\n' +
    '             */\n' +
    "            return 'transition';\n" +
    '        default:\n' +
    '            return null;\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { getRoute };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import '../../../primitives/Alert/Alert.mjs';\n" +
    "import '../../../primitives/Autocomplete/Autocomplete.mjs';\n" +
    "import '../../../primitives/Badge/Badge.mjs';\n" +
    "import '../../../primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "import { Card } from '../../../primitives/Card/Card.mjs';\n" +
    "import '../../../primitives/CheckboxField/CheckboxField.mjs';\n" +
    "import '../../../primitives/Collection/Collection.mjs';\n" +
    "import '../../../primitives/Divider/Divider.mjs';\n" +
    "import '../../../primitives/DropZone/DropZone.mjs';\n" +
    "import '../../../primitives/Accordion/Accordion.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../../../primitives/Fieldset/Fieldset.mjs';\n" +
    "import '../../../primitives/Fieldset/useFieldset.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Grid/Grid.mjs';\n" +
    "import '../../../primitives/Heading/Heading.mjs';\n" +
    "import '../../../primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "import '../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../primitives/View/View.mjs';\n" +
    "import '../../../primitives/Image/Image.mjs';\n" +
    "import '../../../primitives/Input/Input.mjs';\n" +
    "import '../../../primitives/Label/Label.mjs';\n" +
    "import '../../../primitives/Link/Link.mjs';\n" +
    "import '../../../primitives/Loader/Loader.mjs';\n" +
    "import '../../../primitives/Menu/Menu.mjs';\n" +
    "import '../../../primitives/Menu/MenuButton.mjs';\n" +
    "import '../../../primitives/Menu/MenuItem.mjs';\n" +
    "import '../../../primitives/Message/Message.mjs';\n" +
    "import '../../../primitives/Pagination/Pagination.mjs';\n" +
    "import '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import '../../../primitives/Placeholder/Placeholder.mjs';\n" +
    "import '../../../primitives/Radio/Radio.mjs';\n" +
    "import '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import '../../../primitives/Rating/Rating.mjs';\n" +
    "import '../../../primitives/ScrollView/ScrollView.mjs';\n" +
    "import '../../../primitives/SearchField/SearchField.mjs';\n" +
    "import '../../../primitives/SelectField/SelectField.mjs';\n" +
    "import '../../../primitives/SliderField/SliderField.mjs';\n" +
    "import '../../../primitives/StepperField/StepperField.mjs';\n" +
    "import '../../../primitives/SwitchField/SwitchField.mjs';\n" +
    "import '../../../primitives/Table/Table.mjs';\n" +
    "import '../../../primitives/Table/TableBody.mjs';\n" +
    "import '../../../primitives/Table/TableCell.mjs';\n" +
    "import '../../../primitives/Table/TableFoot.mjs';\n" +
    "import '../../../primitives/Table/TableHead.mjs';\n" +
    "import '../../../primitives/Table/TableRow.mjs';\n" +
    "import '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import { Text } from '../../../primitives/Text/Text.mjs';\n" +
    "import '../../../primitives/TextAreaField/TextAreaField.mjs';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/ToggleButton/ToggleButton.mjs';\n" +
    "import '../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "import '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { DefaultErrorMessage } from '../shared/Defaults.mjs';\n" +
    "import { defaultDeleteUserDisplayText } from '../utils/displayText.mjs';\n" +
    '\n' +
    'const DefaultWarningView = ({ displayText: overrideDisplayText, isDisabled, onCancel, onConfirm, }) => {\n' +
    '    // translations\n' +
    '    const displayText = {\n' +
    '        ...defaultDeleteUserDisplayText,\n' +
    '        ...overrideDisplayText,\n' +
    '    };\n' +
    '    const { cancelButtonText, confirmDeleteButtonText, warningText } = displayText;\n' +
    '    return (React__default.createElement(Card, null,\n' +
    '        React__default.createElement(Flex, { direction: "column" },\n' +
    '            React__default.createElement(Text, { color: "font.error" }, warningText),\n' +
    '            React__default.createElement(Flex, null,\n' +
    '                React__default.createElement(Button, { variation: "link", onClick: onCancel, isDisabled: isDisabled }, cancelButtonText),\n' +
    '                React__default.createElement(Button, { variation: "destructive", onClick: onConfirm, isDisabled: isDisabled }, confirmDeleteButtonText)))));\n' +
    '};\n' +
    'const DefaultDeleteButton = (props) => (React__default.createElement(Button, { ...props, variation: "warning" }));\n' +
    'const DEFAULTS = {\n' +
    '    ErrorMessage: DefaultErrorMessage,\n' +
    '    DeleteButton: DefaultDeleteButton,\n' +
    '    WarningView: DefaultWarningView,\n' +
    '};\n' +
    '\n' +
    'export { DEFAULTS as default };\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    "var _ = require('./es6_');\n" +
    '\n' +
    '/**\n' +
    ' * Performs an deep extend on the objects, from right to left.\n' +
    ' * @private\n' +
    ' * @param {Object[]} objects - An array of JS objects\n' +
    ' * @param {Function} collision - A function to be called when a merge collision happens.\n' +
    ' * @param {string[]} path - (for internal use) An array of strings which is the current path down the object when this is called recursively.\n' +
    ' * @returns {Object}\n' +
    ' */\n' +
    'function deepExtend(objects, collision, path) {\n' +
    '  if (objects == null)\n' +
    '    return {};\n' +
    '\n' +
    '  var src, copyIsArray, copy, name, options, clone,\n' +
    '    target = objects[0] || {},\n' +
    '    i = 1,\n' +
    '    length = objects.length;\n' +
    '\n' +
    '  path = path || [];\n' +
    '\n' +
    '  // Handle case when target is a string or something (possible in deep copy)\n' +
    "  if ( typeof target !== 'object' ) {\n" +
    '    target = {};\n' +
    '  }\n' +
    '\n' +
    '  for ( ; i < length; i++) {\n' +
    '    // Only deal with non-null/undefined values\n' +
    '    if ( (options = objects[ i ]) != null ) {\n' +
    '      // Extend the base object\n' +
    '      for (name in options) {\n' +
    '        if (!options.hasOwnProperty(name))\n' +
    '          continue;\n' +
    "        if (name === '__proto__')\n" +
    '          continue;\n' +
    '\n' +
    '        src = target[name];\n' +
    '        copy = options[name];\n' +
    '\n' +
    '        // Prevent never-ending loop\n' +
    '        if (target === copy) {\n' +
    '          continue;\n' +
    '        }\n' +
    '\n' +
    "        // Recurse if we're merging plain objects or arrays\n" +
    '        if ( copy && ( _.isPlainObject(copy) || (copyIsArray = _.isArray(copy)) ) ) {\n' +
    '          if ( copyIsArray ) {\n' +
    '            copyIsArray = false;\n' +
    '            clone = src && _.isArray(src) ? src : [];\n' +
    '          } else {\n' +
    '            clone = src && _.isPlainObject(src) ? src : {};\n' +
    '          }\n' +
    '\n' +
    '          var nextPath = path.slice(0);\n' +
    '          nextPath.push(name);\n' +
    '\n' +
    '          // Never move original objects, clone them\n' +
    '          target[ name ] = deepExtend( [clone, copy], collision, nextPath );\n' +
    '\n' +
    "          // Don't bring in undefined values\n" +
    '        } else if ( copy !== undefined ) {\n' +
    "          if (src != null && typeof collision == 'function') {\n" +
    '            collision({target: target, copy: options, path: path, key: name});\n' +
    '          }\n' +
    '          target[ name ] = copy;\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return target;\n' +
    '}\n' +
    '\n' +
    'module.exports = deepExtend;\n'
} [Function: logger]
____9999999____ {
  code: "import { deDict as deDict$1 } from './authenticator/de.mjs';\n" +
    "import { enDict as enDict$1 } from './authenticator/en.mjs';\n" +
    "import { esDict as esDict$1 } from './authenticator/es.mjs';\n" +
    "import { frDict as frDict$1 } from './authenticator/fr.mjs';\n" +
    "import { itDict as itDict$1 } from './authenticator/it.mjs';\n" +
    "import { jaDict as jaDict$1 } from './authenticator/ja.mjs';\n" +
    "import { krDict as krDict$1 } from './authenticator/kr.mjs';\n" +
    "import { nbDict as nbDict$1 } from './authenticator/nb.mjs';\n" +
    "import { nlDict as nlDict$1 } from './authenticator/nl.mjs';\n" +
    "import { plDict as plDict$1 } from './authenticator/pl.mjs';\n" +
    "import { ptDict as ptDict$1 } from './authenticator/pt.mjs';\n" +
    "import { zhDict as zhDict$1 } from './authenticator/zh.mjs';\n" +
    "import { svDict as svDict$1 } from './authenticator/sv.mjs';\n" +
    "import { idDict as idDict$1 } from './authenticator/id.mjs';\n" +
    "import { trDict as trDict$1 } from './authenticator/tr.mjs';\n" +
    "import { ruDict as ruDict$1 } from './authenticator/ru.mjs';\n" +
    "import { heDict as heDict$1 } from './authenticator/he.mjs';\n" +
    "import { uaDict as uaDict$1 } from './authenticator/ua.mjs';\n" +
    "import { defaultTexts as defaultTexts$1 } from './authenticator/defaultTexts.mjs';\n" +
    '\n' +
    '//merge all the new module translations in respective locale constants\n' +
    'const deDict = { ...deDict$1 };\n' +
    'const enDict = {\n' +
    '    ...enDict$1,\n' +
    '};\n' +
    'const esDict = { ...esDict$1 };\n' +
    'const frDict = { ...frDict$1 };\n' +
    'const itDict = { ...itDict$1 };\n' +
    'const jaDict = { ...jaDict$1 };\n' +
    'const krDict = { ...krDict$1 };\n' +
    'const nbDict = { ...nbDict$1 };\n' +
    'const nlDict = { ...nlDict$1 };\n' +
    'const plDict = { ...plDict$1 };\n' +
    'const ptDict = { ...ptDict$1 };\n' +
    'const zhDict = { ...zhDict$1 };\n' +
    'const svDict = { ...svDict$1 };\n' +
    'const idDict = { ...idDict$1 };\n' +
    'const trDict = { ...trDict$1 };\n' +
    'const ruDict = { ...ruDict$1 };\n' +
    'const heDict = { ...heDict$1 };\n' +
    'const uaDict = { ...uaDict$1 };\n' +
    'const defaultTexts = {\n' +
    '    ...defaultTexts$1,\n' +
    '    // new module related default texts goes here\n' +
    '};\n' +
    '\n' +
    'export { deDict, defaultTexts, enDict, esDict, frDict, heDict, idDict, itDict, jaDict, krDict, nbDict, nlDict, plDict, ptDict, ruDict, svDict, trDict, uaDict, zhDict };\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    "var _ = require('./es6_');\n" +
    '\n' +
    '/**\n' +
    ' * Takes an plain javascript object and will make a flat array of all the leaf nodes.\n' +
    " * A leaf node in this context has a 'value' property. Potentially refactor this to\n" +
    ' * be more generic.\n' +
    ' * @private\n' +
    ' * @param  {Object} properties - The plain object you want flattened into an array.\n' +
    ' * @param  {Array} [to_ret=[]] - Properties array. This function is recursive therefore this is what gets passed along.\n' +
    ' * @return {Array}\n' +
    ' */\n' +
    'function flattenProperties(properties, to_ret) {\n' +
    '  to_ret = to_ret || [];\n' +
    '\n' +
    '  for(var name in properties) {\n' +
    '    if (properties.hasOwnProperty(name)) {\n' +
    "      // TODO: this is a bit fragile and arbitrary to stop when we get to a 'value' property.\n" +
    "      if (_.isPlainObject(properties[name]) && ('value' in properties[name])) {\n" +
    '        to_ret.push( properties[name] );\n' +
    '      } else if (_.isPlainObject(properties[name])) {\n' +
    '        flattenProperties(properties[name], to_ret);\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return to_ret;\n' +
    '}\n' +
    '\n' +
    '\n' +
    'module.exports = flattenProperties;\n'
} [Function: logger]
____9999999____ {
  code: "import { assign as assign$1, cancel as cancel$1, send as send$1, sendTo as sendTo$1, sendParent as sendParent$1, sendUpdate as sendUpdate$1, forwardTo as forwardTo$1, doneInvoke as doneInvoke$1, raise as raise$1, log as log$1, pure as pure$1, choose as choose$1, stop as stop$1 } from './actions.js';\n" +
    "import * as actions from './actions.js';\n" +
    'export { actions };\n' +
    "export { toActorRef } from './Actor.js';\n" +
    "export { Interpreter, InterpreterStatus, interpret, spawn } from './interpreter.js';\n" +
    "export { Machine, createMachine } from './Machine.js';\n" +
    "export { mapState } from './mapState.js';\n" +
    "export { matchState } from './match.js';\n" +
    "export { createSchema, t } from './schema.js';\n" +
    "export { State } from './State.js';\n" +
    "export { StateNode } from './StateNode.js';\n" +
    "export { spawnBehavior } from './behaviors.js';\n" +
    "export { ActionTypes, SpecialTargets } from './types.js';\n" +
    "export { matchesState, toEventObject, toObserver, toSCXMLEvent } from './utils.js';\n" +
    '\n' +
    'var assign = assign$1,\n' +
    '    cancel = cancel$1,\n' +
    '    send = send$1,\n' +
    '    sendTo = sendTo$1,\n' +
    '    sendParent = sendParent$1,\n' +
    '    sendUpdate = sendUpdate$1,\n' +
    '    forwardTo = forwardTo$1,\n' +
    '    doneInvoke = doneInvoke$1,\n' +
    '    raise = raise$1,\n' +
    '    log = log$1,\n' +
    '    pure = pure$1,\n' +
    '    choose = choose$1,\n' +
    '    stop = stop$1;\n' +
    '\n' +
    'export { assign, cancel, choose, doneInvoke, forwardTo, log, pure, raise, send, sendParent, sendTo, sendUpdate, stop };\n'
} [Function: logger]
____9999999____ {
  code: "import { actions } from 'xstate';\n" +
    "import 'aws-amplify/utils';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import '../../types/authenticator/user.mjs';\n" +
    "import '../../types/authenticator/attributes.mjs';\n" +
    "import { trimValues } from '../../helpers/authenticator/utils.mjs';\n" +
    "import '../../helpers/accountSettings/utils.mjs';\n" +
    "import 'aws-amplify';\n" +
    "import { sanitizePhoneNumber, getUsernameSignUp } from './utils.mjs';\n" +
    '\n' +
    'const { assign } = actions;\n' +
    'const clearActorDoneData = assign({ actorDoneData: undefined });\n' +
    'const clearChallengeName = assign({ challengeName: undefined });\n' +
    'const clearMissingAttributes = assign({ missingAttributes: undefined });\n' +
    'const clearError = assign({ remoteError: undefined });\n' +
    'const clearFormValues = assign({ formValues: {} });\n' +
    'const clearTouched = assign({ touched: {} });\n' +
    'const clearUser = assign({ user: undefined });\n' +
    'const clearValidationError = assign({ validationError: {} });\n' +
    '/**\n' +
    ' * "set" actions\n' +
    ' */\n' +
    'const setTotpSecretCode = assign({\n' +
    '    totpSecretCode: (_, { data }) => {\n' +
    '        const { sharedSecret } = (data.nextStep?.totpSetupDetails ??\n' +
    '            {});\n' +
    '        return sharedSecret;\n' +
    '    },\n' +
    '});\n' +
    "const setSignInStep = assign({ step: 'SIGN_IN' });\n" +
    'const setShouldVerifyUserAttributeStep = assign({\n' +
    "    step: 'SHOULD_CONFIRM_USER_ATTRIBUTE',\n" +
    '});\n' +
    'const setConfirmAttributeCompleteStep = assign({\n' +
    "    step: 'CONFIRM_ATTRIBUTE_COMPLETE',\n" +
    '});\n' +
    '// map v6 `signInStep` to v5 `challengeName`\n' +
    'const setChallengeName = assign({\n' +
    '    challengeName: (_, { data }) => {\n' +
    '        const { signInStep } = data.nextStep;\n' +
    "        return signInStep === 'CONFIRM_SIGN_IN_WITH_SMS_CODE'\n" +
    "            ? 'SMS_MFA'\n" +
    "            : signInStep === 'CONFIRM_SIGN_IN_WITH_TOTP_CODE'\n" +
    "                ? 'SOFTWARE_TOKEN_MFA'\n" +
    '                : undefined;\n' +
    '    },\n' +
    '});\n' +
    'const setUsernameForgotPassword = assign({\n' +
    '    username: ({ formValues, loginMechanisms }) => {\n' +
    '        const loginMechanism = loginMechanisms[0];\n' +
    '        const { username, country_code } = formValues;\n' +
    "        if (loginMechanism === 'phone_number') {\n" +
    '            // forgot password `formValues` uses `username` for base phone number value\n' +
    '            // prefix `country_code` for full `username`\n' +
    '            return sanitizePhoneNumber(country_code, username);\n' +
    '        }\n' +
    `        // default username field for loginMechanism === 'email' is "username" for SignIn\n` +
    '        return username;\n' +
    '    },\n' +
    '});\n' +
    'const setUsernameSignUp = assign({ username: getUsernameSignUp });\n' +
    'const setUsernameSignIn = assign({\n' +
    '    username: ({ formValues, loginMechanisms }) => {\n' +
    '        const loginMechanism = loginMechanisms[0];\n' +
    '        const { username, country_code } = formValues;\n' +
    "        if (loginMechanism === 'phone_number') {\n" +
    '            // sign in `formValues` uses `username` for base phone number value\n' +
    '            // prefix `country_code` for full `username`\n' +
    '            return sanitizePhoneNumber(country_code, username);\n' +
    '        }\n' +
    '        // return `email` and `username`\n' +
    '        return username;\n' +
    '    },\n' +
    '});\n' +
    'const setNextSignInStep = assign({\n' +
    "    step: (_, { data }) => data.nextStep.signInStep === 'DONE'\n" +
    "        ? 'SIGN_IN_COMPLETE'\n" +
    '        : data.nextStep.signInStep,\n' +
    '});\n' +
    'const setNextSignUpStep = assign({\n' +
    "    step: (_, { data }) => data.nextStep.signUpStep === 'DONE'\n" +
    "        ? 'SIGN_UP_COMPLETE'\n" +
    '        : data.nextStep.signUpStep,\n' +
    '});\n' +
    'const setNextResetPasswordStep = assign({\n' +
    "    step: (_, { data }) => data.nextStep.resetPasswordStep === 'DONE'\n" +
    "        ? 'RESET_PASSWORD_COMPLETE'\n" +
    '        : data.nextStep.resetPasswordStep,\n' +
    '});\n' +
    'const setMissingAttributes = assign({\n' +
    '    missingAttributes: (_, { data }) => data.nextStep?.missingAttributes,\n' +
    '});\n' +
    'const setFieldErrors = assign({\n' +
    '    validationError: (_, { data }) => data,\n' +
    '});\n' +
    'const setRemoteError = assign({\n' +
    '    remoteError: (_, { data }) => {\n' +
    "        if (data.name === 'NoUserPoolError') {\n" +
    '            return `Configuration error (see console) – please contact the administrator`;\n' +
    '        }\n' +
    '        return data?.message || data;\n' +
    '    },\n' +
    '});\n' +
    'const setUser = assign({ user: (_, { data }) => data });\n' +
    'const resolveCodeDeliveryDetails = (details) => ({\n' +
    '    Destination: details.destination,\n' +
    '    DeliveryMedium: details.deliveryMedium,\n' +
    '    AttributeName: details.attributName,\n' +
    '});\n' +
    'const setCodeDeliveryDetails = assign({\n' +
    '    codeDeliveryDetails: (_, { data }) => {\n' +
    '        if (data\n' +
    '            ?.nextStep?.codeDeliveryDetails) {\n' +
    '            return resolveCodeDeliveryDetails(data\n' +
    '                .nextStep.codeDeliveryDetails);\n' +
    '        }\n' +
    '        return resolveCodeDeliveryDetails(data);\n' +
    '    },\n' +
    '});\n' +
    'const handleInput = assign({\n' +
    '    formValues: (context, { data }) => {\n' +
    '        const { name, value } = data;\n' +
    "        return { ...context['formValues'], [name]: value };\n" +
    '    },\n' +
    '});\n' +
    'const handleSubmit = assign({\n' +
    '    formValues: (context, { data }) => \n' +
    '    // do not trim password\n' +
    "    trimValues({ ...context['formValues'], ...data }, 'password'),\n" +
    '});\n' +
    'const handleBlur = assign({\n' +
    '    touched: (context, { data }) => ({\n' +
    "        ...context['touched'],\n" +
    '        [data.name]: true,\n' +
    '    }),\n' +
    '});\n' +
    'const setUnverifiedUserAttributes = assign({\n' +
    '    unverifiedUserAttributes: (_, { data }) => {\n' +
    '        const { email, phone_number } = data;\n' +
    '        const unverifiedUserAttributes = {\n' +
    '            ...(email && { email }),\n' +
    '            ...(phone_number && { phone_number }),\n' +
    '        };\n' +
    '        return unverifiedUserAttributes;\n' +
    '    },\n' +
    '});\n' +
    'const clearSelectedUserAttribute = assign({ selectedUserAttribute: undefined });\n' +
    'const setSelectedUserAttribute = assign({\n' +
    '    selectedUserAttribute: (context) => context.formValues?.unverifiedAttr,\n' +
    '});\n' +
    '// Maps to unexposed `ConfirmSignUpSignUpStep`\n' +
    "const setConfirmSignUpSignUpStep = assign({ step: 'CONFIRM_SIGN_UP' });\n" +
    'const ACTIONS = {\n' +
    '    clearActorDoneData,\n' +
    '    clearChallengeName,\n' +
    '    clearError,\n' +
    '    clearFormValues,\n' +
    '    clearMissingAttributes,\n' +
    '    clearSelectedUserAttribute,\n' +
    '    clearTouched,\n' +
    '    clearUser,\n' +
    '    clearValidationError,\n' +
    '    handleBlur,\n' +
    '    handleInput,\n' +
    '    handleSubmit,\n' +
    '    setChallengeName,\n' +
    '    setCodeDeliveryDetails,\n' +
    '    setFieldErrors,\n' +
    '    setMissingAttributes,\n' +
    '    setNextResetPasswordStep,\n' +
    '    setNextSignInStep,\n' +
    '    setNextSignUpStep,\n' +
    '    setRemoteError,\n' +
    '    setConfirmAttributeCompleteStep,\n' +
    '    setConfirmSignUpSignUpStep,\n' +
    '    setShouldVerifyUserAttributeStep,\n' +
    '    setSelectedUserAttribute,\n' +
    '    setSignInStep,\n' +
    '    setTotpSecretCode,\n' +
    '    setUser,\n' +
    '    setUnverifiedUserAttributes,\n' +
    '    setUsernameForgotPassword,\n' +
    '    setUsernameSignIn,\n' +
    '    setUsernameSignUp,\n' +
    '};\n' +
    '\n' +
    'export { ACTIONS as default };\n'
} [Function: logger]
____9999999____ {
  code: 'const SIGN_IN_STEP_MFA_CONFIRMATION = [\n' +
    "    'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n" +
    "    'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n" +
    '];\n' +
    '// response next step guards\n' +
    'const shouldConfirmSignInWithNewPassword = (_, { data }) => data?.nextStep.signInStep ===\n' +
    "    'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED';\n" +
    "const shouldResetPasswordFromSignIn = (_, { data }) => data?.nextStep?.signInStep === 'RESET_PASSWORD';\n" +
    "const shouldConfirmSignUpFromSignIn = (_, { data }) => data?.nextStep.signInStep === 'CONFIRM_SIGN_UP';\n" +
    "const shouldAutoSignIn = (_, { data }) => data?.nextStep.signUpStep === 'COMPLETE_AUTO_SIGN_IN';\n" +
    "const hasCompletedSignIn = (_, { data }) => data?.nextStep.signInStep === 'DONE';\n" +
    "const hasCompletedSignUp = (_, { data }) => data?.nextStep.signUpStep === 'DONE';\n" +
    "const hasCompletedResetPassword = (_, { data }) => data?.nextStep.resetPasswordStep === 'DONE';\n" +
    '// actor done guards read `step` from actor exit event\n' +
    "const hasCompletedAttributeConfirmation = (_, { data }) => data?.step === 'CONFIRM_ATTRIBUTE_COMPLETE';\n" +
    "const isConfirmUserAttributeStep = (_, { data }) => data?.step === 'CONFIRM_ATTRIBUTE_WITH_CODE';\n" +
    "const isShouldConfirmUserAttributeStep = (_, { data }) => data?.step === 'SHOULD_CONFIRM_USER_ATTRIBUTE';\n" +
    "const isResetPasswordStep = (_, { data }) => data?.step === 'RESET_PASSWORD';\n" +
    "const isConfirmSignUpStep = (_, { data }) => data?.step === 'CONFIRM_SIGN_UP';\n" +
    '// actor entry guards read `step` from actor context\n' +
    'const shouldConfirmSignIn = ({ step }) => SIGN_IN_STEP_MFA_CONFIRMATION.includes(step);\n' +
    "const shouldSetupTotp = ({ step }) => step === 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP';\n" +
    "const shouldResetPassword = ({ step }) => step === 'RESET_PASSWORD';\n" +
    "const shouldConfirmResetPassword = ({ step }) => step === 'CONFIRM_RESET_PASSWORD_WITH_CODE';\n" +
    "const shouldConfirmSignUp = ({ step }) => step === 'CONFIRM_SIGN_UP';\n" +
    '// miscellaneous guards\n' +
    'const shouldVerifyAttribute = (_, { data }) => {\n' +
    '    const { phone_number_verified, email_verified } = data;\n' +
    '    // email/phone_verified is returned as a string\n' +
    "    const emailNotVerified = email_verified === undefined || email_verified === 'false';\n" +
    "    const phoneNotVerified = phone_number_verified === undefined || phone_number_verified === 'false';\n" +
    '    // only request verification if both email and phone are not verified\n' +
    '    return emailNotVerified && phoneNotVerified;\n' +
    '};\n' +
    '/**\n' +
    ' * This guard covers an edge case that exists in the current state of the UI.\n' +
    ' * As of now, our ConfirmSignUp screen only supports showing an input for a\n' +
    ' * confirmation code. However, a Cognito UserPool can instead verify users\n' +
    ' * through a link that gets emailed to them. If a user verifies through the\n' +
    ' * link and then they click on the "Resend Code" button, they will get an error\n' +
    ' * saying that the user has already been confirmed. If we encounter that error,\n' +
    ' * we want to just funnel them through the rest of the flow. In the future, we will\n' +
    ' * want to update our UI to support both confirmation codes and links.\n' +
    ' *\n' +
    ' * https://github.com/aws-amplify/amplify-ui/issues/219\n' +
    ' */\n' +
    "const isUserAlreadyConfirmed = (_, { data }) => data.message === 'User is already confirmed.';\n" +
    'const GUARDS = {\n' +
    '    hasCompletedAttributeConfirmation,\n' +
    '    hasCompletedResetPassword,\n' +
    '    hasCompletedSignIn,\n' +
    '    hasCompletedSignUp,\n' +
    '    isConfirmSignUpStep,\n' +
    '    isConfirmUserAttributeStep,\n' +
    '    isResetPasswordStep,\n' +
    '    isShouldConfirmUserAttributeStep,\n' +
    '    isUserAlreadyConfirmed,\n' +
    '    shouldAutoSignIn,\n' +
    '    shouldConfirmResetPassword,\n' +
    '    shouldConfirmSignIn,\n' +
    '    shouldConfirmSignInWithNewPassword,\n' +
    '    shouldConfirmSignUp,\n' +
    '    shouldConfirmSignUpFromSignIn,\n' +
    '    shouldResetPassword,\n' +
    '    shouldResetPasswordFromSignIn,\n' +
    '    shouldSetupTotp,\n' +
    '    shouldVerifyAttribute,\n' +
    '};\n' +
    '\n' +
    'export { GUARDS as default };\n'
} [Function: logger]
____9999999____ {
  code: "import { createMachine, sendUpdate } from 'xstate';\n" +
    "import { runValidators } from '../../../validators/index.mjs';\n" +
    "import ACTIONS from '../actions.mjs';\n" +
    "import GUARDS from '../guards.mjs';\n" +
    "import { defaultServices } from '../defaultServices.mjs';\n" +
    '\n' +
    'function forgotPasswordActor({ services, }) {\n' +
    '    return createMachine({\n' +
    "        id: 'forgotPasswordActor',\n" +
    "        initial: 'init',\n" +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            init: {\n' +
    '                always: [\n' +
    '                    {\n' +
    "                        cond: 'shouldResetPassword',\n" +
    "                        target: 'confirmResetPassword',\n" +
    '                    },\n' +
    '                    {\n' +
    "                        cond: 'shouldConfirmResetPassword',\n" +
    "                        target: 'confirmResetPassword',\n" +
    '                    },\n' +
    '                    {\n' +
    "                        target: 'forgotPassword',\n" +
    '                    },\n' +
    '                ],\n' +
    '            },\n' +
    '            forgotPassword: {\n' +
    "                initial: 'edit',\n" +
    "                entry: 'sendUpdate',\n" +
    "                exit: ['clearError', 'clearTouched'],\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    "                            BLUR: { actions: 'handleBlur' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['sendUpdate', 'clearError', 'setUsernameForgotPassword'],\n" +
    '                        invoke: {\n' +
    "                            src: 'handleResetPassword',\n" +
    '                            onDone: {\n' +
    '                                actions: [\n' +
    "                                    'setCodeDeliveryDetails',\n" +
    "                                    'setNextResetPasswordStep',\n" +
    '                                ],\n' +
    "                                target: '#forgotPasswordActor.confirmResetPassword',\n" +
    '                            },\n' +
    '                            onError: {\n' +
    "                                actions: 'setRemoteError',\n" +
    "                                target: 'edit',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            confirmResetPassword: {\n' +
    "                type: 'parallel',\n" +
    "                exit: ['clearFormValues', 'clearError', 'clearTouched'],\n" +
    '                states: {\n' +
    '                    validation: {\n' +
    "                        initial: 'pending',\n" +
    '                        states: {\n' +
    '                            pending: {\n' +
    '                                invoke: {\n' +
    "                                    src: 'validateFields',\n" +
    '                                    onDone: {\n' +
    "                                        target: 'valid',\n" +
    "                                        actions: 'clearValidationError',\n" +
    '                                    },\n' +
    '                                    onError: {\n' +
    "                                        target: 'invalid',\n" +
    "                                        actions: 'setFieldErrors',\n" +
    '                                    },\n' +
    '                                },\n' +
    '                            },\n' +
    "                            valid: { entry: 'sendUpdate' },\n" +
    "                            invalid: { entry: 'sendUpdate' },\n" +
    '                        },\n' +
    '                        on: {\n' +
    '                            CHANGE: {\n' +
    "                                actions: 'handleInput',\n" +
    "                                target: '.pending',\n" +
    '                            },\n' +
    '                            BLUR: {\n' +
    "                                actions: 'handleBlur',\n" +
    "                                target: '.pending',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                    submission: {\n' +
    "                        initial: 'idle',\n" +
    '                        states: {\n' +
    '                            idle: {\n' +
    "                                entry: 'sendUpdate',\n" +
    '                                on: {\n' +
    "                                    SUBMIT: { actions: 'handleSubmit', target: 'validate' },\n" +
    "                                    RESEND: 'resendCode',\n" +
    "                                    CHANGE: { actions: 'handleInput' },\n" +
    "                                    BLUR: { actions: 'handleBlur' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            validate: {\n' +
    "                                entry: 'sendUpdate',\n" +
    '                                invoke: {\n' +
    "                                    src: 'validateFields',\n" +
    '                                    onDone: {\n' +
    "                                        target: 'pending',\n" +
    "                                        actions: 'clearValidationError',\n" +
    '                                    },\n' +
    '                                    onError: {\n' +
    "                                        target: 'idle',\n" +
    "                                        actions: 'setFieldErrors',\n" +
    '                                    },\n' +
    '                                },\n' +
    '                            },\n' +
    '                            resendCode: {\n' +
    "                                tags: 'pending',\n" +
    "                                entry: ['clearError', 'sendUpdate'],\n" +
    '                                invoke: {\n' +
    "                                    src: 'handleResetPassword',\n" +
    "                                    onDone: { target: 'idle' },\n" +
    "                                    onError: { actions: 'setRemoteError', target: 'idle' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            pending: {\n' +
    "                                tags: 'pending',\n" +
    "                                entry: ['clearError', 'sendUpdate'],\n" +
    '                                invoke: {\n' +
    "                                    src: 'handleConfirmResetPassword',\n" +
    '                                    onDone: [\n' +
    '                                        {\n' +
    "                                            cond: 'hasCompletedResetPassword',\n" +
    "                                            actions: 'setNextResetPasswordStep',\n" +
    "                                            target: '#forgotPasswordActor.resolved',\n" +
    '                                        },\n' +
    '                                        {\n' +
    "                                            actions: 'setSignInStep',\n" +
    "                                            target: '#forgotPasswordActor.resolved',\n" +
    '                                        },\n' +
    '                                    ],\n' +
    "                                    onError: { actions: 'setRemoteError', target: 'idle' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            resolved: {\n' +
    "                type: 'final',\n" +
    '                data: ({ step }) => ({ step }),\n' +
    '            },\n' +
    '        },\n' +
    '    }, {\n' +
    '        // sendUpdate is a HOC\n' +
    '        actions: { ...ACTIONS, sendUpdate: sendUpdate() },\n' +
    '        guards: GUARDS,\n' +
    '        services: {\n' +
    '            handleResetPassword({ username }) {\n' +
    '                return services.handleForgotPassword({ username });\n' +
    '            },\n' +
    '            handleConfirmResetPassword({ formValues, username }) {\n' +
    '                const { confirmation_code: confirmationCode, password: newPassword } = formValues;\n' +
    '                return services.handleForgotPasswordSubmit({\n' +
    '                    confirmationCode,\n' +
    '                    newPassword,\n' +
    '                    username,\n' +
    '                });\n' +
    '            },\n' +
    '            validateFields(context) {\n' +
    '                return runValidators(context.formValues, context.touched, context.passwordSettings, [\n' +
    '                    defaultServices.validateFormPassword,\n' +
    '                    defaultServices.validateConfirmPassword,\n' +
    '                ]);\n' +
    '            },\n' +
    '        },\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { forgotPasswordActor };\n'
} [Function: logger]
____9999999____ {
  code: "import { createMachine, sendUpdate } from 'xstate';\n" +
    "import { fetchUserAttributes, resetPassword, resendSignUpCode, confirmSignIn, signInWithRedirect } from 'aws-amplify/auth';\n" +
    "import { runValidators } from '../../../validators/index.mjs';\n" +
    "import ACTIONS from '../actions.mjs';\n" +
    "import { defaultServices } from '../defaultServices.mjs';\n" +
    "import GUARDS from '../guards.mjs';\n" +
    "import { getFederatedSignInState } from './utils.mjs';\n" +
    '\n' +
    'const handleSignInResponse = {\n' +
    '    onDone: [\n' +
    '        {\n' +
    "            cond: 'hasCompletedSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signInActor.fetchUserAttributes',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldConfirmSignInWithNewPassword',\n" +
    "            actions: ['setMissingAttributes', 'setNextSignInStep'],\n" +
    "            target: '#signInActor.forceChangePassword',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldResetPasswordFromSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signInActor.resetPassword',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldConfirmSignUpFromSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signInActor.resendSignUpCode',\n" +
    '        },\n' +
    '        {\n' +
    '            actions: [\n' +
    "                'setChallengeName',\n" +
    "                'setMissingAttributes',\n" +
    "                'setNextSignInStep',\n" +
    "                'setTotpSecretCode',\n" +
    '            ],\n' +
    "            target: '#signInActor.init',\n" +
    '        },\n' +
    '    ],\n' +
    "    onError: { actions: 'setRemoteError', target: 'edit' },\n" +
    '};\n' +
    'const handleFetchUserAttributesResponse = {\n' +
    '    onDone: [\n' +
    '        {\n' +
    "            cond: 'shouldVerifyAttribute',\n" +
    '            actions: [\n' +
    "                'setShouldVerifyUserAttributeStep',\n" +
    "                'setUnverifiedUserAttributes',\n" +
    '            ],\n' +
    "            target: '#signInActor.resolved',\n" +
    '        },\n' +
    '        {\n' +
    "            actions: 'setConfirmAttributeCompleteStep',\n" +
    "            target: '#signInActor.resolved',\n" +
    '        },\n' +
    '    ],\n' +
    '    onError: {\n' +
    "        actions: 'setConfirmAttributeCompleteStep',\n" +
    "        target: '#signInActor.resolved',\n" +
    '    },\n' +
    '};\n' +
    'function signInActor({ services }) {\n' +
    '    return createMachine({\n' +
    "        id: 'signInActor',\n" +
    "        initial: 'init',\n" +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            init: {\n' +
    '                always: [\n' +
    '                    {\n' +
    "                        cond: 'shouldConfirmSignIn',\n" +
    "                        target: 'confirmSignIn',\n" +
    '                    },\n' +
    '                    {\n' +
    "                        cond: 'shouldSetupTotp',\n" +
    "                        target: 'setupTotp',\n" +
    '                    },\n' +
    '                    {\n' +
    "                        cond: ({ step }) => step === 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n" +
    "                        actions: 'setActorDoneData',\n" +
    "                        target: 'forceChangePassword',\n" +
    '                    },\n' +
    "                    { target: 'signIn' },\n" +
    '                ],\n' +
    '            },\n' +
    "            federatedSignIn: getFederatedSignInState('signIn'),\n" +
    '            fetchUserAttributes: {\n' +
    '                invoke: {\n' +
    "                    src: 'fetchUserAttributes',\n" +
    '                    ...handleFetchUserAttributesResponse,\n' +
    '                },\n' +
    '            },\n' +
    '            resendSignUpCode: {\n' +
    '                invoke: {\n' +
    "                    src: 'handleResendSignUpCode',\n" +
    '                    onDone: {\n' +
    "                        actions: 'setCodeDeliveryDetails',\n" +
    "                        target: '#signInActor.resolved',\n" +
    '                    },\n' +
    '                    onError: {\n' +
    "                        actions: 'setRemoteError',\n" +
    "                        target: '#signInActor.signIn',\n" +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            resetPassword: {\n' +
    '                invoke: {\n' +
    "                    src: 'resetPassword',\n" +
    '                    onDone: [\n' +
    '                        {\n' +
    "                            actions: 'setCodeDeliveryDetails',\n" +
    "                            target: '#signInActor.resolved',\n" +
    '                        },\n' +
    '                    ],\n' +
    "                    onError: { actions: ['setRemoteError', 'sendUpdate'] },\n" +
    '                },\n' +
    '            },\n' +
    '            signIn: {\n' +
    "                initial: 'edit',\n" +
    "                exit: 'clearTouched',\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    "                            FEDERATED_SIGN_IN: { target: '#signInActor.federatedSignIn' },\n" +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['clearError', 'sendUpdate', 'setUsernameSignIn'],\n" +
    "                        exit: 'clearFormValues',\n" +
    "                        invoke: { src: 'handleSignIn', ...handleSignInResponse },\n" +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            confirmSignIn: {\n' +
    "                initial: 'edit',\n" +
    '                exit: [\n' +
    "                    'clearChallengeName',\n" +
    "                    'clearFormValues',\n" +
    "                    'clearError',\n" +
    "                    'clearTouched',\n" +
    '                ],\n' +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            SIGN_IN: '#signInActor.signIn',\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['clearError', 'sendUpdate'],\n" +
    '                        invoke: {\n' +
    "                            src: 'confirmSignIn',\n" +
    '                            ...handleSignInResponse,\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            forceChangePassword: {\n' +
    "                entry: 'sendUpdate',\n" +
    "                type: 'parallel',\n" +
    "                exit: ['clearFormValues', 'clearError', 'clearTouched'],\n" +
    '                states: {\n' +
    '                    validation: {\n' +
    "                        initial: 'pending',\n" +
    '                        states: {\n' +
    '                            pending: {\n' +
    '                                invoke: {\n' +
    "                                    src: 'validateFields',\n" +
    '                                    onDone: {\n' +
    "                                        target: 'valid',\n" +
    "                                        actions: 'clearValidationError',\n" +
    '                                    },\n' +
    '                                    onError: {\n' +
    "                                        target: 'invalid',\n" +
    "                                        actions: 'setFieldErrors',\n" +
    '                                    },\n' +
    '                                },\n' +
    '                            },\n' +
    "                            valid: { entry: 'sendUpdate' },\n" +
    "                            invalid: { entry: 'sendUpdate' },\n" +
    '                        },\n' +
    '                        on: {\n' +
    '                            SIGN_IN: {\n' +
    "                                actions: 'setSignInStep',\n" +
    "                                target: '#signInActor.resolved',\n" +
    '                            },\n' +
    '                            CHANGE: {\n' +
    "                                actions: 'handleInput',\n" +
    "                                target: '.pending',\n" +
    '                            },\n' +
    '                            BLUR: {\n' +
    "                                actions: 'handleBlur',\n" +
    "                                target: '.pending',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        initial: 'edit',\n" +
    "                        entry: 'clearError',\n" +
    '                        states: {\n' +
    '                            edit: {\n' +
    "                                entry: 'sendUpdate',\n" +
    '                                on: {\n' +
    "                                    SUBMIT: { actions: 'handleSubmit', target: 'validate' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            validate: {\n' +
    "                                entry: 'sendUpdate',\n" +
    '                                invoke: {\n' +
    "                                    src: 'validateFields',\n" +
    '                                    onDone: {\n' +
    "                                        actions: 'clearValidationError',\n" +
    "                                        target: 'pending',\n" +
    '                                    },\n' +
    "                                    onError: { actions: 'setFieldErrors', target: 'edit' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            pending: {\n' +
    "                                tags: 'pending',\n" +
    "                                entry: ['sendUpdate', 'clearError'],\n" +
    '                                invoke: {\n' +
    "                                    src: 'handleForceChangePassword',\n" +
    '                                    ...handleSignInResponse,\n' +
    '                                },\n' +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            setupTotp: {\n' +
    "                initial: 'edit',\n" +
    "                exit: ['clearFormValues', 'clearError', 'clearTouched'],\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            SIGN_IN: '#signInActor.signIn',\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['sendUpdate', 'clearError'],\n" +
    "                        invoke: { src: 'confirmSignIn', ...handleSignInResponse },\n" +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            resolved: {\n' +
    "                type: 'final',\n" +
    '                data: (context) => ({\n' +
    '                    '... 2598 more characters
} [Function: logger]
____9999999____ {
  code: "import { createMachine } from 'xstate';\n" +
    "import { signOut } from 'aws-amplify/auth';\n" +
    '\n' +
    'const signOutActor = () => {\n' +
    '    return createMachine({\n' +
    "        initial: 'pending',\n" +
    "        id: 'signOutActor',\n" +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            pending: {\n' +
    "                tags: 'pending',\n" +
    '                invoke: {\n' +
    "                    src: 'signOut',\n" +
    "                    onDone: 'resolved',\n" +
    "                    onError: 'rejected',\n" +
    '                },\n' +
    '            },\n' +
    "            resolved: { type: 'final' },\n" +
    "            rejected: { type: 'final' },\n" +
    '        },\n' +
    '    }, {\n' +
    '        services: {\n' +
    '            signOut: () => signOut(),\n' +
    '        },\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { signOutActor };\n'
} [Function: logger]
____9999999____ {
  code: "import { createMachine, sendUpdate } from 'xstate';\n" +
    "import { autoSignIn, fetchUserAttributes, resendSignUpCode, signInWithRedirect } from 'aws-amplify/auth';\n" +
    "import { getSignUpInput } from '../utils.mjs';\n" +
    "import { runValidators } from '../../../validators/index.mjs';\n" +
    "import ACTIONS from '../actions.mjs';\n" +
    "import GUARDS from '../guards.mjs';\n" +
    "import { getFederatedSignInState } from './utils.mjs';\n" +
    '\n' +
    'const handleResetPasswordResponse = {\n' +
    '    onDone: [\n' +
    "        { actions: 'setCodeDeliveryDetails', target: '#signUpActor.resolved' },\n" +
    '    ],\n' +
    "    onError: { actions: ['setRemoteError', 'sendUpdate'] },\n" +
    '};\n' +
    'const handleAutoSignInResponse = {\n' +
    '    onDone: [\n' +
    '        {\n' +
    "            cond: 'hasCompletedSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signUpActor.fetchUserAttributes',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldConfirmSignInWithNewPassword',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signUpActor.resolved',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldResetPasswordFromSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signUpActor.resetPassword',\n" +
    '        },\n' +
    '        {\n' +
    "            cond: 'shouldConfirmSignUpFromSignIn',\n" +
    "            actions: 'setNextSignInStep',\n" +
    "            target: '#signUpActor.resendSignUpCode',\n" +
    '        },\n' +
    '        {\n' +
    '            actions: [\n' +
    "                'setNextSignInStep',\n" +
    "                'setChallengeName',\n" +
    "                'setMissingAttributes',\n" +
    "                'setTotpSecretCode',\n" +
    '            ],\n' +
    "            target: '#signUpActor.resolved',\n" +
    '        },\n' +
    '    ],\n' +
    '    onError: {\n' +
    "        actions: 'setRemoteError',\n" +
    "        target: '#signUpActor.resolved',\n" +
    '    },\n' +
    '};\n' +
    'const handleFetchUserAttributesResponse = {\n' +
    '    onDone: [\n' +
    '        {\n' +
    "            cond: 'shouldVerifyAttribute',\n" +
    '            actions: [\n' +
    "                'setShouldVerifyUserAttributeStep',\n" +
    "                'setUnverifiedUserAttributes',\n" +
    '            ],\n' +
    "            target: '#signUpActor.resolved',\n" +
    '        },\n' +
    '        {\n' +
    "            actions: 'setConfirmAttributeCompleteStep',\n" +
    "            target: '#signUpActor.resolved',\n" +
    '        },\n' +
    '    ],\n' +
    '    onError: {\n' +
    "        actions: 'setConfirmAttributeCompleteStep',\n" +
    "        target: '#signUpActor.resolved',\n" +
    '    },\n' +
    '};\n' +
    'function signUpActor({ services }) {\n' +
    '    return createMachine({\n' +
    "        id: 'signUpActor',\n" +
    "        initial: 'init',\n" +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            init: {\n' +
    '                always: [\n' +
    "                    { cond: 'shouldConfirmSignUp', target: 'confirmSignUp' },\n" +
    "                    { target: 'signUp' },\n" +
    '                ],\n' +
    '            },\n' +
    '            autoSignIn: {\n' +
    "                tags: 'pending',\n" +
    "                invoke: { src: 'autoSignIn', ...handleAutoSignInResponse },\n" +
    '            },\n' +
    '            fetchUserAttributes: {\n' +
    '                invoke: {\n' +
    "                    src: 'fetchUserAttributes',\n" +
    '                    ...handleFetchUserAttributesResponse,\n' +
    '                },\n' +
    '            },\n' +
    "            federatedSignIn: getFederatedSignInState('signUp'),\n" +
    '            resetPassword: {\n' +
    "                invoke: { src: 'resetPassword', ...handleResetPasswordResponse },\n" +
    '            },\n' +
    '            resendSignUpCode: {\n' +
    "                tags: 'pending',\n" +
    "                entry: 'sendUpdate',\n" +
    "                exit: 'sendUpdate',\n" +
    '                invoke: {\n' +
    "                    src: 'resendSignUpCode',\n" +
    '                    onDone: {\n' +
    "                        actions: ['setCodeDeliveryDetails', 'sendUpdate'],\n" +
    "                        target: '#signUpActor.confirmSignUp',\n" +
    '                    },\n' +
    '                    onError: [\n' +
    '                        {\n' +
    "                            cond: 'isUserAlreadyConfirmed',\n" +
    "                            target: '#signUpActor.resolved',\n" +
    '                        },\n' +
    "                        { actions: ['setRemoteError', 'sendUpdate'] },\n" +
    '                    ],\n' +
    '                },\n' +
    '            },\n' +
    '            signUp: {\n' +
    "                type: 'parallel',\n" +
    "                exit: 'clearTouched',\n" +
    '                on: {\n' +
    "                    FEDERATED_SIGN_IN: { target: 'federatedSignIn' },\n" +
    '                },\n' +
    '                states: {\n' +
    '                    validation: {\n' +
    "                        initial: 'pending',\n" +
    '                        states: {\n' +
    '                            pending: {\n' +
    '                                invoke: {\n' +
    "                                    src: 'validateSignUp',\n" +
    '                                    onDone: {\n' +
    "                                        actions: 'clearValidationError',\n" +
    "                                        target: 'valid',\n" +
    '                                    },\n' +
    "                                    onError: { actions: 'setFieldErrors', target: 'invalid' },\n" +
    '                                },\n' +
    '                            },\n' +
    "                            valid: { entry: 'sendUpdate' },\n" +
    "                            invalid: { entry: 'sendUpdate' },\n" +
    '                        },\n' +
    '                        on: {\n' +
    "                            BLUR: { actions: 'handleBlur', target: '.pending' },\n" +
    "                            CHANGE: { actions: 'handleInput', target: '.pending' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submission: {\n' +
    "                        initial: 'idle',\n" +
    '                        states: {\n' +
    '                            idle: {\n' +
    "                                entry: ['sendUpdate'],\n" +
    '                                on: {\n' +
    "                                    SUBMIT: { actions: 'handleSubmit', target: 'validate' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            validate: {\n' +
    "                                entry: 'sendUpdate',\n" +
    '                                invoke: {\n' +
    "                                    src: 'validateSignUp',\n" +
    '                                    onDone: {\n' +
    "                                        target: 'handleSignUp',\n" +
    "                                        actions: 'clearValidationError',\n" +
    '                                    },\n' +
    "                                    onError: { actions: 'setFieldErrors', target: 'idle' },\n" +
    '                                },\n' +
    '                            },\n' +
    '                            handleSignUp: {\n' +
    "                                tags: 'pending',\n" +
    "                                entry: ['setUsernameSignUp', 'clearError'],\n" +
    "                                exit: 'sendUpdate',\n" +
    '                                invoke: {\n' +
    "                                    src: 'handleSignUp',\n" +
    '                                    onDone: [\n' +
    '                                        {\n' +
    "                                            cond: 'hasCompletedSignUp',\n" +
    "                                            actions: 'setNextSignUpStep',\n" +
    "                                            target: '#signUpActor.resolved',\n" +
    '                                        },\n' +
    '                                        {\n' +
    "                                            cond: 'shouldAutoSignIn',\n" +
    "                                            actions: 'setNextSignUpStep',\n" +
    "                                            target: '#signUpActor.autoSignIn',\n" +
    '                                        },\n' +
    '                                        {\n' +
    '                                            actions: [\n' +
    "                                                'setCodeDeliveryDetails',\n" +
    "                                                'setNextSignUpStep',\n" +
    '                                            ],\n' +
    "                                            target: '#signUpActor.init',\n" +
    '                                        },\n' +
    '                                    ],\n' +
    '                                    onError: {\n' +
    "                                        actions: ['sendUpdate', 'setRemoteError'],\n" +
    "                                        target: 'idle',\n" +
    '                                    },\n' +
    '                                },\n' +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            confirmSignUp: {\n' +
    "                initial: 'edit',\n" +
    "                entry: 'sendUpdate',\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    "                            BLUR: { actions: 'handleBlur' },\n" +
    "                            RESEND: '#signUpActor.resendSignUpCode',\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['clearError', 'sendUpdate'],\n" +
    '                        invoke: {\n' +
    "                            src: 'confirmSignUp',\n" +
    '                            onDone: [\n' +
    '                                {\n' +
    "                                    cond: 'shouldAutoSignIn',\n" +
    "                                    actions: ['setNextSignUpStep', 'clearFormValues'],\n" +
    "                                    target: '#signUpActor.autoSignIn',\n" +
    '                                },\n' +
    '                                {\n' +
    "                                    actions: 'setNextSignUpStep',\n" +
    "                                    target: '#signUpActor.init',\n" +
    '                                },\n' +
    '                            ],\n' +
    '                            onError: {\n' +
    "                                actions: ['setRemoteError', 'sendUpdate'],\n" +
    "                                target: 'edit',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            resolved: {\n' +
    "                type: 'final',\n" +
    '                data: (context) => ({\n' +
    '                    challengeName: context.challengeName,\n' +
    '                    missingAttributes: context.missingAttributes,\n' +
    '                    remoteError: context.remoteError,\n' +
    '                    step: context.step,\n' +
    '                    totpSecretCode: context.totpSecretCode,\n' +
    '                    username: context.username,\n' +
    '                    unverifiedUserAttributes: context.unverifiedUserAttributes,\n' +
    '                }),\n' +
    '            },\n' +
    '        },\n' +
    '    },'... 1822 more characters
} [Function: logger]
____9999999____ {
  code: "import { createMachine, sendUpdate } from 'xstate';\n" +
    "import { sendUserAttributeVerificationCode, confirmUserAttribute } from 'aws-amplify/auth';\n" +
    "import { runValidators } from '../../../validators/index.mjs';\n" +
    "import ACTIONS from '../actions.mjs';\n" +
    "import { defaultServices } from '../defaultServices.mjs';\n" +
    '\n' +
    'function verifyUserAttributesActor() {\n' +
    '    return createMachine({\n' +
    "        id: 'verifyUserAttributesActor',\n" +
    "        initial: 'selectUserAttributes',\n" +
    '        predictableActionArguments: true,\n' +
    '        states: {\n' +
    '            selectUserAttributes: {\n' +
    "                initial: 'edit',\n" +
    "                exit: ['clearError', 'clearTouched', 'sendUpdate'],\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            SKIP: { target: '#verifyUserAttributesActor.resolved' },\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['clearError', 'sendUpdate'],\n" +
    '                        invoke: {\n' +
    "                            src: 'sendUserAttributeVerificationCode',\n" +
    '                            onDone: {\n' +
    '                                actions: [\n' +
    "                                    'setSelectedUserAttribute',\n" +
    "                                    'setCodeDeliveryDetails',\n" +
    '                                ],\n' +
    "                                target: '#verifyUserAttributesActor.confirmVerifyUserAttribute',\n" +
    '                            },\n' +
    '                            onError: {\n' +
    "                                actions: 'setRemoteError',\n" +
    "                                target: 'edit',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '            confirmVerifyUserAttribute: {\n' +
    "                initial: 'edit',\n" +
    "                exit: ['clearError', 'clearFormValues', 'clearTouched'],\n" +
    '                states: {\n' +
    '                    edit: {\n' +
    "                        entry: 'sendUpdate',\n" +
    '                        on: {\n' +
    "                            SUBMIT: { actions: 'handleSubmit', target: 'submit' },\n" +
    "                            SKIP: '#verifyUserAttributesActor.resolved',\n" +
    "                            CHANGE: { actions: 'handleInput' },\n" +
    '                        },\n' +
    '                    },\n' +
    '                    submit: {\n' +
    "                        tags: 'pending',\n" +
    "                        entry: ['clearError', 'sendUpdate'],\n" +
    '                        invoke: {\n' +
    "                            src: 'confirmVerifyUserAttribute',\n" +
    '                            onDone: {\n' +
    '                                actions: [\n' +
    "                                    'setConfirmAttributeCompleteStep',\n" +
    "                                    'clearSelectedUserAttribute',\n" +
    '                                ],\n' +
    "                                target: '#verifyUserAttributesActor.resolved',\n" +
    '                            },\n' +
    '                            onError: {\n' +
    "                                actions: 'setRemoteError',\n" +
    "                                target: 'edit',\n" +
    '                            },\n' +
    '                        },\n' +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    "            resolved: { type: 'final', data: ({ step }) => ({ step }) },\n" +
    '        },\n' +
    '    }, {\n' +
    '        // sendUpdate is a HOC\n' +
    '        actions: { ...ACTIONS, sendUpdate: sendUpdate() },\n' +
    '        services: {\n' +
    '            sendUserAttributeVerificationCode({ formValues: { unverifiedAttr } }) {\n' +
    '                const input = {\n' +
    '                    userAttributeKey: unverifiedAttr,\n' +
    '                };\n' +
    '                return sendUserAttributeVerificationCode(input);\n' +
    '            },\n' +
    '            async confirmVerifyUserAttribute({ formValues: { confirmation_code: confirmationCode }, selectedUserAttribute, }) {\n' +
    '                const input = {\n' +
    '                    confirmationCode,\n' +
    '                    userAttributeKey: selectedUserAttribute,\n' +
    '                };\n' +
    '                return confirmUserAttribute(input);\n' +
    '            },\n' +
    '            async validateFields(context) {\n' +
    '                return runValidators(context.formValues, context.touched, context.passwordSettings, [\n' +
    '                    defaultServices.validateFormPassword,\n' +
    '                    defaultServices.validateConfirmPassword,\n' +
    '                ]);\n' +
    '            },\n' +
    '        },\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { verifyUserAttributesActor };\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from 'aws-amplify';\n" +
    "import { getCurrentUser, signIn, signUp, confirmSignIn, confirmSignUp, confirmResetPassword, resetPassword } from 'aws-amplify/auth';\n" +
    "import 'aws-amplify/utils';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import '../../types/authenticator/user.mjs';\n" +
    "import '../../types/authenticator/attributes.mjs';\n" +
    "import { hasSpecialChars } from '../../helpers/authenticator/utils.mjs';\n" +
    "import '../../helpers/accountSettings/utils.mjs';\n" +
    '\n' +
    '// Cognito does not allow a password length less then 8 characters\n' +
    'const DEFAULT_COGNITO_PASSWORD_MIN_LENGTH = 8;\n' +
    'const isInvalidUserAtributes = (userAttributes) => Array.isArray(userAttributes);\n' +
    'const parseUserAttributes = (userAttributes) => {\n' +
    '    if (!userAttributes) {\n' +
    '        return undefined;\n' +
    '    }\n' +
    '    // `aws-amplify` versions <= 6.0.5 return an array of `userAttributes` rather than an object\n' +
    '    if (isInvalidUserAtributes(userAttributes)) {\n' +
    '        return Object.entries(userAttributes).map(([_, value]) => Object.keys(value)[0]);\n' +
    '    }\n' +
    '    return Object.keys(userAttributes);\n' +
    '};\n' +
    'const defaultServices = {\n' +
    '    async getAmplifyConfig() {\n' +
    '        const result = Amplify.getConfig();\n' +
    '        const cliConfig = result.Auth?.Cognito;\n' +
    '        const { loginWith, userAttributes } = result.Auth?.Cognito ?? {};\n' +
    '        const parsedLoginMechanisms = loginWith\n' +
    '            ? Object.entries(loginWith)\n' +
    "                .filter(([key, _value]) => key !== 'oauth')\n" +
    '                .filter(([_key, value]) => !!value)\n' +
    '                .map((keyValueArray) => {\n' +
    "                return keyValueArray[0] === 'phone' // the key for phone_number is phone in getConfig but everywhere else we treat is as phone_number\n" +
    "                    ? 'phone_number'\n" +
    '                    : keyValueArray[0];\n' +
    '            })\n' +
    '            : undefined;\n' +
    '        const parsedSignupAttributes = parseUserAttributes(userAttributes);\n' +
    '        const parsedSocialProviders = loginWith?.oauth?.providers\n' +
    '            ? loginWith.oauth.providers?.map((provider) => provider.toString().toLowerCase())\n' +
    '            : undefined;\n' +
    '        return {\n' +
    '            ...cliConfig,\n' +
    '            loginMechanisms: parsedLoginMechanisms,\n' +
    '            signUpAttributes: parsedSignupAttributes,\n' +
    '            socialProviders: parsedSocialProviders,\n' +
    '        };\n' +
    '    },\n' +
    '    getCurrentUser,\n' +
    '    handleSignIn: signIn,\n' +
    '    handleSignUp: signUp,\n' +
    '    handleConfirmSignIn: confirmSignIn,\n' +
    '    handleConfirmSignUp: confirmSignUp,\n' +
    '    handleForgotPasswordSubmit: confirmResetPassword,\n' +
    '    handleForgotPassword: resetPassword,\n' +
    '    // Validation hooks for overriding\n' +
    '    async validateCustomSignUp(formData, touchData) { },\n' +
    '    async validateFormPassword(formData, touchData, passwordSettings) {\n' +
    '        const { password } = formData;\n' +
    '        const { password: touched_password } = touchData;\n' +
    '        /**\n' +
    '         * If the password is not touched,\n' +
    "         * or if the password settings are not set, we don't need to validate it.\n" +
    '         */\n' +
    '        if (!touched_password || !passwordSettings)\n' +
    '            return null;\n' +
    '        const password_complexity = [];\n' +
    '        const policyMinLength = passwordSettings.minLength ?? DEFAULT_COGNITO_PASSWORD_MIN_LENGTH;\n' +
    '        if (password.length < policyMinLength) {\n' +
    '            password_complexity.push(`Password must have at least ${policyMinLength} characters`);\n' +
    '        }\n' +
    '        if (passwordSettings.requireLowercase && !/[a-z]/.test(password))\n' +
    "            password_complexity.push('Password must have lower case letters');\n" +
    '        if (passwordSettings.requireUppercase && !/[A-Z]/.test(password))\n' +
    "            password_complexity.push('Password must have upper case letters');\n" +
    '        if (passwordSettings.requireNumbers && !/[0-9]/.test(password))\n' +
    "            password_complexity.push('Password must have numbers');\n" +
    '        // https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-policies.html\n' +
    '        if (passwordSettings.requireSpecialCharacters && !hasSpecialChars(password))\n' +
    "            password_complexity.push('Password must have special characters');\n" +
    '        /**\n' +
    '         * Only return an error if there is at least one error.\n' +
    '         */\n' +
    '        return password_complexity.length !== 0\n' +
    '            ? { password: password_complexity }\n' +
    '            : null;\n' +
    '    },\n' +
    '    async validateConfirmPassword(formData, touchData) {\n' +
    '        const { password, confirm_password } = formData;\n' +
    '        const { confirm_password: touched_confirm_password, password: touched_password, } = touchData;\n' +
    '        if (!password && !confirm_password) {\n' +
    "            // these inputs are clean, don't complain yet\n" +
    '            return null;\n' +
    '        }\n' +
    '        else if ((password || confirm_password) &&\n' +
    '            password !== confirm_password &&\n' +
    '            ((touched_confirm_password && touched_password) ||\n' +
    '                (password?.length >= 6 && confirm_password?.length >= 6))) {\n' +
    '            // Only return an error if both fields have text entered,\n' +
    '            // the passwords do not match, and the fields have been\n' +
    '            // touched or the password and confirm password is longer then or equal to 6.\n' +
    '            return {\n' +
    "                confirm_password: 'Your passwords must match',\n" +
    '            };\n' +
    '        }\n' +
    '    },\n' +
    '    async validatePreferredUsername(formData, touchData) { },\n' +
    '};\n' +
    '\n' +
    'export { defaultServices };\n'
} [Function: logger]
____9999999____ {
  code: 'const borderWidths = {\n' +
    "    small: { value: '1px' },\n" +
    "    medium: { value: '2px' },\n" +
    "    large: { value: '3px' },\n" +
    '};\n' +
    '\n' +
    'export { borderWidths };\n'
} [Function: logger]
____9999999____ {
  code: 'const colors = {\n' +
    '    red: {\n' +
    "        10: { value: 'hsl(0, 75%, 95%)' },\n" +
    "        20: { value: 'hsl(0, 75%, 85%)' },\n" +
    "        40: { value: 'hsl(0, 75%, 75%)' },\n" +
    "        60: { value: 'hsl(0, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(0, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(0, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(0, 100%, 15%)' },\n" +
    '    },\n' +
    '    orange: {\n' +
    "        10: { value: 'hsl(30, 75%, 95%)' },\n" +
    "        20: { value: 'hsl(30, 75%, 85%)' },\n" +
    "        40: { value: 'hsl(30, 75%, 75%)' },\n" +
    "        60: { value: 'hsl(30, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(30, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(30, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(30, 100%, 15%)' },\n" +
    '    },\n' +
    '    yellow: {\n' +
    "        10: { value: 'hsl(60, 75%, 95%)' },\n" +
    "        20: { value: 'hsl(60, 75%, 85%)' },\n" +
    "        40: { value: 'hsl(60, 75%, 75%)' },\n" +
    "        60: { value: 'hsl(60, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(60, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(60, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(60, 100%, 15%)' },\n" +
    '    },\n' +
    '    green: {\n' +
    "        10: { value: 'hsl(130, 60%, 95%)' },\n" +
    "        20: { value: 'hsl(130, 60%, 90%)' },\n" +
    "        40: { value: 'hsl(130, 44%, 63%)' },\n" +
    "        60: { value: 'hsl(130, 43%, 46%)' },\n" +
    "        80: { value: 'hsl(130, 33%, 37%)' },\n" +
    "        90: { value: 'hsl(130, 27%, 29%)' },\n" +
    "        100: { value: 'hsl(130, 22%, 23%)' },\n" +
    '    },\n' +
    '    teal: {\n' +
    "        10: { value: 'hsl(190, 75%, 95%)' },\n" +
    "        20: { value: 'hsl(190, 75%, 85%)' },\n" +
    "        40: { value: 'hsl(190, 70%, 70%)' },\n" +
    "        60: { value: 'hsl(190, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(190, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(190, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(190, 100%, 15%)' },\n" +
    '    },\n' +
    '    blue: {\n' +
    "        10: { value: 'hsl(220, 95%, 95%)' },\n" +
    "        20: { value: 'hsl(220, 85%, 85%)' },\n" +
    "        40: { value: 'hsl(220, 70%, 70%)' },\n" +
    "        60: { value: 'hsl(220, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(220, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(220, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(220, 100%, 15%)' },\n" +
    '    },\n' +
    '    purple: {\n' +
    "        10: { value: 'hsl(300, 95%, 95%)' },\n" +
    "        20: { value: 'hsl(300, 85%, 85%)' },\n" +
    "        40: { value: 'hsl(300, 70%, 70%)' },\n" +
    "        60: { value: 'hsl(300, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(300, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(300, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(300, 100%, 15%)' },\n" +
    '    },\n' +
    '    pink: {\n' +
    "        10: { value: 'hsl(340, 95%, 95%)' },\n" +
    "        20: { value: 'hsl(340, 90%, 85%)' },\n" +
    "        40: { value: 'hsl(340, 70%, 70%)' },\n" +
    "        60: { value: 'hsl(340, 50%, 50%)' },\n" +
    "        80: { value: 'hsl(340, 95%, 30%)' },\n" +
    "        90: { value: 'hsl(340, 100%, 20%)' },\n" +
    "        100: { value: 'hsl(340, 100%, 15%)' },\n" +
    '    },\n' +
    '    neutral: {\n' +
    "        10: { value: 'hsl(210, 5%, 98%)' },\n" +
    "        20: { value: 'hsl(210, 5%, 94%)' },\n" +
    "        40: { value: 'hsl(210, 5%, 87%)' },\n" +
    "        60: { value: 'hsl(210, 10%, 58%)' },\n" +
    "        80: { value: 'hsl(210, 10%, 40%)' },\n" +
    "        90: { value: 'hsl(210, 25%, 25%)' },\n" +
    "        100: { value: 'hsl(210, 50%, 10%)' },\n" +
    '    },\n' +
    '    primary: {\n' +
    "        10: { value: '{colors.teal.10.value}' },\n" +
    "        20: { value: '{colors.teal.20.value}' },\n" +
    "        40: { value: '{colors.teal.40.value}' },\n" +
    "        60: { value: '{colors.teal.60.value}' },\n" +
    "        80: { value: '{colors.teal.80.value}' },\n" +
    "        90: { value: '{colors.teal.90.value}' },\n" +
    "        100: { value: '{colors.teal.100.value}' },\n" +
    '    },\n' +
    '    secondary: {\n' +
    "        10: { value: '{colors.purple.10.value}' },\n" +
    "        20: { value: '{colors.purple.20.value}' },\n" +
    "        40: { value: '{colors.purple.40.value}' },\n" +
    "        60: { value: '{colors.purple.60.value}' },\n" +
    "        80: { value: '{colors.purple.80.value}' },\n" +
    "        90: { value: '{colors.purple.90.value}' },\n" +
    "        100: { value: '{colors.purple.100.value}' },\n" +
    '    },\n' +
    '    font: {\n' +
    "        primary: { value: '{colors.neutral.100.value}' },\n" +
    "        secondary: { value: '{colors.neutral.90.value}' },\n" +
    "        tertiary: { value: '{colors.neutral.80.value}' },\n" +
    "        disabled: { value: '{colors.neutral.60.value}' },\n" +
    "        inverse: { value: '{colors.white.value}' },\n" +
    "        interactive: { value: '{colors.primary.80.value}' },\n" +
    '        // Hover and Focus colors are intentionally different colors.\n' +
    '        // This allows users to distinguish between the current keyboard focus\n' +
    '        // and the location of their pointer\n' +
    "        hover: { value: '{colors.primary.90.value}' },\n" +
    '        // Focus color is set to 100 to ensure enough contrast for accessibility\n' +
    "        focus: { value: '{colors.primary.100.value}' },\n" +
    "        active: { value: '{colors.primary.100.value}' },\n" +
    "        info: { value: '{colors.blue.90.value}' },\n" +
    "        warning: { value: '{colors.orange.90.value}' },\n" +
    "        error: { value: '{colors.red.90.value}' },\n" +
    "        success: { value: '{colors.green.90.value}' },\n" +
    '    },\n' +
    '    background: {\n' +
    "        primary: { value: '{colors.white.value}' },\n" +
    "        secondary: { value: '{colors.neutral.10.value}' },\n" +
    "        tertiary: { value: '{colors.neutral.20.value}' },\n" +
    "        quaternary: { value: '{colors.neutral.60.value}' },\n" +
    "        disabled: { value: '{colors.background.tertiary.value}' },\n" +
    "        info: { value: '{colors.blue.10.value}' },\n" +
    "        warning: { value: '{colors.orange.10.value}' },\n" +
    "        error: { value: '{colors.red.10.value}' },\n" +
    "        success: { value: '{colors.green.10.value}' },\n" +
    '    },\n' +
    '    border: {\n' +
    "        primary: { value: '{colors.neutral.60.value}' },\n" +
    "        secondary: { value: '{colors.neutral.40.value}' },\n" +
    "        tertiary: { value: '{colors.neutral.20.value}' },\n" +
    "        disabled: { value: '{colors.border.tertiary.value}' },\n" +
    "        pressed: { value: '{colors.primary.100.value}' },\n" +
    '        // Focus color is set to 100 to ensure enough contrast for accessibility\n' +
    "        focus: { value: '{colors.primary.100.value}' },\n" +
    "        error: { value: '{colors.red.80.value}' },\n" +
    "        info: { value: '{colors.blue.80.value}' },\n" +
    "        success: { value: '{colors.green.80.value}' },\n" +
    "        warning: { value: '{colors.orange.80.value}' },\n" +
    '    },\n' +
    '    shadow: {\n' +
    "        primary: { value: 'hsla(210, 50%, 10%, 0.25)' },\n" +
    "        secondary: { value: 'hsla(210, 50%, 10%, 0.15)' },\n" +
    "        tertiary: { value: 'hsla(210, 50%, 10%, 0.05)' },\n" +
    '    },\n' +
    '    overlay: {\n' +
    "        5: { value: 'hsla(0, 0%, 0%, 0.05)' },\n" +
    "        10: { value: 'hsla(0, 0%, 0%, 0.1)' },\n" +
    "        20: { value: 'hsla(0, 0%, 0%, 0.2)' },\n" +
    "        30: { value: 'hsla(0, 0%, 0%, 0.3)' },\n" +
    "        40: { value: 'hsla(0, 0%, 0%, 0.4)' },\n" +
    "        50: { value: 'hsla(0, 0%, 0%, 0.5)' },\n" +
    "        60: { value: 'hsla(0, 0%, 0%, 0.6)' },\n" +
    "        70: { value: 'hsla(0, 0%, 0%, 0.7)' },\n" +
    "        80: { value: 'hsla(0, 0%, 0%, 0.8)' },\n" +
    "        90: { value: 'hsla(0, 0%, 0%, 0.9)' },\n" +
    '    },\n' +
    "    black: { value: 'hsl(0, 0%, 0%)' },\n" +
    "    white: { value: 'hsl(0, 0%, 100%)' },\n" +
    "    transparent: { value: 'transparent' },\n" +
    '};\n' +
    '\n' +
    'export { colors };\n'
} [Function: logger]
____9999999____ {
  code: '// TODO: update the design tokens to use an array\n' +
    '// export interface FontDesignToken {\n' +
    '//   value: Array<string>\n' +
    '// }\n' +
    'const fonts = {\n' +
    '    default: {\n' +
    '        variable: {\n' +
    "            value: `'InterVariable', 'Inter var', 'Inter', -apple-system, BlinkMacSystemFont,\n" +
    "        'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans',\n" +
    '        sans-serif`,\n' +
    '        },\n' +
    '        static: {\n' +
    "            value: `'Inter', -apple-system, BlinkMacSystemFont, 'Helvetica Neue',\n" +
    "        'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif`,\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { fonts };\n'
} [Function: logger]
____9999999____ {
  code: 'const fontSizes = {\n' +
    "    xxxs: { value: '0.375rem' },\n" +
    "    xxs: { value: '0.5rem' },\n" +
    "    xs: { value: '0.75rem' },\n" +
    "    small: { value: '0.875rem' },\n" +
    "    medium: { value: '1rem' },\n" +
    "    large: { value: '1.25rem' },\n" +
    "    xl: { value: '1.5rem' },\n" +
    "    xxl: { value: '2rem' },\n" +
    "    xxxl: { value: '2.5rem' },\n" +
    "    xxxxl: { value: '3rem' },\n" +
    '};\n' +
    '\n' +
    'export { fontSizes };\n'
} [Function: logger]
____9999999____ {
  code: 'const fontWeights = {\n' +
    '    hairline: { value: 100 },\n' +
    '    thin: { value: 200 },\n' +
    '    light: { value: 300 },\n' +
    '    normal: { value: 400 },\n' +
    '    medium: { value: 500 },\n' +
    '    semibold: { value: 600 },\n' +
    '    bold: { value: 700 },\n' +
    '    extrabold: { value: 800 },\n' +
    '    black: { value: 900 },\n' +
    '};\n' +
    '\n' +
    'export { fontWeights };\n'
} [Function: logger]
____9999999____ {
  code: "import { alert } from './alert.mjs';\n" +
    "import { autocomplete } from './autocomplete.mjs';\n" +
    "import { authenticator } from './authenticator.mjs';\n" +
    "import { badge } from './badge.mjs';\n" +
    "import { breadcrumbs } from './breadcrumbs.mjs';\n" +
    "import { button } from './button.mjs';\n" +
    "import { card } from './card.mjs';\n" +
    "import { checkbox } from './checkbox.mjs';\n" +
    "import { checkboxfield } from './checkboxField.mjs';\n" +
    "import { collection } from './collection.mjs';\n" +
    "import { copy } from './copy.mjs';\n" +
    "import { dialcodeselect } from './dialCodeSelect.mjs';\n" +
    "import { divider } from './divider.mjs';\n" +
    "import { dropzone } from './dropZone.mjs';\n" +
    "import { accordion } from './accordion.mjs';\n" +
    "import { field } from './field.mjs';\n" +
    "import { fieldcontrol } from './fieldControl.mjs';\n" +
    "import { fieldgroup } from './fieldGroup.mjs';\n" +
    "import { fieldset } from './fieldset.mjs';\n" +
    "import { fieldmessages } from './fieldMessages.mjs';\n" +
    "import { flex } from './flex.mjs';\n" +
    "import { heading } from './heading.mjs';\n" +
    "import { highlightmatch } from './highlightMatch.mjs';\n" +
    "import { icon } from './icon.mjs';\n" +
    "import { input } from './input.mjs';\n" +
    "import { image } from './image.mjs';\n" +
    "import { inappmessaging } from './inAppMessaging.mjs';\n" +
    "import { link } from './link.mjs';\n" +
    "import { liveness } from './liveness.mjs';\n" +
    "import { loader } from './loader.mjs';\n" +
    "import { menu } from './menu.mjs';\n" +
    "import { message } from './message.mjs';\n" +
    "import { pagination } from './pagination.mjs';\n" +
    "import { passwordfield } from './passwordField.mjs';\n" +
    "import { phonenumberfield } from './phoneNumberField.mjs';\n" +
    "import { placeholder } from './placeholder.mjs';\n" +
    "import { radio } from './radio.mjs';\n" +
    "import { radiogroup } from './radioGroup.mjs';\n" +
    "import { rating } from './rating.mjs';\n" +
    "import { searchfield } from './searchField.mjs';\n" +
    "import { select } from './select.mjs';\n" +
    "import { selectfield } from './selectField.mjs';\n" +
    "import { sliderfield } from './sliderField.mjs';\n" +
    "import { stepperfield } from './stepperField.mjs';\n" +
    "import { storagemanager } from './storagemanager.mjs';\n" +
    "import { switchfield } from './switchField.mjs';\n" +
    "import { table } from './table.mjs';\n" +
    "import { tabs } from './tabs.mjs';\n" +
    "import { text } from './text.mjs';\n" +
    "import { textareafield } from './textAreaField.mjs';\n" +
    "import { textfield } from './textField.mjs';\n" +
    "import { togglebutton } from './toggleButton.mjs';\n" +
    "import { togglebuttongroup } from './toggleButtonGroup.mjs';\n" +
    '\n' +
    'const components = {\n' +
    '    accordion,\n' +
    '    alert,\n' +
    '    authenticator,\n' +
    '    autocomplete,\n' +
    '    badge,\n' +
    '    breadcrumbs,\n' +
    '    button,\n' +
    '    card,\n' +
    '    checkbox,\n' +
    '    checkboxfield,\n' +
    '    collection,\n' +
    '    copy,\n' +
    '    countrycodeselect: dialcodeselect,\n' +
    '    divider,\n' +
    '    dropzone,\n' +
    '    field,\n' +
    '    fieldcontrol,\n' +
    '    fieldgroup,\n' +
    '    fieldmessages,\n' +
    '    fieldset,\n' +
    '    flex,\n' +
    '    heading,\n' +
    '    icon,\n' +
    '    highlightmatch,\n' +
    '    image,\n' +
    '    inappmessaging,\n' +
    '    input,\n' +
    '    link,\n' +
    '    liveness,\n' +
    '    loader,\n' +
    '    menu,\n' +
    '    message,\n' +
    '    pagination,\n' +
    '    passwordfield,\n' +
    '    phonenumberfield,\n' +
    '    placeholder,\n' +
    '    radio,\n' +
    '    radiogroup,\n' +
    '    rating,\n' +
    '    searchfield,\n' +
    '    select,\n' +
    '    selectfield,\n' +
    '    sliderfield,\n' +
    '    stepperfield,\n' +
    '    storagemanager,\n' +
    '    switchfield,\n' +
    '    table,\n' +
    '    tabs,\n' +
    '    text,\n' +
    '    textareafield,\n' +
    '    textfield,\n' +
    '    togglebutton,\n' +
    '    togglebuttongroup,\n' +
    '};\n' +
    '\n' +
    'export { components };\n'
} [Function: logger]
____9999999____ {
  code: 'const lineHeights = {\n' +
    "    small: { value: '1.25' },\n" +
    "    medium: { value: '1.5' },\n" +
    "    large: { value: '2' },\n" +
    '};\n' +
    '\n' +
    'export { lineHeights };\n'
} [Function: logger]
____9999999____ {
  code: 'const outlineOffsets = {\n' +
    "    small: { value: '1px' },\n" +
    "    medium: { value: '2px' },\n" +
    "    large: { value: '3px' },\n" +
    '};\n' +
    '\n' +
    'export { outlineOffsets };\n'
} [Function: logger]
____9999999____ {
  code: 'const opacities = {\n' +
    "    0: { value: '0' },\n" +
    "    10: { value: '0.1' },\n" +
    "    20: { value: '0.2' },\n" +
    "    30: { value: '0.3' },\n" +
    "    40: { value: '0.4' },\n" +
    "    50: { value: '0.5' },\n" +
    "    60: { value: '0.6' },\n" +
    "    70: { value: '0.7' },\n" +
    "    80: { value: '0.8' },\n" +
    "    90: { value: '0.9' },\n" +
    "    100: { value: '1' },\n" +
    '};\n' +
    '\n' +
    'export { opacities };\n'
} [Function: logger]
____9999999____ {
  code: 'const outlineWidths = {\n' +
    "    small: { value: '1px' },\n" +
    "    medium: { value: '2px' },\n" +
    "    large: { value: '3px' },\n" +
    '};\n' +
    '\n' +
    'export { outlineWidths };\n'
} [Function: logger]
____9999999____ {
  code: 'const radii = {\n' +
    "    xs: { value: '0.125rem' },\n" +
    "    small: { value: '0.25rem' },\n" +
    "    medium: { value: '0.5rem' },\n" +
    "    large: { value: '1rem' },\n" +
    "    xl: { value: '2rem' },\n" +
    "    xxl: { value: '4rem' },\n" +
    "    xxxl: { value: '8rem' },\n" +
    '};\n' +
    '\n' +
    'export { radii };\n'
} [Function: logger]
____9999999____ {
  code: 'const shadows = {\n' +
    '    small: {\n' +
    '        value: {\n' +
    "            offsetX: '0px',\n" +
    "            offsetY: '2px',\n" +
    "            blurRadius: '4px',\n" +
    "            color: '{colors.shadow.tertiary.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    medium: {\n' +
    '        value: {\n' +
    "            offsetX: '0px',\n" +
    "            offsetY: '2px',\n" +
    "            blurRadius: '6px',\n" +
    "            color: '{colors.shadow.secondary.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    large: {\n' +
    '        value: {\n' +
    "            offsetX: '0px',\n" +
    "            offsetY: '4px',\n" +
    "            blurRadius: '12px',\n" +
    "            color: '{colors.shadow.primary.value}',\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { shadows };\n'
} [Function: logger]
____9999999____ {
  code: 'const space = {\n' +
    "    zero: { value: '0' },\n" +
    "    xxxs: { value: '0.25rem' },\n" +
    "    xxs: { value: '0.375rem' },\n" +
    "    xs: { value: '0.5rem' },\n" +
    "    small: { value: '0.75rem' },\n" +
    "    medium: { value: '1rem' },\n" +
    "    large: { value: '1.5rem' },\n" +
    "    xl: { value: '2.0rem' },\n" +
    "    xxl: { value: '3.0rem' },\n" +
    "    xxxl: { value: '4.5rem' },\n" +
    '    relative: {\n' +
    '        //creating a second set of sizes using em which will be sized relative to a parent instead of the root\n' +
    "        xxxs: { value: '0.25em' },\n" +
    "        xxs: { value: '0.375em' },\n" +
    "        xs: { value: '0.5em' },\n" +
    "        small: { value: '0.75em' },\n" +
    "        medium: { value: '1em' },\n" +
    "        large: { value: '1.5em' },\n" +
    "        xl: { value: '2.0em' },\n" +
    "        xxl: { value: '3.0em' },\n" +
    "        xxxl: { value: '4.5em' },\n" +
    "        full: { value: '100%' },\n" +
    '    },\n' +
    '};\n' +
    '// I want to be able to pass in a Theme object that has extra tokens\n' +
    '// and it returns that same object type WITH the extra tokens\n' +
    '\n' +
    'export { space };\n'
} [Function: logger]
____9999999____ {
  code: 'const time = {\n' +
    "    short: { value: '100ms' },\n" +
    "    medium: { value: '250ms' },\n" +
    "    long: { value: '500ms' },\n" +
    '};\n' +
    '\n' +
    'export { time };\n'
} [Function: logger]
____9999999____ {
  code: 'const transforms = {\n' +
    '    // TODO: make this more generic and cross-platform\n' +
    '    slideX: {\n' +
    "        small: { value: 'translateX(0.5em)' },\n" +
    "        medium: { value: 'translateX(1em)' },\n" +
    "        large: { value: 'translateX(2em)' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { transforms };\n'
} [Function: logger]
____9999999____ {
  code: "var createCompounder = require('./_createCompounder');\n" +
    '\n' +
    '/**\n' +
    ' * Converts `string` to\n' +
    ' * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category String\n' +
    " * @param {string} [string=''] The string to convert.\n" +
    ' * @returns {string} Returns the kebab cased string.\n' +
    ' * @example\n' +
    ' *\n' +
    " * _.kebabCase('Foo Bar');\n" +
    " * // => 'foo-bar'\n" +
    ' *\n' +
    " * _.kebabCase('fooBar');\n" +
    " * // => 'foo-bar'\n" +
    ' *\n' +
    " * _.kebabCase('__FOO_BAR__');\n" +
    " * // => 'foo-bar'\n" +
    ' */\n' +
    'var kebabCase = createCompounder(function(result, word, index) {\n' +
    "  return result + (index ? '-' : '') + word.toLowerCase();\n" +
    '});\n' +
    '\n' +
    'module.exports = kebabCase;\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { Text } from '../../../primitives/Text/Text.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getDeliveryMessageText, getDeliveryMethodText, getConfirmingText, getConfirmText, getResendCodeText, } = authenticatorTextUtil;\n' +
    'function ConfirmSignUp({ className, variation, }) {\n' +
    '    const { isPending, resendCode, codeDeliveryDetails } = useAuthenticator((context) => [\n' +
    '        context.isPending,\n' +
    '        context.resendCode,\n' +
    '        context.codeDeliveryDetails,\n' +
    '    ]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ConfirmSignUp: { Header = ConfirmSignUp.Header, Footer = ConfirmSignUp.Footer, }, }, } = useCustomComponents();\n' +
    '    return (\n' +
    '    // TODO Automatically add these namespaces again from `useAmplify`\n' +
    '    React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-confirmsignup": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(Text, { className: "amplify-authenticator__subtitle" }, getDeliveryMessageText(codeDeliveryDetails)),\n' +
    '                    React__default.createElement(FormFields, null),\n' +
    '                    React__default.createElement(RemoteErrorMessage, null),\n' +
    '                    React__default.createElement(Button, { variation: "primary", isDisabled: isPending, type: "submit", loadingText: getConfirmingText(), isLoading: isPending, fontWeight: "normal" }, getConfirmText()),\n' +
    '                    React__default.createElement(Button, { onClick: resendCode, type: "button", fontWeight: "normal" }, getResendCodeText())),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '}\n' +
    'const DefaultHeader = () => {\n' +
    '    const { codeDeliveryDetails } = useAuthenticator((context) => [\n' +
    '        context.codeDeliveryDetails,\n' +
    '    ]);\n' +
    '    return (React__default.createElement(Heading, { level: 4 }, getDeliveryMethodText(codeDeliveryDetails)));\n' +
    '};\n' +
    'ConfirmSignUp.Header = DefaultHeader;\n' +
    'ConfirmSignUp.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ConfirmSignUp };\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    "const createRegex = require('./createReferenceRegex');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if the value uses a value reference.\n' +
    ' * @memberof Dictionary\n' +
    ' * @param {string} value\n' +
    ' * @param {Object|RegExp} regexOrOptions\n' +
    ' * @returns {boolean} - True, if the value uses a value reference\n' +
    ' */\n' +
    'function usesReference(value, regexOrOptions = {}) {\n' +
    '  const regex = regexOrOptions instanceof RegExp ? regexOrOptions : createRegex(regexOrOptions);\n' +
    '\n' +
    "  if (typeof value === 'string') {\n" +
    '    return regex.test(value);\n' +
    '  }\n' +
    '\n' +
    "  if (typeof value === 'object') {\n" +
    '    let hasReference = false;\n' +
    '    // iterate over each property in the object,\n' +
    '    // if any element passes the regex test,\n' +
    '    // the whole thing should be true\n' +
    '    for (const key in value) {\n' +
    '      if (value.hasOwnProperty(key)) {\n' +
    '        const element = value[key];\n' +
    '        let reference = usesReference(element, regexOrOptions);\n' +
    '        if (reference) {\n' +
    '          hasReference = true;\n' +
    '          break;\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '    return hasReference;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    '\n' +
    'module.exports = usesReference;\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { Tabs } from '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import { View } from '../../../primitives/View/View.mjs';\n" +
    "import { SignIn } from '../SignIn/SignIn.mjs';\n" +
    "import { SignUp } from '../SignUp/SignUp.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getSignInTabText, getSignUpTabText } = authenticatorTextUtil;\n' +
    'const SignInSignUpTabs = ({ className, hideSignUp, variation, }) => {\n' +
    '    const { route, toSignIn, toSignUp } = useAuthenticator((context) => [\n' +
    '        context.route,\n' +
    '        context.toSignIn,\n' +
    '        context.toSignUp,\n' +
    '    ]);\n' +
    `    return (React__default.createElement(RouteContainer, { className: className, variation: variation }, hideSignUp ? (React__default.createElement(View, { "data-amplify-router-content": "" }, route === 'signIn' && React__default.createElement(SignIn, null))) : (React__default.createElement(Tabs.Container, { value: route, isLazy: true, onValueChange: () => (route === 'signIn' ? toSignUp() : toSignIn()) },\n` +
    '        React__default.createElement(Tabs.List, { spacing: "equal", indicatorPosition: "top" },\n' +
    '            React__default.createElement(Tabs.Item, { value: "signIn" }, getSignInTabText()),\n' +
    '            React__default.createElement(Tabs.Item, { value: "signUp" }, getSignUpTabText())),\n' +
    '        React__default.createElement(Tabs.Panel, { value: "signIn", "data-amplify-router-content": "" },\n' +
    '            React__default.createElement(SignIn, null)),\n' +
    '        React__default.createElement(Tabs.Panel, { value: "signUp", "data-amplify-router-content": "" },\n' +
    '            React__default.createElement(SignUp, null))))));\n' +
    '};\n' +
    '\n' +
    'export { SignInSignUpTabs };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { TwoButtonSubmitFooter } from '../shared/TwoButtonSubmitFooter.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getAccountRecoveryInfoText, getSkipText } = authenticatorTextUtil;\n' +
    'const ConfirmVerifyUser = ({ className, variation, }) => {\n' +
    '    const { isPending } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ConfirmVerifyUser: { Header = ConfirmVerifyUser.Header, Footer = ConfirmVerifyUser.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-confirmverifyuser": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(FormFields, null)),\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getSkipText(), cancelButtonSendType: "SKIP" }),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'ConfirmVerifyUser.Header = function Header() {\n' +
    '    return React__default.createElement(Heading, { level: 3 }, getAccountRecoveryInfoText());\n' +
    '};\n' +
    'ConfirmVerifyUser.Footer = function Footer() {\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ConfirmVerifyUser };\n'
} [Function: logger]
____9999999____ {
  code: "const isSignInOrSignUpRoute = (route) => route === 'signIn' || route === 'signUp';\n" +
    '\n' +
    'export { isSignInOrSignUpRoute };\n'
} [Function: logger]
____9999999____ {
  code: "import { useCallback } from 'react';\n" +
    "import { getFormDataFromEvent } from '../../../../helpers/utils.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    '\n' +
    'function useFormHandlers() {\n' +
    '    const { submitForm, updateBlur, updateForm } = useAuthenticator((context) => [\n' +
    '        context.submitForm,\n' +
    '        context.updateBlur,\n' +
    '        context.updateForm,\n' +
    '    ]);\n' +
    '    const handleBlur = useCallback(({ target: { name } }) => {\n' +
    '        updateBlur({ name });\n' +
    '    }, [updateBlur]);\n' +
    '    // @TODO: align multiple input type handling with react docs example for 3.0 release\n' +
    '    // example: https://reactjs.org/docs/forms.html#handling-multiple-inputs\n' +
    '    const handleChange = useCallback(({ target: { checked, name, type, value }, }) => {\n' +
    "        const isUncheckedCheckbox = type === 'checkbox' && !checked;\n" +
    '        updateForm({\n' +
    '            name,\n' +
    '            value: isUncheckedCheckbox ? undefined : value,\n' +
    '        });\n' +
    '    }, [updateForm]);\n' +
    '    const handleSubmit = useCallback((event) => {\n' +
    '        event.preventDefault();\n' +
    '        submitForm(getFormDataFromEvent(event));\n' +
    '    }, [submitForm]);\n' +
    '    return { handleBlur, handleChange, handleSubmit };\n' +
    '}\n' +
    '\n' +
    'export { useFormHandlers };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    '\n' +
    'const { getConfirmText, getConfirmingText, getBackToSignInText } = authenticatorTextUtil;\n' +
    'const ConfirmSignInFooter = () => {\n' +
    '    const { isPending, toSignIn } = useAuthenticator((context) => [\n' +
    '        context.isPending,\n' +
    '        context.toSignIn,\n' +
    '    ]);\n' +
    '    return (React__default.createElement(Flex, { direction: "column" },\n' +
    '        React__default.createElement(Button, { isDisabled: isPending, type: "submit", variation: "primary", fontWeight: "normal", isLoading: isPending, loadingText: getConfirmingText() }, getConfirmText()),\n' +
    '        React__default.createElement(Button, { onClick: toSignIn, type: "button", variation: "link", fontWeight: "normal", size: "small" }, getBackToSignInText())));\n' +
    '};\n' +
    '\n' +
    'export { ConfirmSignInFooter };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { translate } from '@aws-amplify/ui';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { Alert } from '../../../primitives/Alert/Alert.mjs';\n" +
    '\n' +
    'const RemoteErrorMessage = () => {\n' +
    '    const { error } = useAuthenticator((context) => [context.error]);\n' +
    '    return (React__default.createElement(React__default.Fragment, null, error ? (React__default.createElement(Alert, { variation: "error", isDismissible: true }, translate(error))) : null));\n' +
    '};\n' +
    '\n' +
    'export { RemoteErrorMessage };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { FormField } from './FormField.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    '\n' +
    'function FormFields() {\n' +
    '    const { fields } = useAuthenticator(({ route }) => [route]);\n' +
    '    const formFields = React.useRef(fields.map((field, index) => (React.createElement(FormField\n' +
    '    // use index for key, field order is static\n' +
    '    , { \n' +
    '        // use index for key, field order is static\n' +
    '        key: index, ...field })))).current;\n' +
    '    return React.createElement(React.Fragment, null, formFields);\n' +
    '}\n' +
    '\n' +
    'export { FormFields };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { View } from '../../../primitives/View/View.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    '\n' +
    '// TODO replace usage of this util with the `isSignInOrSignUpRoute` util in v3.\n' +
    '// Currently `hasTabs` always returns `undefined` as the right condition always\n' +
    '// resolves to truthy. This prevents the "data-amplify-router-content" attribute\n' +
    '// from being applied below. Fixing it will cause consumer snapshot tests to break,\n' +
    '// so wait to update.\n' +
    'const hasTabs = (route) => {\n' +
    "    return route === 'signIn' || 'signUp';\n" +
    '};\n' +
    "function RouteContainer({ children, className, variation = 'default', }) {\n" +
    '    const { route } = useAuthenticator(({ route }) => [route]);\n' +
    '    const { \n' +
    '    // @ts-ignore\n' +
    '    components: { Header, Footer }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(View, { className: className, "data-amplify-authenticator": "", "data-variation": variation },\n' +
    '        React__default.createElement(View, { "data-amplify-container": "" },\n' +
    '            React__default.createElement(Header, null),\n' +
    `            React__default.createElement(View, { "data-amplify-router": "", "data-amplify-router-content": hasTabs(route) ? undefined : '' }, children),\n` +
    '            React__default.createElement(Footer, null))));\n' +
    '}\n' +
    '\n' +
    'export { RouteContainer };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil, defaultFormFieldOptions, translate, censorContactMethod } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { Radio } from '../../../primitives/Radio/Radio.mjs';\n" +
    "import { RadioGroupField } from '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { TwoButtonSubmitFooter } from '../shared/TwoButtonSubmitFooter.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getSkipText, getVerifyText, getVerifyContactText, getAccountRecoveryInfoText, } = authenticatorTextUtil;\n' +
    'const generateRadioGroup = (attributes) => {\n' +
    '    return Object.entries(attributes).map(([key, value]) => {\n' +
    '        const verificationType = defaultFormFieldOptions[key].label;\n' +
    '        return (React__default.createElement(Radio, { name: "unverifiedAttr", value: key, key: key },\n' +
    '            translate(verificationType),\n' +
    '            ":",\n' +
    "            ' ',\n" +
    '            censorContactMethod(verificationType, value)));\n' +
    '    });\n' +
    '};\n' +
    'const VerifyUser = ({ className, variation, }) => {\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    VerifyUser: { Header = VerifyUser.Header, Footer = VerifyUser.Footer }, }, } = useCustomComponents();\n' +
    '    const { isPending, unverifiedUserAttributes } = useAuthenticator(({ isPending, unverifiedUserAttributes }) => [\n' +
    '        isPending,\n' +
    '        unverifiedUserAttributes,\n' +
    '    ]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const footerSubmitText = isPending ? (React__default.createElement(React__default.Fragment, null, "Verifying\\u2026")) : (React__default.createElement(React__default.Fragment, null, getVerifyText()));\n' +
    '    const verificationRadioGroup = (React__default.createElement(RadioGroupField, { legend: getVerifyContactText(), name: "verify_context", isDisabled: isPending, legendHidden: true }, generateRadioGroup(unverifiedUserAttributes)));\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-verifyuser": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                verificationRadioGroup,\n' +
    '                React__default.createElement(RemoteErrorMessage, null),\n' +
    '                React__default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getSkipText(), cancelButtonSendType: "SKIP", submitButtonText: footerSubmitText }),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'VerifyUser.Header = function Header() {\n' +
    '    return React__default.createElement(Heading, { level: 3 }, getAccountRecoveryInfoText());\n' +
    '};\n' +
    'VerifyUser.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { VerifyUser };\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { Button } from '../../../primitives/Button/Button.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    '\n' +
    'const { getSubmitText, getSubmittingText } = authenticatorTextUtil;\n' +
    'const TwoButtonSubmitFooter = (props) => {\n' +
    '    const { cancelButtonSendType, cancelButtonText, submitButtonText } = props;\n' +
    '    const { isPending, resendCode, skipVerification, toSignIn } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const onClick = () => {\n' +
    '        switch (cancelButtonSendType) {\n' +
    "            case 'SKIP':\n" +
    '                skipVerification();\n' +
    '                break;\n' +
    "            case 'RESEND':\n" +
    '                resendCode();\n' +
    '                break;\n' +
    "            case 'SIGN_IN':\n" +
    '                toSignIn();\n' +
    '                break;\n' +
    '            default:\n' +
    '                return;\n' +
    '        }\n' +
    '    };\n' +
    '    const defaultSubmitText = isPending ? (React__default.createElement(React__default.Fragment, null,\n' +
    '        getSubmittingText(),\n' +
    '        "\\u2026")) : (React__default.createElement(React__default.Fragment, null, getSubmitText()));\n' +
    '    const submitText = submitButtonText ?? defaultSubmitText;\n' +
    '    return (React__default.createElement(Flex, { direction: "column" },\n' +
    '        React__default.createElement(Button, { fontWeight: "normal", variation: "primary", isDisabled: isPending, type: "submit" }, submitText),\n' +
    '        React__default.createElement(Button, { onClick: onClick, type: "button", variation: "link", fontWeight: "normal", size: "small" }, cancelButtonText)));\n' +
    '};\n' +
    '\n' +
    'export { TwoButtonSubmitFooter };\n'
} [Function: logger]
____9999999____ {
  code: "import { objectKeys } from '../utils.mjs';\n" +
    '\n' +
    '// Inspiration for getMediaQueries and useBreakpoint\n' +
    'const getMediaQueries = ({ breakpoints }) => {\n' +
    '    const sortedBreakpoints = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);\n' +
    '    return sortedBreakpoints.map((breakpoint, index) => {\n' +
    "        let query = '';\n" +
    '        const minWidth = breakpoints[breakpoint];\n' +
    '        const nextBreakpoint = sortedBreakpoints[index - 1];\n' +
    '        const maxWidth = nextBreakpoint ? breakpoints[nextBreakpoint] - 1 : null;\n' +
    '        if (minWidth >= 0) {\n' +
    '            query = `(min-width: ${minWidth}px)`;\n' +
    '        }\n' +
    '        if (maxWidth !== null) {\n' +
    '            if (query) {\n' +
    "                query += ' and ';\n" +
    '            }\n' +
    '            query += `(max-width: ${maxWidth}px)`;\n' +
    '        }\n' +
    '        return {\n' +
    '            breakpoint,\n' +
    '            query,\n' +
    '            maxWidth,\n' +
    '            minWidth,\n' +
    '        };\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { getMediaQueries };\n'
} [Function: logger]
____9999999____ {
  code: "export { useMachine } from './useMachine';\n" +
    "export { useActor } from './useActor';\n" +
    "export { useInterpret } from './useInterpret';\n" +
    "export { useSelector } from './useSelector';\n" +
    "export { useSpawn } from './useSpawn';\n" +
    "export { shallowEqual } from './utils';\n" +
    "export { createActorContext } from './createActorContext';\n"
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { Heading } from '../../../primitives/Heading/Heading.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useCustomComponents } from '../hooks/useCustomComponents/useCustomComponents.mjs';\n" +
    "import { useFormHandlers } from '../hooks/useFormHandlers/useFormHandlers.mjs';\n" +
    "import { FormFields } from '../shared/FormFields.mjs';\n" +
    "import { ConfirmSignInFooter } from '../shared/ConfirmSignInFooter.mjs';\n" +
    "import { RemoteErrorMessage } from '../shared/RemoteErrorMessage.mjs';\n" +
    "import { RouteContainer } from '../RouteContainer/RouteContainer.mjs';\n" +
    '\n' +
    'const { getChallengeText } = authenticatorTextUtil;\n' +
    'const ConfirmSignIn = ({ className, variation, }) => {\n' +
    '    const { isPending } = useAuthenticator((context) => [context.isPending]);\n' +
    '    const { handleChange, handleSubmit } = useFormHandlers();\n' +
    '    const { components: { \n' +
    '    // @ts-ignore\n' +
    '    ConfirmSignIn: { Header = ConfirmSignIn.Header, Footer = ConfirmSignIn.Footer, }, }, } = useCustomComponents();\n' +
    '    return (React__default.createElement(RouteContainer, { className: className, variation: variation },\n' +
    '        React__default.createElement("form", { "data-amplify-form": "", "data-amplify-authenticator-confirmsignin": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },\n' +
    '            React__default.createElement(Flex, { as: "fieldset", direction: "column", isDisabled: isPending },\n' +
    '                React__default.createElement(Header, null),\n' +
    '                React__default.createElement(Flex, { direction: "column" },\n' +
    '                    React__default.createElement(FormFields, null),\n' +
    '                    React__default.createElement(RemoteErrorMessage, null)),\n' +
    '                React__default.createElement(ConfirmSignInFooter, null),\n' +
    '                React__default.createElement(Footer, null)))));\n' +
    '};\n' +
    'function Header() {\n' +
    '    const { challengeName } = useAuthenticator(({ challengeName }) => [\n' +
    '        challengeName,\n' +
    '    ]);\n' +
    '    return React__default.createElement(Heading, { level: 3 }, getChallengeText(challengeName));\n' +
    '}\n' +
    'ConfirmSignIn.Header = Header;\n' +
    'ConfirmSignIn.Footer = function Footer() {\n' +
    '    // @ts-ignore\n' +
    '    return null;\n' +
    '};\n' +
    '\n' +
    'export { ConfirmSignIn };\n'
} [Function: logger]
____9999999____ {
  code: '\n' +
    "const canPromise = require('./can-promise')\n" +
    '\n' +
    "const QRCode = require('./core/qrcode')\n" +
    "const CanvasRenderer = require('./renderer/canvas')\n" +
    "const SvgRenderer = require('./renderer/svg-tag.js')\n" +
    '\n' +
    'function renderCanvas (renderFunc, canvas, text, opts, cb) {\n' +
    '  const args = [].slice.call(arguments, 1)\n' +
    '  const argsNum = args.length\n' +
    "  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n" +
    '\n' +
    '  if (!isLastArgCb && !canPromise()) {\n' +
    "    throw new Error('Callback required as last argument')\n" +
    '  }\n' +
    '\n' +
    '  if (isLastArgCb) {\n' +
    '    if (argsNum < 2) {\n' +
    "      throw new Error('Too few arguments provided')\n" +
    '    }\n' +
    '\n' +
    '    if (argsNum === 2) {\n' +
    '      cb = text\n' +
    '      text = canvas\n' +
    '      canvas = opts = undefined\n' +
    '    } else if (argsNum === 3) {\n' +
    "      if (canvas.getContext && typeof cb === 'undefined') {\n" +
    '        cb = opts\n' +
    '        opts = undefined\n' +
    '      } else {\n' +
    '        cb = opts\n' +
    '        opts = text\n' +
    '        text = canvas\n' +
    '        canvas = undefined\n' +
    '      }\n' +
    '    }\n' +
    '  } else {\n' +
    '    if (argsNum < 1) {\n' +
    "      throw new Error('Too few arguments provided')\n" +
    '    }\n' +
    '\n' +
    '    if (argsNum === 1) {\n' +
    '      text = canvas\n' +
    '      canvas = opts = undefined\n' +
    '    } else if (argsNum === 2 && !canvas.getContext) {\n' +
    '      opts = text\n' +
    '      text = canvas\n' +
    '      canvas = undefined\n' +
    '    }\n' +
    '\n' +
    '    return new Promise(function (resolve, reject) {\n' +
    '      try {\n' +
    '        const data = QRCode.create(text, opts)\n' +
    '        resolve(renderFunc(data, canvas, opts))\n' +
    '      } catch (e) {\n' +
    '        reject(e)\n' +
    '      }\n' +
    '    })\n' +
    '  }\n' +
    '\n' +
    '  try {\n' +
    '    const data = QRCode.create(text, opts)\n' +
    '    cb(null, renderFunc(data, canvas, opts))\n' +
    '  } catch (e) {\n' +
    '    cb(e)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'exports.create = QRCode.create\n' +
    'exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\n' +
    'exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n' +
    '\n' +
    '// only svg for now.\n' +
    'exports.toString = renderCanvas.bind(null, function (data, _, opts) {\n' +
    '  return SvgRenderer.render(data, opts)\n' +
    '})\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { FederatedIdentityProviders, authenticatorTextUtil } from '@aws-amplify/ui';\n" +
    "import { Divider } from '../../../primitives/Divider/Divider.mjs';\n" +
    "import { Flex } from '../../../primitives/Flex/Flex.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { FederatedSignInButton } from './FederatedSignInButtons/FederatedSignInButton.mjs';\n" +
    '\n' +
    'const { getSignInWithFederationText, getOrText } = authenticatorTextUtil;\n' +
    'function FederatedSignIn() {\n' +
    '    const { route, socialProviders } = useAuthenticator(({ route, socialProviders }) => [route, socialProviders]);\n' +
    '    if (socialProviders.length === 0) {\n' +
    '        // @ts-ignore\n' +
    '        return null;\n' +
    '    }\n' +
    '    return (React__default.createElement(Flex, { direction: "column", padding: `0 0 1rem 0`, className: "federated-sign-in-container" },\n' +
    '        socialProviders.map((provider) => {\n' +
    '            switch (provider) {\n' +
    "                case 'amazon':\n" +
    '                    return (React__default.createElement(FederatedSignInButton, { icon: "amazon", key: provider, provider: FederatedIdentityProviders.Amazon, text: getSignInWithFederationText(route, provider) }));\n' +
    "                case 'apple':\n" +
    '                    return (React__default.createElement(FederatedSignInButton, { icon: "apple", key: provider, provider: FederatedIdentityProviders.Apple, text: getSignInWithFederationText(route, provider) }));\n' +
    "                case 'facebook':\n" +
    '                    return (React__default.createElement(FederatedSignInButton, { icon: "facebook", key: provider, provider: FederatedIdentityProviders.Facebook, text: getSignInWithFederationText(route, provider) }));\n' +
    "                case 'google':\n" +
    '                    return (React__default.createElement(FederatedSignInButton, { icon: "google", key: provider, provider: FederatedIdentityProviders.Google, text: getSignInWithFederationText(route, provider) }));\n' +
    '                default:\n' +
    '                    // eslint-disable-next-line no-console\n' +
    '                    console.error(`Authenticator does not support ${provider}. Please open an issue: https://github.com/aws-amplify/amplify-ui/issues/choose`);\n' +
    '            }\n' +
    '        }),\n' +
    '        React__default.createElement(Divider, { size: "small", label: getOrText() })));\n' +
    '}\n' +
    '\n' +
    'export { FederatedSignIn };\n'
} [Function: logger]
____9999999____ {
  code: "const USE_AUTHENTICATOR_ERROR = '`useAuthenticator` must be used inside an `Authenticator.Provider`.';\n" +
    '\n' +
    'export { USE_AUTHENTICATOR_ERROR };\n'
} [Function: logger]
____9999999____ {
  code: "import 'react';\n" +
    "import 'react-hook-form';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../components/FormCore/FormProvider.mjs';\n" +
    "import RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\n" +
    "import { isComponentRouteKey } from '../utils.mjs';\n" +
    "import { MACHINE_PROP_KEYS, EVENT_HANDLER_KEY_MAP } from './constants.mjs';\n" +
    '\n' +
    '// only select `route` from machine context\n' +
    'const routeSelector = ({ route }) => [route];\n' +
    'const createSelector = (selectorKeys) => (context) => {\n' +
    '    const dependencies = selectorKeys.map((key) => context[key]);\n' +
    '    // route should always be part of deps, so hook knows when route changes.\n' +
    '    return [...dependencies, context.route];\n' +
    '};\n' +
    'const getRouteMachineSelector = (route) => isComponentRouteKey(route)\n' +
    '    ? createSelector(MACHINE_PROP_KEYS[route])\n' +
    '    : routeSelector;\n' +
    "const isFormEventHandlerKey = (key) => ['updateBlur', 'updateForm', 'submitForm'].includes(key);\n" +
    'const convertEventHandlerKey = (key) => EVENT_HANDLER_KEY_MAP[key];\n' +
    'const getConvertedMachineProps = (route, context) => MACHINE_PROP_KEYS[route].reduce((acc, key) => ({\n' +
    '    ...acc,\n' +
    '    [isFormEventHandlerKey(key) ? convertEventHandlerKey(key) : key]: context[key],\n' +
    '}), {});\n' +
    'function resolveConfirmResetPasswordRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('confirmResetPassword', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveConfirmSignInRoute(Component, props) {\n' +
    "    const { challengeName, ...machineProps } = getConvertedMachineProps('confirmSignIn', props);\n" +
    '    return { Component, props: { ...Component, ...machineProps, challengeName } };\n' +
    '}\n' +
    'function resolveConfirmSignUpRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('confirmSignUp', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveConfirmVerifyUserRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('confirmVerifyUser', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveForceNewPasswordRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('forceNewPassword', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveForgotPasswordRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('forgotPassword', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveSetupTotpRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('setupTotp', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveSignInRoute(Component, props) {\n' +
    '    // default `hideSignUp` to false\n' +
    '    const hideSignUp = false;\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('signIn', props),\n" +
    '            hideSignUp,\n' +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveSignUpRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    "        props: { ...Component, ...getConvertedMachineProps('signUp', props) },\n" +
    '    };\n' +
    '}\n' +
    'function resolveVerifyUserRoute(Component, props) {\n' +
    '    return {\n' +
    '        Component,\n' +
    '        props: {\n' +
    '            ...Component,\n' +
    "            ...getConvertedMachineProps('verifyUser', props),\n" +
    '        },\n' +
    '    };\n' +
    '}\n' +
    'function resolveDefault() {\n' +
    '    return {\n' +
    '        Component: RenderNothing,\n' +
    '        props: {},\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    'export { getRouteMachineSelector, resolveConfirmResetPasswordRoute, resolveConfirmSignInRoute, resolveConfirmSignUpRoute, resolveConfirmVerifyUserRoute, resolveDefault, resolveForceNewPasswordRoute, resolveForgotPasswordRoute, resolveSetupTotpRoute, resolveSignInRoute, resolveSignUpRoute, resolveVerifyUserRoute, routeSelector };\n'
} [Function: logger]
____9999999____ {
  code: "import { getActorContext, getSortedFormFields, isString, areEmptyArrays, areEmptyObjects } from '@aws-amplify/ui';\n" +
    "import { isComponentRouteKey } from '../utils.mjs';\n" +
    '\n' +
    'const defaultComparator = () => false;\n' +
    '/**\n' +
    ' * Does an ordering and shallow comparison of each array value,\n' +
    ' * plus a value equality check for empty objects and arrays.\n' +
    ' */\n' +
    'function areSelectorDepsEqual(currentDeps, nextDeps) {\n' +
    '    if (currentDeps.length !== nextDeps.length) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    return currentDeps.every((currentDep, index) => {\n' +
    '        const nextDep = nextDeps[index];\n' +
    '        if (areEmptyArrays(currentDep, nextDep) ||\n' +
    '            areEmptyObjects(currentDep, nextDep)) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return currentDep === nextDep;\n' +
    '    });\n' +
    '}\n' +
    'const getComparator = (selector) => (currentFacade, nextFacade) => {\n' +
    '    const currentSelectorDeps = selector(currentFacade);\n' +
    '    const nextSelectorDeps = selector(nextFacade);\n' +
    '    // Shallow compare the array values\n' +
    '    return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n' +
    '};\n' +
    'const getQRFields = (state) => ({\n' +
    '    ...getActorContext(state)?.formFields?.setupTotp?.QR,\n' +
    '});\n' +
    'const flattenFormFields = (fields) => fields.flatMap(([name, options]) => ({ name, ...options }));\n' +
    'const convertContactMethodsToFields = (unverifiedUserAttributes) => {\n' +
    '    return (unverifiedUserAttributes &&\n' +
    '        Object.entries(unverifiedUserAttributes).map(([name, value]) => {\n' +
    '            const valueIsString = isString(value);\n' +
    '            if (!valueIsString || !name) {\n' +
    '                return {};\n' +
    '            }\n' +
    "            return { name, label: value, type: 'radio', value };\n" +
    '        }));\n' +
    '};\n' +
    '/**\n' +
    ' * Retrieves default and custom (RWA only, to be updated) form field values from state machine\n' +
    ' * for subcomponent routes that render fields\n' +
    ' */\n' +
    'const getMachineFields = (route, state, unverifiedUserAttributes) => {\n' +
    '    if (isComponentRouteKey(route)) {\n' +
    "        return route === 'verifyUser'\n" +
    '            ? convertContactMethodsToFields(unverifiedUserAttributes)\n' +
    '            : flattenFormFields(getSortedFormFields(route, state));\n' +
    '    }\n' +
    '    return [];\n' +
    '};\n' +
    '\n' +
    'export { areSelectorDepsEqual, defaultComparator, getComparator, getMachineFields, getQRFields };\n'
} [Function: logger]
____9999999____ {
  code: 'const COMPONENT_ROUTE_KEYS = [\n' +
    "    'confirmResetPassword',\n" +
    "    'confirmSignIn',\n" +
    "    'confirmSignUp',\n" +
    "    'confirmVerifyUser',\n" +
    "    'forceNewPassword',\n" +
    "    'forgotPassword',\n" +
    "    'setupTotp',\n" +
    "    'signIn',\n" +
    "    'signUp',\n" +
    "    'verifyUser',\n" +
    '];\n' +
    'const COMPONENT_ROUTE_NAMES = [\n' +
    "    'ConfirmResetPassword',\n" +
    "    'ConfirmSignIn',\n" +
    "    'ConfirmSignUp',\n" +
    "    'ConfirmVerifyUser',\n" +
    "    'ForceNewPassword',\n" +
    "    'ForgotPassword',\n" +
    "    'SetupTotp',\n" +
    "    'SignIn',\n" +
    "    'SignUp',\n" +
    "    'VerifyUser',\n" +
    '];\n' +
    '\n' +
    'export { COMPONENT_ROUTE_KEYS, COMPONENT_ROUTE_NAMES };\n'
} [Function: logger]
____9999999____ {
  code: "import React from 'react';\n" +
    '\n' +
    "var isCheckBoxInput = (element) => element.type === 'checkbox';\n" +
    '\n' +
    'var isDateObject = (value) => value instanceof Date;\n' +
    '\n' +
    'var isNullOrUndefined = (value) => value == null;\n' +
    '\n' +
    "const isObjectType = (value) => typeof value === 'object';\n" +
    'var isObject = (value) => !isNullOrUndefined(value) &&\n' +
    '    !Array.isArray(value) &&\n' +
    '    isObjectType(value) &&\n' +
    '    !isDateObject(value);\n' +
    '\n' +
    'var getEventValue = (event) => isObject(event) && event.target\n' +
    '    ? isCheckBoxInput(event.target)\n' +
    '        ? event.target.checked\n' +
    '        : event.target.value\n' +
    '    : event;\n' +
    '\n' +
    'var getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n' +
    '\n' +
    'var isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n' +
    '\n' +
    'var isPlainObject = (tempObject) => {\n' +
    '    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n' +
    "    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n" +
    '};\n' +
    '\n' +
    "var isWeb = typeof window !== 'undefined' &&\n" +
    "    typeof window.HTMLElement !== 'undefined' &&\n" +
    "    typeof document !== 'undefined';\n" +
    '\n' +
    'function cloneObject(data) {\n' +
    '    let copy;\n' +
    '    const isArray = Array.isArray(data);\n' +
    '    if (data instanceof Date) {\n' +
    '        copy = new Date(data);\n' +
    '    }\n' +
    '    else if (data instanceof Set) {\n' +
    '        copy = new Set(data);\n' +
    '    }\n' +
    '    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n' +
    '        (isArray || isObject(data))) {\n' +
    '        copy = isArray ? [] : {};\n' +
    '        if (!isArray && !isPlainObject(data)) {\n' +
    '            copy = data;\n' +
    '        }\n' +
    '        else {\n' +
    '            for (const key in data) {\n' +
    '                if (data.hasOwnProperty(key)) {\n' +
    '                    copy[key] = cloneObject(data[key]);\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    else {\n' +
    '        return data;\n' +
    '    }\n' +
    '    return copy;\n' +
    '}\n' +
    '\n' +
    'var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n' +
    '\n' +
    'var isUndefined = (val) => val === undefined;\n' +
    '\n' +
    'var get = (object, path, defaultValue) => {\n' +
    '    if (!path || !isObject(object)) {\n' +
    '        return defaultValue;\n' +
    '    }\n' +
    '    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n' +
    '    return isUndefined(result) || result === object\n' +
    '        ? isUndefined(object[path])\n' +
    '            ? defaultValue\n' +
    '            : object[path]\n' +
    '        : result;\n' +
    '};\n' +
    '\n' +
    "var isBoolean = (value) => typeof value === 'boolean';\n" +
    '\n' +
    'const EVENTS = {\n' +
    "    BLUR: 'blur',\n" +
    "    FOCUS_OUT: 'focusout',\n" +
    "    CHANGE: 'change',\n" +
    '};\n' +
    'const VALIDATION_MODE = {\n' +
    "    onBlur: 'onBlur',\n" +
    "    onChange: 'onChange',\n" +
    "    onSubmit: 'onSubmit',\n" +
    "    onTouched: 'onTouched',\n" +
    "    all: 'all',\n" +
    '};\n' +
    'const INPUT_VALIDATION_RULES = {\n' +
    "    max: 'max',\n" +
    "    min: 'min',\n" +
    "    maxLength: 'maxLength',\n" +
    "    minLength: 'minLength',\n" +
    "    pattern: 'pattern',\n" +
    "    required: 'required',\n" +
    "    validate: 'validate',\n" +
    '};\n' +
    '\n' +
    'const HookFormContext = React.createContext(null);\n' +
    '/**\n' +
    ' * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n' +
    ' *\n' +
    ' * @remarks\n' +
    ' * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n' +
    ' *\n' +
    ' * @returns return all useForm methods\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```tsx\n' +
    ' * function App() {\n' +
    ' *   const methods = useForm();\n' +
    ' *   const onSubmit = data => console.log(data);\n' +
    ' *\n' +
    ' *   return (\n' +
    ' *     <FormProvider {...methods} >\n' +
    ' *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n' +
    ' *         <NestedInput />\n' +
    ' *         <input type="submit" />\n' +
    ' *       </form>\n' +
    ' *     </FormProvider>\n' +
    ' *   );\n' +
    ' * }\n' +
    ' *\n' +
    ' *  function NestedInput() {\n' +
    ' *   const { register } = useFormContext(); // retrieve all hook methods\n' +
    ' *   return <input {...register("test")} />;\n' +
    ' * }\n' +
    ' * ```\n' +
    ' */\n' +
    'const useFormContext = () => React.useContext(HookFormContext);\n' +
    '/**\n' +
    ' * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n' +
    ' *\n' +
    ' * @remarks\n' +
    ' * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n' +
    ' *\n' +
    ' * @param props - all useForm methods\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```tsx\n' +
    ' * function App() {\n' +
    ' *   const methods = useForm();\n' +
    ' *   const onSubmit = data => console.log(data);\n' +
    ' *\n' +
    ' *   return (\n' +
    ' *     <FormProvider {...methods} >\n' +
    ' *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n' +
    ' *         <NestedInput />\n' +
    ' *         <input type="submit" />\n' +
    ' *       </form>\n' +
    ' *     </FormProvider>\n' +
    ' *   );\n' +
    ' * }\n' +
    ' *\n' +
    ' *  function NestedInput() {\n' +
    ' *   const { register } = useFormContext(); // retrieve all hook methods\n' +
    ' *   return <input {...register("test")} />;\n' +
    ' * }\n' +
    ' * ```\n' +
    ' */\n' +
    'const FormProvider = (props) => {\n' +
    '    const { children, ...data } = props;\n' +
    '    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n' +
    '};\n' +
    '\n' +
    'var getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n' +
    '    const result = {\n' +
    '        defaultValues: control._defaultValues,\n' +
    '    };\n' +
    '    for (const key in formState) {\n' +
    '        Object.defineProperty(result, key, {\n' +
    '            get: () => {\n' +
    '                const _key = key;\n' +
    '                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n' +
    '                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n' +
    '                }\n' +
    '                localProxyFormState && (localProxyFormState[_key] = true);\n' +
    '                return formState[_key];\n' +
    '            },\n' +
    '        });\n' +
    '    }\n' +
    '    return result;\n' +
    '};\n' +
    '\n' +
    'var isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n' +
    '\n' +
    'var shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n' +
    '    updateFormState(formStateData);\n' +
    '    const { name, ...formState } = formStateData;\n' +
    '    return (isEmptyObject(formState) ||\n' +
    '        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n' +
    '        Object.keys(formState).find((key) => _proxyFormState[key] ===\n' +
    '            (!isRoot || VALIDATION_MODE.all)));\n' +
    '};\n' +
    '\n' +
    'var convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n' +
    '\n' +
    'var shouldSubscribeByName = (name, signalName, exact) => !name ||\n' +
    '    !signalName ||\n' +
    '    name === signalName ||\n' +
    '    convertToArrayPayload(name).some((currentName) => currentName &&\n' +
    '        (exact\n' +
    '            ? currentName === signalName\n' +
    '            : currentName.startsWith(signalName) ||\n' +
    '                signalName.startsWith(currentName)));\n' +
    '\n' +
    'function useSubscribe(props) {\n' +
    '    const _props = React.useRef(props);\n' +
    '    _props.current = props;\n' +
    '    React.useEffect(() => {\n' +
    '        const subscription = !props.disabled &&\n' +
    '            _props.current.subject &&\n' +
    '            _props.current.subject.subscribe({\n' +
    '                next: _props.current.next,\n' +
    '            });\n' +
    '        return () => {\n' +
    '            subscription && subscription.unsubscribe();\n' +
    '        };\n' +
    '    }, [props.disabled]);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n' +
    ' *\n' +
    ' * @remarks\n' +
    ' * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n' +
    ' *\n' +
    ' * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```tsx\n' +
    ' * function App() {\n' +
    ' *   const { register, handleSubmit, control } = useForm({\n' +
    ' *     defaultValues: {\n' +
    ' *     firstName: "firstName"\n' +
    ' *   }});\n' +
    ' *   const { dirtyFields } = useFormState({\n' +
    ' *     control\n' +
    ' *   });\n' +
    ' *   const onSubmit = (data) => console.log(data);\n' +
    ' *\n' +
    ' *   return (\n' +
    ' *     <form onSubmit={handleSubmit(onSubmit)}>\n' +
    ' *       <input {...register("firstName")} placeholder="First Name" />\n' +
    ' *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n' +
    ' *       <input type="submit" />\n' +
    ' *     </form>\n' +
    ' *   );\n' +
    ' * }\n' +
    ' * ```\n' +
    ' */\n' +
    'function useFormState(props) {\n' +
    '    const methods = useFormContext();\n' +
    '    const { control = methods.control, disabled, name, exact } = props || {};\n' +
    '    const [formState, updateFormState] = React.useState(control._formState);\n' +
    '    const _mounted = React.useRef(true);\n' +
    '    const _localProxyFormState = React.useRef({\n' +
    '        isDirty: false,\n' +
    '        isLoading: false,\n' +
    '        dirtyFields: false,\n' +
    '        touchedFields: false,\n' +
    '        validatingFields: false,\n' +
    '        isValidating: false,\n' +
    '        isValid: false,\n' +
    '        errors: false,\n' +
    '    });\n' +
    '    const _name = React.useRef(name);\n' +
    '    _name.current = name;\n' +
    '    useSubscribe({\n' +
    '        disabled,\n' +
    '        next: (value) => _mounted.current &&\n' +
    '            shouldSubscribeByName(_name.current, value.name, exact) &&\n' +
    '            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n' +
    '            updateFormState({\n' +
    '                ...control._formState,\n' +
    '                ...value,\n' +
    '            }),\n' +
    '        subject: control._subjects.state,\n' +
    '    });\n' +
    '    React.useEffect(() => {\n' +
    '        _mounted.current = true;\n' +
    '        _localProxyFormState.current.isValid && control._updateValid(true);\n' +
    '        return () => {\n' +
    '            _mounted.current = false;\n' +
    '        };\n' +
    '    }, [control]);\n' +
    '    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n' +
    '}\n' +
    '\n' +
    "var isString = (value) => typeof value === 'string';\n" +
    '\n' +
    'var generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n' +
    '    if (isString(names)) {\n' +
    '        isGlobal && _names.watch.add(names);\n' +
    '        return get(formValues, names, defaultValue);\n' +
    '    }\n' +
    '    if (Array.isArray(names)) {\n' +
    '        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n' +
    '    }\n' +
    '    isGlobal && (_names.watchAll = true);\n' +
    '    return formValues;\n' +
    '};\n' +
    '\n' +
    '/**\n' +
    ' * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n' +
    ' *\n' +
    ' * @remarks\n' +
    ' *\n'... 85473 more characters
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconCheckCircle = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconCheckCircle };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconError = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconError };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconInfo = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M11 7H13V9H11V7ZM11 11H13V17H11V11ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconInfo };\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconWarning = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M1 21H23L12 2L1 21ZM13 18H11V16H13V18ZM13 14H11V10H13V14Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconWarning };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const AccordionContext = React.createContext(undefined);\n' +
    'const AccordionItemContext = React.createContext(undefined);\n' +
    '\n' +
    'export { AccordionContext, AccordionItemContext };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if `value` is the\n' +
    ' * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n' +
    " * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n" +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isObject({});\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isObject([1, 2, 3]);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isObject(_.noop);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isObject(null);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isObject(value) {\n' +
    '  var type = typeof value;\n' +
    "  return value != null && (type == 'object' || type == 'function');\n" +
    '}\n' +
    '\n' +
    'module.exports = isObject;\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconCheck = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M9.00016 16.1698L4.83016 11.9998L3.41016 13.4098L9.00016 18.9998L21.0002 6.99984L19.5902 5.58984L9.00016 16.1698Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconCheck };\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the timestamp of the number of milliseconds that have elapsed since\n' +
    ' * the Unix epoch (1 January 1970 00:00:00 UTC).\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 2.4.0\n' +
    ' * @category Date\n' +
    ' * @returns {number} Returns the timestamp.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.defer(function(stamp) {\n' +
    ' *   console.log(_.now() - stamp);\n' +
    ' * }, _.now());\n' +
    ' * // => Logs the number of milliseconds it took for the deferred invocation.\n' +
    ' */\n' +
    'var now = function() {\n' +
    '  return root.Date.now();\n' +
    '};\n' +
    '\n' +
    'module.exports = now;\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconIndeterminate = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", height: "24", width: "24", viewBox: "0 0 24 24" },\n' +
    '            React.createElement("line", { x1: "4", x2: "20", y1: "12", y2: "12", stroke: "currentColor", strokeWidth: "3" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconIndeterminate };\n'
} [Function: logger]
____9999999____ {
  code: "var baseTrim = require('./_baseTrim'),\n" +
    "    isObject = require('./isObject'),\n" +
    "    isSymbol = require('./isSymbol');\n" +
    '\n' +
    '/** Used as references for various `Number` constants. */\n' +
    'var NAN = 0 / 0;\n' +
    '\n' +
    '/** Used to detect bad signed hexadecimal string values. */\n' +
    'var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n' +
    '\n' +
    '/** Used to detect binary string values. */\n' +
    'var reIsBinary = /^0b[01]+$/i;\n' +
    '\n' +
    '/** Used to detect octal string values. */\n' +
    'var reIsOctal = /^0o[0-7]+$/i;\n' +
    '\n' +
    '/** Built-in method references without a dependency on `root`. */\n' +
    'var freeParseInt = parseInt;\n' +
    '\n' +
    '/**\n' +
    ' * Converts `value` to a number.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to process.\n' +
    ' * @returns {number} Returns the number.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.toNumber(3.2);\n' +
    ' * // => 3.2\n' +
    ' *\n' +
    ' * _.toNumber(Number.MIN_VALUE);\n' +
    ' * // => 5e-324\n' +
    ' *\n' +
    ' * _.toNumber(Infinity);\n' +
    ' * // => Infinity\n' +
    ' *\n' +
    " * _.toNumber('3.2');\n" +
    ' * // => 3.2\n' +
    ' */\n' +
    'function toNumber(value) {\n' +
    "  if (typeof value == 'number') {\n" +
    '    return value;\n' +
    '  }\n' +
    '  if (isSymbol(value)) {\n' +
    '    return NAN;\n' +
    '  }\n' +
    '  if (isObject(value)) {\n' +
    "    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n" +
    "    value = isObject(other) ? (other + '') : other;\n" +
    '  }\n' +
    "  if (typeof value != 'string') {\n" +
    '    return value === 0 ? value : +value;\n' +
    '  }\n' +
    '  value = baseTrim(value);\n' +
    '  var isBinary = reIsBinary.test(value);\n' +
    '  return (isBinary || reIsOctal.test(value))\n' +
    '    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n' +
    '    : (reIsBadHex.test(value) ? NAN : +value);\n' +
    '}\n' +
    '\n' +
    'module.exports = toNumber;\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconExpandMore = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M16.59 8.58984L12 13.1698L7.41 8.58984L6 9.99984L12 15.9998L18 9.99984L16.59 8.58984Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconExpandMore };\n'
} [Function: logger]
____9999999____ {
  code: 'function filterAllowedFiles(files, acceptedFileTypes) {\n' +
    "    // Allow any files if acceptedFileTypes is undefined, empty array, or contains '*'\n" +
    '    if (!acceptedFileTypes ||\n' +
    '        acceptedFileTypes.length === 0 ||\n' +
    "        acceptedFileTypes.includes('*')) {\n" +
    '        return { acceptedFiles: files, rejectedFiles: [] };\n' +
    '    }\n' +
    '    const acceptedFiles = [];\n' +
    '    const rejectedFiles = [];\n' +
    '    function filterFile(file) {\n' +
    "        const { type = '', name = '' } = file;\n" +
    '        const mimeType = type.toLowerCase();\n' +
    "        const baseMimeType = mimeType.split('/')[0];\n" +
    '        return acceptedFileTypes.some((type) => {\n' +
    '            const validType = type.trim().toLowerCase();\n' +
    '            // if the accepted file type is a file extension\n' +
    "            // it will start with '.', check against the file name\n" +
    "            if (validType.charAt(0) === '.') {\n" +
    '                return name.toLowerCase().endsWith(validType);\n' +
    '            }\n' +
    '            // This is something like a image/* mime type\n' +
    "            if (validType.endsWith('/*')) {\n" +
    "                return baseMimeType === validType.split('/')[0];\n" +
    '            }\n' +
    '            return mimeType === validType;\n' +
    '        });\n' +
    '    }\n' +
    '    files.forEach((file) => {\n' +
    '        (filterFile(file) ? acceptedFiles : rejectedFiles).push(file);\n' +
    '    });\n' +
    '    return { acceptedFiles, rejectedFiles };\n' +
    '}\n' +
    '\n' +
    'export { filterAllowedFiles };\n'
} [Function: logger]
____9999999____ {
  code: "import { stylePropsToThemeKeys } from '../shared/constants.mjs';\n" +
    '\n' +
    'const isThemeStylePropKey = (key) => {\n' +
    '    return key in stylePropsToThemeKeys;\n' +
    '};\n' +
    '\n' +
    'export { isThemeStylePropKey };\n'
} [Function: logger]
____9999999____ {
  code: 'export default function _extends() {\n' +
    '  _extends = Object.assign ? Object.assign.bind() : function (target) {\n' +
    '    for (var i = 1; i < arguments.length; i++) {\n' +
    '      var source = arguments[i];\n' +
    '      for (var key in source) {\n' +
    '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
    '          target[key] = source[key];\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '    return target;\n' +
    '  };\n' +
    '  return _extends.apply(this, arguments);\n' +
    '}'
} [Function: logger]
____9999999____ {
  code: 'function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented: checkForDefaultPrevented = true  } = {}) {\n' +
    '    return function handleEvent(event) {\n' +
    '        originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);\n' +
    '        if (checkForDefaultPrevented === false || !event.defaultPrevented) return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);\n' +
    '    };\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$e42e1063c40fb3ef$export$b9ecd428b558ff10 as composeEventHandlers};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import {createContext as $3bkAK$createContext, useMemo as $3bkAK$useMemo, createElement as $3bkAK$createElement, useContext as $3bkAK$useContext} from "react";\n' +
    '\n' +
    '\n' +
    'function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {\n' +
    '    const Context = /*#__PURE__*/ $3bkAK$createContext(defaultContext);\n' +
    '    function Provider(props) {\n' +
    '        const { children: children , ...context } = props; // Only re-memoize when prop values change\n' +
    '        // eslint-disable-next-line react-hooks/exhaustive-deps\n' +
    '        const value = $3bkAK$useMemo(()=>context\n' +
    '        , Object.values(context));\n' +
    '        return /*#__PURE__*/ $3bkAK$createElement(Context.Provider, {\n' +
    '            value: value\n' +
    '        }, children);\n' +
    '    }\n' +
    '    function useContext(consumerName) {\n' +
    '        const context = $3bkAK$useContext(Context);\n' +
    '        if (context) return context;\n' +
    "        if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.\n" +
    '        throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n' +
    '    }\n' +
    "    Provider.displayName = rootComponentName + 'Provider';\n" +
    '    return [\n' +
    '        Provider,\n' +
    '        useContext\n' +
    '    ];\n' +
    '}\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * createContextScope\n' +
    ' * -----------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {\n' +
    '    let defaultContexts = [];\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * createContext\n' +
    '   * ---------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {\n' +
    '        const BaseContext = /*#__PURE__*/ $3bkAK$createContext(defaultContext);\n' +
    '        const index = defaultContexts.length;\n' +
    '        defaultContexts = [\n' +
    '            ...defaultContexts,\n' +
    '            defaultContext\n' +
    '        ];\n' +
    '        function Provider(props) {\n' +
    '            const { scope: scope , children: children , ...context } = props;\n' +
    '            const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext; // Only re-memoize when prop values change\n' +
    '            // eslint-disable-next-line react-hooks/exhaustive-deps\n' +
    '            const value = $3bkAK$useMemo(()=>context\n' +
    '            , Object.values(context));\n' +
    '            return /*#__PURE__*/ $3bkAK$createElement(Context.Provider, {\n' +
    '                value: value\n' +
    '            }, children);\n' +
    '        }\n' +
    '        function useContext(consumerName, scope) {\n' +
    '            const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index]) || BaseContext;\n' +
    '            const context = $3bkAK$useContext(Context);\n' +
    '            if (context) return context;\n' +
    "            if (defaultContext !== undefined) return defaultContext; // if a defaultContext wasn't specified, it's a required context.\n" +
    '            throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n' +
    '        }\n' +
    "        Provider.displayName = rootComponentName + 'Provider';\n" +
    '        return [\n' +
    '            Provider,\n' +
    '            useContext\n' +
    '        ];\n' +
    '    }\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * createScope\n' +
    '   * ---------------------------------------------------------------------------------------------*/ const createScope = ()=>{\n' +
    '        const scopeContexts = defaultContexts.map((defaultContext)=>{\n' +
    '            return /*#__PURE__*/ $3bkAK$createContext(defaultContext);\n' +
    '        });\n' +
    '        return function useScope(scope) {\n' +
    '            const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;\n' +
    '            return $3bkAK$useMemo(()=>({\n' +
    '                    [`__scope${scopeName}`]: {\n' +
    '                        ...scope,\n' +
    '                        [scopeName]: contexts\n' +
    '                    }\n' +
    '                })\n' +
    '            , [\n' +
    '                scope,\n' +
    '                contexts\n' +
    '            ]);\n' +
    '        };\n' +
    '    };\n' +
    '    createScope.scopeName = scopeName;\n' +
    '    return [\n' +
    '        $c512c27ab02ef895$export$fd42f52fd3ae1109,\n' +
    '        $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)\n' +
    '    ];\n' +
    '}\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * composeContextScopes\n' +
    ' * -----------------------------------------------------------------------------------------------*/ function $c512c27ab02ef895$var$composeContextScopes(...scopes) {\n' +
    '    const baseScope = scopes[0];\n' +
    '    if (scopes.length === 1) return baseScope;\n' +
    '    const createScope1 = ()=>{\n' +
    '        const scopeHooks = scopes.map((createScope)=>({\n' +
    '                useScope: createScope(),\n' +
    '                scopeName: createScope.scopeName\n' +
    '            })\n' +
    '        );\n' +
    '        return function useComposedScopes(overrideScopes) {\n' +
    '            const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope: useScope , scopeName: scopeName  })=>{\n' +
    '                // We are calling a hook inside a callback which React warns against to avoid inconsistent\n' +
    "                // renders, however, scoping doesn't have render side effects so we ignore the rule.\n" +
    '                // eslint-disable-next-line react-hooks/rules-of-hooks\n' +
    '                const scopeProps = useScope(overrideScopes);\n' +
    '                const currentScope = scopeProps[`__scope${scopeName}`];\n' +
    '                return {\n' +
    '                    ...nextScopes,\n' +
    '                    ...currentScope\n' +
    '                };\n' +
    '            }, {});\n' +
    '            return $3bkAK$useMemo(()=>({\n' +
    '                    [`__scope${baseScope.scopeName}`]: nextScopes1\n' +
    '                })\n' +
    '            , [\n' +
    '                nextScopes1\n' +
    '            ]);\n' +
    '        };\n' +
    '    };\n' +
    '    createScope1.scopeName = baseScope.scopeName;\n' +
    '    return createScope1;\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$c512c27ab02ef895$export$fd42f52fd3ae1109 as createContext, $c512c27ab02ef895$export$50c7b4e9d9f19c1 as createContextScope};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import $epM9y$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {useState as $epM9y$useState, useRef as $epM9y$useRef, useEffect as $epM9y$useEffect, createElement as $epM9y$createElement, useCallback as $epM9y$useCallback, forwardRef as $epM9y$forwardRef, Fragment as $epM9y$Fragment} from "react";\n' +
    'import {composeEventHandlers as $epM9y$composeEventHandlers} from "@radix-ui/primitive";\n' +
    'import {createCollection as $epM9y$createCollection} from "@radix-ui/react-collection";\n' +
    'import {useComposedRefs as $epM9y$useComposedRefs, composeRefs as $epM9y$composeRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {createContextScope as $epM9y$createContextScope} from "@radix-ui/react-context";\n' +
    'import {useDirection as $epM9y$useDirection} from "@radix-ui/react-direction";\n' +
    'import {DismissableLayer as $epM9y$DismissableLayer} from "@radix-ui/react-dismissable-layer";\n' +
    'import {useFocusGuards as $epM9y$useFocusGuards} from "@radix-ui/react-focus-guards";\n' +
    'import {FocusScope as $epM9y$FocusScope} from "@radix-ui/react-focus-scope";\n' +
    'import {useId as $epM9y$useId} from "@radix-ui/react-id";\n' +
    'import {createPopperScope as $epM9y$createPopperScope, Root as $epM9y$Root, Anchor as $epM9y$Anchor, Content as $epM9y$Content, Arrow as $epM9y$Arrow} from "@radix-ui/react-popper";\n' +
    'import {Portal as $epM9y$Portal} from "@radix-ui/react-portal";\n' +
    'import {Presence as $epM9y$Presence} from "@radix-ui/react-presence";\n' +
    'import {Primitive as $epM9y$Primitive, dispatchDiscreteCustomEvent as $epM9y$dispatchDiscreteCustomEvent} from "@radix-ui/react-primitive";\n' +
    'import {createRovingFocusGroupScope as $epM9y$createRovingFocusGroupScope, Root as $epM9y$Root1, Item as $epM9y$Item} from "@radix-ui/react-roving-focus";\n' +
    'import {Slot as $epM9y$Slot} from "@radix-ui/react-slot";\n' +
    'import {useCallbackRef as $epM9y$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    'import {hideOthers as $epM9y$hideOthers} from "aria-hidden";\n' +
    'import {RemoveScroll as $epM9y$RemoveScroll} from "react-remove-scroll";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'const $6cc32821e9371a1c$var$SELECTION_KEYS = [\n' +
    "    'Enter',\n" +
    "    ' '\n" +
    '];\n' +
    'const $6cc32821e9371a1c$var$FIRST_KEYS = [\n' +
    "    'ArrowDown',\n" +
    "    'PageUp',\n" +
    "    'Home'\n" +
    '];\n' +
    'const $6cc32821e9371a1c$var$LAST_KEYS = [\n' +
    "    'ArrowUp',\n" +
    "    'PageDown',\n" +
    "    'End'\n" +
    '];\n' +
    'const $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [\n' +
    '    ...$6cc32821e9371a1c$var$FIRST_KEYS,\n' +
    '    ...$6cc32821e9371a1c$var$LAST_KEYS\n' +
    '];\n' +
    'const $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {\n' +
    '    ltr: [\n' +
    '        ...$6cc32821e9371a1c$var$SELECTION_KEYS,\n' +
    "        'ArrowRight'\n" +
    '    ],\n' +
    '    rtl: [\n' +
    '        ...$6cc32821e9371a1c$var$SELECTION_KEYS,\n' +
    "        'ArrowLeft'\n" +
    '    ]\n' +
    '};\n' +
    'const $6cc32821e9371a1c$var$SUB_CLOSE_KEYS = {\n' +
    '    ltr: [\n' +
    "        'ArrowLeft'\n" +
    '    ],\n' +
    '    rtl: [\n' +
    "        'ArrowRight'\n" +
    '    ]\n' +
    '};\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Menu\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $6cc32821e9371a1c$var$MENU_NAME = 'Menu';\n" +
    'const [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $epM9y$createCollection($6cc32821e9371a1c$var$MENU_NAME);\n' +
    'const [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $epM9y$createContextScope($6cc32821e9371a1c$var$MENU_NAME, [\n' +
    '    $6cc32821e9371a1c$var$createCollectionScope,\n' +
    '    $epM9y$createPopperScope,\n' +
    '    $epM9y$createRovingFocusGroupScope\n' +
    ']);\n' +
    'const $6cc32821e9371a1c$var$usePopperScope = $epM9y$createPopperScope();\n' +
    'const $6cc32821e9371a1c$var$useRovingFocusGroupScope = $epM9y$createRovingFocusGroupScope();\n' +
    'const [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);\n' +
    'const [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);\n' +
    'const $6cc32821e9371a1c$export$d9b273488cd8ce6f = (props)=>{\n' +
    '    const { __scopeMenu: __scopeMenu , open: open = false , children: children , dir: dir , onOpenChange: onOpenChange , modal: modal = true  } = props;\n' +
    '    const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n' +
    '    const [content, setContent] = $epM9y$useState(null);\n' +
    '    const isUsingKeyboardRef = $epM9y$useRef(false);\n' +
    '    const handleOpenChange = $epM9y$useCallbackRef(onOpenChange);\n' +
    '    const direction = $epM9y$useDirection(dir);\n' +
    '    $epM9y$useEffect(()=>{\n' +
    '        // Capture phase ensures we set the boolean before any side effects execute\n' +
    '        // in response to the key or pointer event as they might depend on this value.\n' +
    '        const handleKeyDown = ()=>{\n' +
    '            isUsingKeyboardRef.current = true;\n' +
    "            document.addEventListener('pointerdown', handlePointer, {\n" +
    '                capture: true,\n' +
    '                once: true\n' +
    '            });\n' +
    "            document.addEventListener('pointermove', handlePointer, {\n" +
    '                capture: true,\n' +
    '                once: true\n' +
    '            });\n' +
    '        };\n' +
    '        const handlePointer = ()=>isUsingKeyboardRef.current = false\n' +
    '        ;\n' +
    "        document.addEventListener('keydown', handleKeyDown, {\n" +
    '            capture: true\n' +
    '        });\n' +
    '        return ()=>{\n' +
    "            document.removeEventListener('keydown', handleKeyDown, {\n" +
    '                capture: true\n' +
    '            });\n' +
    "            document.removeEventListener('pointerdown', handlePointer, {\n" +
    '                capture: true\n' +
    '            });\n' +
    "            document.removeEventListener('pointermove', handlePointer, {\n" +
    '                capture: true\n' +
    '            });\n' +
    '        };\n' +
    '    }, []);\n' +
    '    return /*#__PURE__*/ $epM9y$createElement($epM9y$Root, popperScope, /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$MenuProvider, {\n' +
    '        scope: __scopeMenu,\n' +
    '        open: open,\n' +
    '        onOpenChange: handleOpenChange,\n' +
    '        content: content,\n' +
    '        onContentChange: setContent\n' +
    '    }, /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$MenuRootProvider, {\n' +
    '        scope: __scopeMenu,\n' +
    '        onClose: $epM9y$useCallback(()=>handleOpenChange(false)\n' +
    '        , [\n' +
    '            handleOpenChange\n' +
    '        ]),\n' +
    '        isUsingKeyboardRef: isUsingKeyboardRef,\n' +
    '        dir: direction,\n' +
    '        modal: modal\n' +
    '    }, children)));\n' +
    '};\n' +
    '/*#__PURE__*/ Object.assign($6cc32821e9371a1c$export$d9b273488cd8ce6f, {\n' +
    '    displayName: $6cc32821e9371a1c$var$MENU_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * MenuAnchor\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $6cc32821e9371a1c$var$ANCHOR_NAME = 'MenuAnchor';\n" +
    'const $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = /*#__PURE__*/ $epM9y$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeMenu: __scopeMenu , ...anchorProps } = props;\n' +
    '    const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);\n' +
    '    return /*#__PURE__*/ $epM9y$createElement($epM9y$Anchor, $epM9y$babelruntimehelpersesmextends({}, popperScope, anchorProps, {\n' +
    '        ref: forwardedRef\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($6cc32821e9371a1c$export$9fa5ebd18bee4d43, {\n' +
    '    displayName: $6cc32821e9371a1c$var$ANCHOR_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * MenuPortal\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $6cc32821e9371a1c$var$PORTAL_NAME = 'MenuPortal';\n" +
    'const [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {\n' +
    '    forceMount: undefined\n' +
    '});\n' +
    'const $6cc32821e9371a1c$export$793392f970497feb = (props)=>{\n' +
    '    const { __scopeMenu: __scopeMenu , forceMount: forceMount , children: children , container: container  } = props;\n' +
    '    const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);\n' +
    '    return /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$PortalProvider, {\n' +
    '        scope: __scopeMenu,\n' +
    '        forceMount: forceMount\n' +
    '    }, /*#__PURE__*/ $epM9y$createElement($epM9y$Presence, {\n' +
    '        present: forceMount || context.open\n' +
    '    }, /*#__PURE__*/ $epM9y$createElement($epM9y$Portal, {\n' +
    '        asChild: true,\n' +
    '        container: container\n' +
    '    }, children)));\n' +
    '};\n' +
    '/*#__PURE__*/ Object.assign($6cc32821e9371a1c$export$793392f970497feb, {\n' +
    '    displayName: $6cc32821e9371a1c$var$PORTAL_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * MenuContent\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $6cc32821e9371a1c$var$CONTENT_NAME = 'MenuContent';\n" +
    'const [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME);\n' +
    'const $6cc32821e9371a1c$export$479f0f2f71193efe = /*#__PURE__*/ $epM9y$forwardRef((props, forwardedRef)=>{\n' +
    '    const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n' +
    '    const { forceMount: forceMount = portalContext.forceMount , ...contentProps } = props;\n' +
    '    const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n' +
    '    const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);\n' +
    '    return /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$Collection.Provider, {\n' +
    '        scope: props.__scopeMenu\n' +
    '    }, /*#__PURE__*/ $epM9y$createElement($epM9y$Presence, {\n' +
    '        present: forceMount || context.open\n' +
    '    }, /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$Collection.Slot, {\n' +
    '        scope: props.__scopeMenu\n' +
    '    }, rootContext.modal ? /*#__PURE__*/ $epM9y$createElement($6cc32821e9371a1c$var$MenuRootContentModal, $epM9y$babelruntimehelpersesmextends({}, contentProps, {\n' +
    '        ref: for'... 46160 more characters
} [Function: logger]
____9999999____ {
  code: 'import {useCallback as $3vqmr$useCallback} from "react";\n' +
    '\n' +
    '\n' +
    '/**\n' +
    ' * Set a given ref to a given value\n' +
    ' * This utility takes care of different types of refs: callback refs and RefObject(s)\n' +
    ' */ function $6ed0406888f73fc4$var$setRef(ref, value) {\n' +
    "    if (typeof ref === 'function') ref(value);\n" +
    '    else if (ref !== null && ref !== undefined) ref.current = value;\n' +
    '}\n' +
    '/**\n' +
    ' * A utility to compose multiple refs together\n' +
    ' * Accepts callback refs and RefObject(s)\n' +
    ' */ function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {\n' +
    '    return (node)=>refs.forEach((ref)=>$6ed0406888f73fc4$var$setRef(ref, node)\n' +
    '        )\n' +
    '    ;\n' +
    '}\n' +
    '/**\n' +
    ' * A custom hook that composes multiple refs\n' +
    ' * Accepts callback refs and RefObject(s)\n' +
    ' */ function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {\n' +
    '    // eslint-disable-next-line react-hooks/exhaustive-deps\n' +
    '    return $3vqmr$useCallback($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$6ed0406888f73fc4$export$43e446d32b3d21af as composeRefs, $6ed0406888f73fc4$export$c7b2cbe3552a0d05 as useComposedRefs};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const MessageContext = React.createContext({\n' +
    '    dismissed: false,\n' +
    '    setDismissed: () => { },\n' +
    '});\n' +
    'const useMessage = () => React.useContext(MessageContext);\n' +
    '\n' +
    'export { MessageContext, useMessage };\n'
} [Function: logger]
____9999999____ {
  code: 'import {useCallback as $bnPw9$useCallback, useState as $bnPw9$useState, useRef as $bnPw9$useRef, useEffect as $bnPw9$useEffect} from "react";\n' +
    'import {useCallbackRef as $bnPw9$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    '\n' +
    '\n' +
    '\n' +
    'function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop: prop , defaultProp: defaultProp , onChange: onChange = ()=>{}  }) {\n' +
    '    const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({\n' +
    '        defaultProp: defaultProp,\n' +
    '        onChange: onChange\n' +
    '    });\n' +
    '    const isControlled = prop !== undefined;\n' +
    '    const value1 = isControlled ? prop : uncontrolledProp;\n' +
    '    const handleChange = $bnPw9$useCallbackRef(onChange);\n' +
    '    const setValue = $bnPw9$useCallback((nextValue)=>{\n' +
    '        if (isControlled) {\n' +
    '            const setter = nextValue;\n' +
    "            const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n" +
    '            if (value !== prop) handleChange(value);\n' +
    '        } else setUncontrolledProp(nextValue);\n' +
    '    }, [\n' +
    '        isControlled,\n' +
    '        prop,\n' +
    '        setUncontrolledProp,\n' +
    '        handleChange\n' +
    '    ]);\n' +
    '    return [\n' +
    '        value1,\n' +
    '        setValue\n' +
    '    ];\n' +
    '}\n' +
    'function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp: defaultProp , onChange: onChange  }) {\n' +
    '    const uncontrolledState = $bnPw9$useState(defaultProp);\n' +
    '    const [value] = uncontrolledState;\n' +
    '    const prevValueRef = $bnPw9$useRef(value);\n' +
    '    const handleChange = $bnPw9$useCallbackRef(onChange);\n' +
    '    $bnPw9$useEffect(()=>{\n' +
    '        if (prevValueRef.current !== value) {\n' +
    '            handleChange(value);\n' +
    '            prevValueRef.current = value;\n' +
    '        }\n' +
    '    }, [\n' +
    '        value,\n' +
    '        prevValueRef,\n' +
    '        handleChange\n' +
    '    ]);\n' +
    '    return uncontrolledState;\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$71cd76cc60e0454e$export$6f32135080cb4c3 as useControllableState};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import $4q5Fq$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $4q5Fq$forwardRef, useEffect as $4q5Fq$useEffect, createElement as $4q5Fq$createElement} from "react";\n' +
    'import {flushSync as $4q5Fq$flushSync} from "react-dom";\n' +
    'import {Slot as $4q5Fq$Slot} from "@radix-ui/react-slot";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'const $8927f6f2acc4f386$var$NODES = [\n' +
    "    'a',\n" +
    "    'button',\n" +
    "    'div',\n" +
    "    'h2',\n" +
    "    'h3',\n" +
    "    'img',\n" +
    "    'li',\n" +
    "    'nav',\n" +
    "    'ol',\n" +
    "    'p',\n" +
    "    'span',\n" +
    "    'svg',\n" +
    "    'ul'\n" +
    ']; // Temporary while we await merge of this fix:\n' +
    '// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n' +
    '// prettier-ignore\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Primitive\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node)=>{\n' +
    '    const Node = /*#__PURE__*/ $4q5Fq$forwardRef((props, forwardedRef)=>{\n' +
    '        const { asChild: asChild , ...primitiveProps } = props;\n' +
    '        const Comp = asChild ? $4q5Fq$Slot : node;\n' +
    '        $4q5Fq$useEffect(()=>{\n' +
    "            window[Symbol.for('radix-ui')] = true;\n" +
    '        }, []);\n' +
    '        return /*#__PURE__*/ $4q5Fq$createElement(Comp, $4q5Fq$babelruntimehelpersesmextends({}, primitiveProps, {\n' +
    '            ref: forwardedRef\n' +
    '        }));\n' +
    '    });\n' +
    '    Node.displayName = `Primitive.${node}`;\n' +
    '    return {\n' +
    '        ...primitive,\n' +
    '        [node]: Node\n' +
    '    };\n' +
    '}, {});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Utils\n' +
    ' * -----------------------------------------------------------------------------------------------*/ /**\n' +
    ' * Flush custom event dispatch\n' +
    ' * https://github.com/radix-ui/primitives/pull/1378\n' +
    ' *\n' +
    ' * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n' +
    ' *\n' +
    ' * Internally, React prioritises events in the following order:\n' +
    ' *  - discrete\n' +
    ' *  - continuous\n' +
    ' *  - default\n' +
    ' *\n' +
    ' * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n' +
    ' *\n' +
    ' * `discrete` is an  important distinction as updates within these events are applied immediately.\n' +
    ' * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n' +
    " * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n" +
    ' * dispatched by another `discrete` event.\n' +
    ' *\n' +
    ' * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n' +
    ' * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n' +
    ' * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n' +
    ' * For example:\n' +
    ' *\n' +
    ' * dispatching a known click 👎\n' +
    ' * target.dispatchEvent(new Event(‘click’))\n' +
    ' *\n' +
    ' * dispatching a custom type within a non-discrete event 👎\n' +
    ' * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n' +
    ' *\n' +
    ' * dispatching a custom type within a `discrete` event 👍\n' +
    ' * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n' +
    ' *\n' +
    " * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n" +
    " * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n" +
    ' * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n' +
    ' */ function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {\n' +
    '    if (target) $4q5Fq$flushSync(()=>target.dispatchEvent(event)\n' +
    '    );\n' +
    '}\n' +
    '/* -----------------------------------------------------------------------------------------------*/ const $8927f6f2acc4f386$export$be92b6f5f03c0fe9 = $8927f6f2acc4f386$export$250ffa63cdc0d034;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$8927f6f2acc4f386$export$250ffa63cdc0d034 as Primitive, $8927f6f2acc4f386$export$be92b6f5f03c0fe9 as Root, $8927f6f2acc4f386$export$6d1a0317bde7de7f as dispatchDiscreteCustomEvent};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import * as $2AODx$react from "react";\n' +
    'import {useLayoutEffect as $2AODx$useLayoutEffect} from "@radix-ui/react-use-layout-effect";\n' +
    '\n' +
    '\n' +
    '\n' +
    "const $1746a345f3d73bb7$var$useReactId = $2AODx$react['useId'.toString()] || (()=>undefined\n" +
    ');\n' +
    'let $1746a345f3d73bb7$var$count = 0;\n' +
    'function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {\n' +
    '    const [id, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId()); // React versions older than 18 will have client-side ids only.\n' +
    '    $2AODx$useLayoutEffect(()=>{\n' +
    '        if (!deterministicId) setId((reactId)=>reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)\n' +
    '        );\n' +
    '    }, [\n' +
    '        deterministicId\n' +
    '    ]);\n' +
    "    return deterministicId || (id ? `radix-${id}` : '');\n" +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$1746a345f3d73bb7$export$f680877a34711e37 as useId};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconVisibilityOff = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M12 6.0002C15.79 6.0002 19.17 8.1302 20.82 11.5002C20.23 12.7202 19.4 13.7702 18.41 14.6202L19.82 16.0302C21.21 14.8002 22.31 13.2602 23 11.5002C21.27 7.1102 17 4.0002 12 4.0002C10.73 4.0002 9.51 4.2002 8.36 4.5702L10.01 6.2202C10.66 6.0902 11.32 6.0002 12 6.0002ZM10.93 7.14019L13 9.2102C13.57 9.4602 14.03 9.9202 14.28 10.4902L16.35 12.5602C16.43 12.2202 16.49 11.8602 16.49 11.4902C16.5 9.0102 14.48 7.0002 12 7.0002C11.63 7.0002 11.28 7.05019 10.93 7.14019ZM2.01 3.8702L4.69 6.5502C3.06 7.8302 1.77 9.5302 1 11.5002C2.73 15.8902 7 19.0002 12 19.0002C13.52 19.0002 14.98 18.7102 16.32 18.1802L19.74 21.6002L21.15 20.1902L3.42 2.4502L2.01 3.8702ZM9.51 11.3702L12.12 13.9802C12.08 13.9902 12.04 14.0002 12 14.0002C10.62 14.0002 9.5 12.8802 9.5 11.5002C9.5 11.4502 9.51 11.4202 9.51 11.3702V11.3702ZM6.11 7.97019L7.86 9.7202C7.63 10.2702 7.5 10.8702 7.5 11.5002C7.5 13.9802 9.52 16.0002 12 16.0002C12.63 16.0002 13.23 15.8702 13.77 15.6402L14.75 16.6202C13.87 16.8602 12.95 17.0002 12 17.0002C8.21 17.0002 4.83 14.8702 3.18 11.5002C3.88 10.0702 4.9 8.89019 6.11 7.97019Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconVisibilityOff };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    '// Source: https://github.com/radix-ui/primitives/blob/7ae63b6cce6ea53ea5d65b6d411894c004b38f47/packages/react/use-layout-effect/src/useLayoutEffect.tsx\n' +
    '/**\n' +
    ' * On the server, React emits a warning when calling `useLayoutEffect`.\n' +
    ' * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n' +
    ' * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n' +
    ' *\n' +
    ' * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n' +
    ' */\n' +
    'const useLayoutEffect = globalThis?.document ? React.useLayoutEffect : () => { };\n' +
    '\n' +
    'export { useLayoutEffect };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { isFunction } from '@aws-amplify/ui';\n" +
    '\n' +
    '/**\n' +
    ' *  Creates ref callback to compose together external and internal refs\n' +
    ' */\n' +
    'function useComposeRefsCallback({ externalRef, internalRef, }) {\n' +
    '    return React.useCallback((node) => {\n' +
    '        // Handle callback ref\n' +
    '        if (isFunction(externalRef)) {\n' +
    '            externalRef(node);\n' +
    '        }\n' +
    '        else if (externalRef) {\n' +
    '            externalRef.current = node;\n' +
    '        }\n' +
    '        internalRef.current = node;\n' +
    '    }, [externalRef, internalRef]);\n' +
    '}\n' +
    '\n' +
    'export { useComposeRefsCallback };\n'
} [Function: logger]
____9999999____ {
  code: 'function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(value, [min, max]) {\n' +
    '    return Math.min(max, Math.max(min, value));\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$ae6933e535247d3d$export$7d15b64cf5a3a4c4 as clamp};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import {useRef as $8LvvK$useRef, useMemo as $8LvvK$useMemo} from "react";\n' +
    '\n' +
    '\n' +
    'function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {\n' +
    '    const ref = $8LvvK$useRef({\n' +
    '        value: value,\n' +
    '        previous: value\n' +
    '    }); // We compare values before making an update to ensure that\n' +
    '    // a change has been made. This ensures the previous value is\n' +
    '    // persisted correctly between renders.\n' +
    '    return $8LvvK$useMemo(()=>{\n' +
    '        if (ref.current.value !== value) {\n' +
    '            ref.current.previous = ref.current.value;\n' +
    '            ref.current.value = value;\n' +
    '        }\n' +
    '        return ref.current.previous;\n' +
    '    }, [\n' +
    '        value\n' +
    '    ]);\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$010c2913dbd2fe3d$export$5cae361ad82dce8b as usePrevious};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconVisibility = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M12 6C15.79 6 19.17 8.13 20.82 11.5C19.17 14.87 15.79 17 12 17C8.21 17 4.83 14.87 3.18 11.5C4.83 8.13 8.21 6 12 6ZM12 4C7 4 2.73 7.11 1 11.5C2.73 15.89 7 19 12 19C17 19 21.27 15.89 23 11.5C21.27 7.11 17 4 12 4ZM12 9C13.38 9 14.5 10.12 14.5 11.5C14.5 12.88 13.38 14 12 14C10.62 14 9.5 12.88 9.5 11.5C9.5 10.12 10.62 9 12 9ZM12 7C9.52 7 7.5 9.02 7.5 11.5C7.5 13.98 9.52 16 12 16C14.48 16 16.5 13.98 16.5 11.5C16.5 9.02 14.48 7 12 7Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconVisibility };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\n" +
    "import { Button } from '../Button/Button.mjs';\n" +
    "import { Flex } from '../Flex/Flex.mjs';\n" +
    "import '../Icon/Icon.mjs';\n" +
    "import '../Icon/context/IconsContext.mjs';\n" +
    "import { useIcons } from '../Icon/context/useIcons.mjs';\n" +
    "import { View } from '../View/View.mjs';\n" +
    "import { IconChevronLeft } from '../Icon/icons/IconChevronLeft.mjs';\n" +
    "import { IconChevronRight } from '../Icon/icons/IconChevronRight.mjs';\n" +
    "import { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\n" +
    "import { ComponentText } from '../shared/constants.mjs';\n" +
    '\n' +
    "const PAGINATION_CURRENT_TEST_ID = 'current';\n" +
    "const PAGINATION_ELLIPSIS_TEST_ID = 'ellipsis';\n" +
    'const PaginationItem = ({ type, page, currentPage, currentPageLabel = ComponentText.PaginationItem.currentPageLabel, isDisabled, onClick, ariaLabel, ...rest }) => {\n' +
    "    const icons = useIcons('pagination');\n" +
    "    const nextClasses = classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, 'link'), classNameModifierByFlag(ComponentClassName.PaginationItem, 'disabled', isDisabled));\n" +
    "    const previousClasses = classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, 'link'), classNameModifierByFlag(ComponentClassName.PaginationItem, 'disabled', isDisabled));\n" +
    '    switch (type) {\n' +
    "        case 'page':\n" +
    `            return (React.createElement(View, { as: "li" }, page === currentPage ? (React.createElement(Button, { "aria-current": "page", size: "small", variation: "link", className: classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, 'current')), testId: PAGINATION_CURRENT_TEST_ID, ...rest },\n` +
    '                React.createElement(VisuallyHidden, null,\n' +
    '                    currentPageLabel,\n' +
    '                    ":"),\n' +
    '                page)) : (React.createElement(Button, { className: ComponentClassName.PaginationItem, size: "small", variation: "link", onClick: () => {\n' +
    '                    onClick?.();\n' +
    '                }, ariaLabel: ariaLabel, ...rest }, page))));\n' +
    "        case 'next':\n" +
    '            return (React.createElement(View, { as: "li" },\n' +
    '                React.createElement(Button, { className: nextClasses, size: "small", variation: "link", isDisabled: isDisabled, onClick: () => {\n' +
    '                        onClick?.();\n' +
    '                    }, ariaLabel: ariaLabel, ...rest }, icons?.next ?? React.createElement(IconChevronRight, null))));\n' +
    "        case 'previous':\n" +
    '            return (React.createElement(View, { as: "li" },\n' +
    '                React.createElement(Button, { className: previousClasses, size: "small", variation: "link", isDisabled: isDisabled, onClick: () => {\n' +
    '                        onClick?.();\n' +
    '                    }, ariaLabel: ariaLabel, ...rest }, icons?.previous ?? React.createElement(IconChevronLeft, null))));\n' +
    "        case 'ellipsis':\n" +
    '            return (React.createElement(View, { as: "li" },\n' +
    `                React.createElement(Flex, { as: "span", className: classNameModifier(ComponentClassName.PaginationItem, 'ellipsis'), testId: PAGINATION_ELLIPSIS_TEST_ID, ...rest }, "\\u2026")));\n` +
    '        // No match type found\n' +
    '    }\n' +
    '    return React.createElement(View, { as: "li" });\n' +
    '};\n' +
    "PaginationItem.displayName = 'PaginationItem';\n" +
    '\n' +
    'export { PAGINATION_CURRENT_TEST_ID, PAGINATION_ELLIPSIS_TEST_ID, PaginationItem };\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { getConsecutiveIntArray } from '../shared/utils.mjs';\n" +
    '\n' +
    "const ELLIPSIS = '...';\n" +
    '/**\n' +
    ' * This hook will be used to determine the range of page numbers to be rendered,\n' +
    " * including ellipsis dots(e.g., an array like [1, '...', 4, 5, 6, '...', 10]).\n" +
    ' * @param currentPage current page number\n' +
    ' * @param totalPages total number of pages\n' +
    ' * @param siblingCount the number of siblings on each side of\n' +
    ' * @returns an array that contains the range of numbers to be rendered\n' +
    ' */\n' +
    'const useRange = (currentPageParam, totalPagesParam, siblingCountParam = 1) => {\n' +
    '    const range = React.useMemo(() => {\n' +
    '        // The current page should not be less than 1\n' +
    '        const currentPage = Math.max(currentPageParam, 1);\n' +
    '        // The sibling count should not be less than 1\n' +
    '        const siblingCount = Math.max(siblingCountParam, 1);\n' +
    '        // The total pages should be always greater than current page\n' +
    '        const totalPages = Math.max(currentPage, totalPagesParam);\n' +
    '        // Note: 1-based index will be used for page value.\n' +
    '        const firstPage = 1;\n' +
    '        const lastPage = totalPages;\n' +
    '        /**\n' +
    '         * To avoid resizing our pagination component while a user is interacting with the component,\n' +
    '         * the total number of items returned by the hook should remain constant.\n' +
    '         * The consant is supposed to be the max number of items that would returned by the hook in all cases,\n' +
    '         * so it should be calculated by 1(first page) + 1(last page) + 1(current page) + 2 * siblingCount + 2(ellipses)\n' +
    '         */\n' +
    '        const maxNumOfItems = 5 + 2 * siblingCount;\n' +
    '        /**\n' +
    '         * Case 1: If the total number of pages is not greater than the max number of items that would potentially be returned,\n' +
    '         * then no need to run through the ellipsis cases, just simply return the range from 1 to totalPages (e.g. [1, 2, 3, 4]).\n' +
    '         */\n' +
    '        if (totalPages < maxNumOfItems) {\n' +
    '            return getConsecutiveIntArray(1, totalPages);\n' +
    '        }\n' +
    '        /**\n' +
    '         * Determine if ellipsis dots should be rendered on either left or right side, or both\n' +
    '         */\n' +
    '        const leftSiblingPage = Math.max(currentPage - siblingCount, firstPage);\n' +
    '        const rightSiblingPage = Math.min(currentPage + siblingCount, lastPage);\n' +
    '        const shouldRenderStartEllipsis = leftSiblingPage > 2;\n' +
    '        const shouldRenderEndEllipsis = rightSiblingPage < lastPage - 1;\n' +
    '        /**\n' +
    "         * Case 2: Only render ellipsis dots on the left side (e.g. [1, '...', 6, 7, 8, 9, 10]).\n" +
    '         */\n' +
    '        if (shouldRenderStartEllipsis && !shouldRenderEndEllipsis) {\n' +
    '            // 1(current page) + 1(last page) + 1(fill up a page for the position of end ellipsis) + 2 * siblingCount\n' +
    '            const rightItemCount = 3 + 2 * siblingCount;\n' +
    '            const rightRange = getConsecutiveIntArray(lastPage - rightItemCount + 1, lastPage);\n' +
    '            return [firstPage, ELLIPSIS, ...rightRange];\n' +
    '        }\n' +
    '        /**\n' +
    "         * Case 3: Only render ellipsis dots on the right side (e.g. [1, 2, 3, 4, 5, '...', 10]).\n" +
    '         */\n' +
    '        if (!shouldRenderStartEllipsis && shouldRenderEndEllipsis) {\n' +
    '            // 1(current page) + 1(last page) + 1(fill up a page for the position of start ellipsis) + 2 * siblingCount\n' +
    '            const leftItemCount = 3 + 2 * siblingCount;\n' +
    '            const leftRange = getConsecutiveIntArray(firstPage, leftItemCount);\n' +
    '            return [...leftRange, ELLIPSIS, lastPage];\n' +
    '        }\n' +
    '        /**\n' +
    "         * Case 4: Render ellipsis on both side (e.g. [1, '...', 4, 5, 6, '...', 10]).\n" +
    '         */\n' +
    '        const middleRange = getConsecutiveIntArray(leftSiblingPage, rightSiblingPage);\n' +
    '        return [firstPage, ELLIPSIS, ...middleRange, ELLIPSIS, lastPage];\n' +
    '    }, [currentPageParam, totalPagesParam, siblingCountParam]);\n' +
    '    return range;\n' +
    '};\n' +
    '\n' +
    'export { ELLIPSIS, useRange };\n'
} [Function: logger]
____9999999____ {
  code: 'import {useState as $9gyGR$useState} from "react";\n' +
    'import {useLayoutEffect as $9gyGR$useLayoutEffect} from "@radix-ui/react-use-layout-effect";\n' +
    '\n' +
    '\n' +
    '\n' +
    'function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {\n' +
    '    const [size, setSize] = $9gyGR$useState(undefined);\n' +
    '    $9gyGR$useLayoutEffect(()=>{\n' +
    '        if (element) {\n' +
    '            // provide size as early as possible\n' +
    '            setSize({\n' +
    '                width: element.offsetWidth,\n' +
    '                height: element.offsetHeight\n' +
    '            });\n' +
    '            const resizeObserver = new ResizeObserver((entries)=>{\n' +
    '                if (!Array.isArray(entries)) return;\n' +
    "                 // Since we only observe the one element, we don't need to loop over the\n" +
    '                // array\n' +
    '                if (!entries.length) return;\n' +
    '                const entry = entries[0];\n' +
    '                let width;\n' +
    '                let height;\n' +
    "                if ('borderBoxSize' in entry) {\n" +
    "                    const borderSizeEntry = entry['borderBoxSize']; // iron out differences between browsers\n" +
    '                    const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n' +
    "                    width = borderSize['inlineSize'];\n" +
    "                    height = borderSize['blockSize'];\n" +
    '                } else {\n' +
    "                    // for browsers that don't support `borderBoxSize`\n" +
    '                    // we calculate it ourselves to get the correct border box.\n' +
    '                    width = element.offsetWidth;\n' +
    '                    height = element.offsetHeight;\n' +
    '                }\n' +
    '                setSize({\n' +
    '                    width: width,\n' +
    '                    height: height\n' +
    '                });\n' +
    '            });\n' +
    '            resizeObserver.observe(element, {\n' +
    "                box: 'border-box'\n" +
    '            });\n' +
    '            return ()=>resizeObserver.unobserve(element)\n' +
    '            ;\n' +
    '        } else // We only want to reset to `undefined` when the element becomes `null`,\n' +
    '        // not if it changes to another element.\n' +
    '        setSize(undefined);\n' +
    '    }, [\n' +
    '        element\n' +
    '    ]);\n' +
    '    return size;\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$db6c3485150b8e66$export$1ab7ae714698c4b8 as useSize};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    '\n' +
    'const TabsContext = React.createContext({\n' +
    "    activeTab: '',\n" +
    '    setActiveTab: () => { },\n' +
    '});\n' +
    '\n' +
    'export { TabsContext };\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'export var BLOCK_SIZE = 64;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'export var DIGEST_LENGTH = 32;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'export var KEY = new Uint32Array([\n' +
    '    0x428a2f98,\n' +
    '    0x71374491,\n' +
    '    0xb5c0fbcf,\n' +
    '    0xe9b5dba5,\n' +
    '    0x3956c25b,\n' +
    '    0x59f111f1,\n' +
    '    0x923f82a4,\n' +
    '    0xab1c5ed5,\n' +
    '    0xd807aa98,\n' +
    '    0x12835b01,\n' +
    '    0x243185be,\n' +
    '    0x550c7dc3,\n' +
    '    0x72be5d74,\n' +
    '    0x80deb1fe,\n' +
    '    0x9bdc06a7,\n' +
    '    0xc19bf174,\n' +
    '    0xe49b69c1,\n' +
    '    0xefbe4786,\n' +
    '    0x0fc19dc6,\n' +
    '    0x240ca1cc,\n' +
    '    0x2de92c6f,\n' +
    '    0x4a7484aa,\n' +
    '    0x5cb0a9dc,\n' +
    '    0x76f988da,\n' +
    '    0x983e5152,\n' +
    '    0xa831c66d,\n' +
    '    0xb00327c8,\n' +
    '    0xbf597fc7,\n' +
    '    0xc6e00bf3,\n' +
    '    0xd5a79147,\n' +
    '    0x06ca6351,\n' +
    '    0x14292967,\n' +
    '    0x27b70a85,\n' +
    '    0x2e1b2138,\n' +
    '    0x4d2c6dfc,\n' +
    '    0x53380d13,\n' +
    '    0x650a7354,\n' +
    '    0x766a0abb,\n' +
    '    0x81c2c92e,\n' +
    '    0x92722c85,\n' +
    '    0xa2bfe8a1,\n' +
    '    0xa81a664b,\n' +
    '    0xc24b8b70,\n' +
    '    0xc76c51a3,\n' +
    '    0xd192e819,\n' +
    '    0xd6990624,\n' +
    '    0xf40e3585,\n' +
    '    0x106aa070,\n' +
    '    0x19a4c116,\n' +
    '    0x1e376c08,\n' +
    '    0x2748774c,\n' +
    '    0x34b0bcb5,\n' +
    '    0x391c0cb3,\n' +
    '    0x4ed8aa4a,\n' +
    '    0x5b9cca4f,\n' +
    '    0x682e6ff3,\n' +
    '    0x748f82ee,\n' +
    '    0x78a5636f,\n' +
    '    0x84c87814,\n' +
    '    0x8cc70208,\n' +
    '    0x90befffa,\n' +
    '    0xa4506ceb,\n' +
    '    0xbef9a3f7,\n' +
    '    0xc67178f2\n' +
    ']);\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'export var INIT = [\n' +
    '    0x6a09e667,\n' +
    '    0xbb67ae85,\n' +
    '    0x3c6ef372,\n' +
    '    0xa54ff53a,\n' +
    '    0x510e527f,\n' +
    '    0x9b05688c,\n' +
    '    0x1f83d9ab,\n' +
    '    0x5be0cd19\n' +
    '];\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'export var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n' +
    '//# sourceMappingURL=constants.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from "./constants";\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'var RawSha256 = /** @class */ (function () {\n' +
    '    function RawSha256() {\n' +
    '        this.state = Int32Array.from(INIT);\n' +
    '        this.temp = new Int32Array(64);\n' +
    '        this.buffer = new Uint8Array(64);\n' +
    '        this.bufferLength = 0;\n' +
    '        this.bytesHashed = 0;\n' +
    '        /**\n' +
    '         * @internal\n' +
    '         */\n' +
    '        this.finished = false;\n' +
    '    }\n' +
    '    RawSha256.prototype.update = function (data) {\n' +
    '        if (this.finished) {\n' +
    '            throw new Error("Attempted to update an already finished hash.");\n' +
    '        }\n' +
    '        var position = 0;\n' +
    '        var byteLength = data.byteLength;\n' +
    '        this.bytesHashed += byteLength;\n' +
    '        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n' +
    '            throw new Error("Cannot hash more than 2^53 - 1 bits");\n' +
    '        }\n' +
    '        while (byteLength > 0) {\n' +
    '            this.buffer[this.bufferLength++] = data[position++];\n' +
    '            byteLength--;\n' +
    '            if (this.bufferLength === BLOCK_SIZE) {\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    RawSha256.prototype.digest = function () {\n' +
    '        if (!this.finished) {\n' +
    '            var bitsHashed = this.bytesHashed * 8;\n' +
    '            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n' +
    '            var undecoratedLength = this.bufferLength;\n' +
    '            bufferView.setUint8(this.bufferLength++, 0x80);\n' +
    '            // Ensure the final block has enough room for the hashed length\n' +
    '            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n' +
    '                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n' +
    '                    bufferView.setUint8(i, 0);\n' +
    '                }\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n' +
    '                bufferView.setUint8(i, 0);\n' +
    '            }\n' +
    '            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n' +
    '            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n' +
    '            this.hashBuffer();\n' +
    '            this.finished = true;\n' +
    '        }\n' +
    '        // The value in state is little-endian rather than big-endian, so flip\n' +
    '        // each word into a new Uint8Array\n' +
    '        var out = new Uint8Array(DIGEST_LENGTH);\n' +
    '        for (var i = 0; i < 8; i++) {\n' +
    '            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n' +
    '            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n' +
    '            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n' +
    '            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n' +
    '        }\n' +
    '        return out;\n' +
    '    };\n' +
    '    RawSha256.prototype.hashBuffer = function () {\n' +
    '        var _a = this, buffer = _a.buffer, state = _a.state;\n' +
    '        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n' +
    '        for (var i = 0; i < BLOCK_SIZE; i++) {\n' +
    '            if (i < 16) {\n' +
    '                this.temp[i] =\n' +
    '                    ((buffer[i * 4] & 0xff) << 24) |\n' +
    '                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n' +
    '                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n' +
    '                        (buffer[i * 4 + 3] & 0xff);\n' +
    '            }\n' +
    '            else {\n' +
    '                var u = this.temp[i - 2];\n' +
    '                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n' +
    '                u = this.temp[i - 15];\n' +
    '                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n' +
    '                this.temp[i] =\n' +
    '                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n' +
    '            }\n' +
    '            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n' +
    '                ((state4 >>> 11) | (state4 << 21)) ^\n' +
    '                ((state4 >>> 25) | (state4 << 7))) +\n' +
    '                ((state4 & state5) ^ (~state4 & state6))) |\n' +
    '                0) +\n' +
    '                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n' +
    '                0;\n' +
    '            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n' +
    '                ((state0 >>> 13) | (state0 << 19)) ^\n' +
    '                ((state0 >>> 22) | (state0 << 10))) +\n' +
    '                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n' +
    '                0;\n' +
    '            state7 = state6;\n' +
    '            state6 = state5;\n' +
    '            state5 = state4;\n' +
    '            state4 = (state3 + t1) | 0;\n' +
    '            state3 = state2;\n' +
    '            state2 = state1;\n' +
    '            state1 = state0;\n' +
    '            state0 = (t1 + t2) | 0;\n' +
    '        }\n' +
    '        state[0] += state0;\n' +
    '        state[1] += state1;\n' +
    '        state[2] += state2;\n' +
    '        state[3] += state3;\n' +
    '        state[4] += state4;\n' +
    '        state[5] += state5;\n' +
    '        state[6] += state6;\n' +
    '        state[7] += state7;\n' +
    '    };\n' +
    '    return RawSha256;\n' +
    '}());\n' +
    'export { RawSha256 };\n' +
    '//# sourceMappingURL=RawSha256.js.map'
} [Function: logger]
____9999999____ {
  code: 'import $6vYhU$react from "react";\n' +
    'import {createContextScope as $6vYhU$createContextScope} from "@radix-ui/react-context";\n' +
    'import {useComposedRefs as $6vYhU$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {Slot as $6vYhU$Slot} from "@radix-ui/react-slot";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '// We have resorted to returning slots directly rather than exposing primitives that can then\n' +
    '// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n' +
    '// This is because we encountered issues with generic types that cannot be statically analysed\n' +
    '// due to creating them dynamically via createCollection.\n' +
    'function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * CollectionProvider\n' +
    "   * ---------------------------------------------------------------------------------------------*/ const PROVIDER_NAME = name + 'CollectionProvider';\n" +
    '    const [createCollectionContext, createCollectionScope] = $6vYhU$createContextScope(PROVIDER_NAME);\n' +
    '    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {\n' +
    '        collectionRef: {\n' +
    '            current: null\n' +
    '        },\n' +
    '        itemMap: new Map()\n' +
    '    });\n' +
    '    const CollectionProvider = (props)=>{\n' +
    '        const { scope: scope , children: children  } = props;\n' +
    '        const ref = $6vYhU$react.useRef(null);\n' +
    '        const itemMap = $6vYhU$react.useRef(new Map()).current;\n' +
    '        return /*#__PURE__*/ $6vYhU$react.createElement(CollectionProviderImpl, {\n' +
    '            scope: scope,\n' +
    '            itemMap: itemMap,\n' +
    '            collectionRef: ref\n' +
    '        }, children);\n' +
    '    };\n' +
    '    /*#__PURE__*/ Object.assign(CollectionProvider, {\n' +
    '        displayName: PROVIDER_NAME\n' +
    '    });\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * CollectionSlot\n' +
    "   * ---------------------------------------------------------------------------------------------*/ const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n" +
    '    const CollectionSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n' +
    '        const { scope: scope , children: children  } = props;\n' +
    '        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n' +
    '        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, context.collectionRef);\n' +
    '        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n' +
    '            ref: composedRefs\n' +
    '        }, children);\n' +
    '    });\n' +
    '    /*#__PURE__*/ Object.assign(CollectionSlot, {\n' +
    '        displayName: COLLECTION_SLOT_NAME\n' +
    '    });\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * CollectionItem\n' +
    "   * ---------------------------------------------------------------------------------------------*/ const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n" +
    "    const ITEM_DATA_ATTR = 'data-radix-collection-item';\n" +
    '    const CollectionItemSlot = /*#__PURE__*/ $6vYhU$react.forwardRef((props, forwardedRef)=>{\n' +
    '        const { scope: scope , children: children , ...itemData } = props;\n' +
    '        const ref = $6vYhU$react.useRef(null);\n' +
    '        const composedRefs = $6vYhU$useComposedRefs(forwardedRef, ref);\n' +
    '        const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n' +
    '        $6vYhU$react.useEffect(()=>{\n' +
    '            context.itemMap.set(ref, {\n' +
    '                ref: ref,\n' +
    '                ...itemData\n' +
    '            });\n' +
    '            return ()=>void context.itemMap.delete(ref)\n' +
    '            ;\n' +
    '        });\n' +
    '        return /*#__PURE__*/ $6vYhU$react.createElement($6vYhU$Slot, {\n' +
    "            [ITEM_DATA_ATTR]: '',\n" +
    '            ref: composedRefs\n' +
    '        }, children);\n' +
    '    });\n' +
    '    /*#__PURE__*/ Object.assign(CollectionItemSlot, {\n' +
    '        displayName: ITEM_SLOT_NAME\n' +
    '    });\n' +
    '    /* -----------------------------------------------------------------------------------------------\n' +
    '   * useCollection\n' +
    '   * ---------------------------------------------------------------------------------------------*/ function useCollection(scope) {\n' +
    "        const context = useCollectionContext(name + 'CollectionConsumer', scope);\n" +
    '        const getItems = $6vYhU$react.useCallback(()=>{\n' +
    '            const collectionNode = context.collectionRef.current;\n' +
    '            if (!collectionNode) return [];\n' +
    '            const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n' +
    '            const items = Array.from(context.itemMap.values());\n' +
    '            const orderedItems = items.sort((a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n' +
    '            );\n' +
    '            return orderedItems;\n' +
    '        }, [\n' +
    '            context.collectionRef,\n' +
    '            context.itemMap\n' +
    '        ]);\n' +
    '        return getItems;\n' +
    '    }\n' +
    '    return [\n' +
    '        {\n' +
    '            Provider: CollectionProvider,\n' +
    '            Slot: CollectionSlot,\n' +
    '            ItemSlot: CollectionItemSlot\n' +
    '        },\n' +
    '        useCollection,\n' +
    '        createCollectionScope\n' +
    '    ];\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$e02a7d9cb1dc128c$export$c74125a8e3af6bb2 as createCollection};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'export { convertToBuffer } from "./convertToBuffer";\n' +
    'export { isEmptyData } from "./isEmptyData";\n' +
    'export { numToUint8 } from "./numToUint8";\n' +
    "export { uint32ArrayFrom } from './uint32ArrayFrom';\n" +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: '/******************************************************************************\n' +
    'Copyright (c) Microsoft Corporation.\n' +
    '\n' +
    'Permission to use, copy, modify, and/or distribute this software for any\n' +
    'purpose with or without fee is hereby granted.\n' +
    '\n' +
    'THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n' +
    'REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n' +
    'AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n' +
    'INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n' +
    'LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n' +
    'OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n' +
    'PERFORMANCE OF THIS SOFTWARE.\n' +
    '***************************************************************************** */\n' +
    '/* global Reflect, Promise, SuppressedError, Symbol */\n' +
    '\n' +
    'var extendStatics = function(d, b) {\n' +
    '  extendStatics = Object.setPrototypeOf ||\n' +
    '      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n' +
    '      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n' +
    '  return extendStatics(d, b);\n' +
    '};\n' +
    '\n' +
    'export function __extends(d, b) {\n' +
    '  if (typeof b !== "function" && b !== null)\n' +
    '      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n' +
    '  extendStatics(d, b);\n' +
    '  function __() { this.constructor = d; }\n' +
    '  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n' +
    '}\n' +
    '\n' +
    'export var __assign = function() {\n' +
    '  __assign = Object.assign || function __assign(t) {\n' +
    '      for (var s, i = 1, n = arguments.length; i < n; i++) {\n' +
    '          s = arguments[i];\n' +
    '          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n' +
    '      }\n' +
    '      return t;\n' +
    '  }\n' +
    '  return __assign.apply(this, arguments);\n' +
    '}\n' +
    '\n' +
    'export function __rest(s, e) {\n' +
    '  var t = {};\n' +
    '  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n' +
    '      t[p] = s[p];\n' +
    '  if (s != null && typeof Object.getOwnPropertySymbols === "function")\n' +
    '      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n' +
    '          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n' +
    '              t[p[i]] = s[p[i]];\n' +
    '      }\n' +
    '  return t;\n' +
    '}\n' +
    '\n' +
    'export function __decorate(decorators, target, key, desc) {\n' +
    '  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n' +
    '  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n' +
    '  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n' +
    '  return c > 3 && r && Object.defineProperty(target, key, r), r;\n' +
    '}\n' +
    '\n' +
    'export function __param(paramIndex, decorator) {\n' +
    '  return function (target, key) { decorator(target, key, paramIndex); }\n' +
    '}\n' +
    '\n' +
    'export function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n' +
    '  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }\n' +
    '  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";\n' +
    '  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;\n' +
    '  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n' +
    '  var _, done = false;\n' +
    '  for (var i = decorators.length - 1; i >= 0; i--) {\n' +
    '      var context = {};\n' +
    '      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];\n' +
    '      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n' +
    '      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };\n' +
    '      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n' +
    '      if (kind === "accessor") {\n' +
    '          if (result === void 0) continue;\n' +
    '          if (result === null || typeof result !== "object") throw new TypeError("Object expected");\n' +
    '          if (_ = accept(result.get)) descriptor.get = _;\n' +
    '          if (_ = accept(result.set)) descriptor.set = _;\n' +
    '          if (_ = accept(result.init)) initializers.unshift(_);\n' +
    '      }\n' +
    '      else if (_ = accept(result)) {\n' +
    '          if (kind === "field") initializers.unshift(_);\n' +
    '          else descriptor[key] = _;\n' +
    '      }\n' +
    '  }\n' +
    '  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n' +
    '  done = true;\n' +
    '};\n' +
    '\n' +
    'export function __runInitializers(thisArg, initializers, value) {\n' +
    '  var useValue = arguments.length > 2;\n' +
    '  for (var i = 0; i < initializers.length; i++) {\n' +
    '      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n' +
    '  }\n' +
    '  return useValue ? value : void 0;\n' +
    '};\n' +
    '\n' +
    'export function __propKey(x) {\n' +
    '  return typeof x === "symbol" ? x : "".concat(x);\n' +
    '};\n' +
    '\n' +
    'export function __setFunctionName(f, name, prefix) {\n' +
    '  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";\n' +
    '  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });\n' +
    '};\n' +
    '\n' +
    'export function __metadata(metadataKey, metadataValue) {\n' +
    '  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);\n' +
    '}\n' +
    '\n' +
    'export function __awaiter(thisArg, _arguments, P, generator) {\n' +
    '  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n' +
    '  return new (P || (P = Promise))(function (resolve, reject) {\n' +
    '      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n' +
    '      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n' +
    '      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n' +
    '      step((generator = generator.apply(thisArg, _arguments || [])).next());\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'export function __generator(thisArg, body) {\n' +
    '  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n' +
    '  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n' +
    '  function verb(n) { return function (v) { return step([n, v]); }; }\n' +
    '  function step(op) {\n' +
    '      if (f) throw new TypeError("Generator is already executing.");\n' +
    '      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n' +
    '          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n' +
    '          if (y = 0, t) op = [op[0] & 2, t.value];\n' +
    '          switch (op[0]) {\n' +
    '              case 0: case 1: t = op; break;\n' +
    '              case 4: _.label++; return { value: op[1], done: false };\n' +
    '              case 5: _.label++; y = op[1]; op = [0]; continue;\n' +
    '              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n' +
    '              default:\n' +
    '                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n' +
    '                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n' +
    '                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n' +
    '                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n' +
    '                  if (t[2]) _.ops.pop();\n' +
    '                  _.trys.pop(); continue;\n' +
    '          }\n' +
    '          op = body.call(thisArg, _);\n' +
    '      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n' +
    '      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export var __createBinding = Object.create ? (function(o, m, k, k2) {\n' +
    '  if (k2 === undefined) k2 = k;\n' +
    '  var desc = Object.getOwnPropertyDescriptor(m, k);\n' +
    '  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n' +
    '      desc = { enumerable: true, get: function() { return m[k]; } };\n' +
    '  }\n' +
    '  Object.defineProperty(o, k2, desc);\n' +
    '}) : (function(o, m, k, k2) {\n' +
    '  if (k2 === undefined) k2 = k;\n' +
    '  o[k2] = m[k];\n' +
    '});\n' +
    '\n' +
    'export function __exportStar(m, o) {\n' +
    '  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n' +
    '}\n' +
    '\n' +
    'export function __values(o) {\n' +
    '  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n' +
    '  if (m) return m.call(o);\n' +
    '  if (o && typeof o.length === "number") return {\n' +
    '      next: function () {\n' +
    '          if (o && i >= o.length) o = void 0;\n' +
    '          return { value: o && o[i++], done: !o };\n' +
    '      }\n' +
    '  };\n' +
    '  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n' +
    '}\n' +
    '\n' +
    'export function __read(o, n) {\n' +
    '  var m = typeof Symbol === "function" && o[Symbol.iterator];\n' +
    '  if (!m) return o;\n' +
    '  var i = m.call(o), r, ar = [], e;\n' +
    '  try {\n' +
    '      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n' +
    '  }\n' +
    '  catch (error) { e = { error: error }; }\n' +
    '  finally {\n' +
    '      try {\n' +
    '          if (r && !r.done && (m = i["return"])) m.call(i);\n' +
    '      }\n' +
    '      finally { if (e) throw e.error; }\n' +
    '  }\n' +
    '  return ar;\n' +
    '}\n' +
    '\n' +
    '/** @deprecated */\n' +
    'export function __spread() {\n' +
    '  for (var ar = [], i = 0; i < arguments.length; i++)\n' +
    '      ar = ar.concat(__read(arguments[i]));\n' +
    '  return ar;\n' +
    '}\n' +
    '\n' +
    '/** @deprecated */\n' +
    'export function __spreadArrays() {\n' +
    '  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n' +
    '  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n' +
    '      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n' +
    '          r[k] = a[j];\n' +
    '  return r;\n' +
    '}\n' +
    '\n' +
    'export function __spreadArray(to, from, pack) {\n' +
    '  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n' +
    '      if (ar || !(i in from)) {\n' +
    '          if (!ar) ar = Array.prototype.slice.call('... 6249 more characters
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const DEFAULT_RETRY_ATTEMPTS = 3;\n' +
    '/**\n' +
    ' * Retry middleware\n' +
    ' */\n' +
    'const retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n' +
    '    if (maxAttempts < 1) {\n' +
    "        throw new Error('maxAttempts must be greater than 0');\n" +
    '    }\n' +
    '    return (next, context) => async function retryMiddleware(request) {\n' +
    '        let error;\n' +
    '        let attemptsCount = context.attemptsCount ?? 0;\n' +
    '        let response;\n' +
    '        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n' +
    '        const handleTerminalErrorOrResponse = () => {\n' +
    '            if (response) {\n' +
    '                addOrIncrementMetadataAttempts(response, attemptsCount);\n' +
    '                return response;\n' +
    '            }\n' +
    '            else {\n' +
    '                addOrIncrementMetadataAttempts(error, attemptsCount);\n' +
    '                throw error;\n' +
    '            }\n' +
    '        };\n' +
    '        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n' +
    '            try {\n' +
    '                response = await next(request);\n' +
    '                error = undefined;\n' +
    '            }\n' +
    '            catch (e) {\n' +
    '                error = e;\n' +
    '                response = undefined;\n' +
    '            }\n' +
    '            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n' +
    '            attemptsCount =\n' +
    '                (context.attemptsCount ?? 0) > attemptsCount\n' +
    '                    ? context.attemptsCount ?? 0\n' +
    '                    : attemptsCount + 1;\n' +
    '            context.attemptsCount = attemptsCount;\n' +
    '            if (await retryDecider(response, error)) {\n' +
    '                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n' +
    '                    // prevent sleep for last attempt or cancelled request;\n' +
    '                    const delay = computeDelay(attemptsCount);\n' +
    '                    await cancellableSleep(delay, abortSignal);\n' +
    '                }\n' +
    '                continue;\n' +
    '            }\n' +
    '            else {\n' +
    '                return handleTerminalErrorOrResponse();\n' +
    '            }\n' +
    '        }\n' +
    '        if (abortSignal?.aborted) {\n' +
    "            throw new Error('Request aborted.');\n" +
    '        }\n' +
    '        else {\n' +
    '            return handleTerminalErrorOrResponse();\n' +
    '        }\n' +
    '    };\n' +
    '};\n' +
    'const cancellableSleep = (timeoutMs, abortSignal) => {\n' +
    '    if (abortSignal?.aborted) {\n' +
    '        return Promise.resolve();\n' +
    '    }\n' +
    '    let timeoutId;\n' +
    '    let sleepPromiseResolveFn;\n' +
    '    const sleepPromise = new Promise(resolve => {\n' +
    '        sleepPromiseResolveFn = resolve;\n' +
    '        timeoutId = setTimeout(resolve, timeoutMs);\n' +
    '    });\n' +
    "    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n" +
    '        clearTimeout(timeoutId);\n' +
    "        abortSignal?.removeEventListener('abort', cancelSleep);\n" +
    '        sleepPromiseResolveFn();\n' +
    '    });\n' +
    '    return sleepPromise;\n' +
    '};\n' +
    'const addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n' +
    "    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n" +
    '        return;\n' +
    '    }\n' +
    '    nextHandlerOutput.$metadata = {\n' +
    '        ...(nextHandlerOutput.$metadata ?? {}),\n' +
    '        attempts,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { retryMiddlewareFactory };\n' +
    '//# sourceMappingURL=middleware.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const defaultPartition = {\n' +
    "    id: 'aws',\n" +
    '    outputs: {\n' +
    "        dnsSuffix: 'amazonaws.com',\n" +
    '    },\n' +
    "    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n" +
    "    regions: ['aws-global'],\n" +
    '};\n' +
    '/**\n' +
    ' * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n' +
    ' * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n' +
    ' * list of regions for each partition other than global regions.\n' +
    ' *\n' +
    ' * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n' +
    ' * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const partitionsInfo = {\n' +
    '    partitions: [\n' +
    '        defaultPartition,\n' +
    '        {\n' +
    "            id: 'aws-cn',\n" +
    '            outputs: {\n' +
    "                dnsSuffix: 'amazonaws.com.cn',\n" +
    '            },\n' +
    "            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n" +
    "            regions: ['aws-cn-global'],\n" +
    '        },\n' +
    '    ],\n' +
    '};\n' +
    '\n' +
    'export { defaultPartition, partitionsInfo };\n' +
    '//# sourceMappingURL=partitions.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { withMemoization } from '../utils/memoization.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n" +
    '// TODO[AllanZhengYP]: we need to provide isCanceledError utility\n' +
    'const fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n' +
    '    let resp;\n' +
    '    try {\n' +
    '        resp = await fetch(url, {\n' +
    '            method,\n' +
    '            headers,\n' +
    '            body: shouldSendBody(method) ? body : undefined,\n' +
    '            signal: abortSignal,\n' +
    '            cache,\n' +
    "            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n" +
    '        });\n' +
    '    }\n' +
    '    catch (e) {\n' +
    '        // TODO: needs to revise error handling in v6\n' +
    '        // For now this is a thin wrapper over original fetch error similar to cognito-identity-js package.\n' +
    '        // Ref: https://github.com/aws-amplify/amplify-js/blob/4fbc8c0a2be7526aab723579b4c95b552195a80b/packages/amazon-cognito-identity-js/src/Client.js#L103-L108\n' +
    '        if (e instanceof TypeError) {\n' +
    "            throw new Error('Network error');\n" +
    '        }\n' +
    '        throw e;\n' +
    '    }\n' +
    '    const responseHeaders = {};\n' +
    '    resp.headers?.forEach((value, key) => {\n' +
    '        responseHeaders[key.toLowerCase()] = value;\n' +
    '    });\n' +
    '    const httpResponse = {\n' +
    '        statusCode: resp.status,\n' +
    '        headers: responseHeaders,\n' +
    '        body: null,\n' +
    '    };\n' +
    '    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n' +
    '    // does not implement it.\n' +
    '    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n' +
    '        text: withMemoization(() => resp.text()),\n' +
    '        blob: withMemoization(() => resp.blob()),\n' +
    '        json: withMemoization(() => resp.json()),\n' +
    '    });\n' +
    '    return {\n' +
    '        ...httpResponse,\n' +
    '        body: bodyWithMixin,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { fetchTransferHandler };\n' +
    '//# sourceMappingURL=fetch.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n" +
    ' * if the header is not set already.\n' +
    ' *\n' +
    ' * TODO: incorporate new user agent design\n' +
    ' */\n' +
    "const userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n" +
    '    return async function userAgentMiddleware(request) {\n' +
    '        if (userAgentValue.trim().length === 0) {\n' +
    '            const result = await next(request);\n' +
    '            return result;\n' +
    '        }\n' +
    '        else {\n' +
    '            const headerName = userAgentHeader.toLowerCase();\n' +
    '            request.headers[headerName] = request.headers[headerName]\n' +
    '                ? `${request.headers[headerName]} ${userAgentValue}`\n' +
    '                : userAgentValue;\n' +
    '            const response = await next(request);\n' +
    '            return response;\n' +
    '        }\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { userAgentMiddlewareFactory };\n' +
    '//# sourceMappingURL=middleware.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\n' +
    'const CLOCK_SKEW_ERROR_CODES = [\n' +
    "    'AuthFailure',\n" +
    "    'InvalidSignatureException',\n" +
    "    'RequestExpired',\n" +
    "    'RequestInTheFuture',\n" +
    "    'RequestTimeTooSkewed',\n" +
    "    'SignatureDoesNotMatch',\n" +
    "    'BadRequestException', // API Gateway\n" +
    '];\n' +
    '/**\n' +
    ' * Given an error code, returns true if it is related to a clock skew error.\n' +
    ' *\n' +
    ' * @param errorCode String representation of some error.\n' +
    ' * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n' +
    '\n' +
    'export { isClockSkewError };\n' +
    '//# sourceMappingURL=isClockSkewError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { unsafeStringify } from './stringify.js';\n" +
    "import parse from './parse.js';\n" +
    '\n' +
    'function stringToBytes(str) {\n' +
    '  str = unescape(encodeURIComponent(str)); // UTF8 escape\n' +
    '\n' +
    '  const bytes = [];\n' +
    '\n' +
    '  for (let i = 0; i < str.length; ++i) {\n' +
    '    bytes.push(str.charCodeAt(i));\n' +
    '  }\n' +
    '\n' +
    '  return bytes;\n' +
    '}\n' +
    '\n' +
    "export const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n" +
    "export const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n" +
    'export default function v35(name, version, hashfunc) {\n' +
    '  function generateUUID(value, namespace, buf, offset) {\n' +
    '    var _namespace;\n' +
    '\n' +
    "    if (typeof value === 'string') {\n" +
    '      value = stringToBytes(value);\n' +
    '    }\n' +
    '\n' +
    "    if (typeof namespace === 'string') {\n" +
    '      namespace = parse(namespace);\n' +
    '    }\n' +
    '\n' +
    '    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n' +
    "      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n" +
    '    } // Compute hash of namespace and value, Per 4.3\n' +
    '    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n' +
    '    // hashfunc([...namespace, ... value])`\n' +
    '\n' +
    '\n' +
    '    let bytes = new Uint8Array(16 + value.length);\n' +
    '    bytes.set(namespace);\n' +
    '    bytes.set(value, namespace.length);\n' +
    '    bytes = hashfunc(bytes);\n' +
    '    bytes[6] = bytes[6] & 0x0f | version;\n' +
    '    bytes[8] = bytes[8] & 0x3f | 0x80;\n' +
    '\n' +
    '    if (buf) {\n' +
    '      offset = offset || 0;\n' +
    '\n' +
    '      for (let i = 0; i < 16; ++i) {\n' +
    '        buf[offset + i] = bytes[i];\n' +
    '      }\n' +
    '\n' +
    '      return buf;\n' +
    '    }\n' +
    '\n' +
    '    return unsafeStringify(bytes);\n' +
    '  } // Function#name is not settable on some platforms (#270)\n' +
    '\n' +
    '\n' +
    '  try {\n' +
    '    generateUUID.name = name; // eslint-disable-next-line no-empty\n' +
    '  } catch (err) {} // For CommonJS default export support\n' +
    '\n' +
    '\n' +
    '  generateUUID.DNS = DNS;\n' +
    '  generateUUID.URL = URL;\n' +
    '  return generateUUID;\n' +
    '}'
} [Function: logger]
____9999999____ {
  code: "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n" +
    'export default {\n' +
    '  randomUUID\n' +
    '};'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Browser-compatible JavaScript MD5\n' +
    ' *\n' +
    ' * Modification of JavaScript MD5\n' +
    ' * https://github.com/blueimp/JavaScript-MD5\n' +
    ' *\n' +
    ' * Copyright 2011, Sebastian Tschan\n' +
    ' * https://blueimp.net\n' +
    ' *\n' +
    ' * Licensed under the MIT license:\n' +
    ' * https://opensource.org/licenses/MIT\n' +
    ' *\n' +
    ' * Based on\n' +
    ' * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n' +
    ' * Digest Algorithm, as defined in RFC 1321.\n' +
    ' * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n' +
    ' * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n' +
    ' * Distributed under the BSD License\n' +
    ' * See http://pajhome.org.uk/crypt/md5 for more info.\n' +
    ' */\n' +
    'function md5(bytes) {\n' +
    "  if (typeof bytes === 'string') {\n" +
    '    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n' +
    '\n' +
    '    bytes = new Uint8Array(msg.length);\n' +
    '\n' +
    '    for (let i = 0; i < msg.length; ++i) {\n' +
    '      bytes[i] = msg.charCodeAt(i);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n' +
    '}\n' +
    '/*\n' +
    ' * Convert an array of little-endian words to an array of bytes\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function md5ToHexEncodedArray(input) {\n' +
    '  const output = [];\n' +
    '  const length32 = input.length * 32;\n' +
    "  const hexTab = '0123456789abcdef';\n" +
    '\n' +
    '  for (let i = 0; i < length32; i += 8) {\n' +
    '    const x = input[i >> 5] >>> i % 32 & 0xff;\n' +
    '    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n' +
    '    output.push(hex);\n' +
    '  }\n' +
    '\n' +
    '  return output;\n' +
    '}\n' +
    '/**\n' +
    ' * Calculate output length with padding and bit length\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function getOutputLength(inputLength8) {\n' +
    '  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n' +
    '}\n' +
    '/*\n' +
    ' * Calculate the MD5 of an array of little-endian words, and a bit length.\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function wordsToMd5(x, len) {\n' +
    '  /* append padding */\n' +
    '  x[len >> 5] |= 0x80 << len % 32;\n' +
    '  x[getOutputLength(len) - 1] = len;\n' +
    '  let a = 1732584193;\n' +
    '  let b = -271733879;\n' +
    '  let c = -1732584194;\n' +
    '  let d = 271733878;\n' +
    '\n' +
    '  for (let i = 0; i < x.length; i += 16) {\n' +
    '    const olda = a;\n' +
    '    const oldb = b;\n' +
    '    const oldc = c;\n' +
    '    const oldd = d;\n' +
    '    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n' +
    '    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n' +
    '    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n' +
    '    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n' +
    '    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n' +
    '    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n' +
    '    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n' +
    '    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n' +
    '    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n' +
    '    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n' +
    '    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n' +
    '    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n' +
    '    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n' +
    '    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n' +
    '    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n' +
    '    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n' +
    '    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n' +
    '    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n' +
    '    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n' +
    '    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n' +
    '    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n' +
    '    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n' +
    '    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n' +
    '    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n' +
    '    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n' +
    '    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n' +
    '    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n' +
    '    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n' +
    '    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n' +
    '    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n' +
    '    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n' +
    '    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n' +
    '    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n' +
    '    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n' +
    '    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n' +
    '    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n' +
    '    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n' +
    '    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n' +
    '    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n' +
    '    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n' +
    '    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n' +
    '    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n' +
    '    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n' +
    '    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n' +
    '    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n' +
    '    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n' +
    '    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n' +
    '    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n' +
    '    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n' +
    '    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n' +
    '    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n' +
    '    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n' +
    '    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n' +
    '    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n' +
    '    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n' +
    '    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n' +
    '    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n' +
    '    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n' +
    '    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n' +
    '    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n' +
    '    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n' +
    '    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n' +
    '    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n' +
    '    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n' +
    '    a = safeAdd(a, olda);\n' +
    '    b = safeAdd(b, oldb);\n' +
    '    c = safeAdd(c, oldc);\n' +
    '    d = safeAdd(d, oldd);\n' +
    '  }\n' +
    '\n' +
    '  return [a, b, c, d];\n' +
    '}\n' +
    '/*\n' +
    ' * Convert an array bytes to an array of little-endian words\n' +
    ' * Characters >255 have their high-byte silently ignored.\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function bytesToWords(input) {\n' +
    '  if (input.length === 0) {\n' +
    '    return [];\n' +
    '  }\n' +
    '\n' +
    '  const length8 = input.length * 8;\n' +
    '  const output = new Uint32Array(getOutputLength(length8));\n' +
    '\n' +
    '  for (let i = 0; i < length8; i += 8) {\n' +
    '    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n' +
    '  }\n' +
    '\n' +
    '  return output;\n' +
    '}\n' +
    '/*\n' +
    ' * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n' +
    ' * to work around bugs in some JS interpreters.\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function safeAdd(x, y) {\n' +
    '  const lsw = (x & 0xffff) + (y & 0xffff);\n' +
    '  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n' +
    '  return msw << 16 | lsw & 0xffff;\n' +
    '}\n' +
    '/*\n' +
    ' * Bitwise rotate a 32-bit number to the left.\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function bitRotateLeft(num, cnt) {\n' +
    '  return num << cnt | num >>> 32 - cnt;\n' +
    '}\n' +
    '/*\n' +
    ' * These functions implement the four basic operations the algorithm uses.\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function md5cmn(q, a, b, x, s, t) {\n' +
    '  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n' +
    '}\n' +
    '\n' +
    'function md5ff(a, b, c, d, x, s, t) {\n' +
    '  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n' +
    '}\n' +
    '\n' +
    'function md5gg(a, b, c, d, x, s, t) {\n' +
    '  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n' +
    '}\n' +
    '\n' +
    'function md5hh(a, b, c, d, x, s, t) {\n' +
    '  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n' +
    '}\n' +
    '\n' +
    'function md5ii(a, b, c, d, x, s, t) {\n' +
    '  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n' +
    '}\n' +
    '\n' +
    'export default md5;'
} [Function: logger]
____9999999____ {
  code: "// Adapted from Chris Veness' SHA1 code at\n" +
    '// http://www.movable-type.co.uk/scripts/sha1.html\n' +
    'function f(s, x, y, z) {\n' +
    '  switch (s) {\n' +
    '    case 0:\n' +
    '      return x & y ^ ~x & z;\n' +
    '\n' +
    '    case 1:\n' +
    '      return x ^ y ^ z;\n' +
    '\n' +
    '    case 2:\n' +
    '      return x & y ^ x & z ^ y & z;\n' +
    '\n' +
    '    case 3:\n' +
    '      return x ^ y ^ z;\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function ROTL(x, n) {\n' +
    '  return x << n | x >>> 32 - n;\n' +
    '}\n' +
    '\n' +
    'function sha1(bytes) {\n' +
    '  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n' +
    '  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n' +
    '\n' +
    "  if (typeof bytes === 'string') {\n" +
    '    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n' +
    '\n' +
    '    bytes = [];\n' +
    '\n' +
    '    for (let i = 0; i < msg.length; ++i) {\n' +
    '      bytes.push(msg.charCodeAt(i));\n' +
    '    }\n' +
    '  } else if (!Array.isArray(bytes)) {\n' +
    '    // Convert Array-like to Array\n' +
    '    bytes = Array.prototype.slice.call(bytes);\n' +
    '  }\n' +
    '\n' +
    '  bytes.push(0x80);\n' +
    '  const l = bytes.length / 4 + 2;\n' +
    '  const N = Math.ceil(l / 16);\n' +
    '  const M = new Array(N);\n' +
    '\n' +
    '  for (let i = 0; i < N; ++i) {\n' +
    '    const arr = new Uint32Array(16);\n' +
    '\n' +
    '    for (let j = 0; j < 16; ++j) {\n' +
    '      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n' +
    '    }\n' +
    '\n' +
    '    M[i] = arr;\n' +
    '  }\n' +
    '\n' +
    '  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n' +
    '  M[N - 1][14] = Math.floor(M[N - 1][14]);\n' +
    '  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n' +
    '\n' +
    '  for (let i = 0; i < N; ++i) {\n' +
    '    const W = new Uint32Array(80);\n' +
    '\n' +
    '    for (let t = 0; t < 16; ++t) {\n' +
    '      W[t] = M[i][t];\n' +
    '    }\n' +
    '\n' +
    '    for (let t = 16; t < 80; ++t) {\n' +
    '      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n' +
    '    }\n' +
    '\n' +
    '    let a = H[0];\n' +
    '    let b = H[1];\n' +
    '    let c = H[2];\n' +
    '    let d = H[3];\n' +
    '    let e = H[4];\n' +
    '\n' +
    '    for (let t = 0; t < 80; ++t) {\n' +
    '      const s = Math.floor(t / 20);\n' +
    '      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n' +
    '      e = d;\n' +
    '      d = c;\n' +
    '      c = ROTL(b, 30) >>> 0;\n' +
    '      b = a;\n' +
    '      a = T;\n' +
    '    }\n' +
    '\n' +
    '    H[0] = H[0] + a >>> 0;\n' +
    '    H[1] = H[1] + b >>> 0;\n' +
    '    H[2] = H[2] + c >>> 0;\n' +
    '    H[3] = H[3] + d >>> 0;\n' +
    '    H[4] = H[4] + e >>> 0;\n' +
    '  }\n' +
    '\n' +
    '  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n' +
    '}\n' +
    '\n' +
    'export default sha1;'
} [Function: logger]
____9999999____ {
  code: '// Unique ID creation requires a high quality random # generator. In the browser we therefore\n' +
    '// require the crypto API and do not support built-in fallback to lower quality random number\n' +
    '// generators (like Math.random()).\n' +
    'let getRandomValues;\n' +
    'const rnds8 = new Uint8Array(16);\n' +
    'export default function rng() {\n' +
    '  // lazy load so that environments that need to polyfill have a chance to do so\n' +
    '  if (!getRandomValues) {\n' +
    '    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.\n' +
    "    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n" +
    '\n' +
    '    if (!getRandomValues) {\n' +
    "      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n" +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return getRandomValues(rnds8);\n' +
    '}'
} [Function: logger]
____9999999____ {
  code: 'export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;'
} [Function: logger]
____9999999____ {
  code: "import { Cache } from '../../../Cache/index.mjs';\n" +
    "import { getCacheKey } from './getCacheKey.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns an endpoint id from cache or `undefined` if not found.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getEndpointId = async (appId, category) => {\n' +
    '    const cacheKey = getCacheKey(appId, category);\n' +
    '    const cachedEndpointId = await Cache.getItem(cacheKey);\n' +
    '    return cachedEndpointId ?? undefined;\n' +
    '};\n' +
    '\n' +
    'export { getEndpointId };\n' +
    '//# sourceMappingURL=getEndpointId.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { amplifyUuid } from '../../../utils/amplifyUuid/index.mjs';\n" +
    "import { getClientInfo } from '../../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../../utils/retry/retry.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import '../../../awsClients/pinpoint/base.mjs';\n" +
    "import '../../../awsClients/pinpoint/errorHelpers.mjs';\n" +
    "import { updateEndpoint as updateEndpoint$1 } from '../../../awsClients/pinpoint/updateEndpoint.mjs';\n" +
    "import { cacheEndpointId } from '../utils/cacheEndpointId.mjs';\n" +
    "import { getEndpointId } from '../utils/getEndpointId.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const updateEndpoint = async ({ address, appId, category, channelType, credentials, identityId, optOut, region, userAttributes, userId, userProfile, userAgentValue, }) => {\n' +
    '    const endpointId = await getEndpointId(appId, category);\n' +
    '    // only generate a new endpoint id if one was not found in cache\n' +
    '    const createdEndpointId = !endpointId ? amplifyUuid() : undefined;\n' +
    '    const { customProperties, demographic, email, location, metrics, name, plan, } = userProfile ?? {};\n' +
    '    const clientInfo = getClientInfo();\n' +
    '    const mergedDemographic = {\n' +
    '        appVersion: clientInfo.appVersion,\n' +
    '        make: clientInfo.make,\n' +
    '        model: clientInfo.model,\n' +
    '        modelVersion: clientInfo.version,\n' +
    '        platform: clientInfo.platform,\n' +
    '        ...demographic,\n' +
    '    };\n' +
    '    const shouldAddAttributes = email || customProperties || name || plan;\n' +
    '    const attributes = {\n' +
    '        ...(email && { email: [email] }),\n' +
    '        ...(name && { name: [name] }),\n' +
    '        ...(plan && { plan: [plan] }),\n' +
    '        ...customProperties,\n' +
    '    };\n' +
    '    const input = {\n' +
    '        ApplicationId: appId,\n' +
    '        EndpointId: endpointId ?? createdEndpointId,\n' +
    '        EndpointRequest: {\n' +
    '            RequestId: amplifyUuid(),\n' +
    '            EffectiveDate: new Date().toISOString(),\n' +
    '            ChannelType: channelType,\n' +
    '            Address: address,\n' +
    '            Attributes: shouldAddAttributes ? attributes : undefined,\n' +
    '            Demographic: {\n' +
    '                AppVersion: mergedDemographic.appVersion,\n' +
    '                Locale: mergedDemographic.locale,\n' +
    '                Make: mergedDemographic.make,\n' +
    '                Model: mergedDemographic.model,\n' +
    '                ModelVersion: mergedDemographic.modelVersion,\n' +
    '                Platform: mergedDemographic.platform,\n' +
    '                PlatformVersion: mergedDemographic.platformVersion,\n' +
    '                Timezone: mergedDemographic.timezone,\n' +
    '            },\n' +
    '            Location: {\n' +
    '                City: location?.city,\n' +
    '                Country: location?.country,\n' +
    '                Latitude: location?.latitude,\n' +
    '                Longitude: location?.longitude,\n' +
    '                PostalCode: location?.postalCode,\n' +
    '                Region: location?.region,\n' +
    '            },\n' +
    '            Metrics: metrics,\n' +
    '            OptOut: optOut,\n' +
    '            User: {\n' +
    '                UserId: userId ?? identityId,\n' +
    '                UserAttributes: userAttributes,\n' +
    '            },\n' +
    '        },\n' +
    '    };\n' +
    '    await updateEndpoint$1({ credentials, region, userAgentValue }, input);\n' +
    '    // if we had to create an endpoint id, we need to now cache it\n' +
    '    if (createdEndpointId) {\n' +
    '        return cacheEndpointId(appId, category, createdEndpointId);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { updateEndpoint };\n' +
    '//# sourceMappingURL=updateEndpoint.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\n" +
    "import '../../utils/getClientInfo/getClientInfo.mjs';\n" +
    "import '../../utils/retry/retry.mjs';\n" +
    "import { signingMiddlewareFactory } from '../middleware/signing/middleware.mjs';\n" +
    "import { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\n" +
    "import { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\n" +
    "import { fetchTransferHandler } from './fetch.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const authenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n' +
    '    userAgentMiddlewareFactory,\n' +
    '    retryMiddlewareFactory,\n' +
    '    signingMiddlewareFactory,\n' +
    ']);\n' +
    '\n' +
    'export { authenticatedHandler };\n' +
    '//# sourceMappingURL=authenticated.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns expected date strings to be used in signing.\n' +
    ' *\n' +
    ' * @param date JavaScript `Date` object.\n' +
    ' * @returns `FormattedDates` object containing the following:\n' +
    " * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n" +
    " * - shortDate: A date string in 'YYYYMMDD' format\n" +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getFormattedDates = (date) => {\n' +
    "    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n" +
    '    return {\n' +
    '        longDate,\n' +
    '        shortDate: longDate.slice(0, 8),\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getFormattedDates };\n' +
    '//# sourceMappingURL=getFormattedDates.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n' +
    ' * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n' +
    ' *\n' +
    ' * @param uri URI string to encode\n' +
    ' * @returns RFC 3986 encoded string\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const extendedEncodeURIComponent = (uri) => {\n' +
    '    // Match characters normally not encoded by `encodeURIComponent`\n' +
    "    const extendedCharacters = /[!'()*]/g;\n" +
    '    return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n' +
    '};\n' +
    'const hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n' +
    '\n' +
    'export { extendedEncodeURIComponent };\n' +
    '//# sourceMappingURL=extendedEncodeURIComponent.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\n" +
    "import { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\n" +
    "import { getCanonicalUri } from './getCanonicalUri.mjs';\n" +
    "import { getHashedPayload } from './getHashedPayload.mjs';\n" +
    "import { getSignedHeaders } from './getSignedHeaders.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a canonical request.\n' +
    ' *\n' +
    ' * @param request `HttpRequest` from which to create the canonical request from.\n' +
    " * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n" +
    ' *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n' +
    ' * @returns String created by by concatenating the following strings, separated by newline characters:\n' +
    ' * - HTTPMethod\n' +
    ' * - CanonicalUri\n' +
    ' * - CanonicalQueryString\n' +
    ' * - CanonicalHeaders\n' +
    ' * - SignedHeaders\n' +
    ' * - HashedPayload\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n' +
    '    method,\n' +
    '    getCanonicalUri(url.pathname, uriEscapePath),\n' +
    '    getCanonicalQueryString(url.searchParams),\n' +
    '    getCanonicalHeaders(headers),\n' +
    '    getSignedHeaders(headers),\n' +
    '    getHashedPayload(body),\n' +
    "].join('\\n');\n" +
    '\n' +
    'export { getCanonicalRequest };\n' +
    '//# sourceMappingURL=getCanonicalRequest.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns the credential scope which restricts the resulting signature to the specified region and service.\n' +
    ' *\n' +
    " * @param date Current date in the format 'YYYYMMDD'.\n" +
    ' * @param region AWS region in which the service resides.\n' +
    ' * @param service Service to which the signed request is being sent.\n' +
    ' *\n' +
    " * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n" +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n' +
    '\n' +
    'export { getCredentialScope };\n' +
    '//# sourceMappingURL=getCredentialScope.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    "import { toHex } from '@smithy/util-hex-encoding';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// TODO: V6 update to different crypto dependency?\n' +
    '/**\n' +
    ' * Returns the hashed data a `Uint8Array`.\n' +
    ' *\n' +
    ' * @param key `SourceData` to be used as hashing key.\n' +
    ' * @param data Hashable `SourceData`.\n' +
    ' * @returns `Uint8Array` created from the data as input to a hash function.\n' +
    ' */\n' +
    'const getHashedData = (key, data) => {\n' +
    '    const sha256 = new Sha256(key ?? undefined);\n' +
    '    sha256.update(data);\n' +
    '    // TODO: V6 flip to async digest\n' +
    '    const hashedData = sha256.digestSync();\n' +
    '    return hashedData;\n' +
    '};\n' +
    '/**\n' +
    ' * Returns the hashed data as a hex string.\n' +
    ' *\n' +
    ' * @param key `SourceData` to be used as hashing key.\n' +
    ' * @param data Hashable `SourceData`.\n' +
    ' * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getHashedDataAsHex = (key, data) => {\n' +
    '    const hashedData = getHashedData(key, data);\n' +
    '    return toHex(hashedData);\n' +
    '};\n' +
    '\n' +
    'export { getHashedData, getHashedDataAsHex };\n' +
    '//# sourceMappingURL=dataHashHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\n" +
    "import { getHashedData } from './dataHashHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a signing key to be used for signing requests.\n' +
    ' *\n' +
    ' * @param secretAccessKey AWS secret access key from credentials.\n' +
    " * @param date Current date in the format 'YYYYMMDD'.\n" +
    ' * @param region AWS region in which the service resides.\n' +
    ' * @param service Service to which the signed request is being sent.\n' +
    ' *\n' +
    ' * @returns `Uint8Array` calculated from its composite parts.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSigningKey = (secretAccessKey, date, region, service) => {\n' +
    '    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n' +
    '    const dateKey = getHashedData(key, date);\n' +
    '    const regionKey = getHashedData(dateKey, region);\n' +
    '    const serviceKey = getHashedData(regionKey, service);\n' +
    '    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n' +
    '    return signingKey;\n' +
    '};\n' +
    '\n' +
    'export { getSigningKey };\n' +
    '//# sourceMappingURL=getSigningKey.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { documentExists, processExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with react 18.2 - built using Vite\n' +
    'function reactWebDetect() {\n' +
    '    const elementKeyPrefixedWithReact = (key) => {\n' +
    "        return key.startsWith('_react') || key.startsWith('__react');\n" +
    '    };\n' +
    '    const elementIsReactEnabled = (element) => {\n' +
    '        return Object.keys(element).find(elementKeyPrefixedWithReact);\n' +
    '    };\n' +
    "    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n" +
    '    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n' +
    '}\n' +
    'function reactSSRDetect() {\n' +
    '    return (processExists() &&\n' +
    "        typeof process.env !== 'undefined' &&\n" +
    "        !!Object.keys(process.env).find(key => key.includes('react')));\n" +
    '}\n' +
    '// use the some\n' +
    '\n' +
    'export { reactSSRDetect, reactWebDetect };\n' +
    '//# sourceMappingURL=React.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a string to be signed.\n' +
    ' *\n' +
    " * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n" +
    " * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n" +
    ' * @param hashedRequest Hashed canonical request.\n' +
    ' *\n' +
    ' * @returns A string created by by concatenating the following strings, separated by newline characters:\n' +
    ' * - Algorithm\n' +
    ' * - RequestDateTime\n' +
    ' * - CredentialScope\n' +
    ' * - HashedCanonicalRequest\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    "const getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n" +
    '\n' +
    'export { getStringToSign };\n' +
    '//# sourceMappingURL=getStringToSign.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with vue 3.3.2\n' +
    'function vueWebDetect() {\n' +
    "    return windowExists() && keyPrefixMatch(window, '__VUE');\n" +
    '}\n' +
    'function vueSSRDetect() {\n' +
    "    return globalExists() && keyPrefixMatch(global, '__VUE');\n" +
    '}\n' +
    '\n' +
    'export { vueSSRDetect, vueWebDetect };\n' +
    '//# sourceMappingURL=Vue.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with next 13.4 / react 18.2\n' +
    'function nextWebDetect() {\n' +
    '    return (windowExists() &&\n' +
    '        window.next &&\n' +
    "        typeof window.next === 'object');\n" +
    '}\n' +
    'function nextSSRDetect() {\n' +
    '    return (globalExists() &&\n' +
    "        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n" +
    '}\n' +
    '\n' +
    'export { nextSSRDetect, nextWebDetect };\n' +
    '//# sourceMappingURL=Next.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with svelte 3.59\n' +
    'function svelteWebDetect() {\n' +
    "    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n" +
    '}\n' +
    'function svelteSSRDetect() {\n' +
    '    return (processExists() &&\n' +
    "        typeof process.env !== 'undefined' &&\n" +
    "        !!Object.keys(process.env).find(key => key.includes('svelte')));\n" +
    '}\n' +
    '\n' +
    'export { svelteSSRDetect, svelteWebDetect };\n' +
    '//# sourceMappingURL=Svelte.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { windowExists, globalExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with nuxt 2.15 / vue 2.7\n' +
    'function nuxtWebDetect() {\n' +
    '    return (windowExists() &&\n' +
    '        (window.__NUXT__ !== undefined ||\n' +
    '            window.$nuxt !== undefined));\n' +
    '}\n' +
    'function nuxtSSRDetect() {\n' +
    "    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n" +
    '}\n' +
    '\n' +
    'export { nuxtSSRDetect, nuxtWebDetect };\n' +
    '//# sourceMappingURL=Nuxt.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with react-native 0.17.7\n' +
    'function reactNativeDetect() {\n' +
    "    return (typeof navigator !== 'undefined' &&\n" +
    "        typeof navigator.product !== 'undefined' &&\n" +
    "        navigator.product === 'ReactNative');\n" +
    '}\n' +
    '\n' +
    'export { reactNativeDetect };\n' +
    '//# sourceMappingURL=ReactNative.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { documentExists, processExists, windowExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with @angular/core 16.0.0\n' +
    'function angularWebDetect() {\n' +
    "    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n" +
    "    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n" +
    '    return angularVersionSetInDocument || angularContentSetInWindow;\n' +
    '}\n' +
    'function angularSSRDetect() {\n' +
    '    return ((processExists() &&\n' +
    "        typeof process.env === 'object' &&\n" +
    "        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n" +
    '        false);\n' +
    '}\n' +
    '\n' +
    'export { angularSSRDetect, angularWebDetect };\n' +
    '//# sourceMappingURL=Angular.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { globalExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// Tested with expo 48 / react-native 0.71.3\n' +
    'function expoDetect() {\n' +
    "    return globalExists() && typeof global.expo !== 'undefined';\n" +
    '}\n' +
    '\n' +
    'export { expoDetect };\n' +
    '//# sourceMappingURL=Expo.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { windowExists } from './helpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function webDetect() {\n' +
    '    return windowExists();\n' +
    '}\n' +
    '\n' +
    'export { webDetect };\n' +
    '//# sourceMappingURL=Web.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { isFunction } from './isFunction';\n" +
    'export function hasLift(source) {\n' +
    '    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n' +
    '}\n' +
    'export function operate(init) {\n' +
    '    return function (source) {\n' +
    '        if (hasLift(source)) {\n' +
    '            return source.lift(function (liftedSource) {\n' +
    '                try {\n' +
    '                    return init(liftedSource, this);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    this.error(err);\n' +
    '                }\n' +
    '            });\n' +
    '        }\n' +
    "        throw new TypeError('Unable to lift unknown Observable type');\n" +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=lift.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Subscriber } from '../Subscriber';\n" +
    'export function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n' +
    '    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n' +
    '}\n' +
    'var OperatorSubscriber = (function (_super) {\n' +
    '    __extends(OperatorSubscriber, _super);\n' +
    '    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n' +
    '        var _this = _super.call(this, destination) || this;\n' +
    '        _this.onFinalize = onFinalize;\n' +
    '        _this.shouldUnsubscribe = shouldUnsubscribe;\n' +
    '        _this._next = onNext\n' +
    '            ? function (value) {\n' +
    '                try {\n' +
    '                    onNext(value);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    destination.error(err);\n' +
    '                }\n' +
    '            }\n' +
    '            : _super.prototype._next;\n' +
    '        _this._error = onError\n' +
    '            ? function (err) {\n' +
    '                try {\n' +
    '                    onError(err);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    destination.error(err);\n' +
    '                }\n' +
    '                finally {\n' +
    '                    this.unsubscribe();\n' +
    '                }\n' +
    '            }\n' +
    '            : _super.prototype._error;\n' +
    '        _this._complete = onComplete\n' +
    '            ? function () {\n' +
    '                try {\n' +
    '                    onComplete();\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    destination.error(err);\n' +
    '                }\n' +
    '                finally {\n' +
    '                    this.unsubscribe();\n' +
    '                }\n' +
    '            }\n' +
    '            : _super.prototype._complete;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    OperatorSubscriber.prototype.unsubscribe = function () {\n' +
    '        var _a;\n' +
    '        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n' +
    '            var closed_1 = this.closed;\n' +
    '            _super.prototype.unsubscribe.call(this);\n' +
    '            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n' +
    '        }\n' +
    '    };\n' +
    '    return OperatorSubscriber;\n' +
    '}(Subscriber));\n' +
    'export { OperatorSubscriber };\n' +
    '//# sourceMappingURL=OperatorSubscriber.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function isFunction(value) {\n' +
    "    return typeof value === 'function';\n" +
    '}\n' +
    '//# sourceMappingURL=isFunction.js.map'
} [Function: logger]
____9999999____ {
  code: "import { config } from '../config';\n" +
    'var context = null;\n' +
    'export function errorContext(cb) {\n' +
    '    if (config.useDeprecatedSynchronousErrorHandling) {\n' +
    '        var isRoot = !context;\n' +
    '        if (isRoot) {\n' +
    '            context = { errorThrown: false, error: null };\n' +
    '        }\n' +
    '        cb();\n' +
    '        if (isRoot) {\n' +
    '            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n' +
    '            context = null;\n' +
    '            if (errorThrown) {\n' +
    '                throw error;\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    else {\n' +
    '        cb();\n' +
    '    }\n' +
    '}\n' +
    'export function captureError(err) {\n' +
    '    if (config.useDeprecatedSynchronousErrorHandling && context) {\n' +
    '        context.errorThrown = true;\n' +
    '        context.error = err;\n' +
    '    }\n' +
    '}\n' +
    '//# sourceMappingURL=errorContext.js.map'
} [Function: logger]
____9999999____ {
  code: 'export var performanceTimestampProvider = {\n' +
    '    now: function () {\n' +
    '        return (performanceTimestampProvider.delegate || performance).now();\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=performanceTimestampProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function arrRemove(arr, item) {\n' +
    '    if (arr) {\n' +
    '        var index = arr.indexOf(item);\n' +
    '        0 <= index && arr.splice(index, 1);\n' +
    '    }\n' +
    '}\n' +
    '//# sourceMappingURL=arrRemove.js.map'
} [Function: logger]
____9999999____ {
  code: 'export var dateTimestampProvider = {\n' +
    '    now: function () {\n' +
    '        return (dateTimestampProvider.delegate || Date).now();\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=dateTimestampProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { Subscription } from '../Subscription';\n" +
    'export var animationFrameProvider = {\n' +
    '    schedule: function (callback) {\n' +
    '        var request = requestAnimationFrame;\n' +
    '        var cancel = cancelAnimationFrame;\n' +
    '        var delegate = animationFrameProvider.delegate;\n' +
    '        if (delegate) {\n' +
    '            request = delegate.requestAnimationFrame;\n' +
    '            cancel = delegate.cancelAnimationFrame;\n' +
    '        }\n' +
    '        var handle = request(function (timestamp) {\n' +
    '            cancel = undefined;\n' +
    '            callback(timestamp);\n' +
    '        });\n' +
    '        return new Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });\n' +
    '    },\n' +
    '    requestAnimationFrame: function () {\n' +
    '        var args = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            args[_i] = arguments[_i];\n' +
    '        }\n' +
    '        var delegate = animationFrameProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n' +
    '    },\n' +
    '    cancelAnimationFrame: function () {\n' +
    '        var args = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            args[_i] = arguments[_i];\n' +
    '        }\n' +
    '        var delegate = animationFrameProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=animationFrameProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncScheduler } from './AsyncScheduler';\n" +
    'var AsapScheduler = (function (_super) {\n' +
    '    __extends(AsapScheduler, _super);\n' +
    '    function AsapScheduler() {\n' +
    '        return _super !== null && _super.apply(this, arguments) || this;\n' +
    '    }\n' +
    '    AsapScheduler.prototype.flush = function (action) {\n' +
    '        this._active = true;\n' +
    '        var flushId = this._scheduled;\n' +
    '        this._scheduled = undefined;\n' +
    '        var actions = this.actions;\n' +
    '        var error;\n' +
    '        action = action || actions.shift();\n' +
    '        do {\n' +
    '            if ((error = action.execute(action.state, action.delay))) {\n' +
    '                break;\n' +
    '            }\n' +
    '        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n' +
    '        this._active = false;\n' +
    '        if (error) {\n' +
    '            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n' +
    '                action.unsubscribe();\n' +
    '            }\n' +
    '            throw error;\n' +
    '        }\n' +
    '    };\n' +
    '    return AsapScheduler;\n' +
    '}(AsyncScheduler));\n' +
    'export { AsapScheduler };\n' +
    '//# sourceMappingURL=AsapScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncAction } from './AsyncAction';\n" +
    "import { immediateProvider } from './immediateProvider';\n" +
    'var AsapAction = (function (_super) {\n' +
    '    __extends(AsapAction, _super);\n' +
    '    function AsapAction(scheduler, work) {\n' +
    '        var _this = _super.call(this, scheduler, work) || this;\n' +
    '        _this.scheduler = scheduler;\n' +
    '        _this.work = work;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay !== null && delay > 0) {\n' +
    '            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n' +
    '        }\n' +
    '        scheduler.actions.push(this);\n' +
    '        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n' +
    '    };\n' +
    '    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n' +
    '        var _a;\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay != null ? delay > 0 : this.delay > 0) {\n' +
    '            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n' +
    '        }\n' +
    '        var actions = scheduler.actions;\n' +
    '        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n' +
    '            immediateProvider.clearImmediate(id);\n' +
    '            if (scheduler._scheduled === id) {\n' +
    '                scheduler._scheduled = undefined;\n' +
    '            }\n' +
    '        }\n' +
    '        return undefined;\n' +
    '    };\n' +
    '    return AsapAction;\n' +
    '}(AsyncAction));\n' +
    'export { AsapAction };\n' +
    '//# sourceMappingURL=AsapAction.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncScheduler } from './AsyncScheduler';\n" +
    'var QueueScheduler = (function (_super) {\n' +
    '    __extends(QueueScheduler, _super);\n' +
    '    function QueueScheduler() {\n' +
    '        return _super !== null && _super.apply(this, arguments) || this;\n' +
    '    }\n' +
    '    return QueueScheduler;\n' +
    '}(AsyncScheduler));\n' +
    'export { QueueScheduler };\n' +
    '//# sourceMappingURL=QueueScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncAction } from './AsyncAction';\n" +
    "import { animationFrameProvider } from './animationFrameProvider';\n" +
    'var AnimationFrameAction = (function (_super) {\n' +
    '    __extends(AnimationFrameAction, _super);\n' +
    '    function AnimationFrameAction(scheduler, work) {\n' +
    '        var _this = _super.call(this, scheduler, work) || this;\n' +
    '        _this.scheduler = scheduler;\n' +
    '        _this.work = work;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay !== null && delay > 0) {\n' +
    '            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n' +
    '        }\n' +
    '        scheduler.actions.push(this);\n' +
    '        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(function () { return scheduler.flush(undefined); }));\n' +
    '    };\n' +
    '    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n' +
    '        var _a;\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay != null ? delay > 0 : this.delay > 0) {\n' +
    '            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n' +
    '        }\n' +
    '        var actions = scheduler.actions;\n' +
    '        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n' +
    '            animationFrameProvider.cancelAnimationFrame(id);\n' +
    '            scheduler._scheduled = undefined;\n' +
    '        }\n' +
    '        return undefined;\n' +
    '    };\n' +
    '    return AnimationFrameAction;\n' +
    '}(AsyncAction));\n' +
    'export { AnimationFrameAction };\n' +
    '//# sourceMappingURL=AnimationFrameAction.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncScheduler } from './AsyncScheduler';\n" +
    'var AnimationFrameScheduler = (function (_super) {\n' +
    '    __extends(AnimationFrameScheduler, _super);\n' +
    '    function AnimationFrameScheduler() {\n' +
    '        return _super !== null && _super.apply(this, arguments) || this;\n' +
    '    }\n' +
    '    AnimationFrameScheduler.prototype.flush = function (action) {\n' +
    '        this._active = true;\n' +
    '        var flushId = this._scheduled;\n' +
    '        this._scheduled = undefined;\n' +
    '        var actions = this.actions;\n' +
    '        var error;\n' +
    '        action = action || actions.shift();\n' +
    '        do {\n' +
    '            if ((error = action.execute(action.state, action.delay))) {\n' +
    '                break;\n' +
    '            }\n' +
    '        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n' +
    '        this._active = false;\n' +
    '        if (error) {\n' +
    '            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n' +
    '                action.unsubscribe();\n' +
    '            }\n' +
    '            throw error;\n' +
    '        }\n' +
    '    };\n' +
    '    return AnimationFrameScheduler;\n' +
    '}(AsyncScheduler));\n' +
    'export { AnimationFrameScheduler };\n' +
    '//# sourceMappingURL=AnimationFrameScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Action } from './Action';\n" +
    "import { intervalProvider } from './intervalProvider';\n" +
    "import { arrRemove } from '../util/arrRemove';\n" +
    'var AsyncAction = (function (_super) {\n' +
    '    __extends(AsyncAction, _super);\n' +
    '    function AsyncAction(scheduler, work) {\n' +
    '        var _this = _super.call(this, scheduler, work) || this;\n' +
    '        _this.scheduler = scheduler;\n' +
    '        _this.work = work;\n' +
    '        _this.pending = false;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AsyncAction.prototype.schedule = function (state, delay) {\n' +
    '        var _a;\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (this.closed) {\n' +
    '            return this;\n' +
    '        }\n' +
    '        this.state = state;\n' +
    '        var id = this.id;\n' +
    '        var scheduler = this.scheduler;\n' +
    '        if (id != null) {\n' +
    '            this.id = this.recycleAsyncId(scheduler, id, delay);\n' +
    '        }\n' +
    '        this.pending = true;\n' +
    '        this.delay = delay;\n' +
    '        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n' +
    '        return this;\n' +
    '    };\n' +
    '    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n' +
    '    };\n' +
    '    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay != null && this.delay === delay && this.pending === false) {\n' +
    '            return id;\n' +
    '        }\n' +
    '        if (id != null) {\n' +
    '            intervalProvider.clearInterval(id);\n' +
    '        }\n' +
    '        return undefined;\n' +
    '    };\n' +
    '    AsyncAction.prototype.execute = function (state, delay) {\n' +
    '        if (this.closed) {\n' +
    "            return new Error('executing a cancelled action');\n" +
    '        }\n' +
    '        this.pending = false;\n' +
    '        var error = this._execute(state, delay);\n' +
    '        if (error) {\n' +
    '            return error;\n' +
    '        }\n' +
    '        else if (this.pending === false && this.id != null) {\n' +
    '            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n' +
    '        }\n' +
    '    };\n' +
    '    AsyncAction.prototype._execute = function (state, _delay) {\n' +
    '        var errored = false;\n' +
    '        var errorValue;\n' +
    '        try {\n' +
    '            this.work(state);\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            errored = true;\n' +
    "            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n" +
    '        }\n' +
    '        if (errored) {\n' +
    '            this.unsubscribe();\n' +
    '            return errorValue;\n' +
    '        }\n' +
    '    };\n' +
    '    AsyncAction.prototype.unsubscribe = function () {\n' +
    '        if (!this.closed) {\n' +
    '            var _a = this, id = _a.id, scheduler = _a.scheduler;\n' +
    '            var actions = scheduler.actions;\n' +
    '            this.work = this.state = this.scheduler = null;\n' +
    '            this.pending = false;\n' +
    '            arrRemove(actions, this);\n' +
    '            if (id != null) {\n' +
    '                this.id = this.recycleAsyncId(scheduler, id, null);\n' +
    '            }\n' +
    '            this.delay = null;\n' +
    '            _super.prototype.unsubscribe.call(this);\n' +
    '        }\n' +
    '    };\n' +
    '    return AsyncAction;\n' +
    '}(Action));\n' +
    'export { AsyncAction };\n' +
    '//# sourceMappingURL=AsyncAction.js.map'
} [Function: logger]
____9999999____ {
  code: "import { config } from '../config';\n" +
    "import { timeoutProvider } from '../scheduler/timeoutProvider';\n" +
    'export function reportUnhandledError(err) {\n' +
    '    timeoutProvider.setTimeout(function () {\n' +
    '        var onUnhandledError = config.onUnhandledError;\n' +
    '        if (onUnhandledError) {\n' +
    '            onUnhandledError(err);\n' +
    '        }\n' +
    '        else {\n' +
    '            throw err;\n' +
    '        }\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=reportUnhandledError.js.map'
} [Function: logger]
____9999999____ {
  code: "export var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();\n" +
    'export function errorNotification(error) {\n' +
    "    return createNotification('E', undefined, error);\n" +
    '}\n' +
    'export function nextNotification(value) {\n' +
    "    return createNotification('N', value, undefined);\n" +
    '}\n' +
    'export function createNotification(kind, value, error) {\n' +
    '    return {\n' +
    '        kind: kind,\n' +
    '        value: value,\n' +
    '        error: error,\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=NotificationFactories.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    'export var timeoutProvider = {\n' +
    '    setTimeout: function (handler, timeout) {\n' +
    '        var args = [];\n' +
    '        for (var _i = 2; _i < arguments.length; _i++) {\n' +
    '            args[_i - 2] = arguments[_i];\n' +
    '        }\n' +
    '        var delegate = timeoutProvider.delegate;\n' +
    '        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n' +
    '            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n' +
    '        }\n' +
    '        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n' +
    '    },\n' +
    '    clearTimeout: function (handle) {\n' +
    '        var delegate = timeoutProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=timeoutProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function createErrorClass(createImpl) {\n' +
    '    var _super = function (instance) {\n' +
    '        Error.call(instance);\n' +
    '        instance.stack = new Error().stack;\n' +
    '    };\n' +
    '    var ctorFunc = createImpl(_super);\n' +
    '    ctorFunc.prototype = Object.create(Error.prototype);\n' +
    '    ctorFunc.prototype.constructor = ctorFunc;\n' +
    '    return ctorFunc;\n' +
    '}\n' +
    '//# sourceMappingURL=createErrorClass.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function isValidDate(value) {\n' +
    '    return value instanceof Date && !isNaN(value);\n' +
    '}\n' +
    '//# sourceMappingURL=isDate.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __asyncValues, __awaiter, __generator, __values } from "tslib";\n' +
    "import { isArrayLike } from '../util/isArrayLike';\n" +
    "import { isPromise } from '../util/isPromise';\n" +
    "import { Observable } from '../Observable';\n" +
    "import { isInteropObservable } from '../util/isInteropObservable';\n" +
    "import { isAsyncIterable } from '../util/isAsyncIterable';\n" +
    "import { createInvalidObservableTypeError } from '../util/throwUnobservableError';\n" +
    "import { isIterable } from '../util/isIterable';\n" +
    "import { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    "import { reportUnhandledError } from '../util/reportUnhandledError';\n" +
    "import { observable as Symbol_observable } from '../symbol/observable';\n" +
    'export function innerFrom(input) {\n' +
    '    if (input instanceof Observable) {\n' +
    '        return input;\n' +
    '    }\n' +
    '    if (input != null) {\n' +
    '        if (isInteropObservable(input)) {\n' +
    '            return fromInteropObservable(input);\n' +
    '        }\n' +
    '        if (isArrayLike(input)) {\n' +
    '            return fromArrayLike(input);\n' +
    '        }\n' +
    '        if (isPromise(input)) {\n' +
    '            return fromPromise(input);\n' +
    '        }\n' +
    '        if (isAsyncIterable(input)) {\n' +
    '            return fromAsyncIterable(input);\n' +
    '        }\n' +
    '        if (isIterable(input)) {\n' +
    '            return fromIterable(input);\n' +
    '        }\n' +
    '        if (isReadableStreamLike(input)) {\n' +
    '            return fromReadableStreamLike(input);\n' +
    '        }\n' +
    '    }\n' +
    '    throw createInvalidObservableTypeError(input);\n' +
    '}\n' +
    'export function fromInteropObservable(obj) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var obs = obj[Symbol_observable]();\n' +
    '        if (isFunction(obs.subscribe)) {\n' +
    '            return obs.subscribe(subscriber);\n' +
    '        }\n' +
    "        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n" +
    '    });\n' +
    '}\n' +
    'export function fromArrayLike(array) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n' +
    '            subscriber.next(array[i]);\n' +
    '        }\n' +
    '        subscriber.complete();\n' +
    '    });\n' +
    '}\n' +
    'export function fromPromise(promise) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        promise\n' +
    '            .then(function (value) {\n' +
    '            if (!subscriber.closed) {\n' +
    '                subscriber.next(value);\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '        }, function (err) { return subscriber.error(err); })\n' +
    '            .then(null, reportUnhandledError);\n' +
    '    });\n' +
    '}\n' +
    'export function fromIterable(iterable) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var e_1, _a;\n' +
    '        try {\n' +
    '            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n' +
    '                var value = iterable_1_1.value;\n' +
    '                subscriber.next(value);\n' +
    '                if (subscriber.closed) {\n' +
    '                    return;\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '        finally {\n' +
    '            try {\n' +
    '                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n' +
    '            }\n' +
    '            finally { if (e_1) throw e_1.error; }\n' +
    '        }\n' +
    '        subscriber.complete();\n' +
    '    });\n' +
    '}\n' +
    'export function fromAsyncIterable(asyncIterable) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n' +
    '    });\n' +
    '}\n' +
    'export function fromReadableStreamLike(readableStream) {\n' +
    '    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n' +
    '}\n' +
    'function process(asyncIterable, subscriber) {\n' +
    '    var asyncIterable_1, asyncIterable_1_1;\n' +
    '    var e_2, _a;\n' +
    '    return __awaiter(this, void 0, void 0, function () {\n' +
    '        var value, e_2_1;\n' +
    '        return __generator(this, function (_b) {\n' +
    '            switch (_b.label) {\n' +
    '                case 0:\n' +
    '                    _b.trys.push([0, 5, 6, 11]);\n' +
    '                    asyncIterable_1 = __asyncValues(asyncIterable);\n' +
    '                    _b.label = 1;\n' +
    '                case 1: return [4, asyncIterable_1.next()];\n' +
    '                case 2:\n' +
    '                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n' +
    '                    value = asyncIterable_1_1.value;\n' +
    '                    subscriber.next(value);\n' +
    '                    if (subscriber.closed) {\n' +
    '                        return [2];\n' +
    '                    }\n' +
    '                    _b.label = 3;\n' +
    '                case 3: return [3, 1];\n' +
    '                case 4: return [3, 11];\n' +
    '                case 5:\n' +
    '                    e_2_1 = _b.sent();\n' +
    '                    e_2 = { error: e_2_1 };\n' +
    '                    return [3, 11];\n' +
    '                case 6:\n' +
    '                    _b.trys.push([6, , 9, 10]);\n' +
    '                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n' +
    '                    return [4, _a.call(asyncIterable_1)];\n' +
    '                case 7:\n' +
    '                    _b.sent();\n' +
    '                    _b.label = 8;\n' +
    '                case 8: return [3, 10];\n' +
    '                case 9:\n' +
    '                    if (e_2) throw e_2.error;\n' +
    '                    return [7];\n' +
    '                case 10: return [7];\n' +
    '                case 11:\n' +
    '                    subscriber.complete();\n' +
    '                    return [2];\n' +
    '            }\n' +
    '        });\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=innerFrom.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n' +
    '    if (delay === void 0) { delay = 0; }\n' +
    '    if (repeat === void 0) { repeat = false; }\n' +
    '    var scheduleSubscription = scheduler.schedule(function () {\n' +
    '        work();\n' +
    '        if (repeat) {\n' +
    '            parentSubscription.add(this.schedule(null, delay));\n' +
    '        }\n' +
    '        else {\n' +
    '            this.unsubscribe();\n' +
    '        }\n' +
    '    }, delay);\n' +
    '    parentSubscription.add(scheduleSubscription);\n' +
    '    if (!repeat) {\n' +
    '        return scheduleSubscription;\n' +
    '    }\n' +
    '}\n' +
    '//# sourceMappingURL=executeSchedule.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Scheduler } from '../Scheduler';\n" +
    'var AsyncScheduler = (function (_super) {\n' +
    '    __extends(AsyncScheduler, _super);\n' +
    '    function AsyncScheduler(SchedulerAction, now) {\n' +
    '        if (now === void 0) { now = Scheduler.now; }\n' +
    '        var _this = _super.call(this, SchedulerAction, now) || this;\n' +
    '        _this.actions = [];\n' +
    '        _this._active = false;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    AsyncScheduler.prototype.flush = function (action) {\n' +
    '        var actions = this.actions;\n' +
    '        if (this._active) {\n' +
    '            actions.push(action);\n' +
    '            return;\n' +
    '        }\n' +
    '        var error;\n' +
    '        this._active = true;\n' +
    '        do {\n' +
    '            if ((error = action.execute(action.state, action.delay))) {\n' +
    '                break;\n' +
    '            }\n' +
    '        } while ((action = actions.shift()));\n' +
    '        this._active = false;\n' +
    '        if (error) {\n' +
    '            while ((action = actions.shift())) {\n' +
    '                action.unsubscribe();\n' +
    '            }\n' +
    '            throw error;\n' +
    '        }\n' +
    '    };\n' +
    '    return AsyncScheduler;\n' +
    '}(Scheduler));\n' +
    'export { AsyncScheduler };\n' +
    '//# sourceMappingURL=AsyncScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { isScheduler } from '../util/isScheduler';\n" +
    "import { Observable } from '../Observable';\n" +
    "import { subscribeOn } from '../operators/subscribeOn';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "import { observeOn } from '../operators/observeOn';\n" +
    "import { AsyncSubject } from '../AsyncSubject';\n" +
    'export function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {\n' +
    '    if (resultSelector) {\n' +
    '        if (isScheduler(resultSelector)) {\n' +
    '            scheduler = resultSelector;\n' +
    '        }\n' +
    '        else {\n' +
    '            return function () {\n' +
    '                var args = [];\n' +
    '                for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                    args[_i] = arguments[_i];\n' +
    '                }\n' +
    '                return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler)\n' +
    '                    .apply(this, args)\n' +
    '                    .pipe(mapOneOrManyArgs(resultSelector));\n' +
    '            };\n' +
    '        }\n' +
    '    }\n' +
    '    if (scheduler) {\n' +
    '        return function () {\n' +
    '            var args = [];\n' +
    '            for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                args[_i] = arguments[_i];\n' +
    '            }\n' +
    '            return bindCallbackInternals(isNodeStyle, callbackFunc)\n' +
    '                .apply(this, args)\n' +
    '                .pipe(subscribeOn(scheduler), observeOn(scheduler));\n' +
    '        };\n' +
    '    }\n' +
    '    return function () {\n' +
    '        var _this = this;\n' +
    '        var args = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            args[_i] = arguments[_i];\n' +
    '        }\n' +
    '        var subject = new AsyncSubject();\n' +
    '        var uninitialized = true;\n' +
    '        return new Observable(function (subscriber) {\n' +
    '            var subs = subject.subscribe(subscriber);\n' +
    '            if (uninitialized) {\n' +
    '                uninitialized = false;\n' +
    '                var isAsync_1 = false;\n' +
    '                var isComplete_1 = false;\n' +
    '                callbackFunc.apply(_this, __spreadArray(__spreadArray([], __read(args)), [\n' +
    '                    function () {\n' +
    '                        var results = [];\n' +
    '                        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                            results[_i] = arguments[_i];\n' +
    '                        }\n' +
    '                        if (isNodeStyle) {\n' +
    '                            var err = results.shift();\n' +
    '                            if (err != null) {\n' +
    '                                subject.error(err);\n' +
    '                                return;\n' +
    '                            }\n' +
    '                        }\n' +
    '                        subject.next(1 < results.length ? results : results[0]);\n' +
    '                        isComplete_1 = true;\n' +
    '                        if (isAsync_1) {\n' +
    '                            subject.complete();\n' +
    '                        }\n' +
    '                    },\n' +
    '                ]));\n' +
    '                if (isComplete_1) {\n' +
    '                    subject.complete();\n' +
    '                }\n' +
    '                isAsync_1 = true;\n' +
    '            }\n' +
    '            return subs;\n' +
    '        });\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=bindCallbackInternals.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { AsyncAction } from './AsyncAction';\n" +
    'var QueueAction = (function (_super) {\n' +
    '    __extends(QueueAction, _super);\n' +
    '    function QueueAction(scheduler, work) {\n' +
    '        var _this = _super.call(this, scheduler, work) || this;\n' +
    '        _this.scheduler = scheduler;\n' +
    '        _this.work = work;\n' +
    '        return _this;\n' +
    '    }\n' +
    '    QueueAction.prototype.schedule = function (state, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if (delay > 0) {\n' +
    '            return _super.prototype.schedule.call(this, state, delay);\n' +
    '        }\n' +
    '        this.delay = delay;\n' +
    '        this.state = state;\n' +
    '        this.scheduler.flush(this);\n' +
    '        return this;\n' +
    '    };\n' +
    '    QueueAction.prototype.execute = function (state, delay) {\n' +
    '        return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n' +
    '    };\n' +
    '    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n' +
    '            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n' +
    '        }\n' +
    '        scheduler.flush(this);\n' +
    '        return 0;\n' +
    '    };\n' +
    '    return QueueAction;\n' +
    '}(AsyncAction));\n' +
    'export { QueueAction };\n' +
    '//# sourceMappingURL=QueueAction.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    'import { map } from "../operators/map";\n' +
    'var isArray = Array.isArray;\n' +
    'function callOrApply(fn, args) {\n' +
    '    return isArray(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);\n' +
    '}\n' +
    'export function mapOneOrManyArgs(fn) {\n' +
    '    return map(function (args) { return callOrApply(fn, args); });\n' +
    '}\n' +
    '//# sourceMappingURL=mapOneOrManyArgs.js.map'
} [Function: logger]
____9999999____ {
  code: "import { isFunction } from './isFunction';\n" +
    "import { isScheduler } from './isScheduler';\n" +
    'function last(arr) {\n' +
    '    return arr[arr.length - 1];\n' +
    '}\n' +
    'export function popResultSelector(args) {\n' +
    '    return isFunction(last(args)) ? args.pop() : undefined;\n' +
    '}\n' +
    'export function popScheduler(args) {\n' +
    '    return isScheduler(last(args)) ? args.pop() : undefined;\n' +
    '}\n' +
    'export function popNumber(args, defaultValue) {\n' +
    "    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n" +
    '}\n' +
    '//# sourceMappingURL=args.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function createObject(keys, values) {\n' +
    '    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});\n' +
    '}\n' +
    '//# sourceMappingURL=createObject.js.map'
} [Function: logger]
____9999999____ {
  code: "export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n" +
    '//# sourceMappingURL=isArrayLike.js.map'
} [Function: logger]
____9999999____ {
  code: 'var isArray = Array.isArray;\n' +
    'export function argsOrArgArray(args) {\n' +
    '    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n' +
    '}\n' +
    '//# sourceMappingURL=argsOrArgArray.js.map'
} [Function: logger]
____9999999____ {
  code: "import { isFunction } from './isFunction';\n" +
    'export function isScheduler(value) {\n' +
    '    return value && isFunction(value.schedule);\n' +
    '}\n' +
    '//# sourceMappingURL=isScheduler.js.map'
} [Function: logger]
____9999999____ {
  code: 'var isArray = Array.isArray;\n' +
    'var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;\n' +
    'export function argsArgArrayOrObject(args) {\n' +
    '    if (args.length === 1) {\n' +
    '        var first_1 = args[0];\n' +
    '        if (isArray(first_1)) {\n' +
    '            return { args: first_1, keys: null };\n' +
    '        }\n' +
    '        if (isPOJO(first_1)) {\n' +
    '            var keys = getKeys(first_1);\n' +
    '            return {\n' +
    '                args: keys.map(function (key) { return first_1[key]; }),\n' +
    '                keys: keys,\n' +
    '            };\n' +
    '        }\n' +
    '    }\n' +
    '    return { args: args, keys: null };\n' +
    '}\n' +
    'function isPOJO(obj) {\n' +
    "    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n" +
    '}\n' +
    '//# sourceMappingURL=argsArgArrayOrObject.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function not(pred, thisArg) {\n' +
    '    return function (value, index) { return !pred.call(thisArg, value, index); };\n' +
    '}\n' +
    '//# sourceMappingURL=not.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { observeOn } from '../operators/observeOn';\n" +
    "import { subscribeOn } from '../operators/subscribeOn';\n" +
    'export function scheduleObservable(input, scheduler) {\n' +
    '    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n' +
    '}\n' +
    '//# sourceMappingURL=scheduleObservable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { iterator as Symbol_iterator } from '../symbol/iterator';\n" +
    "import { isFunction } from '../util/isFunction';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export function scheduleIterable(input, scheduler) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var iterator;\n' +
    '        executeSchedule(subscriber, scheduler, function () {\n' +
    '            iterator = input[Symbol_iterator]();\n' +
    '            executeSchedule(subscriber, scheduler, function () {\n' +
    '                var _a;\n' +
    '                var value;\n' +
    '                var done;\n' +
    '                try {\n' +
    '                    (_a = iterator.next(), value = _a.value, done = _a.done);\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    subscriber.error(err);\n' +
    '                    return;\n' +
    '                }\n' +
    '                if (done) {\n' +
    '                    subscriber.complete();\n' +
    '                }\n' +
    '                else {\n' +
    '                    subscriber.next(value);\n' +
    '                }\n' +
    '            }, 0, true);\n' +
    '        });\n' +
    '        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=scheduleIterable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { observeOn } from '../operators/observeOn';\n" +
    "import { subscribeOn } from '../operators/subscribeOn';\n" +
    'export function schedulePromise(input, scheduler) {\n' +
    '    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n' +
    '}\n' +
    '//# sourceMappingURL=schedulePromise.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    'export function scheduleArray(input, scheduler) {\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        var i = 0;\n' +
    '        return scheduler.schedule(function () {\n' +
    '            if (i === input.length) {\n' +
    '                subscriber.complete();\n' +
    '            }\n' +
    '            else {\n' +
    '                subscriber.next(input[i++]);\n' +
    '                if (!subscriber.closed) {\n' +
    '                    this.schedule();\n' +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=scheduleArray.js.map'
} [Function: logger]
____9999999____ {
  code: "import { observable as Symbol_observable } from '../symbol/observable';\n" +
    "import { isFunction } from './isFunction';\n" +
    'export function isInteropObservable(input) {\n' +
    '    return isFunction(input[Symbol_observable]);\n' +
    '}\n' +
    '//# sourceMappingURL=isInteropObservable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { iterator as Symbol_iterator } from '../symbol/iterator';\n" +
    "import { isFunction } from './isFunction';\n" +
    'export function isIterable(input) {\n' +
    '    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n' +
    '}\n' +
    '//# sourceMappingURL=isIterable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    'export function scheduleAsyncIterable(input, scheduler) {\n' +
    '    if (!input) {\n' +
    "        throw new Error('Iterable cannot be null');\n" +
    '    }\n' +
    '    return new Observable(function (subscriber) {\n' +
    '        executeSchedule(subscriber, scheduler, function () {\n' +
    '            var iterator = input[Symbol.asyncIterator]();\n' +
    '            executeSchedule(subscriber, scheduler, function () {\n' +
    '                iterator.next().then(function (result) {\n' +
    '                    if (result.done) {\n' +
    '                        subscriber.complete();\n' +
    '                    }\n' +
    '                    else {\n' +
    '                        subscriber.next(result.value);\n' +
    '                    }\n' +
    '                });\n' +
    '            }, 0, true);\n' +
    '        });\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=scheduleAsyncIterable.js.map'
} [Function: logger]
____9999999____ {
  code: "import { isFunction } from './isFunction';\n" +
    'export function isAsyncIterable(obj) {\n' +
    '    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n' +
    '}\n' +
    '//# sourceMappingURL=isAsyncIterable.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function createInvalidObservableTypeError(input) {\n' +
    `    return new TypeError("You provided " + (input !== null && typeof input === 'object' ? 'an invalid object' : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");\n` +
    '}\n' +
    '//# sourceMappingURL=throwUnobservableError.js.map'
} [Function: logger]
____9999999____ {
  code: "import { scheduleAsyncIterable } from './scheduleAsyncIterable';\n" +
    "import { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n" +
    'export function scheduleReadableStreamLike(input, scheduler) {\n' +
    '    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n' +
    '}\n' +
    '//# sourceMappingURL=scheduleReadableStreamLike.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __asyncGenerator, __await, __generator } from "tslib";\n' +
    "import { isFunction } from './isFunction';\n" +
    'export function readableStreamLikeToAsyncGenerator(readableStream) {\n' +
    '    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n' +
    '        var reader, _a, value, done;\n' +
    '        return __generator(this, function (_b) {\n' +
    '            switch (_b.label) {\n' +
    '                case 0:\n' +
    '                    reader = readableStream.getReader();\n' +
    '                    _b.label = 1;\n' +
    '                case 1:\n' +
    '                    _b.trys.push([1, , 9, 10]);\n' +
    '                    _b.label = 2;\n' +
    '                case 2:\n' +
    '                    if (!true) return [3, 8];\n' +
    '                    return [4, __await(reader.read())];\n' +
    '                case 3:\n' +
    '                    _a = _b.sent(), value = _a.value, done = _a.done;\n' +
    '                    if (!done) return [3, 5];\n' +
    '                    return [4, __await(void 0)];\n' +
    '                case 4: return [2, _b.sent()];\n' +
    '                case 5: return [4, __await(value)];\n' +
    '                case 6: return [4, _b.sent()];\n' +
    '                case 7:\n' +
    '                    _b.sent();\n' +
    '                    return [3, 2];\n' +
    '                case 8: return [3, 10];\n' +
    '                case 9:\n' +
    '                    reader.releaseLock();\n' +
    '                    return [7];\n' +
    '                case 10: return [2];\n' +
    '            }\n' +
    '        });\n' +
    '    });\n' +
    '}\n' +
    'export function isReadableStreamLike(obj) {\n' +
    '    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n' +
    '}\n' +
    '//# sourceMappingURL=isReadableStreamLike.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { isFunction } from "./isFunction";\n' +
    'export function isPromise(value) {\n' +
    '    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n' +
    '}\n' +
    '//# sourceMappingURL=isPromise.js.map'
} [Function: logger]
____9999999____ {
  code: "import { identity } from '../util/identity';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "import { pipe } from '../util/pipe';\n" +
    "import { mergeMap } from './mergeMap';\n" +
    "import { toArray } from './toArray';\n" +
    'export function joinAllInternals(joinFn, project) {\n' +
    '    return pipe(toArray(), mergeMap(function (sources) { return joinFn(sources); }), project ? mapOneOrManyArgs(project) : identity);\n' +
    '}\n' +
    '//# sourceMappingURL=joinAllInternals.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { operate } from '../util/lift';\n" +
    "import { concatAll } from './concatAll';\n" +
    "import { popScheduler } from '../util/args';\n" +
    "import { from } from '../observable/from';\n" +
    'export function concat() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(args);\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        concatAll()(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=concat.js.map'
} [Function: logger]
____9999999____ {
  code: "import { Observable } from '../Observable';\n" +
    'export function fromSubscribable(subscribable) {\n' +
    '    return new Observable(function (subscriber) { return subscribable.subscribe(subscriber); });\n' +
    '}\n' +
    '//# sourceMappingURL=fromSubscribable.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { combineLatestInit } from '../observable/combineLatest';\n" +
    "import { operate } from '../util/lift';\n" +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n" +
    "import { pipe } from '../util/pipe';\n" +
    "import { popResultSelector } from '../util/args';\n" +
    'export function combineLatest() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var resultSelector = popResultSelector(args);\n' +
    '    return resultSelector\n' +
    '        ? pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs(resultSelector))\n' +
    '        : operate(function (source, subscriber) {\n' +
    '            combineLatestInit(__spreadArray([source], __read(argsOrArgArray(args))))(subscriber);\n' +
    '        });\n' +
    '}\n' +
    '//# sourceMappingURL=combineLatest.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { operate } from '../util/lift';\n" +
    "import { argsOrArgArray } from '../util/argsOrArgArray';\n" +
    "import { mergeAll } from './mergeAll';\n" +
    "import { popNumber, popScheduler } from '../util/args';\n" +
    "import { from } from '../observable/from';\n" +
    'export function merge() {\n' +
    '    var args = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        args[_i] = arguments[_i];\n' +
    '    }\n' +
    '    var scheduler = popScheduler(args);\n' +
    '    var concurrent = popNumber(args, Infinity);\n' +
    '    args = argsOrArgArray(args);\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        mergeAll(concurrent)(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=merge.js.map'
} [Function: logger]
____9999999____ {
  code: "import { innerFrom } from '../observable/innerFrom';\n" +
    "import { executeSchedule } from '../util/executeSchedule';\n" +
    "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n' +
    '    var buffer = [];\n' +
    '    var active = 0;\n' +
    '    var index = 0;\n' +
    '    var isComplete = false;\n' +
    '    var checkComplete = function () {\n' +
    '        if (isComplete && !buffer.length && !active) {\n' +
    '            subscriber.complete();\n' +
    '        }\n' +
    '    };\n' +
    '    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n' +
    '    var doInnerSub = function (value) {\n' +
    '        expand && subscriber.next(value);\n' +
    '        active++;\n' +
    '        var innerComplete = false;\n' +
    '        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n' +
    '            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n' +
    '            if (expand) {\n' +
    '                outerNext(innerValue);\n' +
    '            }\n' +
    '            else {\n' +
    '                subscriber.next(innerValue);\n' +
    '            }\n' +
    '        }, function () {\n' +
    '            innerComplete = true;\n' +
    '        }, undefined, function () {\n' +
    '            if (innerComplete) {\n' +
    '                try {\n' +
    '                    active--;\n' +
    '                    var _loop_1 = function () {\n' +
    '                        var bufferedValue = buffer.shift();\n' +
    '                        if (innerSubScheduler) {\n' +
    '                            executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n' +
    '                        }\n' +
    '                        else {\n' +
    '                            doInnerSub(bufferedValue);\n' +
    '                        }\n' +
    '                    };\n' +
    '                    while (buffer.length && active < concurrent) {\n' +
    '                        _loop_1();\n' +
    '                    }\n' +
    '                    checkComplete();\n' +
    '                }\n' +
    '                catch (err) {\n' +
    '                    subscriber.error(err);\n' +
    '                }\n' +
    '            }\n' +
    '        }));\n' +
    '    };\n' +
    '    source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n' +
    '        isComplete = true;\n' +
    '        checkComplete();\n' +
    '    }));\n' +
    '    return function () {\n' +
    '        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=mergeInternals.js.map'
} [Function: logger]
____9999999____ {
  code: "import { createOperatorSubscriber } from './OperatorSubscriber';\n" +
    'export function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n' +
    '    return function (source, subscriber) {\n' +
    '        var hasState = hasSeed;\n' +
    '        var state = seed;\n' +
    '        var index = 0;\n' +
    '        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n' +
    '            var i = index++;\n' +
    '            state = hasState\n' +
    '                ?\n' +
    '                    accumulator(state, value, i)\n' +
    '                :\n' +
    '                    ((hasState = true), value);\n' +
    '            emitOnNext && subscriber.next(state);\n' +
    '        }, emitBeforeComplete &&\n' +
    '            (function () {\n' +
    '                hasState && subscriber.next(state);\n' +
    '                subscriber.complete();\n' +
    '            })));\n' +
    '    };\n' +
    '}\n' +
    '//# sourceMappingURL=scanInternals.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { zip as zipStatic } from '../observable/zip';\n" +
    "import { operate } from '../util/lift';\n" +
    'export function zip() {\n' +
    '    var sources = [];\n' +
    '    for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '        sources[_i] = arguments[_i];\n' +
    '    }\n' +
    '    return operate(function (source, subscriber) {\n' +
    '        zipStatic.apply(void 0, __spreadArray([source], __read(sources))).subscribe(subscriber);\n' +
    '    });\n' +
    '}\n' +
    '//# sourceMappingURL=zip.js.map'
} [Function: logger]
____9999999____ {
  code: "export * from './API';\n" +
    "export * from './API.guard';\n" +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvLmdlbmVyYXRlZC9wYXljb2RlLXByb3h5L2NsaWVudC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLE9BQU8sQ0FBQztBQUN0QixjQUFjLGFBQWEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vQVBJJztcbmV4cG9ydCAqIGZyb20gJy4vQVBJLmd1YXJkJztcbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: "import axios from 'axios';\n" +
    "import * as API from '../.generated/paycode-proxy/client/API';\n" +
    "import * as MockAPI from './mock-api';\n" +
    'const setupApiClient = (apiUrl, headersToInject) => {\n' +
    '    const apiClient = API.getAxiosInstance();\n' +
    '    apiClient.defaults.baseURL = apiUrl;\n' +
    '    apiClient.interceptors.request.use((config) => {\n' +
    "        console.debug(8880, 'Intercepted request: ', config);\n" +
    "        if (config.method && config.method.toLowerCase() !== 'options') {\n" +
    "            if (headersToInject && typeof headersToInject == 'object') {\n" +
    '                console.debug(8882, headersToInject);\n' +
    '                Object.assign(config.headers, headersToInject);\n' +
    '            }\n' +
    '            else {\n' +
    "                throw new Error('Received invalid headersToInject', headersToInject);\n" +
    '            }\n' +
    "            if (['get', 'post', 'put', 'delete', 'patch'].includes(config.method.toLowerCase())) {\n" +
    "                config.headers['Content-Type'] = 'application/json';\n" +
    '            }\n' +
    '        }\n' +
    '        console.debug(8883, config.headers);\n' +
    '        return config;\n' +
    '    }, (error) => Promise.reject(error));\n' +
    '};\n' +
    'export const createApiAdapter = (apiUrl, headersToInject, isMock = false) => {\n' +
    '    setupApiClient(apiUrl, headersToInject);\n' +
    '    return new Proxy(API, {\n' +
    '        get(target, prop, _receiver) {\n' +
    '            const actualTarget = isMock ? MockAPI : target;\n' +
    "            if (typeof prop === 'symbol') {\n" +
    '                return Reflect.get(actualTarget, prop, _receiver);\n' +
    '            }\n' +
    '            const property = actualTarget[prop];\n' +
    "            if (typeof property === 'function') {\n" +
    '                return (...args) => {\n' +
    '                    const axiosInstance = actualTarget.getAxiosInstance\n' +
    '                        ? actualTarget.getAxiosInstance()\n' +
    '                        : axios;\n' +
    '                    const methodMatch = String(prop).match(/^(get|post|put|delete|options)(.+)/i);\n' +
    '                    if (!methodMatch) {\n' +
    '                        throw new Error(`The API method ${String(prop)} does not follow the expected naming convention.`);\n' +
    '                    }\n' +
    '                    const method = methodMatch[1].toLowerCase();\n' +
    '                    const url = `/${methodMatch[2].toLowerCase()}`;\n' +
    '                    const [paramsOrData, axiosConfig = {}] = args;\n' +
    '                    const requestConfig = {\n' +
    '                        method: method,\n' +
    '                        url: `${apiUrl}${url}`,\n' +
    "                        ...(method === 'get' || method === 'options'\n" +
    '                            ? { params: paramsOrData }\n' +
    '                            : { data: paramsOrData }),\n' +
    '                        ...axiosConfig,\n' +
    '                    };\n' +
    '                    console.debug(`Making real API call: ${method.toUpperCase()} to ${url} with config:`, requestConfig);\n' +
    '                    return axiosInstance.request(requestConfig);\n' +
    '                };\n' +
    '            }\n' +
    '            else {\n' +
    '                return property;\n' +
    '            }\n' +
    '        },\n' +
    '    });\n' +
    '};\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLWFkYXB0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGF5Y29kZS1wcm94eS9hcGktYWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLEtBQTRDLE1BQU0sT0FBTyxDQUFDO0FBQ2pFLE9BQU8sS0FBSyxHQUFHLE1BQU0sd0NBQXdDLENBQUM7QUFDOUQsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFTdEMsTUFBTSxjQUFjLEdBQUcsQ0FDckIsTUFBYyxFQUNkLGVBQXVDLEVBQ2pDLEVBQUU7SUFDUixNQUFNLFNBQVMsR0FBRyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUN6QyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFFcEMsU0FBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUVoQyxDQUFLLE1BQThELEVBQUUsRUFBRTtRQUNyRSxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSx1QkFBdUIsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNyRCxJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUMvRCxJQUFJLGVBQWUsSUFBSSxPQUFPLGVBQWUsSUFBSSxRQUFRLEVBQUUsQ0FBQztnQkFDMUQsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7Z0JBQ3JDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxlQUFlLENBQUMsQ0FBQztZQUNqRCxDQUFDO2lCQUFNLENBQUM7Z0JBQ04sTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsRUFBRSxlQUFlLENBQUMsQ0FBQztZQUN2RSxDQUFDO1lBRUQsSUFDRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQ2hELE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQzVCLEVBQ0QsQ0FBQztnQkFDRCxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxHQUFHLGtCQUFrQixDQUFDO1lBQ3RELENBQUM7UUFDSCxDQUFDO1FBQ0QsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsRUFDRCxDQUFLLEtBQVUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FDMUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBQzlCLE1BQWMsRUFDZCxlQUF1QyxFQUN2QyxNQUFNLEdBQUcsS0FBSyxFQUNkLEVBQUU7SUFDRixjQUFjLENBQUMsTUFBTSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBRXhDLE9BQU8sSUFBSSxLQUFLLENBQWEsR0FBRyxFQUFFO1FBQ2hDLEdBQUcsQ0FDRCxNQUFrQixFQUNsQixJQUF3QyxFQUN4QyxTQUFjO1lBRWQsTUFBTSxZQUFZLEdBQWUsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUUzRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRSxDQUFDO2dCQUM3QixPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztZQUNwRCxDQUFDO1lBR0QsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3BDLElBQUksT0FBTyxRQUFRLEtBQUssVUFBVSxFQUFFLENBQUM7Z0JBRW5DLE9BQU8sQ0FBQyxHQUFHLElBQVcsRUFBRSxFQUFFO29CQUN4QixNQUFNLGFBQWEsR0FBRyxZQUFZLENBQUMsZ0JBQWdCO3dCQUNqRCxDQUFDLENBQUMsWUFBWSxDQUFDLGdCQUFnQixFQUFFO3dCQUNqQyxDQUFDLENBQUMsS0FBSyxDQUFDO29CQUVWLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQ3BDLHFDQUFxQyxDQUN0QyxDQUFDO29CQUNGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQzt3QkFDakIsTUFBTSxJQUFJLEtBQUssQ0FDYixrQkFBa0IsTUFBTSxDQUFDLElBQUksQ0FBQyxrREFBa0QsQ0FDakYsQ0FBQztvQkFDSixDQUFDO29CQUVELE1BQU0sTUFBTSxHQUFJLFdBQVcsQ0FBQyxDQUFDLENBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztvQkFDeEQsTUFBTSxHQUFHLEdBQUcsSUFBSyxXQUFXLENBQUMsQ0FBQyxDQUFZLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztvQkFDM0QsTUFBTSxDQUFDLFlBQVksRUFBRSxXQUFXLEdBQUcsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO29CQUU5QyxNQUFNLGFBQWEsR0FBdUI7d0JBQ3hDLE1BQU0sRUFBRSxNQUFzQzt3QkFDOUMsR0FBRyxFQUFFLEdBQUcsTUFBTSxHQUFHLEdBQUcsRUFBRTt3QkFDdEIsR0FBRyxDQUFDLE1BQU0sS0FBSyxLQUFLLElBQUksTUFBTSxLQUFLLFNBQVM7NEJBQzFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUU7NEJBQzFCLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsQ0FBQzt3QkFDM0IsR0FBRyxXQUFXO3FCQUNmLENBQUM7b0JBRUYsT0FBTyxDQUFDLEtBQUssQ0FDWCx5QkFBeUIsTUFBTSxDQUFDLFdBQVcsRUFBRSxPQUFPLEdBQUcsZUFBZSxFQUN0RSxhQUFhLENBQ2QsQ0FBQztvQkFDRixPQUFPLGFBQWEsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7Z0JBQzlDLENBQUMsQ0FBQztZQUNKLENBQUM7aUJBQU0sQ0FBQztnQkFFTixPQUFPLFFBQVEsQ0FBQztZQUNsQixDQUFDO1FBQ0gsQ0FBQztLQUNGLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtY2FsbCAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm4gKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXNzaWdubWVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuaW1wb3J0IGF4aW9zLCB7IEF4aW9zUmVxdWVzdENvbmZpZywgQXhpb3NSZXNwb25zZSB9IGZyb20gJ2F4aW9zJztcbmltcG9ydCAqIGFzIEFQSSBmcm9tICcuLi8uZ2VuZXJhdGVkL3BheWNvZGUtcHJveHkvY2xpZW50L0FQSSc7XG5pbXBvcnQgKiBhcyBNb2NrQVBJIGZyb20gJy4vbW9jay1hcGknO1xuXG50eXBlIEFwaVJlc3BvbnNlID0gdm9pZCB8IEF4aW9zUmVzcG9uc2U8YW55PjtcblxuZXhwb3J0IGludGVyZmFjZSBBcGlNZXRob2RzIHtcbiAgW2tleTogc3RyaW5nXTogYW55O1xuICBnZXRBeGlvc0luc3RhbmNlPzogKCkgPT4gdHlwZW9mIGF4aW9zO1xufVxuXG5jb25zdCBzZXR1cEFwaUNsaWVudCA9IChcbiAgYXBpVXJsOiBzdHJpbmcsXG4gIGhlYWRlcnNUb0luamVjdDogUmVjb3JkPHN0cmluZywgc3RyaW5nPixcbik6IHZvaWQgPT4ge1xuICBjb25zdCBhcGlDbGllbnQgPSBBUEkuZ2V0QXhpb3NJbnN0YW5jZSgpO1xuICBhcGlDbGllbnQuZGVmYXVsdHMuYmFzZVVSTCA9IGFwaVVybDtcblxuICBhcGlDbGllbnQuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKFxuICAgIC8vQHRzLWV4cGVjdC1lcnJvciBpdCdzIG5vdCBhbiBlcnJvclxuICAgICggICAgY29uZmlnOiB7IG1ldGhvZDogc3RyaW5nOyBoZWFkZXJzOiB7IFt4OiBzdHJpbmddOiBzdHJpbmc7IH07IH0pID0+IHtcbiAgICAgIGNvbnNvbGUuZGVidWcoODg4MCwgJ0ludGVyY2VwdGVkIHJlcXVlc3Q6ICcsIGNvbmZpZyk7XG4gICAgICBpZiAoY29uZmlnLm1ldGhvZCAmJiBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCkgIT09ICdvcHRpb25zJykge1xuICAgICAgICBpZiAoaGVhZGVyc1RvSW5qZWN0ICYmIHR5cGVvZiBoZWFkZXJzVG9JbmplY3QgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICBjb25zb2xlLmRlYnVnKDg4ODIsIGhlYWRlcnNUb0luamVjdCk7XG4gICAgICAgICAgT2JqZWN0LmFzc2lnbihjb25maWcuaGVhZGVycywgaGVhZGVyc1RvSW5qZWN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlY2VpdmVkIGludmFsaWQgaGVhZGVyc1RvSW5qZWN0JywgaGVhZGVyc1RvSW5qZWN0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICBbJ2dldCcsICdwb3N0JywgJ3B1dCcsICdkZWxldGUnLCAncGF0Y2gnXS5pbmNsdWRlcyhcbiAgICAgICAgICAgIGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIGNvbmZpZy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc29sZS5kZWJ1Zyg4ODgzLCBjb25maWcuaGVhZGVycyk7XG4gICAgICByZXR1cm4gY29uZmlnO1xuICAgIH0sXG4gICAgKCAgICBlcnJvcjogYW55KSA9PiBQcm9taXNlLnJlamVjdChlcnJvciksXG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQXBpQWRhcHRlciA9IChcbiAgYXBpVXJsOiBzdHJpbmcsXG4gIGhlYWRlcnNUb0luamVjdDogUmVjb3JkPHN0cmluZywgc3RyaW5nPixcbiAgaXNNb2NrID0gZmFsc2UsXG4pID0+IHtcbiAgc2V0dXBBcGlDbGllbnQoYXBpVXJsLCBoZWFkZXJzVG9JbmplY3QpO1xuXG4gIHJldHVybiBuZXcgUHJveHk8QXBpTWV0aG9kcz4oQVBJLCB7XG4gICAgZ2V0KFxuICAgICAgdGFyZ2V0OiBBcGlNZXRob2RzLFxuICAgICAgcHJvcDoga2V5b2YgQXBpTWV0aG9kcyB8IHN0cmluZyB8IHN5bWJvbCxcbiAgICAgIF9yZWNlaXZlcjogYW55LFxuICAgICk6ICguLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTxBcGlSZXNwb25zZT4ge1xuICAgICAgY29uc3QgYWN0dWFsVGFyZ2V0OiBBcGlNZXRob2RzID0gaXNNb2NrID8gTW9ja0FQSSA6IHRhcmdldDtcblxuICAgICAgaWYgKHR5cGVvZiBwcm9wID09PSAnc3ltYm9sJykge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5nZXQoYWN0dWFsVGFyZ2V0LCBwcm9wLCBfcmVjZWl2ZXIpO1xuICAgICAgfVxuXG4gICAgICAvLyBUaGUgcHJvcGVydHkgbWlnaHQgYmUgYSBmdW5jdGlvbiBvciBzb21ldGhpbmcgZWxzZSAobGlrZSBhIHZhbHVlKVxuICAgICAgY29uc3QgcHJvcGVydHkgPSBhY3R1YWxUYXJnZXRbcHJvcF07XG4gICAgICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIEVuc3VyZSBmdW5jdGlvbiBwcm9wZXJ0aWVzIGFyZSBjYWxsZWQgd2l0aCB0aGUgY29ycmVjdCBjb250ZXh0XG4gICAgICAgIHJldHVybiAoLi4uYXJnczogYW55W10p'... 1856 more characters
} [Function: logger]
____9999999____ {
  code: "import './polyfills';\n" +
    "import { CognitoUserPool, } from 'amazon-cognito-identity-js';\n" +
    'export const getCurrentUserToken = (awsUserPoolId, awsUserPoolsWebClientId) => {\n' +
    '    const userPool = new CognitoUserPool({\n' +
    '        UserPoolId: awsUserPoolId,\n' +
    '        ClientId: awsUserPoolsWebClientId,\n' +
    '    });\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        const currentUser = userPool.getCurrentUser();\n' +
    '        if (currentUser != null) {\n' +
    '            currentUser.getSession((err, session) => {\n' +
    '                if (err) {\n' +
    '                    reject(err);\n' +
    '                    return;\n' +
    '                }\n' +
    '                const idToken = session?.getIdToken().getJwtToken();\n' +
    '                console.log(77828, idToken);\n' +
    '                resolve(idToken);\n' +
    '            });\n' +
    '        }\n' +
    '        else {\n' +
    "            reject('No current user');\n" +
    '        }\n' +
    '    });\n' +
    '};\n' +
    'export const getCognitoAuthHeader = async (awsUserPoolId, awsUserPoolsWebClientId) => {\n' +
    '    try {\n' +
    '        const token = await getCurrentUserToken(awsUserPoolId, awsUserPoolsWebClientId);\n' +
    '        return { Authorization: `Bearer ${token}` };\n' +
    '    }\n' +
    '    catch (error) {\n' +
    '        throw new Error(`Error getting user token: ${error}`);\n' +
    '    }\n' +
    '};\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxhQUFhLENBQUM7QUFDckIsT0FBTyxFQUNMLGVBQWUsR0FFaEIsTUFBTSw0QkFBNEIsQ0FBQztBQUVwQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUNqQyxhQUFxQixFQUNyQix1QkFBK0IsRUFDRixFQUFFO0lBRS9CLE1BQU0sUUFBUSxHQUFHLElBQUksZUFBZSxDQUFDO1FBQ25DLFVBQVUsRUFBRSxhQUFhO1FBQ3pCLFFBQVEsRUFBRSx1QkFBdUI7S0FDbEMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUNyQyxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDOUMsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFLENBQUM7WUFDeEIsV0FBVyxDQUFDLFVBQVUsQ0FDcEIsQ0FBQyxHQUFVLEVBQUUsT0FBa0MsRUFBRSxFQUFFO2dCQUNqRCxJQUFJLEdBQUcsRUFBRSxDQUFDO29CQUNSLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDWixPQUFPO2dCQUNULENBQUM7Z0JBQ0QsTUFBTSxPQUFPLEdBQUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO2dCQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQTtnQkFDM0IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ25CLENBQUMsQ0FDRixDQUFDO1FBQ0osQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUM1QixDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFHRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxLQUFLLEVBQ3ZDLGFBQXFCLEVBQ3JCLHVCQUErQixFQUNFLEVBQUU7SUFDbkMsSUFBSSxDQUFDO1FBQ0gsTUFBTSxLQUFLLEdBQUcsTUFBTSxtQkFBbUIsQ0FDckMsYUFBYSxFQUNiLHVCQUF1QixDQUN4QixDQUFDO1FBQ0YsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEtBQUssRUFBRSxFQUFFLENBQUM7SUFDOUMsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELENBQUM7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vcG9seWZpbGxzJztcbmltcG9ydCB7XG4gIENvZ25pdG9Vc2VyUG9vbCxcbiAgQ29nbml0b1VzZXJTZXNzaW9uLFxufSBmcm9tICdhbWF6b24tY29nbml0by1pZGVudGl0eS1qcyc7XG5cbmV4cG9ydCBjb25zdCBnZXRDdXJyZW50VXNlclRva2VuID0gKFxuICBhd3NVc2VyUG9vbElkOiBzdHJpbmcsXG4gIGF3c1VzZXJQb29sc1dlYkNsaWVudElkOiBzdHJpbmcsXG4pOiBQcm9taXNlPHN0cmluZyB8IHVuZGVmaW5lZD4gPT4ge1xuXG4gIGNvbnN0IHVzZXJQb29sID0gbmV3IENvZ25pdG9Vc2VyUG9vbCh7XG4gICAgVXNlclBvb2xJZDogYXdzVXNlclBvb2xJZCxcbiAgICBDbGllbnRJZDogYXdzVXNlclBvb2xzV2ViQ2xpZW50SWQsXG4gIH0pO1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY3VycmVudFVzZXIgPSB1c2VyUG9vbC5nZXRDdXJyZW50VXNlcigpO1xuICAgIGlmIChjdXJyZW50VXNlciAhPSBudWxsKSB7XG4gICAgICBjdXJyZW50VXNlci5nZXRTZXNzaW9uKFxuICAgICAgICAoZXJyOiBFcnJvciwgc2Vzc2lvbjogQ29nbml0b1VzZXJTZXNzaW9uIHwgbnVsbCkgPT4ge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBpZFRva2VuID0gc2Vzc2lvbj8uZ2V0SWRUb2tlbigpLmdldEp3dFRva2VuKCk7XG4gICAgICAgICAgY29uc29sZS5sb2coNzc4MjgsIGlkVG9rZW4pXG4gICAgICAgICAgcmVzb2x2ZShpZFRva2VuKTtcbiAgICAgICAgfSxcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlamVjdCgnTm8gY3VycmVudCB1c2VyJyk7XG4gICAgfVxuICB9KTtcbn07XG5cbi8vIE5ldyBmdW5jdGlvbiB0byBpbmplY3QgdG9rZW4gaW50byBoZWFkZXJzXG5leHBvcnQgY29uc3QgZ2V0Q29nbml0b0F1dGhIZWFkZXIgPSBhc3luYyAoXG4gIGF3c1VzZXJQb29sSWQ6IHN0cmluZyxcbiAgYXdzVXNlclBvb2xzV2ViQ2xpZW50SWQ6IHN0cmluZyxcbik6IFByb21pc2U8UmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgZ2V0Q3VycmVudFVzZXJUb2tlbihcbiAgICAgIGF3c1VzZXJQb29sSWQsXG4gICAgICBhd3NVc2VyUG9vbHNXZWJDbGllbnRJZCxcbiAgICApO1xuICAgIHJldHVybiB7IEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBnZXR0aW5nIHVzZXIgdG9rZW46ICR7ZXJyb3J9YCk7XG4gIH1cbn07XG4iXX0='
} [Function: logger]
____9999999____ {
  code: "import { AuthError } from '../../../../../errors/AuthError.mjs';\n" +
    "import { textEncoder } from '../../textEncoder/index.mjs';\n" +
    "import BigInteger from '../BigInteger/BigInteger.mjs';\n" +
    "import { calculateS } from '../calculate/calculateS.mjs';\n" +
    "import { calculateU } from '../calculate/calculateU.mjs';\n" +
    "import { getBytesFromHex } from '../getBytesFromHex.mjs';\n" +
    "import { getHashFromData } from '../getHashFromData.mjs';\n" +
    "import { getHashFromHex } from '../getHashFromHex.mjs';\n" +
    "import { getHexFromBytes } from '../getHexFromBytes.mjs';\n" +
    "import { getHkdfKey } from '../getHkdfKey.mjs';\n" +
    "import { getPaddedHex } from '../getPaddedHex.mjs';\n" +
    "import { getRandomBytes } from '../getRandomBytes.mjs';\n" +
    "import { getRandomString } from '../getRandomString.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/** @class */\n' +
    'class AuthenticationHelper {\n' +
    '    constructor({ userPoolName, a, g, A, N, }) {\n' +
    '        this.encoder = textEncoder;\n' +
    '        this.userPoolName = userPoolName;\n' +
    '        this.a = a;\n' +
    '        this.g = g;\n' +
    '        this.A = A;\n' +
    '        this.N = N;\n' +
    '        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n' +
    '    }\n' +
    '    /**\n' +
    '     * @returns {string} Generated random value included in password hash.\n' +
    '     */\n' +
    '    getRandomPassword() {\n' +
    '        if (!this.randomPassword) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'EmptyBigIntegerRandomPassword',\n" +
    "                message: 'random password is empty',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.randomPassword;\n' +
    '    }\n' +
    '    /**\n' +
    '     * @returns {string} Generated random value included in devices hash.\n' +
    '     */\n' +
    '    getSaltToHashDevices() {\n' +
    '        if (!this.saltToHashDevices) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'EmptyBigIntegersaltToHashDevices',\n" +
    "                message: 'saltToHashDevices is empty',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.saltToHashDevices;\n' +
    '    }\n' +
    '    /**\n' +
    '     * @returns {string} Value used to verify devices.\n' +
    '     */\n' +
    '    getVerifierDevices() {\n' +
    '        if (!this.verifierDevices) {\n' +
    '            throw new AuthError({\n' +
    "                name: 'EmptyBigIntegerVerifierDevices',\n" +
    "                message: 'verifyDevices is empty',\n" +
    '            });\n' +
    '        }\n' +
    '        return this.verifierDevices;\n' +
    '    }\n' +
    '    /**\n' +
    '     * Generate salts and compute verifier.\n' +
    '     *\n' +
    '     * @param {string} deviceGroupKey Devices to generate verifier for.\n' +
    '     * @param {string} username User to generate verifier for.\n' +
    '     *\n' +
    '     * @returns {Promise<void>}\n' +
    '     */\n' +
    '    async generateHashDevice(deviceGroupKey, username) {\n' +
    '        this.randomPassword = getRandomString();\n' +
    '        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n' +
    '        const hashedString = getHashFromData(combinedString);\n' +
    '        const hexRandom = getHexFromBytes(getRandomBytes(16));\n' +
    '        // The random hex will be unambiguously represented as a postive integer\n' +
    '        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n' +
    '        return new Promise((resolve, reject) => {\n' +
    '            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n' +
    '                if (err) {\n' +
    '                    reject(err);\n' +
    '                    return;\n' +
    '                }\n' +
    '                this.verifierDevices = getPaddedHex(result);\n' +
    '                resolve();\n' +
    '            });\n' +
    '        });\n' +
    '    }\n' +
    '    /**\n' +
    '     * Calculates the final HKDF key based on computed S value, computed U value and the key\n' +
    '     *\n' +
    '     * @param {String} username Username.\n' +
    '     * @param {String} password Password.\n' +
    '     * @param {AuthBigInteger} B Server B value.\n' +
    '     * @param {AuthBigInteger} salt Generated salt.\n' +
    '     */\n' +
    '    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n' +
    '        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n' +
    "            throw new Error('B cannot be zero.');\n" +
    '        }\n' +
    '        const U = calculateU({\n' +
    '            A: this.A,\n' +
    '            B: serverBValue,\n' +
    '        });\n' +
    '        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n' +
    '        const usernamePasswordHash = getHashFromData(usernamePassword);\n' +
    '        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n' +
    '        const S = await calculateS({\n' +
    '            a: this.a,\n' +
    '            g: this.g,\n' +
    '            k: this.k,\n' +
    '            x,\n' +
    '            B: serverBValue,\n' +
    '            N: this.N,\n' +
    '            U,\n' +
    '        });\n' +
    "        const context = this.encoder.convert('Caldera Derived Key');\n" +
    '        const spacer = this.encoder.convert(String.fromCharCode(1));\n' +
    '        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n' +
    '        info.set(context, 0);\n' +
    '        info.set(spacer, context.byteLength);\n' +
    '        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n' +
    '        return hkdfKey;\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { AuthenticationHelper as default };\n' +
    '//# sourceMappingURL=AuthenticationHelper.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import BigInteger from '../BigInteger/BigInteger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const calculateA = async ({ a, g, N, }) => {\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        g.modPow(a, N, (err, A) => {\n' +
    '            if (err) {\n' +
    '                reject(err);\n' +
    '                return;\n' +
    '            }\n' +
    '            if (A.mod(N).equals(BigInteger.ZERO)) {\n' +
    "                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n" +
    '                return;\n' +
    '            }\n' +
    '            resolve(A);\n' +
    '        });\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { calculateA };\n' +
    '//# sourceMappingURL=calculateA.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { SHORT_TO_HEX } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n' +
    ' *\n' +
    ' * @param bytes The binary data to encode\n' +
    ' */\n' +
    'const getHexFromBytes = (bytes) => {\n' +
    "    let out = '';\n" +
    '    for (let i = 0; i < bytes.byteLength; i++) {\n' +
    '        out += SHORT_TO_HEX[bytes[i]];\n' +
    '    }\n' +
    '    return out;\n' +
    '};\n' +
    '\n' +
    'export { getHexFromBytes };\n' +
    '//# sourceMappingURL=getHexFromBytes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n" +
    "    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n" +
    "    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n" +
    "    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n" +
    "    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n" +
    "    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n" +
    "    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n" +
    "    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n" +
    "    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n" +
    "    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n" +
    "    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n" +
    "    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n" +
    "    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n" +
    "    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n" +
    "    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n" +
    "    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n" +
    'const SHORT_TO_HEX = {};\n' +
    'const HEX_TO_SHORT = {};\n' +
    'for (let i = 0; i < 256; i++) {\n' +
    '    let encodedByte = i.toString(16).toLowerCase();\n' +
    '    if (encodedByte.length === 1) {\n' +
    '        encodedByte = `0${encodedByte}`;\n' +
    '    }\n' +
    '    SHORT_TO_HEX[i] = encodedByte;\n' +
    '    HEX_TO_SHORT[encodedByte] = i;\n' +
    '}\n' +
    '\n' +
    'export { HEX_TO_SHORT, INIT_N, SHORT_TO_HEX };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { getBytesFromHex } from './getBytesFromHex.mjs';\n" +
    "import { WordArray } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a Uint8Array with a sequence of random nBytes\n' +
    ' *\n' +
    ' * @param {number} nBytes\n' +
    ' * @returns {Uint8Array} fixed-length sequence of random bytes\n' +
    ' */\n' +
    'const getRandomBytes = (nBytes) => {\n' +
    '    const str = new WordArray().random(nBytes).toString();\n' +
    '    return getBytesFromHex(str);\n' +
    '};\n' +
    '\n' +
    'export { getRandomBytes };\n' +
    '//# sourceMappingURL=getRandomBytes.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\n" +
    "import { getHashedDataAsHex } from './dataHashHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns the hashed payload.\n' +
    ' *\n' +
    ' * @param body `body` (payload) from the request.\n' +
    ' * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n' +
    ' * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getHashedPayload = (body) => {\n' +
    '    // return precalculated empty hash if body is undefined or null\n' +
    '    if (body == null) {\n' +
    '        return EMPTY_HASH;\n' +
    '    }\n' +
    '    if (isSourceData(body)) {\n' +
    '        const hashedData = getHashedDataAsHex(null, body);\n' +
    '        return hashedData;\n' +
    '    }\n' +
    '    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n' +
    '    return UNSIGNED_PAYLOAD;\n' +
    '};\n' +
    "const isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\n" +
    "const isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n" +
    "    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n" +
    '\n' +
    'export { getHashedPayload };\n' +
    '//# sourceMappingURL=getHashedPayload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { signRequest } from './signer/signatureV4/signRequest.mjs';\n" +
    "import '@aws-crypto/sha256-js';\n" +
    "import '@smithy/util-hex-encoding';\n" +
    "import { getSkewCorrectedDate } from './utils/getSkewCorrectedDate.mjs';\n" +
    "import { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n' +
    ' * This middleware is expected to be placed after retry middleware.\n' +
    ' */\n' +
    'const signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n' +
    '    let currentSystemClockOffset;\n' +
    '    return (next) => async function signingMiddleware(request) {\n' +
    '        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n' +
    '        const signRequestOptions = {\n' +
    "            credentials: typeof credentials === 'function' ? await credentials() : credentials,\n" +
    '            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n' +
    '            signingRegion: region,\n' +
    '            signingService: service,\n' +
    '            uriEscapePath,\n' +
    '        };\n' +
    '        const signedRequest = await signRequest(request, signRequestOptions);\n' +
    '        const response = await next(signedRequest);\n' +
    '        // Update system clock offset if response contains date header, regardless of the status code.\n' +
    "        // non-2xx response will still be returned from next handler instead of thrown, because it's\n" +
    '        // only thrown by the retry middleware.\n' +
    '        const dateString = getDateHeader(response);\n' +
    '        if (dateString) {\n' +
    '            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n' +
    '        }\n' +
    '        return response;\n' +
    '    };\n' +
    '};\n' +
    "const getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n" +
    '\n' +
    'export { signingMiddlewareFactory };\n' +
    '//# sourceMappingURL=middleware.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Cache the payload of a response body. It allows multiple calls to the body,\n' +
    ' * for example, when reading the body in both retry decider and error deserializer.\n' +
    ' * Caching body is allowed here because we call the body accessor(blob(), json(),\n' +
    ' * etc.) when body is small or streaming implementation is not available(RN).\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const withMemoization = (payloadAccessor) => {\n' +
    '    let cached;\n' +
    '    return () => {\n' +
    '        if (!cached) {\n' +
    '            // Explicitly not awaiting. Intermediate await would add overhead and\n' +
    '            // introduce a possible race in the event that this wrapper is called\n' +
    '            // again before the first `payloadAccessor` call resolves.\n' +
    '            cached = payloadAccessor();\n' +
    '        }\n' +
    '        return cached;\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { withMemoization };\n' +
    '//# sourceMappingURL=memoization.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const textEncoder = {\n' +
    '    convert(input) {\n' +
    '        return new TextEncoder().encode(input);\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { textEncoder };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "export { uploadData } from './providers/s3/apis/uploadData/index.mjs';\n" +
    "export { downloadData } from './providers/s3/apis/downloadData.mjs';\n" +
    "export { remove } from './providers/s3/apis/remove.mjs';\n" +
    "export { list } from './providers/s3/apis/list.mjs';\n" +
    "export { getProperties } from './providers/s3/apis/getProperties.mjs';\n" +
    "export { copy } from './providers/s3/apis/copy.mjs';\n" +
    "export { getUrl } from './providers/s3/apis/getUrl.mjs';\n" +
    "export { isCancelError } from './errors/CanceledError.mjs';\n" +
    "export { StorageError } from './errors/StorageError.mjs';\n" +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { translate } from '@aws-amplify/ui';\n" +
    "import { View } from '../../primitives/View/View.mjs';\n" +
    "import { Text } from '../../primitives/Text/Text.mjs';\n" +
    '\n' +
    'const ValidationErrors = ({ errors, id, dataAttr, }) => {\n' +
    '    if (!(errors?.length > 0))\n' +
    '        return null;\n' +
    '    const dataAttrProp = dataAttr ? { [dataAttr]: true } : {};\n' +
    '    return (React__default.createElement(View, { ...dataAttrProp, id: id }, errors.map((error) => {\n' +
    '        return (React__default.createElement(Text, { key: error, role: "alert", variation: "error" }, translate(error)));\n' +
    '    })));\n' +
    '};\n' +
    '\n' +
    'export { ValidationErrors };\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    "const ChangeCase = require('change-case')\n" +
    '\n' +
    'const reduce = function(obj, f, accumulator_init) {\n' +
    '  return Object.keys(obj || {}).reduce((accumulator, key) => {\n' +
    '    let value = obj[key]\n' +
    '    return f(accumulator, value, key, obj)\n' +
    '  }, accumulator_init)\n' +
    '}\n' +
    '\n' +
    'const forEach = function(obj, f) {\n' +
    '  Object.keys(obj || {}).forEach((key) => {\n' +
    '    let value = obj[key]\n' +
    '    f(value, key)\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    "// Note: This is a crappy version to a certain extent... don't use with Strings, for example...\n" +
    'const clone = function(object) {\n' +
    '  return Object.assign(new object.constructor(), object)\n' +
    '}\n' +
    '\n' +
    'const cloneDeep = function(obj) {\n' +
    "  if(obj === null || obj === undefined || typeof obj !== 'object') {\n" +
    '    return obj\n' +
    '  }\n' +
    '\n' +
    '  if(obj instanceof Array) {\n' +
    '    return obj.reduce((arr, item, i) => {\n' +
    '      arr[i] = cloneDeep(item)\n' +
    '      return arr\n' +
    '    }, [])\n' +
    '  }\n' +
    '\n' +
    '  if(obj instanceof Object) {\n' +
    '    return Object.keys(obj || {}).reduce((cpObj, key) => {\n' +
    '      cpObj[key] = cloneDeep(obj[key])\n' +
    '      return cpObj\n' +
    '    }, {})\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'const isObject = function(value) {\n' +
    '  const type = typeof value\n' +
    "  return value != null && (type === 'object' || type === 'function')\n" +
    '}\n' +
    '\n' +
    'const isString = function(obj) {\n' +
    "  return typeof obj === 'string' || obj instanceof String\n" +
    '}\n' +
    '\n' +
    'const isArray = function(obj) {\n' +
    '  return Array.isArray(obj)\n' +
    '}\n' +
    '\n' +
    'const isEmpty = function(obj) {\n' +
    '  return [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length\n' +
    '}\n' +
    '\n' +
    'function isPlainObject(value) {\n' +
    "  if (typeof value !== 'object' || value === null || Object.prototype.toString.call(value) !== '[object Object]') {\n" +
    '    return false\n' +
    '  }\n' +
    '  if (Object.getPrototypeOf(value) === null) {\n' +
    '    return true\n' +
    '  }\n' +
    '  let proto = value\n' +
    '  while (Object.getPrototypeOf(proto) !== null) {\n' +
    '    proto = Object.getPrototypeOf(proto)\n' +
    '  }\n' +
    '  return Object.getPrototypeOf(value) === proto\n' +
    '}\n' +
    '\n' +
    'const filter = function (arr, filter) {\n' +
    "  if (typeof(filter) !== 'function') {\n" +
    '    throw("filter is not a function")\n' +
    '  }\n' +
    "  if (typeof arr === 'undefined') {\n" +
    '    return []\n' +
    '  }\n' +
    '  return arr.filter(filter)\n' +
    '}\n' +
    '\n' +
    'const assign = function () {\n' +
    '  let args = Array.prototype.slice.call(arguments)\n' +
    '  args.unshift({})\n' +
    '  return Object.assign(...args)\n' +
    '}\n' +
    '\n' +
    '/* global Set */\n' +
    'const pull = function (arr, ...removeList){\n' +
    '  var removeSet = new Set(removeList)\n' +
    '  for (let i=arr.length-1;i>=0;i--) {\n' +
    '      if (removeSet.has(arr[i])) {\n' +
    '        arr.splice(i, 1)\n' +
    '      }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'const unique = function (arr){\n' +
    '  return [...new Set(arr)]\n' +
    '}\n' +
    '\n' +
    'const upperFirst = function (str) {\n' +
    "  return str ? str[0].toUpperCase() + str.substr(1) : ''\n" +
    '}\n' +
    '\n' +
    'const matchFn = function(inputObj, testObj) {\n' +
    '  if (isObject(testObj)) {\n' +
    '    return Object.keys(testObj).every((key) => matchFn(inputObj[key], testObj[key]))\n' +
    '  }\n' +
    '  else {\n' +
    '    return inputObj == testObj\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'const matches = function (matchObj) {\n' +
    '  let cloneObj = cloneDeep(matchObj)\n' +
    '  let matchesFn = (inputObj) => matchFn(inputObj, cloneObj)\n' +
    '  return matchesFn\n' +
    '}\n' +
    '\n' +
    'const DEFAULT_OPTIONS = {\n' +
    '  transform: ChangeCase.camelCaseTransformMerge\n' +
    '}\n' +
    'const changeDefaultCaseTransform = function (caseFunction, default_options) {\n' +
    '  return (caseToChange, options) => caseFunction(caseToChange, Object.assign({}, DEFAULT_OPTIONS, default_options, options))\n' +
    '}\n' +
    '\n' +
    'module.exports = {\n' +
    '  each: forEach,\n' +
    '  forEach: forEach,\n' +
    '  forIn: forEach,\n' +
    '  keys: Object.keys,\n' +
    '  clone: clone,\n' +
    '  cloneDeep: cloneDeep,\n' +
    '  extend: Object.assign,\n' +
    '  isString: isString,\n' +
    '  isArray: isArray,\n' +
    '  isObject: isObject,\n' +
    '  isPlainObject: isPlainObject,\n' +
    '  isEmpty: isEmpty,\n' +
    '  filter: filter,\n' +
    '  reduce: reduce,\n' +
    '  assign: assign,\n' +
    '  upperFirst: upperFirst,\n' +
    '  camelCase: changeDefaultCaseTransform(ChangeCase.camelCase),\n' +
    '  snakeCase: ChangeCase.snakeCase,\n' +
    '  kebabCase: ChangeCase.paramCase,\n' +
    '  pull: pull,\n' +
    '  matches: matches,\n' +
    '  unique: unique,\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.isEqual` which supports partial comparisons\n' +
    ' * and tracks traversed objects.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to compare.\n' +
    ' * @param {*} other The other value to compare.\n' +
    ' * @param {boolean} bitmask The bitmask flags.\n' +
    ' *  1 - Unordered comparison\n' +
    ' *  2 - Partial comparison\n' +
    ' * @param {Function} [customizer] The function to customize comparisons.\n' +
    ' * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n' +
    ' * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n' +
    ' */\n' +
    'function baseIsEqual(value, other, bitmask, customizer, stack) {\n' +
    '  if (value === other) {\n' +
    '    return true;\n' +
    '  }\n' +
    '  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n' +
    '    return value !== value && other !== other;\n' +
    '  }\n' +
    '  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsEqual;\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { Alert } from '../../../primitives/Alert/Alert.mjs';\n" +
    "import '../../../primitives/Autocomplete/Autocomplete.mjs';\n" +
    "import '../../../primitives/Badge/Badge.mjs';\n" +
    "import '../../../primitives/Breadcrumbs/Breadcrumbs.mjs';\n" +
    "import '../../../primitives/Button/Button.mjs';\n" +
    "import '../../../primitives/ButtonGroup/ButtonGroup.mjs';\n" +
    "import '../../../primitives/Card/Card.mjs';\n" +
    "import '../../../primitives/CheckboxField/CheckboxField.mjs';\n" +
    "import '../../../primitives/Collection/Collection.mjs';\n" +
    "import '../../../primitives/Divider/Divider.mjs';\n" +
    "import '../../../primitives/DropZone/DropZone.mjs';\n" +
    "import '../../../primitives/Accordion/Accordion.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIcon.mjs';\n" +
    "import '../../../primitives/FieldGroupIcon/FieldGroupIconButton.mjs';\n" +
    "import '../../../primitives/Fieldset/Fieldset.mjs';\n" +
    "import '../../../primitives/Fieldset/useFieldset.mjs';\n" +
    "import '../../../primitives/Flex/Flex.mjs';\n" +
    "import '../../../primitives/Grid/Grid.mjs';\n" +
    "import '../../../primitives/Heading/Heading.mjs';\n" +
    "import '../../../primitives/HighlightMatch/HighlightMatch.mjs';\n" +
    "import '../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../primitives/View/View.mjs';\n" +
    "import '../../../primitives/Image/Image.mjs';\n" +
    "import '../../../primitives/Input/Input.mjs';\n" +
    "import '../../../primitives/Label/Label.mjs';\n" +
    "import '../../../primitives/Link/Link.mjs';\n" +
    "import '../../../primitives/Loader/Loader.mjs';\n" +
    "import '../../../primitives/Menu/Menu.mjs';\n" +
    "import '../../../primitives/Menu/MenuButton.mjs';\n" +
    "import '../../../primitives/Menu/MenuItem.mjs';\n" +
    "import '../../../primitives/Message/Message.mjs';\n" +
    "import '../../../primitives/Pagination/Pagination.mjs';\n" +
    "import '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import '../../../primitives/Placeholder/Placeholder.mjs';\n" +
    "import '../../../primitives/Radio/Radio.mjs';\n" +
    "import '../../../primitives/RadioGroupField/RadioGroupField.mjs';\n" +
    "import '../../../primitives/Rating/Rating.mjs';\n" +
    "import '../../../primitives/ScrollView/ScrollView.mjs';\n" +
    "import '../../../primitives/SearchField/SearchField.mjs';\n" +
    "import '../../../primitives/SelectField/SelectField.mjs';\n" +
    "import '../../../primitives/SliderField/SliderField.mjs';\n" +
    "import '../../../primitives/StepperField/StepperField.mjs';\n" +
    "import '../../../primitives/SwitchField/SwitchField.mjs';\n" +
    "import '../../../primitives/Table/Table.mjs';\n" +
    "import '../../../primitives/Table/TableBody.mjs';\n" +
    "import '../../../primitives/Table/TableCell.mjs';\n" +
    "import '../../../primitives/Table/TableFoot.mjs';\n" +
    "import '../../../primitives/Table/TableHead.mjs';\n" +
    "import '../../../primitives/Table/TableRow.mjs';\n" +
    "import '../../../primitives/Tabs/Tabs.mjs';\n" +
    "import '../../../primitives/Text/Text.mjs';\n" +
    "import '../../../primitives/TextAreaField/TextAreaField.mjs';\n" +
    "import '../../../primitives/TextField/TextField.mjs';\n" +
    "import '../../../primitives/ToggleButton/ToggleButton.mjs';\n" +
    "import '../../../primitives/ToggleButtonGroup/ToggleButtonGroup.mjs';\n" +
    "import '../../../primitives/VisuallyHidden/VisuallyHidden.mjs';\n" +
    '\n' +
    'const DefaultErrorMessage = (props) => {\n' +
    '    return React__default.createElement(Alert, { variation: "error", ...props });\n' +
    '};\n' +
    '\n' +
    'export { DefaultErrorMessage };\n'
} [Function: logger]
____9999999____ {
  code: 'const enDict = {\n' +
    "    'Account recovery requires verified contact information': 'Account recovery requires verified contact information',\n" +
    "    'Add your Profile': 'Add your Profile',\n" +
    "    'Add your Website': 'Add your Website',\n" +
    "    'Back to Sign In': 'Back to Sign In',\n" +
    "    'Change Password': 'Change Password',\n" +
    "    Changing: 'Changing',\n" +
    "    Code: 'Code',\n" +
    "    'Confirm Password': 'Confirm Password',\n" +
    "    'Confirm Sign Up': 'Confirm Sign Up',\n" +
    "    'Confirm SMS Code': 'Confirm SMS Code',\n" +
    "    'Confirm TOTP Code': 'Confirm TOTP Code',\n" +
    "    Confirm: 'Confirm',\n" +
    "    'Confirmation Code': 'Confirmation Code',\n" +
    "    Confirming: 'Confirming',\n" +
    "    'Create a new account': 'Create a new account',\n" +
    "    'Create Account': 'Create Account',\n" +
    "    'Creating Account': 'Creating Account',\n" +
    "    'Dismiss alert': 'Dismiss alert',\n" +
    "    Email: 'Email',\n" +
    "    'Enter your Birthdate': 'Enter your Birthdate',\n" +
    "    'Enter your code': 'Enter your code',\n" +
    "    'Enter your Confirmation Code': 'Enter your Confirmation Code',\n" +
    "    'Enter your Email': 'Enter your Email',\n" +
    "    'Enter your Family Name': 'Enter your Family Name',\n" +
    "    'Enter your Given Name': 'Enter your Given Name',\n" +
    "    'Enter your Middle Name': 'Enter your Middle Name',\n" +
    "    'Enter your Name': 'Enter your Name',\n" +
    "    'Enter your Nickname': 'Enter your Nickname',\n" +
    "    'Enter your Password': 'Enter your Password',\n" +
    "    'Enter your phone number': 'Enter your phone number',\n" +
    "    'Enter your Preferred Username': 'Enter your Preferred Username',\n" +
    "    'Enter your username': 'Enter your username',\n" +
    "    'Forgot password?': 'Forgot password?',\n" +
    "    'Forgot your password?': 'Forgot your password?',\n" +
    "    'Hide password': 'Hide password',\n" +
    "    'It may take a minute to arrive': 'It may take a minute to arrive',\n" +
    "    Loading: 'Loading',\n" +
    "    'New password': 'New password',\n" +
    "    or: 'or',\n" +
    "    Password: 'Password',\n" +
    "    'Phone Number': 'Phone Number',\n" +
    "    'Please confirm your Password': 'Please confirm your Password',\n" +
    "    'Resend Code': 'Resend Code',\n" +
    "    'Reset your password': 'Reset your password',\n" +
    "    'Reset your Password': 'Reset your Password',\n" +
    "    'Send code': 'Send code',\n" +
    "    'Send Code': 'Send Code',\n" +
    "    Sending: 'Sending',\n" +
    "    'Setup TOTP': 'Setup TOTP',\n" +
    "    'Show password': 'Show password',\n" +
    "    'Sign in to your account': 'Sign in to your account',\n" +
    "    'Sign In with Amazon': 'Sign In with Amazon',\n" +
    "    'Sign In with Apple': 'Sign In with Apple',\n" +
    "    'Sign In with Facebook': 'Sign In with Facebook',\n" +
    "    'Sign In with Google': 'Sign In with Google',\n" +
    "    'Sign in': 'Sign in',\n" +
    "    'Sign In': 'Sign In',\n" +
    "    'Signing in': 'Signing in',\n" +
    "    Skip: 'Skip',\n" +
    "    Submit: 'Submit',\n" +
    "    Submitting: 'Submitting',\n" +
    "    Username: 'Username',\n" +
    "    'Verify Contact': 'Verify Contact',\n" +
    "    Verify: 'Verify',\n" +
    "    'We Emailed You': 'We Emailed You',\n" +
    "    'We Sent A Code': 'We Sent A Code',\n" +
    "    'We Texted You': 'We Texted You',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Your code is on the way. To log in, enter the code we emailed to',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Your code is on the way. To log in, enter the code we sent you',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Your code is on the way. To log in, enter the code we texted to',\n" +
    '};\n' +
    '\n' +
    'export { enDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const frDict = {\n' +
    "    'Account recovery requires verified contact information': 'La récupération du compte nécessite des informations de contact vérifiées',\n" +
    "    'Back to Sign In': 'Retour à la connexion',\n" +
    "    'Change Password': 'Modifier le mot de passe',\n" +
    "    Changing: 'Modification en cours',\n" +
    "    Code: 'Code',\n" +
    "    'Confirm Password': 'Confirmez le mot de passe',\n" +
    `    'Confirm Sign Up': "Confirmer l'inscription",\n` +
    "    'Confirm SMS Code': 'Confirmer le code SMS',\n" +
    "    'Confirm TOTP Code': 'Confirmer le code TOTP',\n" +
    "    Confirm: 'Confirmer',\n" +
    "    'Confirmation Code': 'Code de confirmation',\n" +
    "    Confirming: 'Confirmation',\n" +
    "    'Create a new account': 'Créer un nouveau compte',\n" +
    "    'Create Account': 'Créer un compte',\n" +
    "    'Creating Account': `Création d'un compte`,\n" +
    "    'Dismiss alert': `Supprimer l'alerte`,\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Saisissez cotre code de confirmation',\n" +
    "    'Enter your Email': 'Saisissez votre adresse email',\n" +
    "    'Enter your phone number': 'Saisissez votre numéro de téléphone',\n" +
    `    'Enter your username': "Saisissez votre nom d'utilisateur",\n` +
    "    'Forgot your password?': 'Mot de passe oublié ? ',\n" +
    "    'Hide password': 'Masquer le mot de passe',\n" +
    "    'It may take a minute to arrive': 'Cela peut prendre une minute',\n" +
    "    Loading: 'Chargement en cours',\n" +
    "    'New password': 'Nouveau mot de passe',\n" +
    "    or: 'ou',\n" +
    "    Password: 'Mot de passe',\n" +
    "    'Phone Number': 'Numéro de téléphone',\n" +
    "    'Resend Code': 'Renvoyer le code',\n" +
    "    'Reset your Password': 'Réinitialiser votre mot de passe',\n" +
    "    'Reset your password': 'Réinitialisez votre mot de passe',\n" +
    "    'Send code': 'Envoyer le code',\n" +
    `    'Send Code': "M'envoyer un code",\n` +
    "    Sending: 'Envoi en cours',\n" +
    "    'Setup TOTP': 'Configuration de TOTP',\n" +
    "    'Show password': 'Afficher le mot de passe',\n" +
    "    'Sign in to your account': 'Connexion à votre compte',\n" +
    "    'Sign In with Amazon': 'Se connecter avec Amazon',\n" +
    "    'Sign In with Apple': 'Se connecter avec Apple',\n" +
    "    'Sign In with Facebook': 'Se connecter avec Facebook',\n" +
    "    'Sign In with Google': 'Se connecter avec Google',\n" +
    "    'Sign in': 'Se connecter',\n" +
    "    'Sign In': 'Se connecter',\n" +
    "    'Signing in': 'Connexion en cours',\n" +
    "    Skip: 'Passer',\n" +
    "    Submit: 'Soumettre',\n" +
    "    Submitting: 'Envoi en cours',\n" +
    `    Username: "Nom d'utilisateur",\n` +
    "    'Verify Contact': 'Vérifier le contact',\n" +
    "    Verify: 'Vérifier',\n" +
    "    'We Sent A Code': 'Nous avons envoyé un code',\n" +
    "    'We Texted You': 'Nous vous avons envoyé un SMS',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': `Votre code est en cours d'envoi. Pour vous connecter, saisissez le code que nous vous avons envoyé`,\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Un utilisateur avec cette adresse email existe déjà.',\n" +
    "    Change: 'Modifier',\n" +
    "    'Confirm a Code': 'Confirmer un code',\n" +
    "    'Confirm Sign In': 'Confirmer la connexion',\n" +
    "    'Create account': 'Créer un compte',\n" +
    "    'Enter your password': 'Saisissez votre mot de passe',\n" +
    "    'Forgot Password': 'Mot de passe oublié',\n" +
    "    'Have an account? ': 'Déjà un compte ? ',\n" +
    "    Hello: 'Bonjour',\n" +
    "    'Incorrect username or password': 'Identifiant ou mot de passe incorrect',\n" +
    "    'Invalid password format': 'Format de mot de passe invalide',\n" +
    "    'Invalid phone number format': `Format de numéro de téléphone invalide. Veuillez utiliser un format +12345678900`,\n" +
    "    'Loading...': 'Chargement...',\n" +
    "    'Lost your code? ': 'Vous avez perdu votre code ? ',\n" +
    "    'Network error': 'Erreur réseau',\n" +
    "    'New Password': 'Nouveau mot de passe',\n" +
    "    'No account? ': 'Pas de compte ? ',\n" +
    "    'Resend a Code': 'Renvoyer un code',\n" +
    "    'Reset password': 'Réinitialisez votre mot de passe',\n" +
    "    Send: 'Envoyer',\n" +
    "    'Sign In with AWS': 'Se connecter avec AWS',\n" +
    "    'Sign Out': 'Déconnexion',\n" +
    `    'Sign Up': "S'inscrire",\n` +
    "    SMS: 'SMS',\n" +
    `    'User already exists': "L'utilisateur existe déjà",\n` +
    `    'User does not exist': "L'utilisateur n'existe pas",\n` +
    `    'Username cannot be empty': "Le nom d'utilisateur doit être renseigné",\n` +
    `    'Username/client id combination not found.': "L'utilisateur n'existe pas",\n` +
    "    'We Emailed You': 'Nous vous avons envoyé un code',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Votre code est en route. Pour vous connecter entrez le code reçu sur cette adresse email',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Votre code est en route. Pour vous connecter entrez le code reçu sur ce numéro de téléphone',\n" +
    "    'Your passwords must match': 'Vos mots de passe doivent être identiques',\n" +
    "    'It may take a minute to arrive.': 'Cela peut prendre quelques minutes.',\n" +
    '};\n' +
    '\n' +
    'export { frDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const itDict = {\n' +
    `    'Account recovery requires verified contact information': "Il ripristino dell'account richiede informazioni di contatto verificate",\n` +
    "    'Back to Sign In': 'Torna alla schermata di accesso',\n" +
    "    'Change Password': 'Cambia la password',\n" +
    "    Changing: 'Modifica in corso',\n" +
    "    Code: 'Codice',\n" +
    "    'Confirm Password': 'Conferma la password',\n" +
    "    'Confirm Sign Up': 'Conferma registrazione',\n" +
    "    'Confirm SMS Code': 'Conferma codice SMS',\n" +
    "    'Confirm TOTP Code': 'Conferma codice TOTP',\n" +
    "    Confirm: 'Conferma',\n" +
    "    'Confirmation Code': 'Codice di verifica',\n" +
    "    Confirming: 'Conferma in corso',\n" +
    "    'Create a new account': 'Crea un nuovo account',\n" +
    "    'Create Account': 'Crea Account',\n" +
    "    'Creating Account': 'Creazione account in corso',\n" +
    "    'Dismiss alert': `Ignora l'avviso`,\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Inserisci il tuo codice',\n" +
    "    'Enter your Email': 'Inserisci la tua e-mail',\n" +
    `    'Enter your phone number': 'Inserisci il tuo numero di telefono"',\n` +
    "    'Enter your username': 'Inserisci il tuo nome utente',\n" +
    "    'Forgot your password?': 'Password dimenticata?',\n" +
    "    'Hide password': 'Nascondi password',\n" +
    `    'It may take a minute to arrive': "L'arrivo potrebbe richiedere qualche minuto",\n` +
    "    Loading: 'Caricamento in corso',\n" +
    "    'New password': 'Nuova password',\n" +
    "    or: 'oppure',\n" +
    "    Password: 'Password',\n" +
    "    'Phone Number': 'Numero di telefono',\n" +
    "    'Resend Code': 'Invia nuovamente il codice',\n" +
    "    'Reset your Password': 'Reimposta la tua Password',\n" +
    "    'Reset your password': 'Reimposta la tua password',\n" +
    "    'Send code': 'Invia codice',\n" +
    "    'Send Code': 'Invia codice',\n" +
    "    Sending: 'Invio in corso',\n" +
    "    'Setup TOTP': 'Configura TOTP',\n" +
    "    'Show password': 'Mostra password',\n" +
    "    'Sign in to your account': 'Accedi al tuo account',\n" +
    "    'Sign In with Amazon': 'Accedi con Amazon',\n" +
    "    'Sign In with Apple': 'Accedi con Apple',\n" +
    "    'Sign In with Facebook': 'Accedi con Facebook',\n" +
    "    'Sign In with Google': 'Accedi con Google',\n" +
    "    'Sign in': 'Accedi',\n" +
    "    'Sign In': 'Accedi',\n" +
    "    'Signing in': 'Accesso in corso',\n" +
    "    Skip: 'Salta',\n" +
    "    Submit: 'Invia',\n" +
    "    Submitting: 'Invio in corso',\n" +
    "    Username: 'Nome utente',\n" +
    "    'Verify Contact': 'Verifica contatto',\n" +
    "    Verify: 'Verifica',\n" +
    `    'We Emailed You': "Ti abbiamo inviato un'e-mail",\n` +
    "    'We Sent A Code': 'Ti abbiamo inviato un codice',\n" +
    "    'We Texted You': 'Ti abbiamo inviato un SMS',\n" +
    `    'Your code is on the way. To log in, enter the code we emailed to': "Il codice è in arrivo. Per effettuare l'accesso, immetti il codice che ti abbiamo inviato via e-mail",\n` +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Il codice è in arrivo. Per accedere, immetti il codice che ti abbiamo inviato',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Il codice è in arrivo. Per accedere, immetti il codice che abbiamo inviato tramite SMS',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Questa email è già utilizzata da un altro account.',\n" +
    "    'Confirm a Code': 'Conferma un codice',\n" +
    `    'Confirm Sign In': "Conferma l'accesso",\n` +
    "    'Create account': 'Crea account',\n" +
    "    'Enter your password': 'Inserisci la tua password',\n" +
    "    'Forgot Password?': 'Password dimenticata?',\n" +
    "    'Have an account? ': 'Già registrato?',\n" +
    "    'Incorrect username or password': 'Nome utente o password errati',\n" +
    "    'Invalid password format': 'Formato della password non valido',\n" +
    "    'Invalid phone number format': 'Formato del numero di telefono non valido',\n" +
    "    'Lost your code?': 'Codice smarrito?',\n" +
    "    'New Password': 'Nuova password',\n" +
    "    'No account? ': 'Non hai un account?',\n" +
    "    'Password attempts exceeded': 'Il numero massimo di tentativi di accesso falliti è stato raggiunto',\n" +
    "    'Reset password': 'Reimposta password',\n" +
    "    'Sign Out': 'Esci',\n" +
    "    'Sign Up': 'Registrati',\n" +
    "    'User already exists': 'Utente già esistente',\n" +
    "    'User does not exist': 'Utente inesistente',\n" +
    "    'Username cannot be empty': 'Il nome utente non può essere vuoto',\n" +
    '};\n' +
    '\n' +
    'export { itDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const deDict = {\n' +
    "    'Account recovery requires verified contact information': 'Zurücksetzen des Account benötigt einen verifizierten Account',\n" +
    "    'Back to Sign In': 'Zurück zur Anmeldung',\n" +
    "    'Change Password': 'Passwort ändern',\n" +
    "    Changing: 'Ändern von',\n" +
    "    Code: 'Code',\n" +
    "    'Confirm Password': 'Passwort bestätigen',\n" +
    "    'Please confirm your Password': 'Bitte bestätigen Sie Ihr Passwort',\n" +
    "    'Confirm Sign Up': 'Registrierung bestätigen',\n" +
    "    'Confirm SMS Code': 'SMS-Code bestätigen',\n" +
    "    'Confirm TOTP Code': 'TOTP-Code bestätigen',\n" +
    "    Confirm: 'Bestätigen',\n" +
    "    'Confirmation Code': 'Bestätigungs-Code',\n" +
    "    Confirming: 'Wird bestätigt',\n" +
    "    'Create a new account': 'Einen neuen Account erstellen',\n" +
    "    'Create Account': 'Account erstellen',\n" +
    "    'Creating Account': 'Account wird erstellt',\n" +
    "    'Dismiss alert': 'Warnung verwerfen',\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Geben Sie Ihren Code ein',\n" +
    "    'Enter your Email': 'Geben Sie Ihre E-Mail ein',\n" +
    "    'Enter your phone number': 'Geben Sie Ihre Telefonnummer ein',\n" +
    "    'Enter your username': 'Geben Sie Ihren Benutzernamen ein',\n" +
    "    'Forgot your password?': 'Passwort vergessen? ',\n" +
    "    'Hide password': 'Passwort verbergen',\n" +
    "    'It may take a minute to arrive': 'Es kann eine Minute dauern, bis er ankommt',\n" +
    "    Loading: 'Wird geladen',\n" +
    "    'New password': 'Neues Passwort',\n" +
    "    or: 'oder',\n" +
    "    Password: 'Passwort',\n" +
    "    'Phone Number': 'Telefonnummer',\n" +
    "    'Resend Code': 'Code erneut senden',\n" +
    "    'Reset your Password': 'Zurücksetzen des Passwort',\n" +
    "    'Reset your password': 'Zurücksetzen des passwort',\n" +
    "    'Send code': 'Code senden',\n" +
    "    'Send Code': 'Code senden',\n" +
    "    Sending: 'Wird gesendet',\n" +
    "    'Setup TOTP': 'TOTP einrichten',\n" +
    "    'Show password': 'Passwort anzeigen',\n" +
    "    'Sign in to your account': 'Melden Sie sich mit Ihrem Account an',\n" +
    "    'Sign In with Amazon': 'Mit Amazon anmelden',\n" +
    "    'Sign In with Apple': 'Mit Apple anmelden',\n" +
    "    'Sign In with Facebook': 'Mit Facebook anmelden',\n" +
    "    'Sign In with Google': 'Mit Google anmelden',\n" +
    "    'Sign in': 'Anmelden',\n" +
    "    'Sign In': 'Anmelden',\n" +
    "    'Signing in': 'Wird angemeldet',\n" +
    "    Skip: 'Überspringen',\n" +
    "    Submit: 'Abschicken',\n" +
    "    Submitting: 'Wird gesendet',\n" +
    "    Username: 'Benutzername',\n" +
    "    'Verify Contact': 'Kontakt verifizieren',\n" +
    "    Verify: 'Verifizieren',\n" +
    "    'We Sent A Code': 'Wir haben einen Code gesendet',\n" +
    "    'We Texted You': 'Wir haben Ihnen eine SMS gesendet',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Ihr Code ist unterwegs. Um sich anzumelden, geben Sie den Code ein, den wir Ihnen gesendet haben',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Ein Account mit dieser Email existiert bereits.',\n" +
    "    'Confirm a Code': 'Code bestätigen',\n" +
    "    'Confirm Sign In': 'Anmeldung bestätigen',\n" +
    "    'Create account': 'Hier registrieren',\n" +
    "    'Enter your password': 'Geben Sie Ihr Passwort ein',\n" +
    "    'Enter your Password': 'Geben Sie Ihr Passwort ein',\n" +
    "    'Sign Up with Facebook': 'Mit Facebook registrieren',\n" +
    "    'Sign Up with Google': 'Mit Google registrieren',\n" +
    "    'Forgot Password': 'Passwort vergessen',\n" +
    "    'Have an account? ': 'Schon registriert? ',\n" +
    "    'Incorrect username or password': 'Falscher Benutzername oder falsches Passwort',\n" +
    "    'Invalid password format': 'Ungültiges Passwort-Format',\n" +
    "    'Invalid phone number format': `Ungültiges Telefonummern-Format. Benutze eine Nummer im Format: +12345678900`,\n" +
    "    'It may take a minute to arrive.': 'Es könnte eine Minute dauern, bis der Code eintrifft.',\n" +
    "    'Lost your code? ': 'Code verloren? ',\n" +
    "    'New Password': 'Neues Passwort',\n" +
    "    'No account? ': 'Kein Account? ',\n" +
    "    'Password attempts exceeded': 'Die maximale Anzahl der fehlerhaften Anmeldeversuche wurde erreicht',\n" +
    "    'Reset password': 'Passwort zurücksetzen',\n" +
    "    'Sign Out': 'Abmelden',\n" +
    "    'Sign Up': 'Registrieren',\n" +
    "    'User already exists': 'Dieser Benutzer existiert bereits',\n" +
    "    'User does not exist': 'Dieser Benutzer existiert nicht',\n" +
    "    'Username cannot be empty': 'Benutzername darf nicht leer sein',\n" +
    "    'We Emailed You': 'Email wurde versendet',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Ihr Bestätigungscode ist unterwegs. Um sich einzuloggen geben Sie den Code ein, den wir verschickt haben an',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Ihr Bestätigungscode ist unterwegs. Um sich einzuloggen geben Sie den Code ein, den wir verschickt haben an',\n" +
    '};\n' +
    '\n' +
    'export { deDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const esDict = {\n' +
    "    'Account recovery requires verified contact information': 'La recuperación de la cuenta requiere información de contacto verificada',\n" +
    "    'Back to Sign In': 'Volver a inicio de sesión',\n" +
    "    'Change Password': 'Cambiar contraseña',\n" +
    "    Changing: 'Cambiando',\n" +
    "    Code: 'Código',\n" +
    "    'Confirm Password': 'Confirmar contraseña',\n" +
    "    'Confirm Sign Up': 'Confirmar registro',\n" +
    "    'Confirm SMS Code': 'Confirmar el código de SMS',\n" +
    "    'Confirm TOTP Code': 'Confirmar código TOTP',\n" +
    "    Confirm: 'Confirmar',\n" +
    "    'Confirmation Code': 'Código de confirmación',\n" +
    "    Confirming: 'Confirmando',\n" +
    "    'Create a new account': 'Crear una cuenta nueva',\n" +
    "    'Create Account': 'Crear cuenta',\n" +
    "    'Creating Account': 'Creando cuenta',\n" +
    "    'Dismiss alert': 'Descartar alerta',\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Ingrese el código',\n" +
    "    'Enter your Email': 'Escriba su Email',\n" +
    "    'Enter your Password': 'Escriba su Contraseña',\n" +
    "    'Enter your phone number': 'Ingrese el número de teléfono',\n" +
    "    'Enter your username': 'Ingrese el nombre de usuario',\n" +
    "    'Forgot your password?': '¿Olvidó su contraseña?',\n" +
    "    'Hide password': 'Ocultar contraseña',\n" +
    "    'It may take a minute to arrive': 'Es posible que tarde un minuto en llegar',\n" +
    "    Loading: 'Cargando',\n" +
    "    'New password': 'Nueva contraseña',\n" +
    "    or: 'o',\n" +
    "    Password: 'Contraseña',\n" +
    "    'Phone Number': 'Número de teléfono',\n" +
    "    'Resend Code': 'Reenviar código',\n" +
    "    'Reset your password': 'Restablecer su contraseña',\n" +
    "    'Reset your Password': 'Restablecer su Contraseña',\n" +
    "    'Send code': 'Enviar código',\n" +
    "    'Send Code': 'Enviar código',\n" +
    "    Sending: 'Enviando',\n" +
    "    'Setup TOTP': 'Configurar TOTP',\n" +
    "    'Show password': 'Mostrar contraseña',\n" +
    "    'Sign in to your account': 'Iniciar sesión en tu cuenta',\n" +
    "    'Sign In with Amazon': 'Iniciar Sesión con Amazon',\n" +
    "    'Sign In with Apple': 'Iniciar Sesión con Apple',\n" +
    "    'Sign In with Facebook': 'Iniciar Sesión con Facebook',\n" +
    "    'Sign In with Google': 'Iniciar Sesión con Google',\n" +
    "    'Sign in': 'Iniciar sesión',\n" +
    "    'Sign In': 'Iniciar Sesión',\n" +
    "    'Signing in': 'Iniciando sesión',\n" +
    "    Skip: 'Omitir',\n" +
    "    Submit: 'Enviar',\n" +
    "    Submitting: 'Enviando',\n" +
    "    Username: 'Nombre de usuario',\n" +
    "    'Verify Contact': 'Verificar contacto',\n" +
    "    Verify: 'Verificar',\n" +
    "    'We Emailed You': 'Le hemos enviado un correo electrónico',\n" +
    "    'We Sent A Code': 'Hemos enviado un código',\n" +
    "    'We Texted You': 'Le hemos enviado un mensaje de texto',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'El código está en camino. Para iniciar sesión, escriba el código que hemos enviado por correo electrónico a',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'El código está en camino. Para iniciar sesión, escriba el código que le hemos enviado',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'El código está en camino. Para iniciar sesión, escriba el código que hemos enviado por mensaje de texto a',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Ya existe una cuenta con el correo ingresado.',\n" +
    "    'Confirm a Code': 'Confirmar un código',\n" +
    "    'Confirm Sign In': 'Confirmar inicio de sesión',\n" +
    "    'Forgot Password': 'Olvidé mi contraseña',\n" +
    "    'Incorrect username or password.': 'Nombre de usuario o contraseña incorrecta',\n" +
    "    'Invalid password format': 'Formato de contraseña inválido',\n" +
    "    'Invalid phone number format': 'Formato de número de teléfono inválido',\n" +
    "    'Loading...': 'Cargando...',\n" +
    "    'New Password': 'Nueva contraseña',\n" +
    "    'Resend a Code': 'Reenviar un código',\n" +
    "    'Sign Out': 'Cerrar sesión',\n" +
    "    'Sign Up with Amazon': 'Crear cuenta con Amazon',\n" +
    "    'Sign Up with Apple': 'Crear cuenta con Apple',\n" +
    "    'Sign Up with Facebook': 'Crear cuenta con Facebook',\n" +
    "    'Sign Up with Google': 'Crear cuenta con Google',\n" +
    "    'Sign Up': 'Crear cuenta',\n" +
    "    'User already exists': 'El usuario ya existe',\n" +
    "    'User does not exist': 'El usuario no existe',\n" +
    "    'Username cannot be empty': 'El nombre de usuario no puede estar vacío',\n" +
    "    'Your passwords must match': 'Las contraseñas deben coincidir',\n" +
    '};\n' +
    '\n' +
    'export { esDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const jaDict = {\n' +
    "    'Account recovery requires verified contact information': 'アカウントの復旧には確認済みの連絡先が必要です',\n" +
    "    'Back to Sign In': 'サインインに戻る',\n" +
    "    'Change Password': 'パスワードを変える ',\n" +
    "    Changing: '変更中',\n" +
    "    Code: 'コード',\n" +
    "    'Confirm Password': 'パスワードの確認',\n" +
    "    'Confirm Sign Up': '登録する',\n" +
    "    'Confirm SMS Code': 'SMS コードを確認',\n" +
    "    'Confirm TOTP Code': 'TOTP コードを確認',\n" +
    "    Confirm: '確定',\n" +
    "    'Confirmation Code': '確認コード',\n" +
    "    Confirming: '確認中',\n" +
    "    'Create a new account': '新しいアカウントを作る',\n" +
    "    'Create Account': 'アカウントを作る',\n" +
    "    'Creating Account': 'アカウントの作成中',\n" +
    "    'Dismiss alert': 'アラートを閉じる',\n" +
    "    Email: 'メールアドレス',\n" +
    "    'Enter your code': 'コードを入力',\n" +
    "    'Enter your Email': 'メールアドレスを入力',\n" +
    "    'Enter your phone number': '電話番号を入力',\n" +
    "    'Enter your username': 'ユーザー名を入力 ',\n" +
    "    'Forgot your password?': 'パスワードを忘れましたか？ ',\n" +
    "    'Hide password': 'パスワードを非表示',\n" +
    "    'It may take a minute to arrive': '到着するまでに 1 分かかることがあります。',\n" +
    "    Loading: 'ロード中',\n" +
    "    'New password': '新しいパスワード',\n" +
    "    or: '又は',\n" +
    "    Password: 'パスワード ',\n" +
    "    'Phone Number': '電話番号',\n" +
    "    'Resend Code': 'コードを再送信',\n" +
    "    'Reset your Password': 'パスワードをリセット',\n" +
    "    'Reset your password': 'パスワードをリセットする',\n" +
    "    'Send code': 'コードを送信',\n" +
    "    'Send Code': 'コードを送信',\n" +
    "    Sending: '送信中',\n" +
    "    'Setup TOTP': 'TOTP をセットアップ',\n" +
    "    'Show password': 'パスワードを表示',\n" +
    "    'Sign in to your account': 'アカウントにサインイン ',\n" +
    "    'Sign In with Amazon': 'Amazonでサインイン',\n" +
    "    'Sign In with Apple': 'Apple でサインイン',\n" +
    "    'Sign In with Facebook': 'Facebookでサインイン',\n" +
    "    'Sign In with Google': 'Googleでサインイン',\n" +
    "    'Sign In': 'サインイン ',\n" +
    "    'Sign in': 'サインイン',\n" +
    "    'Signing in': 'サインイン中',\n" +
    "    Skip: 'スキップ',\n" +
    "    Submit: '送信',\n" +
    "    Submitting: '送信中',\n" +
    "    Username: 'ユーザー名 ',\n" +
    "    'Verify Contact': '連絡先を確認',\n" +
    "    Verify: '確認',\n" +
    "    'We Sent A Code': 'コードが送信されました',\n" +
    "    'We Texted You': 'テキストが送信されました',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'コードが途中です。ログインするには、送信したコードを入力してください。',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': '入力されたメールアドレスのアカウントが既に存在します',\n" +
    "    'Confirm a Code': 'コードを確認',\n" +
    "    'Confirm Sign In': 'サインインする',\n" +
    "    'Create account': 'アカウントを作る ',\n" +
    "    'Enter your password': 'パスワードを入力 ',\n" +
    "    'Enter your Password': 'パスワードを入力',\n" +
    "    'Please confirm your Password': 'パスワードを入力',\n" +
    "    'Forgot Password': 'パスワードを忘れた ',\n" +
    "    'Have an account? ': 'アカウントを持っていますか？',\n" +
    "    'Incorrect username or password': 'ユーザー名かパスワードが異なります ',\n" +
    "    'Invalid password format': 'パスワードの形式が無効です ',\n" +
    "    'Invalid phone number format': '不正な電話番号の形式です。\\n+12345678900 の形式で入力してください',\n" +
    "    'It may take a minute to arrive.': 'コードを受信するまで数分かかる場合があります。',\n" +
    "    'Lost your code? ': 'コードを失くしましたか？',\n" +
    "    'New Password': '新しいパスワード',\n" +
    "    'No account? ': 'アカウントが無いとき ',\n" +
    "    'Password attempts exceeded': 'サインインの試行回数が上限に達しました',\n" +
    "    'Reset password': 'パスワードをリセット ',\n" +
    "    'Reset Password': 'パスワードをリセット',\n" +
    "    'Sign Out': 'サインアウト ',\n" +
    "    'Sign Up': '登録 ',\n" +
    "    'User already exists': '既にユーザーが存在しています ',\n" +
    "    'User does not exist': 'ユーザーが存在しません ',\n" +
    "    'Username cannot be empty': 'ユーザー名は入力必須です',\n" +
    "    'We Emailed You': 'コードを送信しました',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'ログインするには、メールに記載されたコードを入力してください。送信先:',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'ログインするには、テキストメッセージに記載されたコードを入力してください。送信先:',\n" +
    '};\n' +
    '\n' +
    'export { jaDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const krDict = {\n' +
    "    'Account recovery requires verified contact information': '계정 복구를 위해 연락처 확인이 필요합니다',\n" +
    "    'Back to Sign In': '로그인으로 돌아가기',\n" +
    "    'Change Password': '비밀번호 변경하기',\n" +
    "    Changing: '변경중',\n" +
    "    Code: '코드',\n" +
    "    'Confirm Password': '비밀번호 재확인',\n" +
    "    'Confirm Sign Up': '회원가입 확인',\n" +
    "    'Confirm SMS Code': '휴대폰 본인 확인',\n" +
    "    'Confirm TOTP Code': 'TOTP 인증번호 확인',\n" +
    "    Confirm: '확인',\n" +
    "    'Confirmation Code': '인증번호',\n" +
    "    Confirming: '확인중',\n" +
    "    'Create a new account': '회원가입',\n" +
    "    'Create Account': '회원가입',\n" +
    "    'Creating Account': '회원가입중',\n" +
    "    'Dismiss alert': '알림 무시',\n" +
    "    Email: '이메일',\n" +
    "    'Enter your code': '인증번호를 입력해주세요',\n" +
    "    'Enter your Email': '이메일 입력',\n" +
    "    'Enter your phone number': '전화번호 입력',\n" +
    "    'Enter your username': '아이디를 입력해주세요',\n" +
    "    'Hide password': '비밀번호 숨기기',\n" +
    "    'It may take a minute to arrive': '도착하는 데 1분 정도 걸릴 수 있습니다',\n" +
    "    Loading: '로딩중',\n" +
    "    'New password': '새 비밀번호',\n" +
    "    or: '또는',\n" +
    "    Password: '비밀번호',\n" +
    "    'Phone Number': '전화번호',\n" +
    "    'Resend Code': '인증번호 재전송',\n" +
    "    'Reset your password': '비밀번호 재설정',\n" +
    "    'Reset your Password': '비밀번호 재설정',\n" +
    "    'Send code': '인증코드 보내기',\n" +
    "    'Send Code': '코드 전송',\n" +
    "    Sending: '전송중',\n" +
    "    'Setup TOTP': 'TOTP 설정하기',\n" +
    "    'Show password': '비밀번호 보이기',\n" +
    "    'Sign in to your account': '로그인',\n" +
    "    'Sign In with Amazon': 'Amazon 로그인',\n" +
    "    'Sign In with Apple': 'Apple 로그인',\n" +
    "    'Sign In with Facebook': 'Facebook 로그인',\n" +
    "    'Sign In with Google': 'Google 로그인',\n" +
    "    'Sign in': '로그인',\n" +
    "    'Sign In': '로그인',\n" +
    "    'Signing in': '로그인중',\n" +
    "    Skip: '다음에 하기',\n" +
    "    Submit: '확인',\n" +
    "    Submitting: '확인중',\n" +
    "    Username: '아이디',\n" +
    "    'Verify Contact': '연락처 확인',\n" +
    "    Verify: '인증',\n" +
    "    'We Emailed You': '이메일을 보냄',\n" +
    "    'We Sent A Code': '코드를 보냄',\n" +
    "    'We Texted You': '문자 메시지를 보냄',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': '코드가 전송 중입니다. 로그인하려면 이메일로 전송한 코드를 입력하세요',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': '코드가 전송 중입니다. 로그인하려면 전송한 코드를 입력하세요',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': '코드가 전송 중입니다. 로그인하려면 문자 메시지로 전송한 코드를 입력하세요',\n" +
    '    // Additional translations provided by customers\n' +
    "    Birthdate: '생년월일',\n" +
    "    'Family Name': '성',\n" +
    "    'Forgot your password?': '비밀번호를 잊으셨나요?',\n" +
    "    'Given Name': '이름',\n" +
    "    Name: '성함',\n" +
    "    Nickname: '닉네임',\n" +
    "    'Preferred Username': '닉네임',\n" +
    "    Profile: '프로필',\n" +
    "    'Reset Password': '비밀번호 재설정',\n" +
    "    Website: '웹사이트',\n" +
    '};\n' +
    '\n' +
    'export { krDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const nbDict = {\n' +
    "    'Account recovery requires verified contact information': 'Gjenoppretting av konto krever verifisert kontaktinformajson',\n" +
    "    'Add your Profile': 'Legg til profilen din',\n" +
    "    'Add your Website': 'Legg til nettsiden din',\n" +
    "    'Back to Sign In': 'Tilbake til innlogging',\n" +
    "    'Change Password': 'Bytt passord',\n" +
    "    Changing: 'Endre',\n" +
    "    Code: 'Kode',\n" +
    "    'Confirm Password': 'Bekreft passordet',\n" +
    "    'Confirm Sign Up': 'Bekreft registrering',\n" +
    "    'Confirm SMS Code': 'Bekreft SMS-kode',\n" +
    "    'Confirm TOTP Code': 'Bekreft TOTP-kode',\n" +
    "    Confirm: 'Bekreft',\n" +
    "    'Confirmation Code': 'Bekreftelseskode',\n" +
    "    Confirming: 'Bekrefter',\n" +
    "    'Create a new account': 'Opprett en ny konto',\n" +
    "    'Create Account': 'Opprett konto',\n" +
    "    'Creating Account': 'Oppretter konto',\n" +
    "    'Dismiss alert': 'Avvis varsel',\n" +
    "    Email: 'E-post',\n" +
    "    'Enter your Birthdate': 'Skriv inn fødselsdatoen din',\n" +
    "    'Enter your code': 'Skriv inn koden din',\n" +
    "    'Enter your Confirmation Code': 'Skriv inn bekreftelseskoden din',\n" +
    "    'Enter your Email': 'Skriv inn e-postadressen din',\n" +
    "    'Enter your Family Name': 'Skriv inn etternavnet ditt',\n" +
    "    'Enter your Given Name': 'Skriv inn fornavnet ditt',\n" +
    "    'Enter your Middle Name': 'Skriv inn mellomnavnet ditt',\n" +
    "    'Enter your Name': 'Skriv inn navnet ditt',\n" +
    "    'Enter your Nickname': 'Skriv inn kallenavnet ditt',\n" +
    "    'Enter your Password': 'Skriv inn passordet ditt',\n" +
    "    'Enter your phone number': 'Skriv inn telefonnummeret ditt',\n" +
    "    'Enter your Preferred Username': 'Skriv inn det foretrukne brukernavnet ditt',\n" +
    "    'Enter your username': 'Skriv inn brukernavnet ditt',\n" +
    "    'Forgot password?': 'Glemt passord?',\n" +
    "    'Forgot your password?': 'Glemt passordet ditt?',\n" +
    "    'Hide password': 'Skjul passordet',\n" +
    "    'It may take a minute to arrive': 'Det kan ta et minutt for å komme frem',\n" +
    "    Loading: 'Laster inn',\n" +
    "    'New password': 'Nytt passord',\n" +
    "    or: 'eller',\n" +
    "    Password: 'Passord',\n" +
    "    'Phone Number': 'Telefonnummer',\n" +
    "    'Please confirm your Password': 'Vennligst bekreft passordet ditt',\n" +
    "    'Resend Code': 'Send koden på nytt',\n" +
    "    'Reset your password': 'Nullstill passordet ditt',\n" +
    "    'Reset your Password': 'Nullstill passordet ditt',\n" +
    "    'Send code': 'Send kode',\n" +
    "    'Send Code': 'Send kode',\n" +
    "    Sending: 'Sender',\n" +
    "    'Setup TOTP': 'Konfigurer TOTP',\n" +
    "    'Show password': 'Vis passordet',\n" +
    "    'Sign in to your account': 'Logg inn på kontoen din',\n" +
    "    'Sign In with Amazon': 'Logg inn med Amazon',\n" +
    "    'Sign In with Apple': 'Logg inn med Apple',\n" +
    "    'Sign In with Facebook': 'Logg inn med Facebook',\n" +
    "    'Sign In with Google': 'Logg inn med Google',\n" +
    "    'Sign in': 'Logg inn',\n" +
    "    'Sign In': 'Logg inn',\n" +
    "    'Signing in': 'Logger inn',\n" +
    "    Skip: 'Hopp over',\n" +
    "    Submit: 'Send inn',\n" +
    "    Submitting: 'Sender inn',\n" +
    "    Username: 'Brukernavn',\n" +
    "    'Verify Contact': 'Bekreft kontakt',\n" +
    "    Verify: 'Bekreft',\n" +
    "    'We Emailed You': 'Vi sendte deg en e-post',\n" +
    "    'We Sent A Code': 'Vi sendte en kode',\n" +
    "    'We Texted You': 'Vi sendte deg en tekstmelding',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Koden din er på vei. For å logge inn, skriv inn koden vi sendte e-post til',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Koden din er på vei. For å logge inn, skriv inn koden vi sendte deg',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Koden din er på vei. For å logge inn, skriv inn koden vi sendte tekstmelding til',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Det finnes allerede en konto med denne e-postadressen',\n" +
    "    'Confirm a Code': 'Bekreft koden',\n" +
    "    'Confirm Sign In': 'Bekreft innlogging',\n" +
    "    'Create account': 'Opprett konto',\n" +
    "    'Enter your password': 'Skriv inn passordet ditt',\n" +
    "    'Forgot Password': 'Glemt passordet',\n" +
    "    'Have an account? ': 'Har en konto allerede? ',\n" +
    "    'Incorrect username or password': 'Feil brukernavn eller passord',\n" +
    "    'Invalid password format': 'Ugyldig passordformat',\n" +
    "    'Invalid phone number format': 'Ugyldig telefonnummerformat',\n" +
    "    'Lost your code? ': 'Mistet koden? ',\n" +
    "    'New Password': 'Nytt passord',\n" +
    "    'No account? ': 'Ingen konto? ',\n" +
    "    'Password attempts exceeded': 'For mange mislykkede passordforsøk',\n" +
    "    'Reset password': 'Nullstill passord',\n" +
    "    'Sign Out': 'Logg ut',\n" +
    "    'Sign Up': 'Registrering',\n" +
    "    'User already exists': 'Brukeren finnes allerede',\n" +
    "    'User does not exist': 'Brukeren finnes ikke',\n" +
    "    'Username cannot be empty': 'Brukernavnet kan ikke være tomt',\n" +
    '};\n' +
    '\n' +
    'export { nbDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const nlDict = {\n' +
    "    'Account recovery requires verified contact information': 'Accountherstel vereist geverifieerde contactgegevens',\n" +
    "    'Back to Sign In': 'Terug naar inloggen',\n" +
    "    'Change Password': 'Wachtwoord wijzigen',\n" +
    "    Changing: 'Wordt aangepast',\n" +
    "    Code: 'Code',\n" +
    "    'Confirm Password': 'Bevestig Wachtwoord',\n" +
    "    'Confirm Sign Up': 'Bevestig inschrijving',\n" +
    "    'Confirm SMS Code': 'Bevestig SMS Code',\n" +
    "    'Confirm TOTP Code': 'Bevestig TOTP Code',\n" +
    "    Confirm: 'Bevestig',\n" +
    "    'Confirmation Code': 'Bevestigingscode',\n" +
    "    Confirming: 'Bevestigen',\n" +
    "    'Create a new account': 'Nieuw account aanmaken',\n" +
    "    'Create Account': 'Account aanmaken',\n" +
    "    'Creating Account': 'Account wordt aangemaakt',\n" +
    "    'Dismiss alert': 'Waarschuwing sluiten',\n" +
    "    Email: 'E-mail',\n" +
    "    'Enter your code': 'Vul je code in',\n" +
    "    'Enter your Email': 'Vul je e-mail in',\n" +
    "    'Enter your Password': 'Vul je wachtwoord in',\n" +
    "    'Enter your phone number': 'Vul je telefoonnummer in',\n" +
    "    'Enter your username': 'Vul je gebruikersnaam in',\n" +
    "    'Enter your Username': 'Vul je gebruikersnaam in',\n" +
    "    'Forgot your password?': 'Wachtwoord vergeten? ',\n" +
    "    'Hide password': 'Verberg wachtwoord',\n" +
    "    'It may take a minute to arrive': 'Het kan even duren voordat deze aankomt',\n" +
    "    Loading: 'Laden',\n" +
    "    'New password': 'Nieuw wachtwoord',\n" +
    "    'New Password': 'Nieuw Wachtwoord',\n" +
    "    or: 'of',\n" +
    "    Password: 'Wachtwoord',\n" +
    "    'Phone Number': 'Telefoonnummer',\n" +
    "    'Please confirm your Password': 'Bevestig je wachtwoord',\n" +
    "    'Resend Code': 'Verstuur code nogmaals',\n" +
    "    'Reset Password': 'Wachtwoord resetten',\n" +
    "    'Reset your password': 'Reset je wachtwoord',\n" +
    "    'Reset your Password': 'Wachtwoord resetten',\n" +
    "    'Send code': 'Verstuur code',\n" +
    "    'Send Code': 'Verstuur Code',\n" +
    "    Sending: 'Versturen',\n" +
    "    'Setup TOTP': 'TOTP Instellingen',\n" +
    "    'Show password': 'Toon wachtwoord',\n" +
    "    'Sign in to your account': 'Inloggen op je account',\n" +
    "    'Sign In with Amazon': 'Inloggen met Amazon',\n" +
    "    'Sign In with Apple': 'Inloggen met Apple',\n" +
    "    'Sign In with Facebook': 'Inloggen met Facebook',\n" +
    "    'Sign In with Google': 'Inloggen met Google',\n" +
    "    'Sign in': 'Inloggen',\n" +
    "    'Sign In': 'Inloggen',\n" +
    "    'Signing in': 'Inloggen',\n" +
    "    Skip: 'Overslaan',\n" +
    "    Submit: 'Versturen',\n" +
    "    Submitting: 'Wordt verstuurd',\n" +
    "    Username: 'Gebruikersnaam',\n" +
    "    'Verify Contact': 'Verifieer Contact',\n" +
    "    Verify: 'Verifieer',\n" +
    "    'We Emailed You': 'We hebben u een e-mail gestuurd',\n" +
    "    'We Sent A Code': 'We hebben een code gestuurd',\n" +
    "    'We Texted You': 'We hebben u een sms gestuurd',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Uw code is onderweg. Om in te loggen, voer de code in die we gemaild hebben naar',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Uw code is onderweg. Om in te loggen, voer de code in die we u hebben gestuurd',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Uw code is onderweg. Om in te loggen, voer de code in die we hebben gestuurd naar',\n" +
    "    'Your passwords must match': 'Je wachtwoorden moeten overeenkomen',\n" +
    '};\n' +
    '\n' +
    'export { nlDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const plDict = {\n' +
    "    'Account recovery requires verified contact information': 'Odzyskanie konta wymaga zweryfikowanych danych kontaktowych',\n" +
    "    'Back to Sign In': 'Powrót do logowania',\n" +
    "    'Change Password': 'Zmień hasło',\n" +
    "    Changing: 'Zmienianie',\n" +
    "    Code: 'Kod',\n" +
    "    'Confirm Password': 'Potwierdź Hasło',\n" +
    "    'Confirm Sign Up': 'Potwierdź rejestrację',\n" +
    "    'Confirm SMS Code': 'Potwierdź kod SMS',\n" +
    "    'Confirm TOTP Code': 'Potwierdź hasło jednorazowe',\n" +
    "    Confirm: 'Potwierdź',\n" +
    "    'Confirmation Code': 'Kod potwierdzenia',\n" +
    "    Confirming: 'Potwierdzanie',\n" +
    "    'Create a new account': 'Utwórz nowe konto',\n" +
    "    'Create Account': 'Utwórz konto',\n" +
    "    'Creating Account': 'Tworzenie konta',\n" +
    "    'Dismiss alert': 'Odrzuć alert',\n" +
    "    Email: 'E-mail',\n" +
    "    'Enter your code': 'Wprowadź swój kod',\n" +
    "    'Enter your Email': 'Wpisz swój adres e-mail',\n" +
    "    'Enter your phone number': 'Wpisz swój numer telefonu',\n" +
    "    'Enter your username': 'Wprowadź swoją nazwę użytkownika',\n" +
    "    'Forgot your password?': 'Zapomniałeś hasła? ',\n" +
    "    'Hide password': 'Ukryj hasło',\n" +
    "    'It may take a minute to arrive': 'Może to chwilę potrwać',\n" +
    "    Loading: 'Ładowanie',\n" +
    "    'New password': 'Nowe hasło',\n" +
    "    or: 'albo',\n" +
    "    Password: 'Hasło',\n" +
    "    'Phone Number': 'Numer telefonu',\n" +
    "    'Resend Code': 'Wyślij kod ponownie',\n" +
    "    'Reset your password': 'Zresetuj swoje hasło',\n" +
    "    'Reset your Password': 'Zresetuj swoje hasło',\n" +
    "    'Send code': 'Wyślij kod',\n" +
    "    'Send Code': 'Zresetuj hasło',\n" +
    "    Sending: 'Wysyłanie',\n" +
    "    'Setup TOTP': 'Konfiguruj TOTP',\n" +
    "    'Show password': 'Pokaż hasło',\n" +
    "    'Sign in to your account': 'Zaloguj się na swoje konto',\n" +
    "    'Sign In with Amazon': 'Zaloguj z Amazon',\n" +
    "    'Sign In with Apple': 'Zaloguj z Apple',\n" +
    "    'Sign In with Facebook': 'Zaloguj z Facebook',\n" +
    "    'Sign In with Google': 'Zaloguj z Google',\n" +
    "    'Sign In': 'Logowanie',\n" +
    "    'Sign in': 'Zaloguj',\n" +
    "    'Signing in': 'Logowanie',\n" +
    "    Skip: 'Pomiń',\n" +
    "    Submit: 'Wyślij',\n" +
    "    Submitting: 'Wysyłanie',\n" +
    "    Username: 'Nazwa użytkownika',\n" +
    "    'Verify Contact': 'Weryfikacja danych kontaktowych',\n" +
    "    Verify: 'Zweryfikuj',\n" +
    '    // Additional translations provided by customers\n' +
    "    Birthdate: 'Data urodzenia',\n" +
    "    'Family Name': 'Nazwisko',\n" +
    "    'Given Name': 'Pierwsze imię',\n" +
    "    'Middle Name': 'Drugie imię',\n" +
    "    Name: 'Imię i nazwisko',\n" +
    "    Nickname: 'Pseudonim',\n" +
    "    'Preferred Username': 'Preferowana nazwa użytkownika',\n" +
    "    Profile: 'Profil',\n" +
    "    Website: 'Strona internetowa',\n" +
    "    'We Emailed You': 'Wysłaliśmy Ci wiadomość e-mail',\n" +
    "    'We Sent A Code': 'Wysłaliśmy kod',\n" +
    "    'We Texted You': 'Wysłaliśmy Ci wiadomość SMS',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Twój kod został wysłany. Aby się zalogować, wprowadź kod wysłany na adres e-mail',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Twój kod został wysłany. Aby się zalogować, wprowadź wysłany do Ciebie kod',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Twój kod został wysłany. Aby się zalogować, wprowadź kod wysłany do Ciebie w wiadomości SMS pod numer',\n" +
    '};\n' +
    '\n' +
    'export { plDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const ptDict = {\n' +
    "    'Account recovery requires verified contact information': 'A recuperação da conta requer informações de contato verificadas',\n" +
    "    'Back to Sign In': 'Voltar para Entrar',\n" +
    "    'Change Password': 'Mudar senha',\n" +
    "    Changing: 'Mudando',\n" +
    "    Code: 'Código',\n" +
    "    'Confirm Password': 'Confirme a Senha',\n" +
    "    'Confirm Sign Up': 'Confirmar inscrição',\n" +
    "    'Confirm SMS Code': 'Confirme o código SMS',\n" +
    "    'Confirm TOTP Code': 'Confirme o código TOTP',\n" +
    "    Confirm: 'confirme',\n" +
    "    'Confirmation Code': 'Código de confirmação',\n" +
    "    Confirming: 'Confirmando',\n" +
    "    'Create a new account': 'Criar uma nova conta',\n" +
    "    'Create Account': 'Criar Conta',\n" +
    "    'Creating Account': 'Criando conta',\n" +
    "    'Dismiss alert': 'Descartar alerta',\n" +
    "    Email: 'O email',\n" +
    "    'Enter your code': 'Insira seu código',\n" +
    "    'Enter your Email': 'Digite seu e-mail',\n" +
    "    'Enter your phone number': 'Digite seu número de telefone',\n" +
    "    'Enter your username': 'entre com seu nome de usuário',\n" +
    "    'Forgot your password?': 'Esqueceu sua senha? ',\n" +
    "    'Hide password': 'Esconder a senha',\n" +
    "    'It may take a minute to arrive': 'Pode levar um minuto para chegar',\n" +
    "    Loading: 'Carregando',\n" +
    "    'New password': 'Nova Senha',\n" +
    "    or: 'ou',\n" +
    "    Password: 'Senha',\n" +
    "    'Phone Number': 'Número de telefone',\n" +
    "    'Resend Code': 'Reenviar código',\n" +
    "    'Reset your password': 'Redefina sua senha',\n" +
    "    'Reset your Password': 'Redefina sua senha',\n" +
    "    'Send code': 'Enviar código',\n" +
    "    'Send Code': 'Enviar código',\n" +
    "    Sending: 'Enviando',\n" +
    "    'Setup TOTP': 'Configurar TOTP',\n" +
    "    'Show password': 'Mostrar senha',\n" +
    "    'Sign in to your account': 'Faça login em sua conta',\n" +
    "    'Sign In with Amazon': 'Entrar com a Amazon',\n" +
    "    'Sign In with Apple': 'Entrar com a Apple',\n" +
    "    'Sign In with Facebook': 'Entrar com o Facebook',\n" +
    "    'Sign In with Google': 'Faça login no Google',\n" +
    "    'Sign in': 'Entrar',\n" +
    "    'Sign In': 'Entrar',\n" +
    "    'Signing in': 'Entrando',\n" +
    "    Skip: 'Pular',\n" +
    "    Submit: 'Enviar',\n" +
    "    Submitting: 'Enviando',\n" +
    "    Username: 'Nome do usuário',\n" +
    "    'Verify Contact': 'Verificar contato',\n" +
    "    Verify: 'Verificar',\n" +
    "    'We Emailed You': 'Enviamos um e-mail para você',\n" +
    "    'We Sent A Code': 'Enviamos um código',\n" +
    "    'We Texted You': 'Enviamos um SMS para você',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Seu código está a caminho. Para fazer login, insira o código para o qual enviamos um e-mail',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Seu código está a caminho. Para fazer login, insira o código que enviamos para você',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Seu código está a caminho. Para fazer login, insira o código para o qual enviamos uma mensagem de texto',\n" +
    '};\n' +
    '\n' +
    'export { ptDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const zhDict = {\n' +
    "    'Account recovery requires verified contact information': '账户恢复需要验证过的联系方式',\n" +
    "    'Back to Sign In': '回到登录',\n" +
    "    'Change Password': '更改密码',\n" +
    "    Changing: '正在修改',\n" +
    "    Code: '确认码',\n" +
    "    'Confirm Password': '确认密码',\n" +
    "    'Confirm Sign Up': '确认注册',\n" +
    "    'Confirm SMS Code': '确认短信验证码',\n" +
    "    'Confirm TOTP Code': '确认 TOTP 代码',\n" +
    "    Confirm: '确认',\n" +
    "    'Confirmation Code': '确认码',\n" +
    "    Confirming: '正在确认',\n" +
    "    'Create a new account': '创建新账户',\n" +
    "    'Create Account': '创建账户',\n" +
    "    'Creating Account': '正在创建账户',\n" +
    "    'Dismiss alert': '关闭警报',\n" +
    "    Email: '邮箱',\n" +
    "    'Enter your code': '输入验证码',\n" +
    "    'Enter your Email': '输入电子邮件',\n" +
    "    'Enter your phone number': '输入电话号码',\n" +
    "    'Enter your username': '输入用户名',\n" +
    "    'Forgot your password?': '忘记密码了？',\n" +
    "    'Hide password': '隐藏密码',\n" +
    "    'It may take a minute to arrive': '可能需要一分钟才能到达',\n" +
    "    Loading: '正在加载',\n" +
    "    'New password': '新密码',\n" +
    "    or: '或者',\n" +
    "    Password: '密码',\n" +
    "    'Phone Number': '电话',\n" +
    "    'Resend Code': '重发验证码',\n" +
    "    'Reset your password': '重置密码',\n" +
    "    'Reset your Password': '重置密码',\n" +
    "    'Send Code': '发送确认码',\n" +
    "    'Send code': '发送验证码',\n" +
    "    Sending: '正在发送',\n" +
    "    'Setup TOTP': '设置 TOTP',\n" +
    "    'Show password': '显示密码',\n" +
    "    'Sign in to your account': '登录账户',\n" +
    "    'Sign In with Amazon': '通过 Amazon 登录',\n" +
    "    'Sign In with Apple': '通过 Apple 登录',\n" +
    "    'Sign In with Facebook': '通过 Facebook 登录',\n" +
    "    'Sign In with Google': '通过 Google 登录',\n" +
    "    'Sign in': '登录',\n" +
    "    'Sign In': '登录',\n" +
    "    'Signing in': '正在登录',\n" +
    "    Skip: '跳过',\n" +
    "    Submit: '提交',\n" +
    "    Submitting: '正在提交',\n" +
    "    Username: '用户名',\n" +
    "    'Verify Contact': '验证联系方式',\n" +
    "    Verify: '验证',\n" +
    "    'We Emailed You': '我们给您发送了电子邮件',\n" +
    "    'We Sent A Code': '我们发送了代码',\n" +
    "    'We Texted You': '我们给您发送了短信',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': '您的代码正在发送中。要登录，请输入我们通过电子邮件发送给以下人员的代码：',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': '您的代码正在发送中。要登录，请输入我们发送给您的代码',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': '您的代码正在发送中。要登录，请输入我们通过短信发送给以下人员的代码：',\n" +
    '    // Additional translations provided by customers\n' +
    "    'Confirm a Code': '确认码',\n" +
    "    'Confirm Sign In': '确认登录',\n" +
    "    'Forgot Password': '忘记密码',\n" +
    "    'Incorrect username or password': '用户名或密码错误',\n" +
    "    'Invalid password format': '密码格式错误',\n" +
    "    'Invalid phone number format': '电话格式错误，请使用格式 +12345678900',\n" +
    "    'New Password': '新密码',\n" +
    "    'Resend a Code': '重发确认码',\n" +
    "    'Sign Out': '退出',\n" +
    "    'Sign Up': '注册',\n" +
    "    'User already exists': '用户已经存在',\n" +
    "    'User does not exist': '用户不存在',\n" +
    '};\n' +
    '\n' +
    'export { zhDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const svDict = {\n' +
    "    'Account recovery requires verified contact information': 'För att återställa kontot behöver du ett verifierat konto',\n" +
    "    'Back to Sign In': 'Tillbaka till inloggningen',\n" +
    "    'Change Password': 'Byt lösenord',\n" +
    "    Changing: 'Ändra',\n" +
    "    Code: 'Kod',\n" +
    "    'Confirm Password': 'Bekräfta lösenord',\n" +
    "    'Confirm Sign Up': 'Bekräfta registrering',\n" +
    "    'Confirm SMS Code': 'Bekräfta SMS-kod',\n" +
    "    'Confirm TOTP Code': 'Bekräfta TOTP-kod',\n" +
    "    Confirm: 'Bekräfta',\n" +
    "    'Confirmation Code': 'Verifikationskod',\n" +
    "    Confirming: 'Bekräftar',\n" +
    "    'Create a new account': 'Skapa ett nytt konto',\n" +
    "    'Create Account': 'Skapa konto',\n" +
    "    'Creating Account': 'Skapar konto',\n" +
    "    'Dismiss alert': 'Avvisa varning',\n" +
    "    Email: 'E-post',\n" +
    "    'Enter your code': 'Skriv din kod',\n" +
    "    'Enter your Email': 'Fyll i din e-post',\n" +
    "    'Enter your phone number': 'Ange ditt telefonnummer',\n" +
    "    'Enter your username': 'Ange ditt användarnamn',\n" +
    "    'Forgot your password?': 'Glömt ditt lösenord? ',\n" +
    "    'Hide password': 'Dölj lösenord',\n" +
    "    'It may take a minute to arrive': 'Det kan ta en minut att komma fram',\n" +
    "    Loading: 'Laddar',\n" +
    "    'New password': 'Nytt lösenord',\n" +
    "    or: 'eller',\n" +
    "    Password: 'Lösenord',\n" +
    "    'Phone Number': 'Telefonnummer',\n" +
    "    'Resend Code': 'Skicka koden igen',\n" +
    "    'Reset your password': 'Återställ ditt lösenord',\n" +
    "    'Reset your Password': 'Återställ ditt lösenord',\n" +
    "    'Send code': 'Skicka kod',\n" +
    "    'Send Code': 'Skicka kod',\n" +
    "    Sending: 'Skickar',\n" +
    "    'Setup TOTP': 'Konfigurera TOTP',\n" +
    "    'Show password': 'Visa lösenord',\n" +
    "    'Sign in to your account': 'Logga in till ditt konto',\n" +
    "    'Sign In with Amazon': 'Logga in med Amazon',\n" +
    "    'Sign In with Apple': 'Logga in med Apple',\n" +
    "    'Sign In with Facebook': 'Logga in med Facebook',\n" +
    "    'Sign In with Google': 'Logga in med Google',\n" +
    "    'Sign in': 'Logga in',\n" +
    "    'Sign In': 'Logga in',\n" +
    "    'Signing in': 'Loggar in',\n" +
    "    Skip: 'Hoppa över',\n" +
    "    Submit: 'Skicka',\n" +
    "    Submitting: 'Skickar in',\n" +
    "    Username: 'Användarnamn',\n" +
    "    'Verify Contact': 'Verifiera kontakt',\n" +
    "    Verify: 'Verifiera',\n" +
    "    'We Sent A Code': 'Vi skickade en kod',\n" +
    "    'We Texted You': 'Vi sms:ade dig',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Din kod är på väg. För att logga in, ange koden vi mejlade till',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Din kod är på väg. För att logga in, ange koden vi skickade till dig',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Din kod är på väg. För att logga in, ange koden vi sms:ade till',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Det finns redan ett konto med denna e-postadress',\n" +
    "    'Confirm a Code': 'Bekräfta koden',\n" +
    "    'Confirm Sign In': 'Bekräfta inloggning',\n" +
    "    'Create account': 'Skapa konto',\n" +
    "    'Enter your password': 'Ange ditt lösenord',\n" +
    "    'Forgot Password': 'Glömt lösenordet',\n" +
    "    'Have an account? ': 'Redan registrerad? ',\n" +
    "    'Incorrect username or password': 'Felaktigt användarnamn eller lösenord',\n" +
    "    'Invalid password format': 'Ogiltigt lösenordsformat',\n" +
    "    'Invalid phone number format': `Ogiltigt format för telefonnummer`,\n" +
    "    'Lost your code? ': 'Förlorat koden? ',\n" +
    "    'New Password': 'Nytt lösenord',\n" +
    "    'No account? ': 'Inget konto? ',\n" +
    "    'Password attempts exceeded': 'Maximalt antal felaktiga inloggningsförsök har uppnåtts',\n" +
    "    'Reset password': 'Återställ lösenord',\n" +
    "    'Sign Out': 'Logga ut',\n" +
    "    'Sign Up': 'Registrering',\n" +
    "    'User already exists': 'Användaren finns redan',\n" +
    "    'User does not exist': 'Användaren finns inte',\n" +
    "    'Username cannot be empty': 'Användarnamnet kan inte vara tomt',\n" +
    "    'We Emailed You': 'Vi har skickat e-post till dig',\n" +
    '};\n' +
    '\n' +
    'export { svDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const idDict = {\n' +
    "    'Account recovery requires verified contact information': 'Pemulihan akun memerlukan informasi kontak terverifikasi',\n" +
    "    'Back to Sign In': 'Kembali ke Masuk',\n" +
    "    'Change Password': 'Ubah kata sandi',\n" +
    "    Changing: 'Mengubah',\n" +
    "    Code: 'Kode',\n" +
    "    'Confirm Password': 'Konfirmasi kata sandi',\n" +
    "    'Confirm Sign Up': 'Konfirmasi Pendaftaran',\n" +
    "    'Confirm SMS Code': 'Konfirmasi Kode SMS',\n" +
    "    'Confirm TOTP Code': 'Konfirmasi Kode TOTP',\n" +
    "    Confirm: 'Konfirmasi',\n" +
    "    'Confirmation Code': 'Kode Konfirmasi',\n" +
    "    Confirming: 'Mengkonfirmasi',\n" +
    "    'Create a new account': 'Buat akun baru',\n" +
    "    'Create Account': 'Buat Akun',\n" +
    "    'Creating Account': 'Membuat Akun',\n" +
    "    'Dismiss alert': 'Hentikan pemberitahuan',\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Masukkan kode anda',\n" +
    "    'Enter your Email': 'Masukkan email anda',\n" +
    "    'Enter your phone number': 'Masukkan nomor telepon anda',\n" +
    "    'Enter your username': 'Masukkan nama akun anda',\n" +
    "    'Forgot your password?': 'Lupa kata sandi? ',\n" +
    "    'Hide password': 'Sembunyikan kata sandi',\n" +
    "    'It may take a minute to arrive': 'Mungkin perlu waktu satu menit untuk tiba',\n" +
    "    Loading: 'Memuat',\n" +
    "    'New password': 'Kata sandi baru',\n" +
    "    or: 'atau',\n" +
    "    Password: 'Kata sandi',\n" +
    "    'Phone Number': 'Nomor telepon',\n" +
    "    'Resend Code': 'Kirim ulang kodenya',\n" +
    "    'Reset your Password': 'Reset Kata Sandi',\n" +
    "    'Reset your password': 'Ubah kata sandi anda',\n" +
    "    'Send code': 'Kirim kode',\n" +
    "    'Send Code': 'Kirim Kode',\n" +
    "    Sending: 'Mengirim',\n" +
    "    'Setup TOTP': 'Siapkan TOTP',\n" +
    "    'Show password': 'Tampilkan kata sandi',\n" +
    "    'Sign in to your account': 'Masuk akun anda',\n" +
    "    'Sign In with Amazon': 'Masuk dengan Amazon',\n" +
    "    'Sign In with Apple': 'Masuk dengan Apple',\n" +
    "    'Sign In with Facebook': 'Masuk dengan Facebook',\n" +
    "    'Sign In with Google': 'Masuk dengan Google',\n" +
    "    'Sign in': 'Masuk',\n" +
    "    'Sign In': 'Masuk',\n" +
    "    'Signing in': 'Memasuki',\n" +
    "    Skip: 'Lewati',\n" +
    "    Submit: 'Ajukan',\n" +
    "    Submitting: 'Mengajukan',\n" +
    "    Username: 'Nama akun',\n" +
    "    'Verify Contact': 'Verifikasi Kontak',\n" +
    "    Verify: 'Verifikasi',\n" +
    "    'We Sent A Code': 'Kami Mengirim Kode',\n" +
    "    'We Texted You': 'Kami mengirim SMS kepada Anda',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Kode Anda segera hadir. Untuk masuk, masukkan kode yang kami kirimkan kepada Anda',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Akun dengan email tersebut sudah terdaftar.',\n" +
    "    'Attempt limit exceeded, please try after some time.': 'Batas percobaan terlampaui, mohon coba lagi setelah beberapa waktu.',\n" +
    "    'Cannot reset password for the user as there is no registered/verified email or phone_number': 'Tidak dapat mengatur ulang kata sandi karena tidak ada email terdaftar / terverifikasi atau nomor telepon',\n" +
    "    Change: 'Ubah',\n" +
    "    'Confirm a Code': 'Konfirmasi kode',\n" +
    "    'Create account': 'Buat akun',\n" +
    "    'Enter your password': 'Masukkan kata sandi anda',\n" +
    "    'Forgot Password': 'Lupa kata sandi',\n" +
    "    'Have an account? ': 'Sudah punya akun? ',\n" +
    "    Hello: 'Halo',\n" +
    "    'Incorrect username or password.': 'Nama akun atau kata sandi salah.',\n" +
    "    'Invalid phone number format': 'Nomor telepon tidak sesuai dengan format.',\n" +
    "    'Invalid verification code provided, please try again.': 'Kode verifikasi tidak sesuai, mohon coba lagi.',\n" +
    "    'It may take a minute to arrive.': 'Mungkin perlu beberapa waktu untuk tiba.',\n" +
    "    'Lost your code? ': 'Kode anda hilang?',\n" +
    "    Name: 'Nama',\n" +
    "    'Network error': 'Galat jaringan',\n" +
    "    'No account? ': 'Tidak ada akun?',\n" +
    "    'Password did not conform with policy: Password not long enough': 'Kata sandi tidak sesuai dengan aturan: Kata sandi kurang panjang',\n" +
    "    'Resend a Code': 'Renvoyer un code',\n" +
    "    'Reset password': 'Ubah kata sandi anda',\n" +
    "    Send: 'Kirim',\n" +
    "    'Sign In with AWS': 'Masuk dengan AWS',\n" +
    "    'Sign Up with Amazon': 'Daftar dengan Amazon',\n" +
    "    'Sign Up with AWS': 'Daftar dengan AWS',\n" +
    "    'Sign Up with Facebook': 'Daftar dengan Facebook',\n" +
    "    'Sign Up with Google': 'Daftar dengan Google',\n" +
    "    SMS: 'SMS',\n" +
    "    'User already exists': 'Akun sudah terdaftar',\n" +
    "    'User does not exist.': 'Akun tidak terdaftar.',\n" +
    "    'User is disabled.': 'Akun dinonaktifkan.',\n" +
    "    'Username cannot be empty': 'Nama akun tidak boleh kosong',\n" +
    "    'Username/client id combination not found.': 'Nama akun atau id tidak ditemukan.',\n" +
    "    'We Emailed You': 'Kami mengirimkanmu email',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Kode anda dalam pengiriman. Untuk masuk, masukkan kode yang kami emailkan ke',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Kode anda dalam pengiriman. Untuk masuk, masukkan kode yang kami tuliskan ke',\n" +
    "    'Your passwords must match': 'Kata sandi harus sama',\n" +
    '};\n' +
    '\n' +
    'export { idDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const trDict = {\n' +
    "    'Account recovery requires verified contact information': 'Hesap kurtarma, doğrulanmış iletişim bilgilerini gerektirir',\n" +
    "    'Back to Sign In': 'Oturum Açmaya Geri Dön',\n" +
    "    'Change Password': 'Şifreyi Değiştir',\n" +
    "    Changing: 'Değiştiriliyor',\n" +
    "    Code: 'Kod',\n" +
    "    'Confirm Password': 'Şifreyi Doğrula',\n" +
    "    'Confirm Sign Up': 'Kayıt İşlemini Doğrula',\n" +
    "    'Confirm SMS Code': 'SMS Kodunu Doğrula',\n" +
    "    'Confirm TOTP Code': 'Tek Kullanımlık Şifreyi Doğrula',\n" +
    "    Confirm: 'Doğrula',\n" +
    "    'Confirmation Code': 'Doğrulama Kodu',\n" +
    "    Confirming: 'Doğrulanıyor',\n" +
    "    'Create a new account': 'Yeni bir hesap oluştur',\n" +
    "    'Create Account': 'Hesap Oluştur',\n" +
    "    'Creating Account': 'Hesap Oluşturuluyor',\n" +
    "    'Dismiss alert': 'Uyarıyı reddet',\n" +
    "    Email: 'E-posta',\n" +
    "    'Enter your code': 'Kodu girin',\n" +
    "    'Enter your Email': 'E-posta adresinizi girin',\n" +
    "    'Enter your phone number': 'Telefon numaranızı girin',\n" +
    "    'Enter your username': 'Kullanıcı adınızı girin',\n" +
    "    'Forgot your password?': 'Şifrenizi mi unuttunuz?',\n" +
    "    'Hide password': 'Şifreyi gizle',\n" +
    "    'It may take a minute to arrive': 'Kodun gelmesi bir dakika sürebilir',\n" +
    "    Loading: 'Yükleniyor',\n" +
    "    'New password': 'Yeni şifre',\n" +
    "    or: 'veya',\n" +
    "    Password: 'Şifre',\n" +
    "    'Phone Number': 'Telefon Numarası',\n" +
    "    'Resend Code': 'Kodu Yeniden Gönder',\n" +
    "    'Reset your password': 'Şifrenizi sıfırlayın',\n" +
    "    'Reset your Password': 'Şifrenizi Sıfırlayın',\n" +
    "    'Send code': 'Kod gönder',\n" +
    "    'Send Code': 'Kod Gönder',\n" +
    "    Sending: 'Gönderiliyor',\n" +
    "    'Setup TOTP': 'Tek kullanımlık şifre kurulumu yap',\n" +
    "    'Show password': 'Şifreyi göster',\n" +
    "    'Sign in to your account': 'Hesabınızda oturum açın',\n" +
    "    'Sign In with Amazon': 'Amazon ile Oturum Aç',\n" +
    "    'Sign In with Apple': 'Apple ile Oturum Aç',\n" +
    "    'Sign In with Facebook': 'Facebook ile Oturum Aç',\n" +
    "    'Sign In with Google': 'Google ile Oturum Aç',\n" +
    "    'Sign in': 'Oturum aç',\n" +
    "    'Sign In': 'Oturum Aç',\n" +
    "    'Signing in': 'Oturum açılıyor',\n" +
    "    Skip: 'Atla',\n" +
    "    Submit: 'Gönder',\n" +
    "    Submitting: 'Gönderiliyor',\n" +
    "    Username: 'Kullanıcı adı',\n" +
    "    'Verify Contact': 'Kişiyi Doğrula',\n" +
    "    Verify: 'Doğrula',\n" +
    "    'We Emailed You': 'Size E-posta Gönderdik',\n" +
    "    'We Sent A Code': 'Bir Kod Gönderdik',\n" +
    "    'We Texted You': 'Size Mesaj Gönderdik',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Kodunuz yolda. Oturum açmak için, gönderdiğimiz e-postadaki kodu girin',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Kodunuz yolda. Oturum açmak için, size gönderdiğimiz kodu girin',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Kodunuz yolda. Oturum açmak için, gönderdiğimiz mesajdaki kodu girin',\n" +
    '    // Additional translations provided by customers\n' +
    "    'An account with the given email already exists.': 'Bu e-postaya ait zaten bir hesap var.',\n" +
    "    'Confirm Sign In': 'Oturum Açmayı Doğrula',\n" +
    "    'Have an account? ': 'Hesabınız var mı? ',\n" +
    "    'Incorrect username or password': 'Yanlış kullanıcı adı ya da şifre',\n" +
    "    'Invalid password format': 'Geçersiz parola formatı',\n" +
    "    'Invalid phone number format': 'Geçersiz telefon numarası formatı',\n" +
    "    'Lost your code? ': 'Kodu mu kaybettiniz? ',\n" +
    "    'No account? ': 'Hesabınız yok mu? ',\n" +
    "    'Password attempts exceeded': 'Maksimum oturum açma girişimi aşıldı',\n" +
    "    'Sign Out': 'Çıkış yap',\n" +
    "    'Sign Up': 'Kayıt Ol',\n" +
    "    'User already exists': 'Bu kullanıcı zaten var',\n" +
    "    'User does not exist': 'Böyle bir kullanıcı mevcut değil',\n" +
    "    'Username cannot be empty': 'Kullanıcı adı boş olamaz',\n" +
    '};\n' +
    '\n' +
    'export { trDict };\n'
} [Function: logger]
____9999999____ {
  code: 'var client = {}; export {client as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/react-dom/index.js";'
} [Function: logger]
____9999999____ {
  code: 'const uaDict = {\n' +
    "    'Account recovery requires verified contact information': 'Відновлення облікового запису потребує контактної інформації',\n" +
    "    'Back to Sign In': 'Назад на сторінку входу',\n" +
    "    'Change Password': 'Змінити пароль',\n" +
    "    Changing: 'Змінюємо',\n" +
    "    Code: 'Код',\n" +
    "    'Confirm Password': 'Підтвердіть пароль',\n" +
    "    'Confirm Sign Up': 'Підтвердіть реєстрацію',\n" +
    "    'Confirm SMS Code': 'Підтвердіть SMS код',\n" +
    "    'Confirm TOTP Code': 'Підтвердіть TOTP код',\n" +
    "    Confirm: 'Підтвердити',\n" +
    "    'Confirmation Code': 'Код підтвердження',\n" +
    "    Confirming: 'Підтверджуємо',\n" +
    "    'Create a new account': 'Зареєструватися',\n" +
    "    'Create Account': 'Зареєструватися',\n" +
    "    'Creating Account': 'Реєструємо',\n" +
    "    'Dismiss alert': 'Відхилити сповіщення',\n" +
    "    Email: 'Email',\n" +
    "    'Enter your code': 'Введіть код',\n" +
    "    'Enter your Email': 'Введіть ваш email',\n" +
    "    'Enter your phone number': 'Введіть ваш номер телефону',\n" +
    "    'Enter your username': 'Введіть ваше імʼя користувача',\n" +
    "    'Forgot password?': 'Забули пароль?',\n" +
    "    'Forgot your password?': 'Забули ваш пароль?',\n" +
    "    'Hide password': 'Сховати пароль',\n" +
    "    'It may take a minute to arrive': 'Доставка може тривати хвилину',\n" +
    "    Loading: 'Загружаємо',\n" +
    "    'New password': 'Новий пароль',\n" +
    "    or: 'або',\n" +
    "    Password: 'Пароль',\n" +
    "    'Phone Number': 'Номер Телефону',\n" +
    "    'Resend Code': 'Відправити код повторно',\n" +
    "    'Reset your password': 'Скинути пароль',\n" +
    "    'Reset your Password': 'Скинути пароль',\n" +
    "    'Send code': 'Відправити код',\n" +
    "    'Send Code': 'Відправити код',\n" +
    "    Sending: 'Відправляємо',\n" +
    "    'Setup TOTP': 'Налаштувати TOTP',\n" +
    "    'Show password': 'Показати пароль',\n" +
    "    'Sign in to your account': 'Увійти у ваш обліковий запис',\n" +
    "    'Sign In with Amazon': 'Увійти з Amazon',\n" +
    "    'Sign In with Apple': 'Увійти з Apple',\n" +
    "    'Sign In with Facebook': 'Увійти з Facebook',\n" +
    "    'Sign In with Google': 'Увійти з Google',\n" +
    "    'Sign in': 'Увійти',\n" +
    "    'Sign In': 'Увійти',\n" +
    "    'Signing in': 'Входимо',\n" +
    "    Skip: 'Пропустити',\n" +
    "    Submit: 'Відправити',\n" +
    "    Submitting: 'Відправляємо',\n" +
    "    Username: 'Імʼя користувача',\n" +
    "    'Verify Contact': 'Підтвердити Контакт',\n" +
    "    Verify: 'Підтвердити',\n" +
    "    'We Emailed You': 'Ми відправили вам Email',\n" +
    "    'We Sent A Code': 'Ми відправили код',\n" +
    "    'We Texted You': 'Ми відправили вам текстове повідомлення',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Ваш код вже в дорозі. Щоб увійти, введіть код, що ми відправили вам на Email',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Ваш код вже в дорозі. Щоб увійти, введіть код, що ми вам відправили',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Ваш код вже в дорозі. Щоб увійти, введіть код, що ми відправили вам текстовим повідомленням',\n" +
    '    // Additional translations\n' +
    "    'An account with the given email already exists.': 'Обліковий запис з цим Email вже існує.',\n" +
    "    'Confirm a Code': 'Підтвердіть код',\n" +
    "    'Confirm Sign In': 'Підтвердіть вхід',\n" +
    "    'Forgot Password': 'Забули пароль',\n" +
    "    'Incorrect username or password.': 'Невірне імʼя користувача або пароль',\n" +
    "    'Invalid password format': 'Невірний формат паролю',\n" +
    "    'Invalid phone number format': 'Невірний формат номеру телефону',\n" +
    "    'Loading...': 'Загружаємо...',\n" +
    "    'New Password': 'Новий пароль',\n" +
    "    'Resend a Code': 'Відправити код повторно',\n" +
    "    'Reset Password': 'Скинути пароль',\n" +
    "    'Sign Out': 'Вийти',\n" +
    "    'Sign Up with Amazon': 'Зареєструватися з Amazon',\n" +
    "    'Sign Up with Apple': 'Зареєструватися з Apple',\n" +
    "    'Sign Up with Facebook': 'Зареєструватися з Facebook',\n" +
    "    'Sign Up with Google': 'Зареєструватися з Google',\n" +
    "    'Sign Up': 'Зареєструватися',\n" +
    "    'User already exists': 'Користувач вже існує',\n" +
    "    'User does not exist': 'Такий користувач не існує',\n" +
    "    'Username cannot be empty': 'Імʼя користувача не може бути пустим',\n" +
    "    'Your passwords must match': 'Паролі мають збігатися',\n" +
    '};\n' +
    '\n' +
    'export { uaDict };\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign, __spreadArray, __read, __values } from './_virtual/_tslib.js';\n" +
    "import { SpecialTargets, ActionTypes } from './types.js';\n" +
    "import { init, raise as raise$1, send as send$1, update, log as log$1, cancel as cancel$1, assign as assign$1, error as error$1, stop as stop$1, pure as pure$1, choose as choose$1 } from './actionTypes.js';\n" +
    "import * as actionTypes from './actionTypes.js';\n" +
    'export { actionTypes };\n' +
    "import { toSCXMLEvent, isString, isFunction, toEventObject, getEventType, updateContext, flatten, isArray, toArray, toGuard, evaluateGuard, warn } from './utils.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    '\n' +
    'var initEvent = /*#__PURE__*/toSCXMLEvent({\n' +
    '  type: init\n' +
    '});\n' +
    'function getActionFunction(actionType, actionFunctionMap) {\n' +
    '  return actionFunctionMap ? actionFunctionMap[actionType] || undefined : undefined;\n' +
    '}\n' +
    'function toActionObject(action, actionFunctionMap) {\n' +
    '  var actionObject;\n' +
    '\n' +
    "  if (isString(action) || typeof action === 'number') {\n" +
    '    var exec = getActionFunction(action, actionFunctionMap);\n' +
    '\n' +
    '    if (isFunction(exec)) {\n' +
    '      actionObject = {\n' +
    '        type: action,\n' +
    '        exec: exec\n' +
    '      };\n' +
    '    } else if (exec) {\n' +
    '      actionObject = exec;\n' +
    '    } else {\n' +
    '      actionObject = {\n' +
    '        type: action,\n' +
    '        exec: undefined\n' +
    '      };\n' +
    '    }\n' +
    '  } else if (isFunction(action)) {\n' +
    '    actionObject = {\n' +
    '      // Convert action to string if unnamed\n' +
    '      type: action.name || action.toString(),\n' +
    '      exec: action\n' +
    '    };\n' +
    '  } else {\n' +
    '    var exec = getActionFunction(action.type, actionFunctionMap);\n' +
    '\n' +
    '    if (isFunction(exec)) {\n' +
    '      actionObject = __assign(__assign({}, action), {\n' +
    '        exec: exec\n' +
    '      });\n' +
    '    } else if (exec) {\n' +
    '      var actionType = exec.type || action.type;\n' +
    '      actionObject = __assign(__assign(__assign({}, exec), action), {\n' +
    '        type: actionType\n' +
    '      });\n' +
    '    } else {\n' +
    '      actionObject = action;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return actionObject;\n' +
    '}\n' +
    'var toActionObjects = function (action, actionFunctionMap) {\n' +
    '  if (!action) {\n' +
    '    return [];\n' +
    '  }\n' +
    '\n' +
    '  var actions = isArray(action) ? action : [action];\n' +
    '  return actions.map(function (subAction) {\n' +
    '    return toActionObject(subAction, actionFunctionMap);\n' +
    '  });\n' +
    '};\n' +
    'function toActivityDefinition(action) {\n' +
    '  var actionObject = toActionObject(action);\n' +
    '  return __assign(__assign({\n' +
    '    id: isString(action) ? action : actionObject.id\n' +
    '  }, actionObject), {\n' +
    '    type: actionObject.type\n' +
    '  });\n' +
    '}\n' +
    '/**\r\n' +
    ' * Raises an event. This places the event in the internal event queue, so that\r\n' +
    ' * the event is immediately consumed by the machine in the current step.\r\n' +
    ' *\r\n' +
    ' * @param eventType The event to raise.\r\n' +
    ' */\n' +
    '\n' +
    'function raise(event, options) {\n' +
    '  return {\n' +
    '    type: raise$1,\n' +
    "    event: typeof event === 'function' ? event : toEventObject(event),\n" +
    '    delay: options ? options.delay : undefined,\n' +
    '    id: options === null || options === void 0 ? void 0 : options.id\n' +
    '  };\n' +
    '}\n' +
    'function resolveRaise(action, ctx, _event, delaysMap) {\n' +
    '  var meta = {\n' +
    '    _event: _event\n' +
    '  };\n' +
    '  var resolvedEvent = toSCXMLEvent(isFunction(action.event) ? action.event(ctx, _event.data, meta) : action.event);\n' +
    '  var resolvedDelay;\n' +
    '\n' +
    '  if (isString(action.delay)) {\n' +
    '    var configDelay = delaysMap && delaysMap[action.delay];\n' +
    '    resolvedDelay = isFunction(configDelay) ? configDelay(ctx, _event.data, meta) : configDelay;\n' +
    '  } else {\n' +
    '    resolvedDelay = isFunction(action.delay) ? action.delay(ctx, _event.data, meta) : action.delay;\n' +
    '  }\n' +
    '\n' +
    '  return __assign(__assign({}, action), {\n' +
    '    type: raise$1,\n' +
    '    _event: resolvedEvent,\n' +
    '    delay: resolvedDelay\n' +
    '  });\n' +
    '}\n' +
    '/**\r\n' +
    ' * Sends an event. This returns an action that will be read by an interpreter to\r\n' +
    ' * send the event in the next step, after the current step is finished executing.\r\n' +
    ' *\r\n' +
    ' * @deprecated Use the `sendTo(...)` action creator instead.\r\n' +
    ' *\r\n' +
    ' * @param event The event to send.\r\n' +
    ' * @param options Options to pass into the send event:\r\n' +
    ' *  - `id` - The unique send event identifier (used with `cancel()`).\r\n' +
    ' *  - `delay` - The number of milliseconds to delay the sending of the event.\r\n' +
    ' *  - `to` - The target of this event (by default, the machine the event was sent from).\r\n' +
    ' */\n' +
    '\n' +
    'function send(event, options) {\n' +
    '  return {\n' +
    '    to: options ? options.to : undefined,\n' +
    '    type: send$1,\n' +
    '    event: isFunction(event) ? event : toEventObject(event),\n' +
    '    delay: options ? options.delay : undefined,\n' +
    "    // TODO: don't auto-generate IDs here like that\n" +
    '    // there is too big chance of the ID collision\n' +
    '    id: options && options.id !== undefined ? options.id : isFunction(event) ? event.name : getEventType(event)\n' +
    '  };\n' +
    '}\n' +
    'function resolveSend(action, ctx, _event, delaysMap) {\n' +
    '  var meta = {\n' +
    '    _event: _event\n' +
    '  }; // TODO: helper function for resolving Expr\n' +
    '\n' +
    '  var resolvedEvent = toSCXMLEvent(isFunction(action.event) ? action.event(ctx, _event.data, meta) : action.event);\n' +
    '  var resolvedDelay;\n' +
    '\n' +
    '  if (isString(action.delay)) {\n' +
    '    var configDelay = delaysMap && delaysMap[action.delay];\n' +
    '    resolvedDelay = isFunction(configDelay) ? configDelay(ctx, _event.data, meta) : configDelay;\n' +
    '  } else {\n' +
    '    resolvedDelay = isFunction(action.delay) ? action.delay(ctx, _event.data, meta) : action.delay;\n' +
    '  }\n' +
    '\n' +
    '  var resolvedTarget = isFunction(action.to) ? action.to(ctx, _event.data, meta) : action.to;\n' +
    '  return __assign(__assign({}, action), {\n' +
    '    to: resolvedTarget,\n' +
    '    _event: resolvedEvent,\n' +
    '    event: resolvedEvent.data,\n' +
    '    delay: resolvedDelay\n' +
    '  });\n' +
    '}\n' +
    '/**\r\n' +
    " * Sends an event to this machine's parent.\r\n" +
    ' *\r\n' +
    ' * @param event The event to send to the parent machine.\r\n' +
    ' * @param options Options to pass into the send event.\r\n' +
    ' */\n' +
    '\n' +
    'function sendParent(event, options) {\n' +
    '  return send(event, __assign(__assign({}, options), {\n' +
    '    to: SpecialTargets.Parent\n' +
    '  }));\n' +
    '}\n' +
    '/**\r\n' +
    ' * Sends an event to an actor.\r\n' +
    ' *\r\n' +
    ' * @param actor The `ActorRef` to send the event to.\r\n' +
    ' * @param event The event to send, or an expression that evaluates to the event to send\r\n' +
    ' * @param options Send action options\r\n' +
    ' * @returns An XState send action object\r\n' +
    ' */\n' +
    '\n' +
    'function sendTo(actor, event, options) {\n' +
    '  return send(event, __assign(__assign({}, options), {\n' +
    '    to: actor\n' +
    '  }));\n' +
    '}\n' +
    '/**\r\n' +
    " * Sends an update event to this machine's parent.\r\n" +
    ' */\n' +
    '\n' +
    'function sendUpdate() {\n' +
    '  return sendParent(update);\n' +
    '}\n' +
    '/**\r\n' +
    ' * Sends an event back to the sender of the original event.\r\n' +
    ' *\r\n' +
    ' * @param event The event to send back to the sender\r\n' +
    ' * @param options Options to pass into the send event\r\n' +
    ' */\n' +
    '\n' +
    'function respond(event, options) {\n' +
    '  return send(event, __assign(__assign({}, options), {\n' +
    '    to: function (_, __, _a) {\n' +
    '      var _event = _a._event;\n' +
    '      return _event.origin; // TODO: handle when _event.origin is undefined\n' +
    '    }\n' +
    '  }));\n' +
    '}\n' +
    '\n' +
    'var defaultLogExpr = function (context, event) {\n' +
    '  return {\n' +
    '    context: context,\n' +
    '    event: event\n' +
    '  };\n' +
    '};\n' +
    '/**\r\n' +
    ' *\r\n' +
    ' * @param expr The expression function to evaluate which will be logged.\r\n' +
    ' *  Takes in 2 arguments:\r\n' +
    ' *  - `ctx` - the current state context\r\n' +
    ' *  - `event` - the event that caused this action to be executed.\r\n' +
    ' * @param label The label to give to the logged expression.\r\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function log(expr, label) {\n' +
    '  if (expr === void 0) {\n' +
    '    expr = defaultLogExpr;\n' +
    '  }\n' +
    '\n' +
    '  return {\n' +
    '    type: log$1,\n' +
    '    label: label,\n' +
    '    expr: expr\n' +
    '  };\n' +
    '}\n' +
    'var resolveLog = function (action, ctx, _event) {\n' +
    '  return __assign(__assign({}, action), {\n' +
    '    value: isString(action.expr) ? action.expr : action.expr(ctx, _event.data, {\n' +
    '      _event: _event\n' +
    '    })\n' +
    '  });\n' +
    '};\n' +
    '/**\r\n' +
    ' * Cancels an in-flight `send(...)` action. A canceled sent action will not\r\n' +
    ' * be executed, nor will its event be sent, unless it has already been sent\r\n' +
    " * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).\r\n" +
    ' *\r\n' +
    ' * @param sendId The `id` of the `send(...)` action to cancel.\r\n' +
    ' */\n' +
    '\n' +
    'var cancel = function (sendId) {\n' +
    '  return {\n' +
    '    type: cancel$1,\n' +
    '    sendId: sendId\n' +
    '  };\n' +
    '};\n' +
    '/**\r\n' +
    ' * Starts an activity.\r\n' +
    ' *\r\n' +
    ' * @param activity The activity to start.\r\n' +
    ' */\n' +
    '\n' +
    'function start(activity) {\n' +
    '  var activityDef = toActivityDefinition(activity);\n' +
    '  return {\n' +
    '    type: ActionTypes.Start,\n' +
    '    activity: activityDef,\n' +
    '    exec: undefined\n' +
    '  };\n' +
    '}\n' +
    '/**\r\n' +
    ' * Stops an activity.\r\n' +
    ' *\r\n' +
    ' * @param actorRef The activity to stop.\r\n' +
    ' */\n' +
    '\n' +
    'function stop(actorRef) {\n' +
    '  var activity = isFunction(actorRef) ? actorRef : toActivityDefinition(actorRef);\n' +
    '  return {\n' +
    '    type: ActionTypes.Stop,\n' +
    '    activity: activity,\n' +
    '    exec: undefined\n' +
    '  };\n' +
    '}\n' +
    'function resolveStop(action, context, _event) {\n' +
    '  var actorRefOrString = isFunction(action.activity) ? action.activity(context, _event.data) : action.activity;\n' +
    "  var resolvedActorRef = typeof actorRefOrString === 'string' ? {\n" +
    '    id: actorRefOrString\n' +
    '  } : actorRefOrString;\n' +
    '  var actionObject = {\n' +
    '    type: ActionTypes.Stop,\n' +
    '    activity: resolvedActorRef\n' +
    '  };\n' +
    '  return actionObject;\n' +
    '}\n' +
    '/**\r\n' +
    ' * Updates the current context of the machine.\r\n' +
    ' *\r\n' +
    ' * @param assignment An object that represents the partial context to update.\r\n' +
    ' */\n' +
    '\n' +
    'var assign = function (assignment) {\n' +
    '  return {\n' +
    '    type: assign$1,\n' +
    '    assignment: assignment\n' +
    '  };\n' +
    '};\n' +
    'function isActionObject(action) {\n' +
    "  return typeof action === 'object' && 'type' in action;\n" +
    '}\n' +
    '/**\r\n' +
    ' * Returns an event type that represents an implicit event that\r\n' +
    ' * is sent after the specified `delay`.\r\n' +
    ' *\r\n' +
    ' * @param delayRef The delay in milliseconds\r\n' +
    ' * @param id The state node ID where this event is handled\r\n' +
    ' */\n' +
    '\n' +
    'function after(delayRef, id) {\n' +
    `  var idSuffix = id ? "#".concat(id) : '';\n` +
    '  return "".concat(ActionTypes.After, "(").concat(delayRef, ")").concat(idSuffix);\n' +
    '}\n' +
    '/**\r\n' +
    ' * Returns an event that represents that a final state node\r\n' +
    ' * has been reached in the parent state node.\r\n' +
    ' *\r\n' +
    " * @param id The final state node's parent state node `id`\r\n" +
    ' * @param data The data to pass into the event\r\n' +
    ' */\n' +
    '\n' +
    'function done(id, data) {\n' +
    '  var type = "".concat(ActionTypes.DoneState, ".").concat(id);\n' +
    '  var eventObject = {\n' +
    '    type: type,\n' +
    '    data: data\n' +
    '  };\n' +
    '\n' +
    '  eventObject.toString = function () {\n' +
    '    return type;\n' +
    '  };\n' +
    '\n' +
    '  return eventObject;\n' +
    '}\n' +
    '/**\r\n' +
    ' * Returns an event that represents that an invoked service has terminated.\r\n' +
    ' *\r\n' +
    ' * An invoked service is terminated when it has reached a'... 9820 more characters
} [Function: logger]
____9999999____ {
  code: 'const defaultTexts = {\n' +
    "    ADD_PROFILE: 'Add your Profile',\n" +
    "    ADD_WEBSITE: 'Add your Website',\n" +
    "    BACK_SIGN_IN: 'Back to Sign In',\n" +
    "    BIRTHDATE: 'Birthdate',\n" +
    "    CHANGE_PASSWORD: 'Change Password',\n" +
    "    CHANGING_PASSWORD: 'Changing',\n" +
    "    CODE: 'Code',\n" +
    "    CODE_ARRIVAL: 'It may take a minute to arrive',\n" +
    "    CODE_EMAILED: 'Your code is on the way. To log in, enter the code we emailed to',\n" +
    "    CODE_SENT: 'Your code is on the way. To log in, enter the code we sent you',\n" +
    "    CODE_TEXTED: 'Your code is on the way. To log in, enter the code we texted to',\n" +
    "    CONFIRM_PASSWORD: 'Confirm Password',\n" +
    "    CONFIRM_PASSWORD_PLACEHOLDER: 'Please confirm your Password',\n" +
    "    CONFIRM_RESET_PASSWORD_HEADING: 'Reset your Password',\n" +
    "    CONFIRM_SIGNUP_HEADING: 'Confirm Sign Up',\n" +
    "    CONFIRM_SMS: 'Confirm SMS Code',\n" +
    "    CONFIRM_TOTP: 'Confirm TOTP Code',\n" +
    "    CONFIRM: 'Confirm',\n" +
    "    CONFIRMATION_CODE: 'Confirmation Code',\n" +
    "    CONFIRMING: 'Confirming',\n" +
    "    CREATE_ACCOUNT: 'Create Account',\n" +
    "    CREATING_ACCOUNT: 'Creating Account',\n" +
    "    EMAIL_ADDRESS: 'Email',\n" +
    "    ENTER_BIRTHDATE: 'Enter your Birthdate',\n" +
    "    ENTER_CODE: 'Enter your code',\n" +
    "    ENTER_CONFIRMATION_CODE: 'Enter your Confirmation Code',\n" +
    "    ENTER_EMAIL: 'Enter your Email',\n" +
    "    ENTER_FAMILY_NAME: 'Enter your Family Name',\n" +
    "    ENTER_GIVEN_NAME: 'Enter your Given Name',\n" +
    "    ENTER_MIDDLE_NAME: 'Enter your Middle Name',\n" +
    "    ENTER_NAME: 'Enter your Name',\n" +
    "    ENTER_NICK_NAME: 'Enter your Nickname',\n" +
    "    ENTER_PASSWORD: 'Enter your Password',\n" +
    "    ENTER_PHONE_NUMBER: 'Enter your Phone Number',\n" +
    "    ENTER_PREFERRED_USERNAME: 'Enter your Preferred Username',\n" +
    "    ENTER_USERNAME: 'Enter your username',\n" +
    "    FAMILY_NAME: 'Family Name',\n" +
    "    GIVEN_NAME: 'Given Name',\n" +
    "    FORGOT_PASSWORD: 'Forgot Password?',\n" +
    "    FORGOT_YOUR_PASSWORD: 'Forgot your password?',\n" +
    "    HIDE_PASSWORD: 'Hide password',\n" +
    "    LOADING: 'Loading',\n" +
    "    LOGIN_NAME: 'Username',\n" +
    "    MIDDLE_NAME: 'Middle Name',\n" +
    "    NAME: 'Name',\n" +
    "    NICKNAME: 'Nickname',\n" +
    "    NEW_PASSWORD: 'New password',\n" +
    "    OR: 'or',\n" +
    "    PASSWORD: 'Password',\n" +
    "    PHONE_NUMBER: 'Phone Number',\n" +
    "    PREFERRED_USERNAME: 'Preferred Username',\n" +
    "    PROFILE: 'Profile',\n" +
    "    RESEND_CODE: 'Resend Code',\n" +
    "    RESET_PASSWORD_HEADING: 'Reset your password',\n" +
    "    RESET_PASSWORD: 'Reset Password',\n" +
    "    SEND_CODE: 'Send code',\n" +
    "    SENDING: 'Sending',\n" +
    "    SETUP_TOTP: 'Setup TOTP',\n" +
    "    SHOW_PASSWORD: 'Show password',\n" +
    "    SIGN_IN_BUTTON: 'Sign in',\n" +
    "    SIGN_IN_TAB: 'Sign In',\n" +
    "    SIGN_IN_WITH_AMAZON: 'Sign In with Amazon',\n" +
    "    SIGN_IN_WITH_APPLE: 'Sign In with Apple',\n" +
    "    SIGN_IN_WITH_FACEBOOK: 'Sign In with Facebook',\n" +
    "    SIGN_IN_WITH_GOOGLE: 'Sign In with Google',\n" +
    "    SIGN_IN: 'Sign in to your account',\n" +
    "    SIGN_UP_BUTTON: 'Create a new account',\n" +
    "    SIGNING_IN_BUTTON: 'Signing in',\n" +
    "    SKIP: 'Skip',\n" +
    "    SUBMIT: 'Submit',\n" +
    "    SUBMITTING: 'Submitting',\n" +
    "    UPPERCASE_COPY: 'COPY',\n" +
    "    VERIFY_CONTACT: 'Verify Contact',\n" +
    "    VERIFY_HEADING: 'Account recovery requires verified contact information',\n" +
    "    VERIFY: 'Verify',\n" +
    "    WE_EMAILED: 'We Emailed You',\n" +
    "    WE_SENT_CODE: 'We Sent A Code',\n" +
    "    WE_TEXTED: 'We Texted You',\n" +
    "    WEBSITE: 'Website',\n" +
    '};\n' +
    '\n' +
    'export { defaultTexts };\n'
} [Function: logger]
____9999999____ {
  code: 'const ruDict = {\n' +
    "    'Account recovery requires verified contact information': 'Восстановление учетной записи требует проверки контактной информации',\n" +
    "    'Back to Sign In': 'Назад, чтобы войти',\n" +
    "    'Change Password': 'изменять пароль',\n" +
    "    Changing: 'Изменение',\n" +
    "    Code: 'Код',\n" +
    "    'Confirm Password': 'Подтверждение пароля',\n" +
    "    'Confirm Sign Up': 'Подтверждение зарегистрироваться',\n" +
    "    'Confirm SMS Code': 'Подтверждение CMC-Код',\n" +
    "    'Confirm TOTP Code': 'Подтверждение TOTP-Код',\n" +
    "    Confirm: 'Подтверждать',\n" +
    "    'Confirmation Code': 'код подтверждения',\n" +
    "    Confirming: 'подтверждение',\n" +
    "    'Create a new account': 'Создавать новую учетную запись',\n" +
    "    'Create Account': 'Создать учетную запись',\n" +
    "    'Creating Account': 'создание учетная запись',\n" +
    "    'Dismiss alert': 'Закрыть оповещение',\n" +
    "    Email: 'электронная почта',\n" +
    "    'Enter your code': 'ввести ваш Код',\n" +
    "    'Enter your Email': 'ввести ваш электронная почта',\n" +
    "    'Enter your phone number': 'ввести ваш номер телефона',\n" +
    "    'Enter your username': 'ввести ваш имя пользователя',\n" +
    "    'Forgot your password?': 'Забыли ваш пароль?',\n" +
    "    'Hide password': 'Скрывать пароль',\n" +
    "    'It may take a minute to arrive': 'Доставка может занять некоторое время',\n" +
    "    Loading: 'Загрузка',\n" +
    "    'New password': 'Новый пароль',\n" +
    "    or: 'или',\n" +
    "    Password: 'Пароль',\n" +
    "    'Phone Number': 'Номер телефона',\n" +
    "    'Resend Code': 'Отправь еще раз Код',\n" +
    "    'Reset your password': 'сброс ваш пароль',\n" +
    "    'Reset your Password': 'сброс ваш Пароль',\n" +
    "    'Send code': 'Отправлять Код',\n" +
    "    'Send Code': 'Отправлять Код',\n" +
    "    Sending: 'отправка',\n" +
    "    'Setup TOTP': 'Настраивать TOTP',\n" +
    "    'Show password': 'Показывать пароль',\n" +
    "    'Sign in to your account': 'знак в свой аккаунт',\n" +
    "    'Sign In with Amazon': 'знак в с Amazon',\n" +
    "    'Sign In with Apple': 'знак в с Apple',\n" +
    "    'Sign In with Facebook': 'знак в с Facebook',\n" +
    "    'Sign In with Google': 'знак в с Google',\n" +
    "    'Sign in': 'знак в',\n" +
    "    'Sign In': 'знак в',\n" +
    "    'Signing in': 'подписание в',\n" +
    "    Skip: 'Пропускать',\n" +
    "    Submit: 'Представлять на рассмотрение',\n" +
    "    Submitting: 'Представив',\n" +
    "    Username: 'Имя пользователя',\n" +
    "    'Verify Contact': 'Проверить контакт',\n" +
    "    Verify: 'Проверить',\n" +
    "    'We Emailed You': 'Мы отправили вам электронное письмо',\n" +
    "    'We Sent A Code': 'Мы отправили код',\n" +
    "    'We Texted You': 'Мы отправили вам текстовое сообщение',\n" +
    "    'Your code is on the way. To log in, enter the code we emailed to': 'Ваш код отправлен. Чтобы войти в систему, введите код, который мы отправили по электронной почте',\n" +
    "    'Your code is on the way. To log in, enter the code we sent you': 'Ваш код отправлен. Чтобы войти в систему, введите код, который мы послали вам',\n" +
    "    'Your code is on the way. To log in, enter the code we texted to': 'Ваш код отправлен. Чтобы войти в систему, введите код, который мы отправили текстовым сообщением',\n" +
    '};\n' +
    '\n' +
    'export { ruDict };\n'
} [Function: logger]
____9999999____ {
  code: 'const heDict = {\n' +
    "    'Account recovery requires verified contact information': 'שחזור לקוח דורש עוד מידע',\n" +
    "    'Back to Sign In': 'חזור להרשמה',\n" +
    "    'Change Password': 'עדכון סיסמא',\n" +
    "    Changing: 'מעדכן',\n" +
    "    Code: 'קוד',\n" +
    "    'Confirm Password': 'אשר סיסמא',\n" +
    "    'Confirm Sign Up': 'אשר הרשמה',\n" +
    "    'Confirm SMS Code': 'אשר sms קוד',\n" +
    "    'Confirm TOTP Code': 'אשר totp קוד',\n" +
    "    Confirm: 'אישור',\n" +
    "    'Confirmation Code': 'אישור קוד',\n" +
    "    Confirming: 'מאשר',\n" +
    "    'Create a new account': 'צור משתמש חדש',\n" +
    "    'Create Account': 'צור משתמש',\n" +
    "    'Creating Account': 'יצירת משתמש',\n" +
    "    'Dismiss alert': 'הסר התראה',\n" +
    "    Email: 'אימייל',\n" +
    "    'Enter your code': 'הכנס את הקוד',\n" +
    "    'Enter your Email': 'הכנס את המייל שלך',\n" +
    "    'Enter your phone number': 'הכנס את מספר הטלפון שלך',\n" +
    "    'Enter your username': 'הכנס את שם המתמש שלך',\n" +
    "    'Forgot your password?': 'שכחת סיסמא ?',\n" +
    "    'Hide password': 'הסתר סיסמא',\n" +
    "    Loading: 'טוען',\n" +
    "    'New password': 'סיסמא חדשה',\n" +
    "    or: 'אוֹ',\n" +
    "    Password: 'סיסמא',\n" +
    "    'Phone Number': 'מספר טלפון',\n" +
    "    'Resend Code': 'שלח קוד שוב',\n" +
    "    'Reset your password': 'אפס סיסמא',\n" +
    "    'Reset your Password': 'אפס סיסמא',\n" +
    "    'Send code': 'שלח קוד',\n" +
    "    'Send Code': 'שלח קוד',\n" +
    "    Sending: 'שולח',\n" +
    "    'Setup TOTP': 'Setup TOTP',\n" +
    "    'Show password': 'הצג סיסמא',\n" +
    "    'Sign in to your account': 'התחבר לחשבון שלך',\n" +
    "    'Sign In with Amazon': 'Sign In with Amazon',\n" +
    "    'Sign In with Apple': 'Sign In with Apple',\n" +
    "    'Sign In with Facebook': 'Sign In with Facebook',\n" +
    "    'Sign In with Google': 'Sign In with Google',\n" +
    "    'Sign in': 'התחבר',\n" +
    "    'Sign In': 'התחבר',\n" +
    "    'Signing in': 'מתחבר',\n" +
    "    Skip: 'דלג',\n" +
    "    Submit: 'שלח',\n" +
    "    Submitting: 'שולח',\n" +
    "    Username: 'שם משתמש',\n" +
    "    'Verify Contact': 'אמת איש קשר',\n" +
    "    Verify: 'אמת',\n" +
    '};\n' +
    '\n' +
    'export { heDict };\n'
} [Function: logger]
____9999999____ {
  code: "import { StateNode } from './StateNode.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    '\n' +
    'var warned = false;\n' +
    'function Machine(config, options, initialContext) {\n' +
    '  if (initialContext === void 0) {\n' +
    '    initialContext = config.context;\n' +
    '  }\n' +
    '\n' +
    '  return new StateNode(config, options, initialContext);\n' +
    '}\n' +
    'function createMachine(config, options) {\n' +
    "  if (!IS_PRODUCTION && !('predictableActionArguments' in config) && !warned) {\n" +
    '    warned = true;\n' +
    "    console.warn('It is highly recommended to set `predictableActionArguments` to `true` when using `createMachine`. https://xstate.js.org/docs/guides/actions.html');\n" +
    '  }\n' +
    '\n' +
    '  return new StateNode(config, options);\n' +
    '}\n' +
    '\n' +
    'export { Machine, createMachine };\n'
} [Function: logger]
____9999999____ {
  code: "import { __values } from './_virtual/_tslib.js';\n" +
    "import { matchesState } from './utils.js';\n" +
    '\n' +
    'function mapState(stateMap, stateId) {\n' +
    '  var e_1, _a;\n' +
    '\n' +
    '  var foundStateId;\n' +
    '\n' +
    '  try {\n' +
    '    for (var _b = __values(Object.keys(stateMap)), _c = _b.next(); !_c.done; _c = _b.next()) {\n' +
    '      var mappedStateId = _c.value;\n' +
    '\n' +
    '      if (matchesState(mappedStateId, stateId) && (!foundStateId || stateId.length > foundStateId.length)) {\n' +
    '        foundStateId = mappedStateId;\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_1_1) {\n' +
    '    e_1 = {\n' +
    '      error: e_1_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n' +
    '    } finally {\n' +
    '      if (e_1) throw e_1.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return stateMap[foundStateId];\n' +
    '}\n' +
    '\n' +
    'export { mapState };\n'
} [Function: logger]
____9999999____ {
  code: "import { __values, __read } from './_virtual/_tslib.js';\n" +
    "import { State } from './State.js';\n" +
    '\n' +
    'function matchState(state, patterns, defaultValue) {\n' +
    '  var e_1, _a;\n' +
    '\n' +
    '  var resolvedState = State.from(state, state instanceof State ? state.context : undefined);\n' +
    '\n' +
    '  try {\n' +
    '    for (var patterns_1 = __values(patterns), patterns_1_1 = patterns_1.next(); !patterns_1_1.done; patterns_1_1 = patterns_1.next()) {\n' +
    '      var _b = __read(patterns_1_1.value, 2),\n' +
    '          stateValue = _b[0],\n' +
    '          getValue = _b[1];\n' +
    '\n' +
    '      if (resolvedState.matches(stateValue)) {\n' +
    '        return getValue(resolvedState);\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_1_1) {\n' +
    '    e_1 = {\n' +
    '      error: e_1_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (patterns_1_1 && !patterns_1_1.done && (_a = patterns_1.return)) _a.call(patterns_1);\n' +
    '    } finally {\n' +
    '      if (e_1) throw e_1.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return defaultValue(resolvedState);\n' +
    '}\n' +
    '\n' +
    'export { matchState };\n'
} [Function: logger]
____9999999____ {
  code: 'function createSchema(schema) {\n' +
    '  return schema;\n' +
    '}\n' +
    'var t = createSchema;\n' +
    '\n' +
    'export { createSchema, t };\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\n" +
    "import { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, isRaisableAction, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\n" +
    "import { State, stateValuesEqual } from './State.js';\n" +
    "import { start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\n" +
    "import { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    "import { STATE_DELIMITER } from './constants.js';\n" +
    "import { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\n" +
    "import { createInvocableActor } from './Actor.js';\n" +
    "import { toInvokeDefinition } from './invokeUtils.js';\n" +
    '\n' +
    "var NULL_EVENT = '';\n" +
    "var STATE_IDENTIFIER = '#';\n" +
    "var WILDCARD = '*';\n" +
    'var EMPTY_OBJECT = {};\n' +
    '\n' +
    'var isStateId = function (str) {\n' +
    '  return str[0] === STATE_IDENTIFIER;\n' +
    '};\n' +
    '\n' +
    'var createDefaultOptions = function () {\n' +
    '  return {\n' +
    '    actions: {},\n' +
    '    guards: {},\n' +
    '    services: {},\n' +
    '    activities: {},\n' +
    '    delays: {}\n' +
    '  };\n' +
    '};\n' +
    '\n' +
    'var validateArrayifiedTransitions = function (stateNode, event, transitions) {\n' +
    '  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n' +
    "    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n" +
    '  });\n' +
    `  var eventText = event === NULL_EVENT ? 'the transient event' : "event '".concat(event, "'");\n` +
    `  warn(!hasNonLastUnguardedTarget, "One or more transitions for ".concat(eventText, " on state '").concat(stateNode.id, "' are unreachable. ") + "Make sure that the default transition is the last one defined.");\n` +
    '};\n' +
    '\n' +
    'var StateNode =\n' +
    '/*#__PURE__*/\n' +
    '\n' +
    '/** @class */\n' +
    'function () {\n' +
    '  function StateNode(\n' +
    '  /**\r\n' +
    '   * The raw config used to create the machine.\r\n' +
    '   */\n' +
    '  config, options,\n' +
    '  /**\r\n' +
    '   * The initial extended state\r\n' +
    '   */\n' +
    "  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n" +
    '  _stateInfo) {\n' +
    '    if (_context === void 0) {\n' +
    "      _context = 'context' in config ? config.context : undefined;\n" +
    '    }\n' +
    '\n' +
    '    var _this = this;\n' +
    '\n' +
    '    var _a;\n' +
    '\n' +
    '    this.config = config;\n' +
    '    this._context = _context;\n' +
    '    /**\r\n' +
    '     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n' +
    '     */\n' +
    '\n' +
    '    this.order = -1;\n' +
    '    this.__xstatenode = true;\n' +
    '    this.__cache = {\n' +
    '      events: undefined,\n' +
    '      relativeValue: new Map(),\n' +
    '      initialStateValue: undefined,\n' +
    '      initialState: undefined,\n' +
    '      on: undefined,\n' +
    '      transitions: undefined,\n' +
    '      candidates: {},\n' +
    '      delayedTransitions: undefined\n' +
    '    };\n' +
    '    this.idMap = {};\n' +
    '    this.tags = [];\n' +
    '    this.options = Object.assign(createDefaultOptions(), options);\n' +
    '    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n' +
    "    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n" +
    '    this.machine = this.parent ? this.parent.machine : this;\n' +
    '    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n' +
    '    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n' +
    '    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n' +
    '    this.version = this.parent ? this.parent.version : this.config.version;\n' +
    "    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n" +
    '    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n' +
    '    this.description = this.config.description;\n' +
    '\n' +
    '    if (!IS_PRODUCTION) {\n' +
    '      warn(!(\'parallel\' in this.config), "The \\"parallel\\" property is deprecated and will be removed in version 4.1. ".concat(this.config.parallel ? "Replace with `type: \'parallel\'`" : "Use `type: \'".concat(this.type, "\'`"), " in the config for state node \'").concat(this.id, "\' instead."));\n' +
    '    }\n' +
    '\n' +
    '    this.initial = this.config.initial;\n' +
    '    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n' +
    '      var _a;\n' +
    '\n' +
    '      var stateNode = new StateNode(stateConfig, {}, undefined, {\n' +
    '        parent: _this,\n' +
    '        key: key\n' +
    '      });\n' +
    '      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n' +
    '      return stateNode;\n' +
    '    }) : EMPTY_OBJECT; // Document order\n' +
    '\n' +
    '    var order = 0;\n' +
    '\n' +
    '    function dfs(stateNode) {\n' +
    '      var e_1, _a;\n' +
    '\n' +
    '      stateNode.order = order++;\n' +
    '\n' +
    '      try {\n' +
    '        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n' +
    '          var child = _c.value;\n' +
    '          dfs(child);\n' +
    '        }\n' +
    '      } catch (e_1_1) {\n' +
    '        e_1 = {\n' +
    '          error: e_1_1\n' +
    '        };\n' +
    '      } finally {\n' +
    '        try {\n' +
    '          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n' +
    '        } finally {\n' +
    '          if (e_1) throw e_1.error;\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    dfs(this); // History config\n' +
    '\n' +
    "    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n" +
    '    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n' +
    '      var event = _a.event;\n' +
    '      return event === NULL_EVENT;\n' +
    '    }) : NULL_EVENT in this.config.on);\n' +
    '    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n' +
    '\n' +
    '    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n' +
    '      return toActionObject(action);\n' +
    '    }); // TODO: deprecate (exit)\n' +
    '\n' +
    '    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n' +
    '      return toActionObject(action);\n' +
    '    });\n' +
    '    this.meta = this.config.meta;\n' +
    "    this.doneData = this.type === 'final' ? this.config.data : undefined;\n" +
    '    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n' +
    '      var _a, _b;\n' +
    '\n' +
    '      if (isMachine(invokeConfig)) {\n' +
    '        var invokeId = createInvokeId(_this.id, i);\n' +
    '        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n' +
    '        return toInvokeDefinition({\n' +
    '          src: invokeId,\n' +
    '          id: invokeId\n' +
    '        });\n' +
    '      } else if (isString(invokeConfig.src)) {\n' +
    '        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n' +
    '        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n' +
    '          id: invokeId,\n' +
    '          src: invokeConfig.src\n' +
    '        }));\n' +
    '      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n' +
    '        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n' +
    '        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n' +
    '        return toInvokeDefinition(__assign(__assign({\n' +
    '          id: invokeId\n' +
    '        }, invokeConfig), {\n' +
    '          src: invokeId\n' +
    '        }));\n' +
    '      } else {\n' +
    '        var invokeSource = invokeConfig.src;\n' +
    '        return toInvokeDefinition(__assign(__assign({\n' +
    '          id: createInvokeId(_this.id, i)\n' +
    '        }, invokeConfig), {\n' +
    '          src: invokeSource\n' +
    '        }));\n' +
    '      }\n' +
    '    });\n' +
    '    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n' +
    '      return toActivityDefinition(activity);\n' +
    '    });\n' +
    '    this.transition = this.transition.bind(this);\n' +
    '    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n' +
    '    // state node getters are deprecated\n' +
    '    // if (!this.parent) {\n' +
    '    //   this._init();\n' +
    '    // }\n' +
    '  }\n' +
    '\n' +
    '  StateNode.prototype._init = function () {\n' +
    '    if (this.__cache.transitions) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    getAllStateNodes(this).forEach(function (stateNode) {\n' +
    '      return stateNode.on;\n' +
    '    });\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Clones this state machine with custom options and context.\r\n' +
    '   *\r\n' +
    '   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n' +
    '   * @param context Custom context (will override predefined context)\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  StateNode.prototype.withConfig = function (options, context) {\n' +
    '    var _a = this.options,\n' +
    '        actions = _a.actions,\n' +
    '        activities = _a.activities,\n' +
    '        guards = _a.guards,\n' +
    '        services = _a.services,\n' +
    '        delays = _a.delays;\n' +
    '    return new StateNode(this.config, {\n' +
    '      actions: __assign(__assign({}, actions), options.actions),\n' +
    '      activities: __assign(__assign({}, activities), options.activities),\n' +
    '      guards: __assign(__assign({}, guards), options.guards),\n' +
    '      services: __assign(__assign({}, services), options.services),\n' +
    '      delays: __assign(__assign({}, delays), options.delays)\n' +
    '    }, context !== null && context !== void 0 ? context : this.context);\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Clones this state machine with custom context.\r\n' +
    '   *\r\n' +
    '   * @param context Custom context (will override predefined context, not recursive)\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  StateNode.prototype.withContext = function (context) {\n' +
    '    return new StateNode(this.config, this.options, context);\n' +
    '  };\n' +
    '\n' +
    '  Object.defineProperty(StateNode.prototype, "context", {\n' +
    '    get: function () {\n' +
    '      return isFunction(this._context) ? this._context() : this._context;\n' +
    '    },\n' +
    '    enumerable: false,\n' +
    '    configurable: true\n' +
    '  });\n' +
    '  Object.defineProperty(StateNode.prototype, "definition", {\n' +
    '    /**\r\n' +
    '     * The well-structured state node definition.\r\n' +
    '     */\n' +
    '    get: function () {\n' +
    '      return {\n' +
    '        id: this.id,\n' +
    '        key: this.key,\n' +
    '        version: this.version,\n' +
    '        context: this.context,\n' +
    '        type'... 44288 more characters
} [Function: logger]
____9999999____ {
  code: "import { error, doneInvoke } from './actions.js';\n" +
    "import { toActorRef } from './Actor.js';\n" +
    "import { toObserver } from './utils.js';\n" +
    '\n' +
    '/**\r\n' +
    ' * Returns an actor behavior from a reducer and its initial state.\r\n' +
    ' *\r\n' +
    ' * @param transition The pure reducer that returns the next state given the current state and event.\r\n' +
    ' * @param initialState The initial state of the reducer.\r\n' +
    ' * @returns An actor behavior\r\n' +
    ' */\n' +
    '\n' +
    'function fromReducer(transition, initialState) {\n' +
    '  return {\n' +
    '    transition: transition,\n' +
    '    initialState: initialState\n' +
    '  };\n' +
    '}\n' +
    'function fromPromise(promiseFn) {\n' +
    '  var initialState = {\n' +
    '    error: undefined,\n' +
    '    data: undefined,\n' +
    "    status: 'pending'\n" +
    '  };\n' +
    '  return {\n' +
    '    transition: function (state, event, _a) {\n' +
    '      var parent = _a.parent,\n' +
    '          id = _a.id,\n' +
    '          observers = _a.observers;\n' +
    '\n' +
    '      switch (event.type) {\n' +
    "        case 'fulfill':\n" +
    '          parent === null || parent === void 0 ? void 0 : parent.send(doneInvoke(id, event.data));\n' +
    '          return {\n' +
    '            error: undefined,\n' +
    '            data: event.data,\n' +
    "            status: 'fulfilled'\n" +
    '          };\n' +
    '\n' +
    "        case 'reject':\n" +
    '          parent === null || parent === void 0 ? void 0 : parent.send(error(id, event.error));\n' +
    '          observers.forEach(function (observer) {\n' +
    '            observer.error(event.error);\n' +
    '          });\n' +
    '          return {\n' +
    '            error: event.error,\n' +
    '            data: undefined,\n' +
    "            status: 'rejected'\n" +
    '          };\n' +
    '\n' +
    '        default:\n' +
    '          return state;\n' +
    '      }\n' +
    '    },\n' +
    '    initialState: initialState,\n' +
    '    start: function (_a) {\n' +
    '      var self = _a.self;\n' +
    '      promiseFn().then(function (data) {\n' +
    '        self.send({\n' +
    "          type: 'fulfill',\n" +
    '          data: data\n' +
    '        });\n' +
    '      }, function (reason) {\n' +
    '        self.send({\n' +
    "          type: 'reject',\n" +
    '          error: reason\n' +
    '        });\n' +
    '      });\n' +
    '      return initialState;\n' +
    '    }\n' +
    '  };\n' +
    '}\n' +
    'function spawnBehavior(behavior, options) {\n' +
    '  if (options === void 0) {\n' +
    '    options = {};\n' +
    '  }\n' +
    '\n' +
    '  var state = behavior.initialState;\n' +
    '  var observers = new Set();\n' +
    '  var mailbox = [];\n' +
    '  var flushing = false;\n' +
    '\n' +
    '  var flush = function () {\n' +
    '    if (flushing) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    flushing = true;\n' +
    '\n' +
    '    while (mailbox.length > 0) {\n' +
    '      var event_1 = mailbox.shift();\n' +
    '      state = behavior.transition(state, event_1, actorCtx);\n' +
    '      observers.forEach(function (observer) {\n' +
    '        return observer.next(state);\n' +
    '      });\n' +
    '    }\n' +
    '\n' +
    '    flushing = false;\n' +
    '  };\n' +
    '\n' +
    '  var actor = toActorRef({\n' +
    '    id: options.id,\n' +
    '    send: function (event) {\n' +
    '      mailbox.push(event);\n' +
    '      flush();\n' +
    '    },\n' +
    '    getSnapshot: function () {\n' +
    '      return state;\n' +
    '    },\n' +
    '    subscribe: function (next, handleError, complete) {\n' +
    '      var observer = toObserver(next, handleError, complete);\n' +
    '      observers.add(observer);\n' +
    '      observer.next(state);\n' +
    '      return {\n' +
    '        unsubscribe: function () {\n' +
    '          observers.delete(observer);\n' +
    '        }\n' +
    '      };\n' +
    '    }\n' +
    '  });\n' +
    '  var actorCtx = {\n' +
    '    parent: options.parent,\n' +
    '    self: actor,\n' +
    "    id: options.id || 'anonymous',\n" +
    '    observers: observers\n' +
    '  };\n' +
    '  state = behavior.start ? behavior.start(actorCtx) : state;\n' +
    '  return actor;\n' +
    '}\n' +
    '\n' +
    'export { fromPromise, fromReducer, spawnBehavior };\n'
} [Function: logger]
____9999999____ {
  code: 'var ActionTypes;\n' +
    '\n' +
    '(function (ActionTypes) {\n' +
    '  ActionTypes["Start"] = "xstate.start";\n' +
    '  ActionTypes["Stop"] = "xstate.stop";\n' +
    '  ActionTypes["Raise"] = "xstate.raise";\n' +
    '  ActionTypes["Send"] = "xstate.send";\n' +
    '  ActionTypes["Cancel"] = "xstate.cancel";\n' +
    '  ActionTypes["NullEvent"] = "";\n' +
    '  ActionTypes["Assign"] = "xstate.assign";\n' +
    '  ActionTypes["After"] = "xstate.after";\n' +
    '  ActionTypes["DoneState"] = "done.state";\n' +
    '  ActionTypes["DoneInvoke"] = "done.invoke";\n' +
    '  ActionTypes["Log"] = "xstate.log";\n' +
    '  ActionTypes["Init"] = "xstate.init";\n' +
    '  ActionTypes["Invoke"] = "xstate.invoke";\n' +
    '  ActionTypes["ErrorExecution"] = "error.execution";\n' +
    '  ActionTypes["ErrorCommunication"] = "error.communication";\n' +
    '  ActionTypes["ErrorPlatform"] = "error.platform";\n' +
    '  ActionTypes["ErrorCustom"] = "xstate.error";\n' +
    '  ActionTypes["Update"] = "xstate.update";\n' +
    '  ActionTypes["Pure"] = "xstate.pure";\n' +
    '  ActionTypes["Choose"] = "xstate.choose";\n' +
    '})(ActionTypes || (ActionTypes = {}));\n' +
    '\n' +
    'var SpecialTargets;\n' +
    '\n' +
    '(function (SpecialTargets) {\n' +
    '  SpecialTargets["Parent"] = "#_parent";\n' +
    '  SpecialTargets["Internal"] = "#_internal";\n' +
    '})(SpecialTargets || (SpecialTargets = {}));\n' +
    '\n' +
    'export { ActionTypes, SpecialTargets };\n'
} [Function: logger]
____9999999____ {
  code: "import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\n" +
    "import { SpecialTargets } from './types.js';\n" +
    "import { raise, send } from './actionTypes.js';\n" +
    "import { DEFAULT_GUARD_TYPE, TARGETLESS_KEY, STATE_DELIMITER } from './constants.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    '\n' +
    'var _a;\n' +
    'function keys(value) {\n' +
    '  return Object.keys(value);\n' +
    '}\n' +
    'function matchesState(parentStateId, childStateId, delimiter) {\n' +
    '  if (delimiter === void 0) {\n' +
    '    delimiter = STATE_DELIMITER;\n' +
    '  }\n' +
    '\n' +
    '  var parentStateValue = toStateValue(parentStateId, delimiter);\n' +
    '  var childStateValue = toStateValue(childStateId, delimiter);\n' +
    '\n' +
    '  if (isString(childStateValue)) {\n' +
    '    if (isString(parentStateValue)) {\n' +
    '      return childStateValue === parentStateValue;\n' +
    '    } // Parent more specific than child\n' +
    '\n' +
    '\n' +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    '  if (isString(parentStateValue)) {\n' +
    '    return parentStateValue in childStateValue;\n' +
    '  }\n' +
    '\n' +
    '  return Object.keys(parentStateValue).every(function (key) {\n' +
    '    if (!(key in childStateValue)) {\n' +
    '      return false;\n' +
    '    }\n' +
    '\n' +
    '    return matchesState(parentStateValue[key], childStateValue[key]);\n' +
    '  });\n' +
    '}\n' +
    'function getEventType(event) {\n' +
    '  try {\n' +
    `    return isString(event) || typeof event === 'number' ? "".concat(event) : event.type;\n` +
    '  } catch (e) {\n' +
    "    throw new Error('Events must be strings or objects with a string event.type property.');\n" +
    '  }\n' +
    '}\n' +
    'function getActionType(action) {\n' +
    '  try {\n' +
    `    return isString(action) || typeof action === 'number' ? "".concat(action) : isFunction(action) ? action.name : action.type;\n` +
    '  } catch (e) {\n' +
    "    throw new Error('Actions must be strings or objects with a string action.type property.');\n" +
    '  }\n' +
    '}\n' +
    'function toStatePath(stateId, delimiter) {\n' +
    '  try {\n' +
    '    if (isArray(stateId)) {\n' +
    '      return stateId;\n' +
    '    }\n' +
    '\n' +
    '    return stateId.toString().split(delimiter);\n' +
    '  } catch (e) {\n' +
    `    throw new Error("'".concat(stateId, "' is not a valid state path."));\n` +
    '  }\n' +
    '}\n' +
    'function isStateLike(state) {\n' +
    "  return typeof state === 'object' && 'value' in state && 'context' in state && 'event' in state && '_event' in state;\n" +
    '}\n' +
    'function toStateValue(stateValue, delimiter) {\n' +
    '  if (isStateLike(stateValue)) {\n' +
    '    return stateValue.value;\n' +
    '  }\n' +
    '\n' +
    '  if (isArray(stateValue)) {\n' +
    '    return pathToStateValue(stateValue);\n' +
    '  }\n' +
    '\n' +
    "  if (typeof stateValue !== 'string') {\n" +
    '    return stateValue;\n' +
    '  }\n' +
    '\n' +
    '  var statePath = toStatePath(stateValue, delimiter);\n' +
    '  return pathToStateValue(statePath);\n' +
    '}\n' +
    'function pathToStateValue(statePath) {\n' +
    '  if (statePath.length === 1) {\n' +
    '    return statePath[0];\n' +
    '  }\n' +
    '\n' +
    '  var value = {};\n' +
    '  var marker = value;\n' +
    '\n' +
    '  for (var i = 0; i < statePath.length - 1; i++) {\n' +
    '    if (i === statePath.length - 2) {\n' +
    '      marker[statePath[i]] = statePath[i + 1];\n' +
    '    } else {\n' +
    '      marker[statePath[i]] = {};\n' +
    '      marker = marker[statePath[i]];\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return value;\n' +
    '}\n' +
    'function mapValues(collection, iteratee) {\n' +
    '  var result = {};\n' +
    '  var collectionKeys = Object.keys(collection);\n' +
    '\n' +
    '  for (var i = 0; i < collectionKeys.length; i++) {\n' +
    '    var key = collectionKeys[i];\n' +
    '    result[key] = iteratee(collection[key], key, collection, i);\n' +
    '  }\n' +
    '\n' +
    '  return result;\n' +
    '}\n' +
    'function mapFilterValues(collection, iteratee, predicate) {\n' +
    '  var e_1, _a;\n' +
    '\n' +
    '  var result = {};\n' +
    '\n' +
    '  try {\n' +
    '    for (var _b = __values(Object.keys(collection)), _c = _b.next(); !_c.done; _c = _b.next()) {\n' +
    '      var key = _c.value;\n' +
    '      var item = collection[key];\n' +
    '\n' +
    '      if (!predicate(item)) {\n' +
    '        continue;\n' +
    '      }\n' +
    '\n' +
    '      result[key] = iteratee(item, key, collection);\n' +
    '    }\n' +
    '  } catch (e_1_1) {\n' +
    '    e_1 = {\n' +
    '      error: e_1_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n' +
    '    } finally {\n' +
    '      if (e_1) throw e_1.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return result;\n' +
    '}\n' +
    '/**\r\n' +
    ' * Retrieves a value at the given path.\r\n' +
    ' * @param props The deep path to the prop of the desired value\r\n' +
    ' */\n' +
    '\n' +
    'var path = function (props) {\n' +
    '  return function (object) {\n' +
    '    var e_2, _a;\n' +
    '\n' +
    '    var result = object;\n' +
    '\n' +
    '    try {\n' +
    '      for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n' +
    '        var prop = props_1_1.value;\n' +
    '        result = result[prop];\n' +
    '      }\n' +
    '    } catch (e_2_1) {\n' +
    '      e_2 = {\n' +
    '        error: e_2_1\n' +
    '      };\n' +
    '    } finally {\n' +
    '      try {\n' +
    '        if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n' +
    '      } finally {\n' +
    '        if (e_2) throw e_2.error;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return result;\n' +
    '  };\n' +
    '};\n' +
    '/**\r\n' +
    ' * Retrieves a value at the given path via the nested accessor prop.\r\n' +
    ' * @param props The deep path to the prop of the desired value\r\n' +
    ' */\n' +
    '\n' +
    'function nestedPath(props, accessorProp) {\n' +
    '  return function (object) {\n' +
    '    var e_3, _a;\n' +
    '\n' +
    '    var result = object;\n' +
    '\n' +
    '    try {\n' +
    '      for (var props_2 = __values(props), props_2_1 = props_2.next(); !props_2_1.done; props_2_1 = props_2.next()) {\n' +
    '        var prop = props_2_1.value;\n' +
    '        result = result[accessorProp][prop];\n' +
    '      }\n' +
    '    } catch (e_3_1) {\n' +
    '      e_3 = {\n' +
    '        error: e_3_1\n' +
    '      };\n' +
    '    } finally {\n' +
    '      try {\n' +
    '        if (props_2_1 && !props_2_1.done && (_a = props_2.return)) _a.call(props_2);\n' +
    '      } finally {\n' +
    '        if (e_3) throw e_3.error;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return result;\n' +
    '  };\n' +
    '}\n' +
    'function toStatePaths(stateValue) {\n' +
    '  if (!stateValue) {\n' +
    '    return [[]];\n' +
    '  }\n' +
    '\n' +
    '  if (isString(stateValue)) {\n' +
    '    return [[stateValue]];\n' +
    '  }\n' +
    '\n' +
    '  var result = flatten(Object.keys(stateValue).map(function (key) {\n' +
    '    var subStateValue = stateValue[key];\n' +
    '\n' +
    "    if (typeof subStateValue !== 'string' && (!subStateValue || !Object.keys(subStateValue).length)) {\n" +
    '      return [[key]];\n' +
    '    }\n' +
    '\n' +
    '    return toStatePaths(stateValue[key]).map(function (subPath) {\n' +
    '      return [key].concat(subPath);\n' +
    '    });\n' +
    '  }));\n' +
    '  return result;\n' +
    '}\n' +
    'function pathsToStateValue(paths) {\n' +
    '  var e_4, _a;\n' +
    '\n' +
    '  var result = {};\n' +
    '\n' +
    '  if (paths && paths.length === 1 && paths[0].length === 1) {\n' +
    '    return paths[0][0];\n' +
    '  }\n' +
    '\n' +
    '  try {\n' +
    '    for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n' +
    '      var currentPath = paths_1_1.value;\n' +
    '      var marker = result; // tslint:disable-next-line:prefer-for-of\n' +
    '\n' +
    '      for (var i = 0; i < currentPath.length; i++) {\n' +
    '        var subPath = currentPath[i];\n' +
    '\n' +
    '        if (i === currentPath.length - 2) {\n' +
    '          marker[subPath] = currentPath[i + 1];\n' +
    '          break;\n' +
    '        }\n' +
    '\n' +
    '        marker[subPath] = marker[subPath] || {};\n' +
    '        marker = marker[subPath];\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_4_1) {\n' +
    '    e_4 = {\n' +
    '      error: e_4_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n' +
    '    } finally {\n' +
    '      if (e_4) throw e_4.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return result;\n' +
    '}\n' +
    'function flatten(array) {\n' +
    '  var _a;\n' +
    '\n' +
    '  return (_a = []).concat.apply(_a, __spreadArray([], __read(array), false));\n' +
    '}\n' +
    'function toArrayStrict(value) {\n' +
    '  if (isArray(value)) {\n' +
    '    return value;\n' +
    '  }\n' +
    '\n' +
    '  return [value];\n' +
    '}\n' +
    'function toArray(value) {\n' +
    '  if (value === undefined) {\n' +
    '    return [];\n' +
    '  }\n' +
    '\n' +
    '  return toArrayStrict(value);\n' +
    '}\n' +
    'function mapContext(mapper, context, _event) {\n' +
    '  var e_5, _a;\n' +
    '\n' +
    '  if (isFunction(mapper)) {\n' +
    '    return mapper(context, _event.data);\n' +
    '  }\n' +
    '\n' +
    '  var result = {};\n' +
    '\n' +
    '  try {\n' +
    '    for (var _b = __values(Object.keys(mapper)), _c = _b.next(); !_c.done; _c = _b.next()) {\n' +
    '      var key = _c.value;\n' +
    '      var subMapper = mapper[key];\n' +
    '\n' +
    '      if (isFunction(subMapper)) {\n' +
    '        result[key] = subMapper(context, _event.data);\n' +
    '      } else {\n' +
    '        result[key] = subMapper;\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_5_1) {\n' +
    '    e_5 = {\n' +
    '      error: e_5_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n' +
    '    } finally {\n' +
    '      if (e_5) throw e_5.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return result;\n' +
    '}\n' +
    'function isBuiltInEvent(eventType) {\n' +
    '  return /^(done|error)\\./.test(eventType);\n' +
    '}\n' +
    'function isPromiseLike(value) {\n' +
    '  if (value instanceof Promise) {\n' +
    '    return true;\n' +
    '  } // Check if shape matches the Promise/A+ specification for a "thenable".\n' +
    '\n' +
    '\n' +
    "  if (value !== null && (isFunction(value) || typeof value === 'object') && isFunction(value.then)) {\n" +
    '    return true;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isBehavior(value) {\n' +
    "  return value !== null && typeof value === 'object' && 'transition' in value && typeof value.transition === 'function';\n" +
    '}\n' +
    'function partition(items, predicate) {\n' +
    '  var e_6, _a;\n' +
    '\n' +
    '  var _b = __read([[], []], 2),\n' +
    '      truthy = _b[0],\n' +
    '      falsy = _b[1];\n' +
    '\n' +
    '  try {\n' +
    '    for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n' +
    '      var item = items_1_1.value;\n' +
    '\n' +
    '      if (predicate(item)) {\n' +
    '        truthy.push(item);\n' +
    '      } else {\n' +
    '        falsy.push(item);\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_6_1) {\n' +
    '    e_6 = {\n' +
    '      error: e_6_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n' +
    '    } finally {\n' +
    '      if (e_6) throw e_6.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return [truthy, falsy];\n' +
    '}\n' +
    'function updateHistoryStates(hist, stateValue) {\n' +
    '  return mapValues(hist.states, function (subHist, key) {\n' +
    '    if (!subHist) {\n' +
    '      return undefined;\n' +
    '    }\n' +
    '\n' +
    '    var subStateValue = (isString(stateValue) ? undefined : stateValue[key]) || (subHist ? subHist.current : undefined);\n' +
    '\n' +
    '    if (!subStateValue) {\n' +
    '      return undefined;\n' +
    '    }\n' +
    '\n' +
    '    return {\n' +
    '      current: subStateValue,\n' +
    '      states: updateHistoryStates(subHist, subStateValue)\n' +
    '    };\n' +
    '  });\n' +
    '}\n' +
    'function updateHistoryValue(hist, stateValue) {\n' +
    '  return {\n' +
    '    current: stateValue,\n' +
    '    states: updateHistoryStates(hist, stateValue)\n' +
    '  };\n' +
    '}\n' +
    'function updateContext(context, _event, assignActions, state) {\n' +
    '  if (!IS_PRODUCTION) {\n' +
    "    warn(!!context, 'Attempting to update undefined context');\n" +
    '  }\n' +
    '\n' +
    '  var updatedContext = context ? assignActions.reduce(function (acc, assignAction) {\n' +
    '    var e_7, _a;\n' +
    '\n' +
    '    var assignment = assignAction.assignment;\n' +
    '    var meta = {\n' +
    '      state: state,\n' +
    '      action: assignAction,\n' +
    '      _event: _event\n' +
    '    };\n' +
    '    var partialUpdate = {};\n' +
    '\n' +
    '    if (isFunction(assignment)) {\n' +
    '      partialUpdate = assignment(acc, _event.data, meta);\n' +
    '    } else {\n' +
    '      try {\n' +
    '        for (var _b = __values(Object.keys(assignment)), _c = _b.next(); !'... 6801 more characters
} [Function: logger]
____9999999____ {
  code: "import pickBy from 'lodash/pickBy.js';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../../utils/setUserAgent/constants.mjs';\n" +
    "import { isString } from '../../utils/utils.mjs';\n" +
    '\n' +
    '// default `autoSignIn` flag is `true`\n' +
    'const DEFAULT_AUTO_SIGN_IN = true;\n' +
    "const EMPTY_STRING = '';\n" +
    "const sanitizePhoneNumber = (dialCode, phoneNumber) => `${dialCode}${phoneNumber}`.replace(/[^A-Z0-9+]/gi, '');\n" +
    'const selectUserAttributes = (_, key) => {\n' +
    '    // Allowlist of Cognito User Pool Attributes (from OpenID Connect specification)\n' +
    '    // See: https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html\n' +
    '    switch (key) {\n' +
    "        case 'address':\n" +
    "        case 'birthdate':\n" +
    "        case 'email':\n" +
    "        case 'family_name':\n" +
    "        case 'gender':\n" +
    "        case 'given_name':\n" +
    "        case 'locale':\n" +
    "        case 'middle_name':\n" +
    "        case 'name':\n" +
    "        case 'nickname':\n" +
    "        case 'phone_number':\n" +
    "        case 'picture':\n" +
    "        case 'preferred_username':\n" +
    "        case 'profile':\n" +
    "        case 'updated_at':\n" +
    "        case 'website':\n" +
    "        case 'zoneinfo':\n" +
    '            return true;\n' +
    "        // Otherwise, it's a custom attribute\n" +
    '        default:\n' +
    "            return key.startsWith('custom:');\n" +
    '    }\n' +
    '};\n' +
    'const getUserAttributes = (formValues) => {\n' +
    '    const { phone_number, ...userAttributes } = pickBy(formValues, selectUserAttributes);\n' +
    '    // only include `phone_number` attribute in `userAttributes` if it has a value\n' +
    '    if (isString(phone_number) && phone_number !== EMPTY_STRING) {\n' +
    '        const { country_code } = formValues;\n' +
    '        return {\n' +
    '            ...userAttributes,\n' +
    '            phone_number: sanitizePhoneNumber(country_code, phone_number),\n' +
    '        };\n' +
    '    }\n' +
    '    return userAttributes;\n' +
    '};\n' +
    'const getSignUpInput = (username, formValues, loginMechanism) => {\n' +
    '    const { password, ...values } = formValues;\n' +
    '    const attributes = getUserAttributes(values);\n' +
    '    const options = {\n' +
    '        autoSignIn: DEFAULT_AUTO_SIGN_IN,\n' +
    '        userAttributes: {\n' +
    '            // use `username` value for `phone_number`\n' +
    "            ...(loginMechanism === 'phone_number'\n" +
    '                ? { ...attributes, phone_number: username }\n' +
    '                : attributes),\n' +
    '        },\n' +
    '    };\n' +
    '    return { username, password, options };\n' +
    '};\n' +
    'const getUsernameSignUp = ({ formValues, loginMechanisms, }) => {\n' +
    '    const loginMechanism = loginMechanisms[0];\n' +
    "    if (loginMechanism === 'phone_number') {\n" +
    '        const { country_code, phone_number } = formValues;\n' +
    '        return sanitizePhoneNumber(country_code, phone_number);\n' +
    '    }\n' +
    '    return formValues[loginMechanism];\n' +
    '};\n' +
    '\n' +
    'export { getSignUpInput, getUserAttributes, getUsernameSignUp, sanitizePhoneNumber };\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign } from './_virtual/_tslib.js';\n" +
    "import { symbolObservable, toInvokeSource, mapContext, isMachine } from './utils.js';\n" +
    "import { provide } from './serviceScope.js';\n" +
    '\n' +
    'function createNullActor(id) {\n' +
    '  var _a;\n' +
    '\n' +
    '  return _a = {\n' +
    '    id: id,\n' +
    '    send: function () {\n' +
    '      return void 0;\n' +
    '    },\n' +
    '    subscribe: function () {\n' +
    '      return {\n' +
    '        unsubscribe: function () {\n' +
    '          return void 0;\n' +
    '        }\n' +
    '      };\n' +
    '    },\n' +
    '    getSnapshot: function () {\n' +
    '      return undefined;\n' +
    '    },\n' +
    '    toJSON: function () {\n' +
    '      return {\n' +
    '        id: id\n' +
    '      };\n' +
    '    }\n' +
    '  }, _a[symbolObservable] = function () {\n' +
    '    return this;\n' +
    '  }, _a;\n' +
    '}\n' +
    '/**\r\n' +
    ' * Creates a deferred actor that is able to be invoked given the provided\r\n' +
    ' * invocation information in its `.meta` value.\r\n' +
    ' *\r\n' +
    ' * @param invokeDefinition The meta information needed to invoke the actor.\r\n' +
    ' */\n' +
    '\n' +
    'function createInvocableActor(invokeDefinition, machine, context, _event) {\n' +
    '  var _a;\n' +
    '\n' +
    '  var invokeSrc = toInvokeSource(invokeDefinition.src);\n' +
    '  var serviceCreator = (_a = machine === null || machine === void 0 ? void 0 : machine.options.services) === null || _a === void 0 ? void 0 : _a[invokeSrc.type];\n' +
    '  var resolvedData = invokeDefinition.data ? mapContext(invokeDefinition.data, context, _event) : undefined;\n' +
    '  var tempActor = serviceCreator ? createDeferredActor(serviceCreator, invokeDefinition.id, resolvedData) : createNullActor(invokeDefinition.id); // @ts-ignore\n' +
    '\n' +
    '  tempActor.meta = invokeDefinition;\n' +
    '  return tempActor;\n' +
    '}\n' +
    'function createDeferredActor(entity, id, data) {\n' +
    '  var tempActor = createNullActor(id); // @ts-ignore\n' +
    '\n' +
    '  tempActor.deferred = true;\n' +
    '\n' +
    '  if (isMachine(entity)) {\n' +
    '    // "mute" the existing service scope so potential spawned actors within the `.initialState` stay deferred here\n' +
    '    var initialState_1 = tempActor.state = provide(undefined, function () {\n' +
    '      return (data ? entity.withContext(data) : entity).initialState;\n' +
    '    });\n' +
    '\n' +
    '    tempActor.getSnapshot = function () {\n' +
    '      return initialState_1;\n' +
    '    };\n' +
    '  }\n' +
    '\n' +
    '  return tempActor;\n' +
    '}\n' +
    'function isActor(item) {\n' +
    '  try {\n' +
    "    return typeof item.send === 'function';\n" +
    '  } catch (e) {\n' +
    '    return false;\n' +
    '  }\n' +
    '}\n' +
    'function isSpawnedActor(item) {\n' +
    "  return isActor(item) && 'id' in item;\n" +
    "} // TODO: refactor the return type, this could be written in a better way but it's best to avoid unneccessary breaking changes now\n" +
    '\n' +
    'function toActorRef(actorRefLike) {\n' +
    '  var _a;\n' +
    '\n' +
    '  return __assign((_a = {\n' +
    '    subscribe: function () {\n' +
    '      return {\n' +
    '        unsubscribe: function () {\n' +
    '          return void 0;\n' +
    '        }\n' +
    '      };\n' +
    '    },\n' +
    "    id: 'anonymous',\n" +
    '    getSnapshot: function () {\n' +
    '      return undefined;\n' +
    '    }\n' +
    '  }, _a[symbolObservable] = function () {\n' +
    '    return this;\n' +
    '  }, _a), actorRefLike);\n' +
    '}\n' +
    '\n' +
    'export { createDeferredActor, createInvocableActor, createNullActor, isActor, isSpawnedActor, toActorRef };\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\n" +
    "import { EMPTY_ACTIVITY_MAP } from './constants.js';\n" +
    "import { isString, matchesState, warn } from './utils.js';\n" +
    "import { getMeta, nextEvents } from './stateUtils.js';\n" +
    "import { initEvent } from './actions.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    '\n' +
    'function stateValuesEqual(a, b) {\n' +
    '  if (a === b) {\n' +
    '    return true;\n' +
    '  }\n' +
    '\n' +
    '  if (a === undefined || b === undefined) {\n' +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    '  if (isString(a) || isString(b)) {\n' +
    '    return a === b;\n' +
    '  }\n' +
    '\n' +
    '  var aKeys = Object.keys(a);\n' +
    '  var bKeys = Object.keys(b);\n' +
    '  return aKeys.length === bKeys.length && aKeys.every(function (key) {\n' +
    '    return stateValuesEqual(a[key], b[key]);\n' +
    '  });\n' +
    '}\n' +
    'function isStateConfig(state) {\n' +
    "  if (typeof state !== 'object' || state === null) {\n" +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    "  return 'value' in state && '_event' in state;\n" +
    '}\n' +
    '/**\r\n' +
    ' * @deprecated Use `isStateConfig(object)` or `state instanceof State` instead.\r\n' +
    ' */\n' +
    '\n' +
    'var isState = isStateConfig;\n' +
    'function bindActionToState(action, state) {\n' +
    '  var exec = action.exec;\n' +
    '\n' +
    '  var boundAction = __assign(__assign({}, action), {\n' +
    '    exec: exec !== undefined ? function () {\n' +
    '      return exec(state.context, state.event, {\n' +
    '        action: action,\n' +
    '        state: state,\n' +
    '        _event: state._event\n' +
    '      });\n' +
    '    } : undefined\n' +
    '  });\n' +
    '\n' +
    '  return boundAction;\n' +
    '}\n' +
    '\n' +
    'var State =\n' +
    '/*#__PURE__*/\n' +
    '\n' +
    '/** @class */\n' +
    'function () {\n' +
    '  /**\r\n' +
    '   * Creates a new State instance.\r\n' +
    '   * @param value The state value\r\n' +
    '   * @param context The extended state\r\n' +
    '   * @param historyValue The tree representing historical values of the state nodes\r\n' +
    '   * @param history The previous state\r\n' +
    '   * @param actions An array of action objects to execute as side-effects\r\n' +
    '   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).\r\n' +
    '   * @param meta\r\n' +
    '   * @param events Internal event queue. Should be empty with run-to-completion semantics.\r\n' +
    '   * @param configuration\r\n' +
    '   */\n' +
    '  function State(config) {\n' +
    '    var _this = this;\n' +
    '\n' +
    '    var _a;\n' +
    '\n' +
    '    this.actions = [];\n' +
    '    this.activities = EMPTY_ACTIVITY_MAP;\n' +
    '    this.meta = {};\n' +
    '    this.events = [];\n' +
    '    this.value = config.value;\n' +
    '    this.context = config.context;\n' +
    '    this._event = config._event;\n' +
    '    this._sessionid = config._sessionid;\n' +
    '    this.event = this._event.data;\n' +
    '    this.historyValue = config.historyValue;\n' +
    '    this.history = config.history;\n' +
    '    this.actions = config.actions || [];\n' +
    '    this.activities = config.activities || EMPTY_ACTIVITY_MAP;\n' +
    '    this.meta = getMeta(config.configuration);\n' +
    '    this.events = config.events || [];\n' +
    '    this.matches = this.matches.bind(this);\n' +
    '    this.toStrings = this.toStrings.bind(this);\n' +
    '    this.configuration = config.configuration;\n' +
    '    this.transitions = config.transitions;\n' +
    '    this.children = config.children;\n' +
    '    this.done = !!config.done;\n' +
    '    this.tags = (_a = Array.isArray(config.tags) ? new Set(config.tags) : config.tags) !== null && _a !== void 0 ? _a : new Set();\n' +
    '    this.machine = config.machine;\n' +
    "    Object.defineProperty(this, 'nextEvents', {\n" +
    '      get: function () {\n' +
    '        return nextEvents(_this.configuration);\n' +
    '      }\n' +
    '    });\n' +
    '  }\n' +
    '  /**\r\n' +
    '   * Creates a new State instance for the given `stateValue` and `context`.\r\n' +
    '   * @param stateValue\r\n' +
    '   * @param context\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.from = function (stateValue, context) {\n' +
    '    if (stateValue instanceof State) {\n' +
    '      if (stateValue.context !== context) {\n' +
    '        return new State({\n' +
    '          value: stateValue.value,\n' +
    '          context: context,\n' +
    '          _event: stateValue._event,\n' +
    '          _sessionid: null,\n' +
    '          historyValue: stateValue.historyValue,\n' +
    '          history: stateValue.history,\n' +
    '          actions: [],\n' +
    '          activities: stateValue.activities,\n' +
    '          meta: {},\n' +
    '          events: [],\n' +
    '          configuration: [],\n' +
    '          transitions: [],\n' +
    '          children: {}\n' +
    '        });\n' +
    '      }\n' +
    '\n' +
    '      return stateValue;\n' +
    '    }\n' +
    '\n' +
    '    var _event = initEvent;\n' +
    '    return new State({\n' +
    '      value: stateValue,\n' +
    '      context: context,\n' +
    '      _event: _event,\n' +
    '      _sessionid: null,\n' +
    '      historyValue: undefined,\n' +
    '      history: undefined,\n' +
    '      actions: [],\n' +
    '      activities: undefined,\n' +
    '      meta: undefined,\n' +
    '      events: [],\n' +
    '      configuration: [],\n' +
    '      transitions: [],\n' +
    '      children: {}\n' +
    '    });\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Creates a new State instance for the given `config`.\r\n' +
    '   * @param config The state config\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.create = function (config) {\n' +
    '    return new State(config);\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).\r\n' +
    '   * @param stateValue\r\n' +
    '   * @param context\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.inert = function (stateValue, context) {\n' +
    '    if (stateValue instanceof State) {\n' +
    '      if (!stateValue.actions.length) {\n' +
    '        return stateValue;\n' +
    '      }\n' +
    '\n' +
    '      var _event = initEvent;\n' +
    '      return new State({\n' +
    '        value: stateValue.value,\n' +
    '        context: context,\n' +
    '        _event: _event,\n' +
    '        _sessionid: null,\n' +
    '        historyValue: stateValue.historyValue,\n' +
    '        history: stateValue.history,\n' +
    '        activities: stateValue.activities,\n' +
    '        configuration: stateValue.configuration,\n' +
    '        transitions: [],\n' +
    '        children: {}\n' +
    '      });\n' +
    '    }\n' +
    '\n' +
    '    return State.from(stateValue, context);\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Returns an array of all the string leaf state node paths.\r\n' +
    '   * @param stateValue\r\n' +
    '   * @param delimiter The character(s) that separate each subpath in the string state node path.\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.prototype.toStrings = function (stateValue, delimiter) {\n' +
    '    var _this = this;\n' +
    '\n' +
    '    if (stateValue === void 0) {\n' +
    '      stateValue = this.value;\n' +
    '    }\n' +
    '\n' +
    '    if (delimiter === void 0) {\n' +
    "      delimiter = '.';\n" +
    '    }\n' +
    '\n' +
    '    if (isString(stateValue)) {\n' +
    '      return [stateValue];\n' +
    '    }\n' +
    '\n' +
    '    var valueKeys = Object.keys(stateValue);\n' +
    '    return valueKeys.concat.apply(valueKeys, __spreadArray([], __read(valueKeys.map(function (key) {\n' +
    '      return _this.toStrings(stateValue[key], delimiter).map(function (s) {\n' +
    '        return key + delimiter + s;\n' +
    '      });\n' +
    '    })), false));\n' +
    '  };\n' +
    '\n' +
    '  State.prototype.toJSON = function () {\n' +
    '    var _a = this;\n' +
    '        _a.configuration;\n' +
    '        _a.transitions;\n' +
    '        var tags = _a.tags;\n' +
    '        _a.machine;\n' +
    '        var jsonValues = __rest(_a, ["configuration", "transitions", "tags", "machine"]);\n' +
    '\n' +
    '    return __assign(__assign({}, jsonValues), {\n' +
    '      tags: Array.from(tags)\n' +
    '    });\n' +
    '  };\n' +
    '\n' +
    '  State.prototype.matches = function (parentStateValue) {\n' +
    '    return matchesState(parentStateValue, this.value);\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Whether the current state configuration has a state node with the specified `tag`.\r\n' +
    '   * @param tag\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.prototype.hasTag = function (tag) {\n' +
    '    return this.tags.has(tag);\n' +
    '  };\n' +
    '  /**\r\n' +
    '   * Determines whether sending the `event` will cause a non-forbidden transition\r\n' +
    '   * to be selected, even if the transitions have no actions nor\r\n' +
    '   * change the state value.\r\n' +
    '   *\r\n' +
    '   * @param event The event to test\r\n' +
    '   * @returns Whether the event will cause a transition\r\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  State.prototype.can = function (event) {\n' +
    '    var _a;\n' +
    '\n' +
    '    if (IS_PRODUCTION) {\n' +
    '      warn(!!this.machine, "state.can(...) used outside of a machine-created State object; this will always return false.");\n' +
    '    }\n' +
    '\n' +
    '    var transitionData = (_a = this.machine) === null || _a === void 0 ? void 0 : _a.getTransitionData(this, event);\n' +
    '    return !!(transitionData === null || transitionData === void 0 ? void 0 : transitionData.transitions.length) && // Check that at least one transition is not forbidden\n' +
    '    transitionData.transitions.some(function (t) {\n' +
    '      return t.target !== undefined || t.actions.length;\n' +
    '    });\n' +
    '  };\n' +
    '\n' +
    '  return State;\n' +
    '}();\n' +
    '\n' +
    'export { State, bindActionToState, isState, isStateConfig, stateValuesEqual };\n'
} [Function: logger]
____9999999____ {
  code: "import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\n" +
    "import { SpecialTargets, ActionTypes } from './types.js';\n" +
    "import { isStateConfig, State, bindActionToState } from './State.js';\n" +
    "import { errorPlatform, update, error as error$1, log, stop, start, cancel, send, raise } from './actionTypes.js';\n" +
    "import { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\n" +
    "import { IS_PRODUCTION } from './environment.js';\n" +
    "import { warn, mapContext, toObserver, isFunction, toSCXMLEvent, flatten, isRaisableAction, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\n" +
    "import { Scheduler } from './scheduler.js';\n" +
    "import { createDeferredActor, isSpawnedActor } from './Actor.js';\n" +
    "import { registry } from './registry.js';\n" +
    "import { getGlobal, registerService } from './devTools.js';\n" +
    "import { provide, consume } from './serviceScope.js';\n" +
    "import { spawnBehavior } from './behaviors.js';\n" +
    '\n' +
    'var DEFAULT_SPAWN_OPTIONS = {\n' +
    '  sync: false,\n' +
    '  autoForward: false\n' +
    '};\n' +
    'var InterpreterStatus;\n' +
    '\n' +
    '(function (InterpreterStatus) {\n' +
    '  InterpreterStatus[InterpreterStatus["NotStarted"] = 0] = "NotStarted";\n' +
    '  InterpreterStatus[InterpreterStatus["Running"] = 1] = "Running";\n' +
    '  InterpreterStatus[InterpreterStatus["Stopped"] = 2] = "Stopped";\n' +
    '})(InterpreterStatus || (InterpreterStatus = {}));\n' +
    '\n' +
    'var Interpreter =\n' +
    '/*#__PURE__*/\n' +
    '\n' +
    '/** @class */\n' +
    'function () {\n' +
    '  /**\r\n' +
    '   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n' +
    '   *\r\n' +
    '   * @param machine The machine to be interpreted\r\n' +
    '   * @param options Interpreter options\r\n' +
    '   */\n' +
    '  function Interpreter(machine, options) {\n' +
    '    if (options === void 0) {\n' +
    '      options = Interpreter.defaultOptions;\n' +
    '    }\n' +
    '\n' +
    '    var _this = this;\n' +
    '\n' +
    '    this.machine = machine;\n' +
    '    this.delayedEventsMap = {};\n' +
    '    this.listeners = new Set();\n' +
    '    this.contextListeners = new Set();\n' +
    '    this.stopListeners = new Set();\n' +
    '    this.doneListeners = new Set();\n' +
    '    this.eventListeners = new Set();\n' +
    '    this.sendListeners = new Set();\n' +
    '    /**\r\n' +
    '     * Whether the service is started.\r\n' +
    '     */\n' +
    '\n' +
    '    this.initialized = false;\n' +
    '    this.status = InterpreterStatus.NotStarted;\n' +
    '    this.children = new Map();\n' +
    '    this.forwardTo = new Set();\n' +
    '    this._outgoingQueue = [];\n' +
    '    /**\r\n' +
    '     * Alias for Interpreter.prototype.start\r\n' +
    '     */\n' +
    '\n' +
    '    this.init = this.start;\n' +
    '    /**\r\n' +
    '     * Sends an event to the running interpreter to trigger a transition.\r\n' +
    '     *\r\n' +
    '     * An array of events (batched) can be sent as well, which will send all\r\n' +
    '     * batched events to the running interpreter. The listeners will be\r\n' +
    '     * notified only **once** when all events are processed.\r\n' +
    '     *\r\n' +
    '     * @param event The event(s) to send\r\n' +
    '     */\n' +
    '\n' +
    '    this.send = function (event, payload) {\n' +
    '      if (isArray(event)) {\n' +
    '        _this.batch(event);\n' +
    '\n' +
    '        return _this.state;\n' +
    '      }\n' +
    '\n' +
    '      var _event = toSCXMLEvent(toEventObject(event, payload));\n' +
    '\n' +
    '      if (_this.status === InterpreterStatus.Stopped) {\n' +
    '        // do nothing\n' +
    '        if (!IS_PRODUCTION) {\n' +
    '          warn(false, "Event \\"".concat(_event.name, "\\" was sent to stopped service \\"").concat(_this.machine.id, "\\". This service has already reached its final state, and will not transition.\\nEvent: ").concat(JSON.stringify(_event.data)));\n' +
    '        }\n' +
    '\n' +
    '        return _this.state;\n' +
    '      }\n' +
    '\n' +
    '      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n' +
    '        throw new Error("Event \\"".concat(_event.name, "\\" was sent to uninitialized service \\"").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n' +
    '        , "\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: ").concat(JSON.stringify(_event.data)));\n' +
    '      }\n' +
    '\n' +
    '      _this.scheduler.schedule(function () {\n' +
    '        // Forward copy of event to child actors\n' +
    '        _this.forward(_event);\n' +
    '\n' +
    '        var nextState = _this._nextState(_event);\n' +
    '\n' +
    '        _this.update(nextState, _event);\n' +
    '      });\n' +
    '\n' +
    '      return _this._state; // TODO: deprecate (should return void)\n' +
    '      // tslint:disable-next-line:semicolon\n' +
    '    };\n' +
    '\n' +
    '    this.sendTo = function (event, to, immediate) {\n' +
    '      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n' +
    '      var target = isParent ? _this.parent : isString(to) ? to === SpecialTargets.Internal ? _this : _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n' +
    '\n' +
    '      if (!target) {\n' +
    '        if (!isParent) {\n' +
    `          throw new Error("Unable to send event to child '".concat(to, "' from service '").concat(_this.id, "'."));\n` +
    '        } // tslint:disable-next-line:no-console\n' +
    '\n' +
    '\n' +
    '        if (!IS_PRODUCTION) {\n' +
    `          warn(false, "Service '".concat(_this.id, "' has no parent: unable to send event ").concat(event.type));\n` +
    '        }\n' +
    '\n' +
    '        return;\n' +
    '      }\n' +
    '\n' +
    "      if ('machine' in target) {\n" +
    '        // perhaps those events should be rejected in the parent\n' +
    "        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n" +
    '        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target || // we need to send events to the parent from exit handlers of a machine that reached its final state\n' +
    '        _this.state.done) {\n' +
    '          // Send SCXML events to machines\n' +
    '          var scxmlEvent = __assign(__assign({}, event), {\n' +
    '            name: event.name === error$1 ? "".concat(error(_this.id)) : event.name,\n' +
    '            origin: _this.sessionId\n' +
    '          });\n' +
    '\n' +
    '          if (!immediate && _this.machine.config.predictableActionArguments) {\n' +
    '            _this._outgoingQueue.push([target, scxmlEvent]);\n' +
    '          } else {\n' +
    '            target.send(scxmlEvent);\n' +
    '          }\n' +
    '        }\n' +
    '      } else {\n' +
    '        // Send normal events to other targets\n' +
    '        if (!immediate && _this.machine.config.predictableActionArguments) {\n' +
    '          _this._outgoingQueue.push([target, event.data]);\n' +
    '        } else {\n' +
    '          target.send(event.data);\n' +
    '        }\n' +
    '      }\n' +
    '    };\n' +
    '\n' +
    '    this._exec = function (action, context, _event, actionFunctionMap) {\n' +
    '      if (actionFunctionMap === void 0) {\n' +
    '        actionFunctionMap = _this.machine.options.actions;\n' +
    '      }\n' +
    '\n' +
    '      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n' +
    '      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n' +
    '\n' +
    '      if (exec) {\n' +
    '        try {\n' +
    '          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n' +
    '            action: action,\n' +
    '            state: _this.state,\n' +
    '            _event: _event\n' +
    '          } : {\n' +
    '            action: action,\n' +
    '            _event: _event\n' +
    '          });\n' +
    '        } catch (err) {\n' +
    '          if (_this.parent) {\n' +
    '            _this.parent.send({\n' +
    "              type: 'xstate.error',\n" +
    '              data: err\n' +
    '            });\n' +
    '          }\n' +
    '\n' +
    '          throw err;\n' +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      switch (action.type) {\n' +
    '        case raise:\n' +
    '          {\n' +
    "            // if raise action reached the interpreter then it's a delayed one\n" +
    '            var sendAction_1 = action;\n' +
    '\n' +
    '            _this.defer(sendAction_1);\n' +
    '\n' +
    '            break;\n' +
    '          }\n' +
    '\n' +
    '        case send:\n' +
    '          var sendAction = action;\n' +
    '\n' +
    "          if (typeof sendAction.delay === 'number') {\n" +
    '            _this.defer(sendAction);\n' +
    '\n' +
    '            return;\n' +
    '          } else {\n' +
    '            if (sendAction.to) {\n' +
    '              _this.sendTo(sendAction._event, sendAction.to, _event === initEvent);\n' +
    '            } else {\n' +
    '              _this.send(sendAction._event);\n' +
    '            }\n' +
    '          }\n' +
    '\n' +
    '          break;\n' +
    '\n' +
    '        case cancel:\n' +
    '          _this.cancel(action.sendId);\n' +
    '\n' +
    '          break;\n' +
    '\n' +
    '        case start:\n' +
    '          {\n' +
    '            if (_this.status !== InterpreterStatus.Running) {\n' +
    '              return;\n' +
    '            }\n' +
    '\n' +
    "            var activity = action.activity; // If the activity will be stopped right after it's started\n" +
    '            // (such as in transient states)\n' +
    "            // don't bother starting the activity.\n" +
    '\n' +
    '            if ( // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n' +
    '            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n' +
    '              break;\n' +
    '            } // Invoked services\n' +
    '\n' +
    '\n' +
    '            if (activity.type === ActionTypes.Invoke) {\n' +
    '              var invokeSource = toInvokeSource(activity.src);\n' +
    '              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n' +
    '              var id = activity.id,\n' +
    '                  data = activity.data;\n' +
    '\n' +
    '              if (!IS_PRODUCTION) {\n' +
    "                warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n" +
    '                "`forward` property is deprecated (found in invocation of \'".concat(activity.src, "\' in in machine \'").concat(_this.machine.id, "\'). ") + "Please use `autoForward` instead.");\n' +
    '              }\n' +
    '\n' +
    "              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n" +
    '\n' +
    '              if (!serviceCreator) {\n' +
    '                // tslint:disable-next-line:no-console\n' +
    '                if (!IS_PRODUCTION) {\n' +
    `                  warn(false, "No service found for invocation '".concat(activity.src, "' in machine '").concat(_this.machine.id, "'."));\n` +
    '                }\n' +
    '\n' +
    '                return;\n' +
    '              }\n' +
    '\n' +
    '              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n' +
    '\n' +
    "              if (typeof serviceCreator === 'string') {\n" +
    '                // TODO: warn\n' +
    '                return;\n' +
    '              }\n' +
    '\n' +
    '              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n' +
    '                data: resolvedData,\n' +
    '                src: invokeSource,\n' +
    '                meta: activity.meta\n' +
    '              }) : serviceCreator;\n' +
    '\n' +
    '              if (!source) {\n' +
    '            '... 34042 more characters
} [Function: logger]
____9999999____ {
  code: "import merge from 'lodash/merge.js';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import '../utils/setUserAgent/constants.mjs';\n" +
    "import { isEmpty } from '../utils/utils.mjs';\n" +
    '\n' +
    '// Runs all validators given. Resolves if there are no error. Rejects otherwise.\n' +
    'const runValidators = async (formData, touchData, passwordSettings, validators) => {\n' +
    '    const errors = await Promise.all(validators.map((validator) => validator(formData, touchData, passwordSettings)));\n' +
    '    const mergedError = merge({}, ...errors);\n' +
    '    if (isEmpty(mergedError)) {\n' +
    '        // no errors were found\n' +
    '        return Promise.resolve();\n' +
    '    }\n' +
    '    else {\n' +
    '        return Promise.reject(mergedError);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { runValidators };\n'
} [Function: logger]
____9999999____ {
  code: 'const getFederatedSignInState = (target) => ({\n' +
    "    entry: ['sendUpdate', 'clearError'],\n" +
    '    invoke: {\n' +
    "        src: 'signInWithRedirect',\n" +
    '        onDone: { target },\n' +
    "        onError: { actions: 'setRemoteError', target },\n" +
    '    },\n' +
    '});\n' +
    '\n' +
    'export { getFederatedSignInState };\n'
} [Function: logger]
____9999999____ {
  code: 'const authenticator = {\n' +
    "    maxWidth: { value: '60rem' },\n" +
    '    modal: {\n' +
    "        width: { value: '{space.relative.full}' },\n" +
    "        height: { value: '{space.relative.full}' },\n" +
    "        backgroundColor: { value: '{colors.overlay.50.value}' },\n" +
    "        top: { value: '{space.zero}' },\n" +
    "        left: { value: '{space.zero}' },\n" +
    '    },\n' +
    '    container: {\n' +
    "        widthMax: { value: '30rem' },\n" +
    '    },\n' +
    '    router: {\n' +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderColor: { value: '{colors.border.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        boxShadow: { value: '{shadows.medium.value}' },\n" +
    '    },\n' +
    '    footer: {\n' +
    "        paddingBottom: { value: '{space.medium.value}' },\n" +
    '    },\n' +
    '    form: {\n' +
    "        padding: { value: '{space.xl.value}' },\n" +
    '    },\n' +
    '    state: {\n' +
    '        inactive: {\n' +
    "            backgroundColor: { value: '{colors.background.secondary.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    orContainer: {\n' +
    "        color: { value: '{colors.neutral.80.value}' },\n" +
    '        orLine: {\n' +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { authenticator };\n'
} [Function: logger]
____9999999____ {
  code: 'const badge = {\n' +
    '    // Default styles\n' +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    '    lineHeight: { value: 1 },\n' +
    "    fontWeight: { value: '{fontWeights.semibold.value}' },\n" +
    "    fontSize: { value: '{fontSizes.small.value}' },\n" +
    "    textAlign: { value: 'center' },\n" +
    "    paddingVertical: { value: '{space.xs.value}' },\n" +
    "    paddingHorizontal: { value: '{space.small.value}' },\n" +
    "    backgroundColor: { value: '{colors.background.tertiary.value}' },\n" +
    '    // An arbitrarily large value to ensure that the left and right sides of the badge are perfectly rounded for any size variation\n' +
    "    borderRadius: { value: '{radii.xl.value}' },\n" +
    '    // Variations\n' +
    '    info: {\n' +
    "        color: { value: '{colors.font.info.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.info.value}' },\n" +
    '    },\n' +
    '    warning: {\n' +
    "        color: { value: '{colors.font.warning.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.warning.value}' },\n" +
    '    },\n' +
    '    success: {\n' +
    "        color: { value: '{colors.font.success.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.success.value}' },\n" +
    '    },\n' +
    '    error: {\n' +
    "        color: { value: '{colors.font.error.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.error.value}' },\n" +
    '    },\n' +
    '    // Sizes\n' +
    '    small: {\n' +
    "        fontSize: { value: '{fontSizes.xs.value}' },\n" +
    "        paddingVertical: { value: '{space.xxs.value}' },\n" +
    "        paddingHorizontal: { value: '{space.xs.value}' },\n" +
    '    },\n' +
    '    // medium is the default size\n' +
    '    large: {\n' +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        paddingVertical: { value: '{space.small.value}' },\n" +
    "        paddingHorizontal: { value: '{space.medium.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { badge };\n'
} [Function: logger]
____9999999____ {
  code: 'const autocomplete = {\n' +
    '    menu: {\n' +
    "        width: { value: '100%' },\n" +
    "        marginBlockStart: { value: '{space.xxxs}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary}' },\n" +
    "        borderColor: { value: '{colors.border.primary}' },\n" +
    "        borderWidth: { value: '{borderWidths.small}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderRadius: { value: '{radii.small}' },\n" +
    '        options: {\n' +
    "            display: { value: 'flex' },\n" +
    "            flexDirection: { value: 'column' },\n" +
    "            maxHeight: { value: '300px' },\n" +
    '        },\n' +
    '        option: {\n' +
    "            backgroundColor: { value: '{colors.background.primary}' },\n" +
    "            color: { value: 'currentcolor' },\n" +
    "            cursor: { value: 'pointer' },\n" +
    "            transitionDuration: { value: '{time.short}' },\n" +
    "            transitionProperty: { value: 'background-color, color' },\n" +
    "            transitionTimingFunction: { value: 'ease' },\n" +
    '            _active: {\n' +
    "                backgroundColor: { value: '{colors.primary.80}' },\n" +
    "                color: { value: '{colors.white}' },\n" +
    '            },\n' +
    '        },\n' +
    '        _empty: {\n' +
    "            display: { value: 'flex' },\n" +
    '        },\n' +
    '        _loading: {\n' +
    "            alignItems: { value: 'center' },\n" +
    "            display: { value: 'flex' },\n" +
    "            gap: { value: '{space.xxxs}' },\n" +
    '        },\n' +
    '        spaceShared: {\n' +
    "            paddingBlock: { value: '{space.xs}' },\n" +
    "            paddingInline: { value: '{space.small}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { autocomplete };\n'
} [Function: logger]
____9999999____ {
  code: 'const alert = {\n' +
    '    // Default styles\n' +
    "    alignItems: { value: 'center' },\n" +
    "    justifyContent: { value: 'space-between' },\n" +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    "    backgroundColor: { value: '{colors.background.tertiary.value}' },\n" +
    "    paddingBlock: { value: '{space.small.value}' },\n" +
    "    paddingInline: { value: '{space.medium.value}' },\n" +
    '    icon: {\n' +
    "        size: { value: '{fontSizes.xl.value}' },\n" +
    '    },\n' +
    '    heading: {\n' +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    '    },\n' +
    '    // Variations\n' +
    '    info: {\n' +
    "        color: { value: '{colors.font.info.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.info.value}' },\n" +
    '    },\n' +
    '    error: {\n' +
    "        color: { value: '{colors.font.error.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.error.value}' },\n" +
    '    },\n' +
    '    warning: {\n' +
    "        color: { value: '{colors.font.warning.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.warning.value}' },\n" +
    '    },\n' +
    '    success: {\n' +
    "        color: { value: '{colors.font.success.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.success.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { alert };\n'
} [Function: logger]
____9999999____ {
  code: 'const breadcrumbs = {\n' +
    "    flexDirection: { value: 'row' },\n" +
    "    flexWrap: { value: 'wrap' },\n" +
    "    gap: { value: '0' },\n" +
    "    color: { value: '{colors.font.tertiary}' },\n" +
    '    item: {\n' +
    "        flexDirection: { value: 'row' },\n" +
    "        color: { value: 'inherit' },\n" +
    "        fontSize: { value: 'inherit' },\n" +
    "        alignItems: { value: 'center' },\n" +
    "        lineHeight: { value: '1' },\n" +
    '    },\n' +
    '    separator: {\n' +
    "        color: { value: 'inherit' },\n" +
    "        fontSize: { value: 'inherit' },\n" +
    "        paddingInline: { value: '{space.xxs}' },\n" +
    '    },\n' +
    '    link: {\n' +
    "        color: { value: '{components.link.color}' },\n" +
    "        fontSize: { value: 'inherit' },\n" +
    "        fontWeight: { value: 'normal' },\n" +
    "        textDecoration: { value: 'none' },\n" +
    "        paddingInline: { value: '{space.xs}' },\n" +
    "        paddingBlock: { value: '{space.xxs}' },\n" +
    '        current: {\n' +
    "            color: { value: 'inherit' },\n" +
    "            fontSize: { value: 'inherit' },\n" +
    "            fontWeight: { value: 'normal' },\n" +
    "            textDecoration: { value: 'none' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { breadcrumbs };\n'
} [Function: logger]
____9999999____ {
  code: 'const button = {\n' +
    '    // shared styles\n' +
    "    fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    '    transitionDuration: {\n' +
    "        value: '{components.fieldcontrol.transitionDuration.value}',\n" +
    '    },\n' +
    "    fontSize: { value: '{components.fieldcontrol.fontSize.value}' },\n" +
    "    lineHeight: { value: '{components.fieldcontrol.lineHeight.value}' },\n" +
    '    paddingBlockStart: {\n' +
    "        value: '{components.fieldcontrol.paddingBlockStart.value}',\n" +
    '    },\n' +
    '    paddingBlockEnd: {\n' +
    "        value: '{components.fieldcontrol.paddingBlockEnd.value}',\n" +
    '    },\n' +
    '    paddingInlineStart: {\n' +
    "        value: '{components.fieldcontrol.paddingInlineStart.value}',\n" +
    '    },\n' +
    '    paddingInlineEnd: {\n' +
    "        value: '{components.fieldcontrol.paddingInlineEnd.value}',\n" +
    '    },\n' +
    "    backgroundColor: { value: 'transparent' },\n" +
    "    borderColor: { value: '{components.fieldcontrol.borderColor.value}' },\n" +
    "    borderWidth: { value: '{components.fieldcontrol.borderWidth.value}' },\n" +
    "    borderStyle: { value: '{components.fieldcontrol.borderStyle.value}' },\n" +
    "    borderRadius: { value: '{components.fieldcontrol.borderRadius.value}' },\n" +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    '    _hover: {\n' +
    "        color: { value: '{colors.font.focus.value}' },\n" +
    "        backgroundColor: { value: '{colors.primary.10.value}' },\n" +
    "        borderColor: { value: '{colors.primary.60.value}' },\n" +
    '    },\n' +
    '    _focus: {\n' +
    "        color: { value: '{colors.font.focus.value}' },\n" +
    "        backgroundColor: { value: '{colors.primary.10.value}' },\n" +
    "        borderColor: { value: '{colors.border.focus.value}' },\n" +
    "        boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    '    },\n' +
    '    _active: {\n' +
    "        color: { value: '{colors.font.active.value}' },\n" +
    "        backgroundColor: { value: '{colors.primary.20.value}' },\n" +
    "        borderColor: { value: '{colors.primary.100.value}' },\n" +
    '    },\n' +
    '    _loading: {\n' +
    "        color: { value: '{colors.font.disabled.value}' },\n" +
    "        backgroundColor: { value: 'transparent' },\n" +
    "        borderColor: { value: '{colors.border.tertiary.value}' },\n" +
    '    },\n' +
    '    _disabled: {\n' +
    "        color: { value: '{colors.font.disabled.value}' },\n" +
    "        backgroundColor: { value: 'transparent' },\n" +
    "        borderColor: { value: '{colors.border.tertiary.value}' },\n" +
    '    },\n' +
    '    // variations\n' +
    '    outlined: {\n' +
    '        info: {\n' +
    "            borderColor: { value: '{colors.blue.60.value}' },\n" +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            color: { value: '{colors.blue.100}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.blue.60.value}' },\n" +
    "                backgroundColor: { value: '{colors.blue.10.value}' },\n" +
    "                color: { value: '{colors.blue.100.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.blue.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.blue.10.value}' },\n" +
    "                color: { value: '{colors.blue.100.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol.info._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: '{colors.blue.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.blue.20.value}' },\n" +
    "                color: { value: '{colors.blue.100.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        warning: {\n' +
    "            borderColor: { value: '{colors.orange.60.value}' },\n" +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            color: { value: '{colors.orange.100}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.orange.60.value}' },\n" +
    "                backgroundColor: { value: '{colors.orange.10.value}' },\n" +
    "                color: { value: '{colors.orange.100.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.orange.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.orange.10.value}' },\n" +
    "                color: { value: '{colors.orange.100.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol.warning._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: '{colors.orange.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.orange.20.value}' },\n" +
    "                color: { value: '{colors.orange.100.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        success: {\n' +
    "            borderColor: { value: '{colors.green.60.value}' },\n" +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            color: { value: '{colors.green.100}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.green.60.value}' },\n" +
    "                backgroundColor: { value: '{colors.green.10.value}' },\n" +
    "                color: { value: '{colors.green.100.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.green.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.green.10.value}' },\n" +
    "                color: { value: '{colors.green.100.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol.success._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: '{colors.green.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.green.20.value}' },\n" +
    "                color: { value: '{colors.green.100.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        error: {\n' +
    "            borderColor: { value: '{colors.red.80.value}' },\n" +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            color: { value: '{colors.red.100}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.red.80.value}' },\n" +
    "                backgroundColor: { value: '{colors.red.10.value}' },\n" +
    "                color: { value: '{colors.red.100.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.red.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.red.10.value}' },\n" +
    "                color: { value: '{colors.red.100.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol._error._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: '{colors.red.100.value}' },\n" +
    "                backgroundColor: { value: '{colors.red.20.value}' },\n" +
    "                color: { value: '{colors.red.100.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        overlay: {\n' +
    "            borderColor: { value: '{colors.overlay.60.value}' },\n" +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            color: { value: '{colors.font.primary.value}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.overlay.60.value}' },\n" +
    "                backgroundColor: { value: '{colors.overlay.5.value}' },\n" +
    "                color: { value: '{colors.neutral.90.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.overlay.90.value}' },\n" +
    "                backgroundColor: { value: '{colors.overlay.5.value}' },\n" +
    "                color: { value: '{colors.neutral.90.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol.overlay._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: '{colors.overlay.90.value}' },\n" +
    "                backgroundColor: { value: '{colors.overlay.10.value}' },\n" +
    "                color: { value: '{colors.neutral.100.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    primary: {\n' +
    "        borderColor: { value: 'transparent' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        backgroundColor: { value: '{colors.primary.80.value}' },\n" +
    "        color: { value: '{colors.font.inverse.value}' },\n" +
    '        _disabled: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '        _loading: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '        _hover: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.primary.90.value}' },\n" +
    "            color: { value: '{colors.font.inverse.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.primary.90.value}' },\n" +
    "            color: { value: '{colors.font.inverse.value}' },\n" +
    "            boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    '        },\n' +
    '        _active: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.primary.100.value}' },\n" +
    "            color: { value: '{colors.font.inverse.value}' },\n" +
    '        },\n' +
    '        info: {\n' +
    "            borderColor: { value: 'transparent' },\n" +
    "            backgroundColor: { value: '{colors.blue.80}' },\n" +
    "            color: { value: '{colors.font.inverse.value}' },\n" +
    '            _hover: {\n' +
    "                borderColor: { value: 'transparent' },\n" +
    "                backgroundColor: { value: '{colors.blue.90.value}' },\n" +
    "                color: { value: '{colors.font.inverse.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: 'transparent' },\n" +
    "                backgroundColor: { value: '{colors.blue.90.value}' },\n" +
    "                color: { value: '{colors.font.inverse.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol.info._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _active: {\n' +
    "                borderColor: { value: 'transparent' },\n" +
    "                backgroundColor: { value: '{colors.blue.100.value}' },\n" +
    "                color: { value: '{colors.font.inverse.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        warning: {\n' +
    '            bo'... 15378 more characters
} [Function: logger]
____9999999____ {
  code: 'const card = {\n' +
    "    backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "    borderRadius: { value: '{radii.xs.value}' },\n" +
    "    borderWidth: { value: '0' },\n" +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderColor: { value: 'transparent' },\n" +
    "    boxShadow: { value: 'none' },\n" +
    "    padding: { value: '{space.medium.value}' },\n" +
    '    outlined: {\n' +
    "        backgroundColor: { value: '{components.card.backgroundColor.value}' },\n" +
    "        borderRadius: { value: '{radii.xs.value}' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderColor: { value: '{colors.border.primary.value}' },\n" +
    "        boxShadow: { value: '{components.card.boxShadow.value}' },\n" +
    '    },\n' +
    '    elevated: {\n' +
    "        backgroundColor: { value: '{components.card.backgroundColor.value}' },\n" +
    "        borderRadius: { value: '{radii.xs.value}' },\n" +
    "        borderWidth: { value: '0' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderColor: { value: 'transparent' },\n" +
    "        boxShadow: { value: '{shadows.medium.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { card };\n'
} [Function: logger]
____9999999____ {
  code: 'const checkbox = {\n' +
    "    cursor: { value: 'pointer' },\n" +
    "    alignItems: { value: 'center' },\n" +
    '    _disabled: {\n' +
    '        cursor: {\n' +
    "            value: 'not-allowed',\n" +
    '        },\n' +
    '    },\n' +
    '    button: {\n' +
    "        position: { value: 'relative' },\n" +
    "        alignItems: { value: 'center' },\n" +
    "        justifyContent: { value: 'center' },\n" +
    "        color: { value: '{colors.font.inverse.value}' },\n" +
    '        before: {\n' +
    "            width: { value: '100%' },\n" +
    "            height: { value: '100%' },\n" +
    "            borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    "            borderRadius: { value: '20%' },\n" +
    "            borderStyle: { value: 'solid' },\n" +
    "            borderColor: { value: '{colors.border.primary.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            outlineColor: { value: '{colors.transparent.value}' },\n" +
    "            outlineStyle: { value: 'solid' },\n" +
    "            outlineWidth: { value: '{outlineWidths.medium.value}' },\n" +
    "            outlineOffset: { value: '{outlineOffsets.medium.value}' },\n" +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    "            boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    "            borderColor: { value: '{colors.border.disabled.value}' },\n" +
    '        },\n' +
    '        _error: {\n' +
    "            borderColor: { value: '{colors.border.error.value}' },\n" +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.border.error.value}' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol._error._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    icon: {\n' +
    "        backgroundColor: { value: '{colors.primary.80.value}' },\n" +
    "        borderRadius: { value: '20%' },\n" +
    "        opacity: { value: '{opacities.0.value}' },\n" +
    "        transform: { value: 'scale(0)' },\n" +
    "        transitionProperty: { value: 'all' },\n" +
    "        transitionDuration: { value: '{time.short.value}' },\n" +
    "        transitionTimingFunction: { value: 'ease-in-out' },\n" +
    '        _checked: {\n' +
    "            opacity: { value: '{opacities.100.value}' },\n" +
    "            transform: { value: 'scale(1)' },\n" +
    '            _disabled: {\n' +
    "                backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '        _indeterminate: {\n' +
    "            opacity: { value: '{opacities.100.value}' },\n" +
    "            transform: { value: 'scale(1)' },\n" +
    '            _disabled: {\n' +
    "                backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    label: {\n' +
    "        color: { value: '{components.text.color.value}' },\n" +
    '        _disabled: {\n' +
    '            color: {\n' +
    "                value: '{colors.font.disabled.value}',\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { checkbox };\n'
} [Function: logger]
____9999999____ {
  code: 'const checkboxfield = {\n' +
    "    alignItems: { value: 'flex-start' },\n" +
    "    alignContent: { value: 'center' },\n" +
    "    flexDirection: { value: 'column' },\n" +
    "    justifyContent: { value: 'center' },\n" +
    '};\n' +
    '\n' +
    'export { checkboxfield };\n'
} [Function: logger]
____9999999____ {
  code: '//we are reusing the types from the nested components but new tokens need to be created that reference the previous tokens so that they can inherit the needed values but can be overwritten and only effect the collection component.\n' +
    '//only a subset of the design tokens of the nested components are being exposed, this can be expanded later.\n' +
    'const collection = {\n' +
    '    pagination: {\n' +
    '        current: {\n' +
    "            color: { value: '{components.pagination.current.color}' },\n" +
    '            backgroundColor: {\n' +
    "                value: '{components.pagination.current.backgroundColor}',\n" +
    '            },\n' +
    '        },\n' +
    '        button: {\n' +
    "            color: { value: '{components.pagination.button.color}' },\n" +
    '            _hover: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.pagination.button.hover.backgroundColor}',\n" +
    '                },\n' +
    "                color: { value: '{components.pagination.button.hover.color}' },\n" +
    '            },\n' +
    '            _disabled: {\n' +
    "                color: { value: '{components.pagination.button.disabled.color}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    search: {\n' +
    '        input: {\n' +
    "            color: { value: '{components.searchfield.color}' },\n" +
    '        },\n' +
    '        button: {\n' +
    "            color: { value: '{components.searchfield.button.color}' },\n" +
    '            _active: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.searchfield.button._active.backgroundColor}',\n" +
    '                },\n' +
    '                borderColor: {\n' +
    "                    value: '{components.searchfield.button._active.borderColor}',\n" +
    '                },\n' +
    "                color: { value: '{components.searchfield.button._active.color}' },\n" +
    '            },\n' +
    '            _disabled: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.searchfield.button._disabled.backgroundColor}',\n" +
    '                },\n' +
    '                borderColor: {\n' +
    "                    value: '{components.searchfield.button._disabled.borderColor}',\n" +
    '                },\n' +
    '                color: {\n' +
    "                    value: '{components.searchfield.button._disabled.color}',\n" +
    '                },\n' +
    '            },\n' +
    '            _focus: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.searchfield.button._focus.backgroundColor}',\n" +
    '                },\n' +
    '                borderColor: {\n' +
    "                    value: '{components.searchfield.button._focus.borderColor}',\n" +
    '                },\n' +
    "                color: { value: '{components.searchfield.button._focus.color}' },\n" +
    '            },\n' +
    '            _hover: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.searchfield.button._hover.backgroundColor}',\n" +
    '                },\n' +
    '                borderColor: {\n' +
    "                    value: '{components.searchfield.button._hover.borderColor}',\n" +
    '                },\n' +
    "                color: { value: '{components.searchfield.button._hover.color}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { collection };\n'
} [Function: logger]
____9999999____ {
  code: 'const copy = {\n' +
    "    fontSize: { value: '{fontSizes.xs}' },\n" +
    "    gap: { value: '{space.relative.medium}' },\n" +
    '    svg: {\n' +
    '        path: {\n' +
    '            fill: {\n' +
    "                value: '{colors.font.primary}',\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    toolTip: {\n' +
    "        bottom: { value: '{space.large}' },\n" +
    "        color: { value: '{colors.teal.100}' },\n" +
    "        fontSize: { value: '{fontSizes.xxs}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { copy };\n'
} [Function: logger]
____9999999____ {
  code: 'const dialcodeselect = {\n' +
    '    height: {\n' +
    "        value: '{space.relative.full.value}',\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { dialcodeselect };\n'
} [Function: logger]
____9999999____ {
  code: 'const divider = {\n' +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderColor: { value: '{colors.border.primary.value}' },\n" +
    "    borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    '    label: {\n' +
    "        color: { value: '{colors.font.tertiary.value}' },\n" +
    "        paddingInline: { value: '{space.medium.value}' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    '    },\n' +
    '    small: {\n' +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        borderWidth: { value: '{borderWidths.large.value}' },\n" +
    '    },\n' +
    '    opacity: {\n' +
    "        value: '{opacities.60.value}',\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { divider };\n'
} [Function: logger]
____9999999____ {
  code: 'const dropzone = {\n' +
    "    backgroundColor: { value: '{colors.background.primary}' },\n" +
    "    borderRadius: { value: '{radii.small}' },\n" +
    "    borderColor: { value: '{colors.border.primary}' },\n" +
    "    borderStyle: { value: 'dashed' },\n" +
    "    borderWidth: { value: '{borderWidths.small}' },\n" +
    "    color: { value: '{colors.font.primary}' },\n" +
    "    gap: { value: '{space.small}' },\n" +
    "    paddingBlock: { value: '{space.xl}' },\n" +
    "    paddingInline: { value: '{space.large}' },\n" +
    "    textAlign: { value: 'center' },\n" +
    '    _active: {\n' +
    "        backgroundColor: { value: '{colors.primary.10}' },\n" +
    "        borderRadius: { value: '{components.dropzone.borderRadius}' },\n" +
    "        borderColor: { value: '{colors.border.pressed}' },\n" +
    "        borderStyle: { value: '{components.dropzone.borderStyle}' },\n" +
    "        borderWidth: { value: '{components.dropzone.borderWidth}' },\n" +
    "        color: { value: '{colors.font.primary}' },\n" +
    '    },\n' +
    '    _disabled: {\n' +
    "        backgroundColor: { value: '{colors.background.disabled}' },\n" +
    "        borderRadius: { value: '{components.dropzone.borderRadius}' },\n" +
    "        borderColor: { value: '{colors.border.disabled}' },\n" +
    "        borderStyle: { value: '{components.dropzone.borderStyle}' },\n" +
    "        borderWidth: { value: '{components.dropzone.borderWidth}' },\n" +
    "        color: { value: '{colors.font.disabled}' },\n" +
    '    },\n' +
    '    accepted: {\n' +
    "        backgroundColor: { value: '{colors.background.success}' },\n" +
    "        borderRadius: { value: '{components.dropzone.borderRadius}' },\n" +
    "        borderColor: { value: '{colors.border.success}' },\n" +
    "        borderStyle: { value: '{components.dropzone.borderStyle}' },\n" +
    "        borderWidth: { value: '{components.dropzone.borderWidth}' },\n" +
    "        color: { value: '{colors.font.success}' },\n" +
    '    },\n' +
    '    rejected: {\n' +
    "        backgroundColor: { value: '{colors.background.error}' },\n" +
    "        borderRadius: { value: '{components.dropzone.borderRadius}' },\n" +
    "        borderColor: { value: '{colors.border.pressed}' },\n" +
    "        borderStyle: { value: '{components.dropzone.borderStyle}' },\n" +
    "        borderWidth: { value: '{components.dropzone.borderWidth}' },\n" +
    "        color: { value: '{colors.font.error}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { dropzone };\n'
} [Function: logger]
____9999999____ {
  code: 'const field = {\n' +
    '    // default styles\n' +
    "    gap: { value: '{space.xs.value}' },\n" +
    "    fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "    flexDirection: { value: 'column' },\n" +
    '    // Adjust base fontSize and gap for small and large sizes\n' +
    '    small: {\n' +
    "        gap: { value: '{space.xxxs.value}' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        gap: { value: '{space.small.value}' },\n" +
    "        fontSize: { value: '{fontSizes.large.value}' },\n" +
    '    },\n' +
    '    label: {\n' +
    "        color: { value: '{colors.font.secondary.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { field };\n'
} [Function: logger]
____9999999____ {
  code: 'const accordion = {\n' +
    "    backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    '    item: {\n' +
    "        borderColor: { value: '{colors.border.secondary.value}' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderRadius: { value: '{radii.small.value}' },\n" +
    '        trigger: {\n' +
    "            alignItems: { value: 'center' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            color: { value: 'inherit' },\n" +
    "            gap: { value: '{space.small.value}' },\n" +
    "            justifyContent: { value: 'space-between' },\n" +
    "            paddingBlock: { value: '{space.xs.value}' },\n" +
    "            paddingInline: { value: '{space.small.value}' },\n" +
    '            _hover: {\n' +
    "                color: { value: 'inherit' },\n" +
    "                backgroundColor: { value: '{colors.overlay.5.value}' },\n" +
    '            },\n' +
    '            _focus: {\n' +
    "                borderColor: { value: '{colors.border.focus.value}' },\n" +
    '                boxShadow: {\n' +
    '                    value: {\n' +
    "                        offsetX: '0',\n" +
    "                        offsetY: '0',\n" +
    "                        blurRadius: '0',\n" +
    "                        spreadRadius: '2px',\n" +
    "                        color: '{colors.border.focus.value}',\n" +
    '                    },\n' +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '        content: {\n' +
    "            color: { value: 'inherit' },\n" +
    "            paddingInline: { value: '{space.small.value}' },\n" +
    "            paddingBlockEnd: { value: '{space.small.value}' },\n" +
    "            paddingBlockStart: { value: '{space.xxxs.value}' },\n" +
    '        },\n' +
    '        icon: {\n' +
    "            color: { value: '{colors.font.tertiary.value}' },\n" +
    "            transitionDuration: { value: '{time.medium.value}' },\n" +
    "            transitionTimingFunction: { value: 'cubic-bezier(0.87, 0, 0.13, 1)' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { accordion };\n'
} [Function: logger]
____9999999____ {
  code: 'const fieldcontrol = {\n' +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderColor: { value: '{colors.border.primary.value}' },\n" +
    "    borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "    borderRadius: { value: '{radii.small.value}' },\n" +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    '    paddingBlockStart: {\n' +
    "        value: '{space.xs.value}',\n" +
    '    },\n' +
    '    paddingBlockEnd: {\n' +
    "        value: '{space.xs.value}',\n" +
    '    },\n' +
    '    paddingInlineStart: {\n' +
    "        value: '{space.medium.value}',\n" +
    '    },\n' +
    '    paddingInlineEnd: {\n' +
    "        value: '{space.medium.value}',\n" +
    '    },\n' +
    "    fontSize: { value: '{components.field.fontSize.value}' },\n" +
    "    lineHeight: { value: '{lineHeights.medium.value}' },\n" +
    "    transitionDuration: { value: '{time.medium.value}' },\n" +
    "    outlineColor: { value: '{colors.transparent.value}' },\n" +
    "    outlineStyle: { value: 'solid' },\n" +
    "    outlineWidth: { value: '{outlineWidths.medium.value}' },\n" +
    "    outlineOffset: { value: '{outlineOffsets.medium.value}' },\n" +
    '    small: {\n' +
    "        fontSize: { value: '{components.field.small.fontSize.value}' },\n" +
    '        paddingBlockStart: {\n' +
    "            value: '{space.xxs.value}',\n" +
    '        },\n' +
    '        paddingBlockEnd: {\n' +
    "            value: '{space.xxs.value}',\n" +
    '        },\n' +
    '        paddingInlineStart: {\n' +
    "            value: '{space.small.value}',\n" +
    '        },\n' +
    '        paddingInlineEnd: {\n' +
    "            value: '{space.small.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    large: {\n' +
    "        fontSize: { value: '{components.field.large.fontSize.value}' },\n" +
    '        paddingBlockStart: {\n' +
    "            value: '{space.xs.value}',\n" +
    '        },\n' +
    '        paddingBlockEnd: {\n' +
    "            value: '{space.xs.value}',\n" +
    '        },\n' +
    '        paddingInlineStart: {\n' +
    "            value: '{space.medium.value}',\n" +
    '        },\n' +
    '        paddingInlineEnd: {\n' +
    "            value: '{space.medium.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    quiet: {\n' +
    "        borderStyle: { value: 'none' },\n" +
    "        borderInlineStart: { value: 'none' },\n" +
    "        borderInlineEnd: { value: 'none' },\n" +
    "        borderBlockStart: { value: 'none' },\n" +
    "        borderRadius: { value: '0' },\n" +
    '        _focus: {\n' +
    "            borderBlockEndColor: { value: 'transparent' },\n" +
    '            boxShadow: {\n' +
    "                value: '{components.fieldcontrol._focus.boxShadow.value}',\n" +
    '            },\n' +
    '        },\n' +
    '        _error: {\n' +
    "            borderBlockEndColor: { value: '{colors.border.error.value}' },\n" +
    '            _focus: {\n' +
    "                borderBlockEndColor: { value: 'transparent' },\n" +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol._error._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    _focus: {\n' +
    '        // These focus styles have been calibrated to create\n' +
    '        // a highly visible focus indicator per WCAG 2.2 guidlines:\n' +
    '        // See: https://www.w3.org/TR/WCAG22/#focus-appearance\n' +
    '        //\n' +
    '        // Key features:\n' +
    '        // * Focus indicator area is at least the 2 CSS px perimeter around the component.\n' +
    '        // * Contrast between focused and unfocused area of contrast has a ratio of 3:1\n' +
    '        //\n' +
    '        // IMPORTANT: Must recalibrate if `colors.border.focus` are changed\n' +
    "        borderColor: { value: '{colors.border.focus.value}' },\n" +
    '        boxShadow: {\n' +
    '            value: {\n' +
    "                offsetX: '0px',\n" +
    "                offsetY: '0px',\n" +
    "                blurRadius: '0px',\n" +
    "                spreadRadius: '2px',\n" +
    "                color: '{colors.border.focus.value}',\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    _disabled: {\n' +
    "        color: { value: '{colors.font.disabled.value}' },\n" +
    "        cursor: { value: 'not-allowed' },\n" +
    "        borderColor: { value: '{colors.transparent.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    '    },\n' +
    '    _error: {\n' +
    "        borderColor: { value: '{colors.border.error.value}' },\n" +
    "        color: { value: '{colors.font.error.value}' },\n" +
    '        _focus: {\n' +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '2px',\n" +
    "                    color: '{colors.border.error.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    info: {\n' +
    '        _focus: {\n' +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '2px',\n" +
    "                    color: '{colors.blue.100.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    warning: {\n' +
    '        _focus: {\n' +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '2px',\n" +
    "                    color: '{colors.orange.100.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    success: {\n' +
    '        _focus: {\n' +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '2px',\n" +
    "                    color: '{colors.green.100.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    overlay: {\n' +
    '        _focus: {\n' +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '2px',\n" +
    "                    color: '{colors.overlay.90.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { fieldcontrol };\n'
} [Function: logger]
____9999999____ {
  code: 'const fieldgroup = {\n' +
    "    gap: { value: '{space.zero.value}' },\n" +
    '    vertical: {\n' +
    "        alignItems: { value: 'center' },\n" +
    '    },\n' +
    '    outer: {\n' +
    "        alignItems: { value: 'center' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { fieldgroup };\n'
} [Function: logger]
____9999999____ {
  code: 'const fieldmessages = {\n' +
    '    error: {\n' +
    "        color: { value: '{colors.font.error.value}' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    '    },\n' +
    '    description: {\n' +
    "        color: { value: '{colors.font.secondary.value}' },\n" +
    "        fontStyle: { value: 'italic' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { fieldmessages };\n'
} [Function: logger]
____9999999____ {
  code: 'const fieldset = {\n' +
    "    backgroundColor: { value: 'transparent' },\n" +
    "    borderRadius: { value: '{radii.xs.value}' },\n" +
    '    flexDirection: {\n' +
    "        value: 'column',\n" +
    '    },\n' +
    "    gap: { value: '{components.field.gap.value}' },\n" +
    '    legend: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        fontSize: { value: '{components.field.fontSize.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    "        lineHeight: { value: '{lineHeights.medium.value}' },\n" +
    '        small: {\n' +
    "            fontSize: '{components.field.small.fontSize.value}',\n" +
    '        },\n' +
    '        large: {\n' +
    "            fontSize: '{components.field.large.fontSize.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    outlined: {\n' +
    "        padding: '{space.medium.value}',\n" +
    "        borderColor: '{colors.neutral.40.value}',\n" +
    "        borderWidth: '{borderWidths.small.value}',\n" +
    "        borderStyle: 'solid',\n" +
    '        small: {\n' +
    "            padding: '{space.small.value}',\n" +
    '        },\n' +
    '        large: {\n' +
    "            padding: '{space.large.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    small: {\n' +
    "        gap: '{components.field.small.gap.value}',\n" +
    '    },\n' +
    '    large: {\n' +
    "        gap: '{components.field.large.gap.value}',\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { fieldset };\n'
} [Function: logger]
____9999999____ {
  code: 'const flex = {\n' +
    "    gap: { value: '{space.medium.value}' },\n" +
    "    justifyContent: { value: 'normal' },\n" +
    "    alignItems: { value: 'stretch' },\n" +
    "    alignContent: { value: 'normal' },\n" +
    "    flexWrap: { value: 'nowrap' },\n" +
    '};\n' +
    '\n' +
    'export { flex };\n'
} [Function: logger]
____9999999____ {
  code: 'const heading = {\n' +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    "    lineHeight: { value: '{lineHeights.small.value}' },\n" +
    '    1: {\n' +
    "        fontSize: { value: '{fontSizes.xxxxl.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.light.value}' },\n" +
    '    },\n' +
    '    2: {\n' +
    "        fontSize: { value: '{fontSizes.xxxl.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.normal.value}' },\n" +
    '    },\n' +
    '    3: {\n' +
    "        fontSize: { value: '{fontSizes.xxl.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.medium.value}' },\n" +
    '    },\n' +
    '    4: {\n' +
    "        fontSize: { value: '{fontSizes.xl.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.semibold.value}' },\n" +
    '    },\n' +
    '    5: {\n' +
    "        fontSize: { value: '{fontSizes.large.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    '    },\n' +
    '    6: {\n' +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.extrabold.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { heading };\n'
} [Function: logger]
____9999999____ {
  code: 'const highlightmatch = {\n' +
    '    highlighted: {\n' +
    "        fontWeight: { value: '{fontWeights.bold}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { highlightmatch };\n'
} [Function: logger]
____9999999____ {
  code: 'const icon = {\n' +
    '    lineHeight: { value: 1 },\n' +
    "    height: { value: '1em' }, // Should match height of parent container font-size\n" +
    '};\n' +
    '\n' +
    'export { icon };\n'
} [Function: logger]
____9999999____ {
  code: 'const input = {\n' +
    "    color: { value: '{components.fieldcontrol.color.value}' },\n" +
    "    borderColor: { value: '{components.fieldcontrol.borderColor.value}' },\n" +
    "    fontSize: { value: '{components.fieldcontrol.fontSize.value}' },\n" +
    '    _focus: {\n' +
    '        borderColor: {\n' +
    "            value: '{components.fieldcontrol._focus.borderColor.value}',\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { input };\n'
} [Function: logger]
____9999999____ {
  code: 'const image = {\n' +
    "    maxWidth: { value: '100%' },\n" +
    "    height: { value: 'auto' },\n" +
    "    objectFit: { value: 'initial' },\n" +
    "    objectPosition: { value: 'initial' },\n" +
    '};\n' +
    '\n' +
    'export { image };\n'
} [Function: logger]
____9999999____ {
  code: 'const link = {\n' +
    "    active: { color: { value: '{colors.font.active.value}' } },\n" +
    "    color: { value: '{colors.font.interactive.value}' },\n" +
    "    focus: { color: { value: '{colors.font.focus.value}' } },\n" +
    "    hover: { color: { value: '{colors.font.hover.value}' } },\n" +
    "    visited: { color: { value: '{colors.font.interactive.value}' } },\n" +
    '};\n' +
    '\n' +
    'export { link };\n'
} [Function: logger]
____9999999____ {
  code: 'const liveness = {\n' +
    '    cameraModule: {\n' +
    "        backgroundColor: { value: '{colors.black}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { liveness };\n'
} [Function: logger]
____9999999____ {
  code: 'const inappmessaging = {\n' +
    '    banner: {\n' +
    "        height: { value: '150px ' },\n" +
    "        width: { value: '400px ' },\n" +
    '    },\n' +
    '    button: {\n' +
    "        backgroundColor: { value: '#e8e8e8' },\n" +
    "        borderRadius: { value: '5px' },\n" +
    "        color: { value: 'black' },\n" +
    '    },\n' +
    '    dialog: {\n' +
    "        height: { value: '50vh' },\n" +
    "        minHeight: { value: '400px' },\n" +
    "        minWidth: { value: '400px' },\n" +
    "        width: { value: '30vw' },\n" +
    '    },\n' +
    '    header: {\n' +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.extrabold.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { inappmessaging };\n'
} [Function: logger]
____9999999____ {
  code: 'const loader = {\n' +
    "    width: { value: '{fontSizes.medium.value}' },\n" +
    "    height: { value: '{fontSizes.medium.value}' },\n" +
    "    fontSize: { value: '{fontSizes.xs.value}' },\n" +
    "    strokeEmpty: { value: '{colors.neutral.20.value}' },\n" +
    "    strokeFilled: { value: '{colors.primary.80.value}' },\n" +
    "    strokeLinecap: { value: 'round' },\n" +
    "    animationDuration: { value: '1s' },\n" +
    '    small: {\n' +
    "        width: { value: '{fontSizes.small.value}' },\n" +
    "        height: { value: '{fontSizes.small.value}' },\n" +
    "        fontSize: { value: '{fontSizes.xxs.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        width: { value: '{fontSizes.large.value}' },\n" +
    "        height: { value: '{fontSizes.large.value}' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    '    },\n' +
    '    linear: {\n' +
    "        width: { value: '100%' },\n" +
    "        minWidth: { value: '5rem' },\n" +
    "        fontSize: { value: '{fontSizes.xxs.value}' },\n" +
    "        strokeWidth: { value: '{fontSizes.xxs.value}' },\n" +
    "        strokeFilled: { value: '{colors.primary.80.value}' },\n" +
    "        strokeEmpty: { value: '{colors.neutral.20.value}' },\n" +
    "        strokeLinecap: { value: 'round' },\n" +
    "        animationDuration: { value: '1s' },\n" +
    '        small: {\n' +
    "            strokeWidth: { value: '{fontSizes.xxxs.value}' },\n" +
    "            fontSize: { value: '{fontSizes.xxxs.value}' },\n" +
    '        },\n' +
    '        large: {\n' +
    "            strokeWidth: { value: '{fontSizes.xs.value}' },\n" +
    "            fontSize: { value: '{fontSizes.xs.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    text: {\n' +
    "        fill: { value: '{colors.font.primary.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { loader };\n'
} [Function: logger]
____9999999____ {
  code: 'const menu = {\n' +
    "    backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "    borderRadius: { value: '{radii.medium.value}' },\n" +
    "    borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderColor: { value: '{colors.border.primary.value}' },\n" +
    "    boxShadow: { value: '{shadows.large.value}' },\n" +
    "    flexDirection: { value: 'column' },\n" +
    "    gap: { value: '{space.zero.value}' },\n" +
    "    maxWidth: { value: '30rem' },\n" +
    "    minWidth: { value: '14rem' },\n" +
    '    small: {\n' +
    "        width: { value: '{fontSizes.medium.value}' },\n" +
    "        height: { value: '{fontSizes.medium.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        width: { value: '{fontSizes.xxxl.value}' },\n" +
    "        height: { value: '{fontSizes.xxxl.value}' },\n" +
    '    },\n' +
    '    item: {\n' +
    "        minHeight: { value: '2.5rem' },\n" +
    "        paddingInlineStart: { value: '{space.medium.value}' },\n" +
    "        paddingInlineEnd: { value: '{space.medium.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { menu };\n'
} [Function: logger]
____9999999____ {
  code: 'const message = {\n' +
    '    // Default styles\n' +
    "    alignItems: { value: 'center' },\n" +
    "    backgroundColor: { value: '{colors.background.tertiary.value}' },\n" +
    "    borderColor: { value: 'transparent' },\n" +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "    borderRadius: { value: '{radii.xs.value}' },\n" +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    "    justifyContent: { value: 'flex-start' },\n" +
    "    paddingBlock: { value: '{space.small.value}' },\n" +
    "    paddingInline: { value: '{space.medium.value}' },\n" +
    "    lineHeight: { value: '{lineHeights.small.value}' },\n" +
    '    icon: {\n' +
    "        size: { value: '{fontSizes.xl.value}' },\n" +
    '    },\n' +
    '    heading: {\n' +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    '    },\n' +
    '    dismiss: {\n' +
    "        gap: { value: '{space.xxs.value}' },\n" +
    '    },\n' +
    '    // Variations\n' +
    '    plain: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        borderColor: { value: 'transparent' },\n" +
    '        info: {\n' +
    "            color: { value: '{colors.font.info.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        error: {\n' +
    "            color: { value: '{colors.font.error.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        success: {\n' +
    "            color: { value: '{colors.font.success.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        warning: {\n' +
    "            color: { value: '{colors.font.warning.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '    },\n' +
    '    outlined: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        borderColor: { value: '{colors.border.primary.value}' },\n" +
    '        info: {\n' +
    "            color: { value: '{colors.font.info.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: '{colors.border.info.value}' },\n" +
    '        },\n' +
    '        error: {\n' +
    "            color: { value: '{colors.font.error.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: '{colors.border.error.value}' },\n" +
    '        },\n' +
    '        success: {\n' +
    "            color: { value: '{colors.font.success.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: '{colors.border.success.value}' },\n" +
    '        },\n' +
    '        warning: {\n' +
    "            color: { value: '{colors.font.warning.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: '{colors.border.warning.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    filled: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.secondary.value}' },\n" +
    "        borderColor: { value: 'transparent' },\n" +
    '        info: {\n' +
    "            color: { value: '{colors.font.info.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.info.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        error: {\n' +
    "            color: { value: '{colors.font.error.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.error.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        success: {\n' +
    "            color: { value: '{colors.font.success.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.success.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '        warning: {\n' +
    "            color: { value: '{colors.font.warning.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.warning.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { message };\n'
} [Function: logger]
____9999999____ {
  code: 'const pagination = {\n' +
    '    current: {\n' +
    "        alignItems: { value: 'center' },\n" +
    "        justifyContent: { value: 'center' },\n" +
    "        color: { value: '{colors.font.inverse.value}' },\n" +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    "        backgroundColor: { value: '{colors.overlay.40.value}' },\n" +
    '    },\n' +
    '    button: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        paddingInlineStart: { value: '{space.xxs.value}' },\n" +
    "        paddingInlineEnd: { value: '{space.xxs.value}' },\n" +
    "        transitionProperty: { value: 'background-color' },\n" +
    "        transitionDuration: { value: '{time.medium.value}' },\n" +
    '        hover: {\n' +
    "            backgroundColor: { value: '{colors.overlay.10.value}' },\n" +
    "            color: { value: '{colors.font.primary.value}' },\n" +
    '        },\n' +
    '        disabled: {\n' +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    ellipsis: {\n' +
    "        alignItems: { value: 'baseline' },\n" +
    "        justifyContent: { value: 'center' },\n" +
    "        paddingInlineStart: { value: '{space.xs.value}' },\n" +
    "        paddingInlineEnd: { value: '{space.xs.value}' },\n" +
    '    },\n' +
    '    itemContainer: {\n' +
    "        marginLeft: { value: '{space.xxxs.value}' },\n" +
    "        marginRight: { value: '{space.xxxs.value}' },\n" +
    '    },\n' +
    '    itemShared: {\n' +
    "        height: { value: '{fontSizes.xxl.value}' },\n" +
    "        minWidth: { value: '{fontSizes.xxl.value}' },\n" +
    "        borderRadius: { value: '{fontSizes.medium.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { pagination };\n'
} [Function: logger]
____9999999____ {
  code: 'const passwordfield = {\n' +
    "    color: { value: '{components.fieldcontrol.color.value}' },\n" +
    '    button: {\n' +
    "        color: { value: '{components.button.color.value}' },\n" +
    '        _active: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._active.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._active.borderColor.value}' },\n" +
    "            color: { value: '{components.button._active.color.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._disabled.backgroundColor.value}',\n" +
    '            },\n' +
    '            borderColor: {\n' +
    "                value: '{components.button._disabled.borderColor.value}',\n" +
    '            },\n' +
    "            color: { value: '{components.button._disabled.color.value}' },\n" +
    '        },\n' +
    '        _error: {\n' +
    "            color: { value: '{components.button.outlined.error.color.value}' },\n" +
    '            backgroundColor: {\n' +
    "                value: '{components.button.outlined.error.backgroundColor.value}',\n" +
    '            },\n' +
    '            borderColor: {\n' +
    "                value: '{components.button.outlined.error.borderColor.value}',\n" +
    '            },\n' +
    '            _active: {\n' +
    '                borderColor: {\n' +
    "                    value: '{components.button.outlined.error._active.borderColor.value}',\n" +
    '                },\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.button.outlined.error._active.backgroundColor.value}',\n" +
    '                },\n' +
    '                color: {\n' +
    "                    value: '{components.button.outlined.error._active.color.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _focus: {\n' +
    '                borderColor: {\n' +
    "                    value: '{components.button.outlined.error._focus.borderColor.value}',\n" +
    '                },\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.button.outlined.error._focus.backgroundColor.value}',\n" +
    '                },\n' +
    '                color: {\n' +
    "                    value: '{components.button.outlined.error._focus.color.value}',\n" +
    '                },\n' +
    '                boxShadow: {\n' +
    "                    value: '{components.button.outlined.error._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '            _hover: {\n' +
    '                borderColor: {\n' +
    "                    value: '{components.button.outlined.error._hover.borderColor.value}',\n" +
    '                },\n' +
    '                backgroundColor: {\n' +
    "                    value: '{components.button.outlined.error._hover.backgroundColor.value}',\n" +
    '                },\n' +
    '                color: {\n' +
    "                    value: '{components.button.outlined.error._hover.color.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '        _focus: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._focus.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._focus.borderColor.value}' },\n" +
    "            color: { value: '{components.button._focus.color.value}' },\n" +
    '        },\n' +
    '        _hover: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._hover.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._hover.borderColor.value}' },\n" +
    "            color: { value: '{components.button._hover.color.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { passwordfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const phonenumberfield = {\n' +
    "    color: { value: '{components.fieldcontrol.color}' },\n" +
    "    borderColor: { value: '{components.fieldcontrol.borderColor}' },\n" +
    "    fontSize: { value: '{components.fieldcontrol.fontSize}' },\n" +
    '    _focus: {\n' +
    "        borderColor: { value: '{components.fieldcontrol._focus.borderColor}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { phonenumberfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const placeholder = {\n' +
    "    borderRadius: { value: '{radii.small.value}' },\n" +
    "    transitionDuration: { value: '{time.long.value}' },\n" +
    "    startColor: { value: '{colors.background.secondary.value}' },\n" +
    "    endColor: { value: '{colors.background.tertiary.value}' },\n" +
    '    // sizes\n' +
    '    small: {\n' +
    "        height: { value: '{space.small.value}' },\n" +
    '    },\n' +
    '    default: {\n' +
    "        height: { value: '{space.medium.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        height: { value: '{space.large.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { placeholder };\n'
} [Function: logger]
____9999999____ {
  code: 'const radio = {\n' +
    "    alignItems: { value: 'center' },\n" +
    "    justifyContent: { value: 'flex-start' },\n" +
    "    gap: { value: 'inherit' },\n" +
    "    _disabled: { cursor: { value: 'not-allowed' } },\n" +
    '    button: {\n' +
    "        alignItems: { value: 'center' },\n" +
    "        justifyContent: { value: 'center' },\n" +
    "        width: { value: '{fontSizes.medium.value}' },\n" +
    "        height: { value: '{fontSizes.medium.value}' },\n" +
    "        boxSizing: { value: 'border-box' },\n" +
    "        borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderRadius: { value: '50%' },\n" +
    "        borderColor: { value: '{colors.border.primary.value}' },\n" +
    "        color: { value: '{colors.background.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        transitionProperty: { value: 'all' },\n" +
    "        transitionDuration: { value: '{time.medium.value}' },\n" +
    "        outlineColor: { value: '{colors.transparent.value}' },\n" +
    "        outlineStyle: { value: 'solid' },\n" +
    "        outlineWidth: { value: '{outlineWidths.medium.value}' },\n" +
    "        outlineOffset: { value: '{outlineOffsets.medium.value}' },\n" +
    '        // We want the dot inside the border to be a border-width from the border\n' +
    "        padding: { value: '{borderWidths.medium.value}' },\n" +
    '        small: {\n' +
    "            width: { value: '{fontSizes.small.value}' },\n" +
    "            height: { value: '{fontSizes.small.value}' },\n" +
    '        },\n' +
    '        large: {\n' +
    "            width: { value: '{fontSizes.large.value}' },\n" +
    "            height: { value: '{fontSizes.large.value}' },\n" +
    '        },\n' +
    '        _checked: {\n' +
    '            color: {\n' +
    "                value: '{colors.primary.80.value}',\n" +
    '            },\n' +
    "            _disabled: { color: { value: '{colors.background.disabled.value}' } },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    "            boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    '        },\n' +
    '        _error: {\n' +
    "            borderColor: { value: '{colors.border.error.value}' },\n" +
    '            _focus: {\n' +
    '                boxShadow: {\n' +
    "                    value: '{components.fieldcontrol._error._focus.boxShadow.value}',\n" +
    '                },\n' +
    '            },\n' +
    '        },\n' +
    '        _disabled: {\n' +
    "            borderColor: { value: '{colors.border.disabled.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    label: {\n' +
    "        color: { value: '{components.text.color.value}' },\n" +
    '        _disabled: {\n' +
    '            color: {\n' +
    "                value: '{colors.font.disabled.value}',\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { radio };\n'
} [Function: logger]
____9999999____ {
  code: 'const radiogroup = {\n' +
    '    radio: {\n' +
    "        borderWidth: { value: '{components.radio.button.borderWidth}' },\n" +
    "        borderColor: { value: '{components.radio.button.borderColor}' },\n" +
    "        backgroundColor: { value: '{components.radio.button.backgroundColor}' },\n" +
    '        _checked: {\n' +
    "            color: { value: '{components.radio.button._checked.color}' },\n" +
    '        },\n' +
    '        label: {\n' +
    "            color: { value: '{components.radio.label.color}' },\n" +
    '        },\n' +
    '    },\n' +
    '    legend: {\n' +
    "        color: { value: '{components.fieldset.legend.color}' },\n" +
    "        fontWeight: { value: '{fontWeights.normal}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { radiogroup };\n'
} [Function: logger]
____9999999____ {
  code: 'const rating = {\n' +
    "    large: { size: { value: '{fontSizes.xxxl.value}' } },\n" +
    "    default: { size: { value: '{fontSizes.xl.value}' } },\n" +
    "    small: { size: { value: '{fontSizes.small.value}' } },\n" +
    "    filled: { color: { value: '{colors.secondary.80.value}' } },\n" +
    "    empty: { color: { value: '{colors.background.tertiary.value}' } },\n" +
    '};\n' +
    '\n' +
    'export { rating };\n'
} [Function: logger]
____9999999____ {
  code: 'const searchfield = {\n' +
    "    color: { value: '{components.fieldcontrol.color.value}' },\n" +
    '    button: {\n' +
    "        color: { value: '{components.button.color.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    '        _active: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._active.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._active.borderColor.value}' },\n" +
    "            color: { value: '{components.button._active.color.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._disabled.backgroundColor.value}',\n" +
    '            },\n' +
    '            borderColor: {\n' +
    "                value: '{components.button._disabled.borderColor.value}',\n" +
    '            },\n' +
    "            color: { value: '{components.button._disabled.color.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._focus.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._focus.borderColor.value}' },\n" +
    "            color: { value: '{components.button._focus.color.value}' },\n" +
    '        },\n' +
    '        _hover: {\n' +
    '            backgroundColor: {\n' +
    "                value: '{components.button._hover.backgroundColor.value}',\n" +
    '            },\n' +
    "            borderColor: { value: '{components.button._hover.borderColor.value}' },\n" +
    "            color: { value: '{components.button._hover.color.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { searchfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const select = {\n' +
    "    color: { value: '{components.fieldcontrol.color}' },\n" +
    "    backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "    paddingInlineEnd: { value: '{space.xxl.value}' },\n" +
    '    _disabled: {\n' +
    "        color: { value: '{colors.font.disabled.value}' },\n" +
    "        backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    '    },\n' +
    '    // wrappers\n' +
    '    wrapper: {\n' +
    "        flex: { value: '1' },\n" +
    "        display: { value: 'block' },\n" +
    "        position: { value: 'relative' },\n" +
    "        cursor: { value: 'pointer' },\n" +
    '    },\n' +
    '    iconWrapper: {\n' +
    "        alignItems: { value: 'center' },\n" +
    "        position: { value: 'absolute' },\n" +
    "        top: { value: '50%' },\n" +
    "        right: { value: '{space.medium.value}' },\n" +
    "        transform: { value: 'translateY(-50%)' },\n" +
    "        pointerEvents: { value: 'none' },\n" +
    '        small: {\n' +
    "            right: { value: '{space.xs.value}' },\n" +
    '        },\n' +
    '        large: {\n' +
    "            right: { value: '{space.medium.value}' },\n" +
    '        },\n' +
    '    },\n' +
    "    // It's important to test these option values on Chrome/FireFox/Edge\n" +
    '    // on Windows because they allow styling of the option element.\n' +
    '    // Chrome/Safari/Firefox on Mac uses the system ui.\n' +
    '    option: {\n' +
    "        backgroundColor: { value: 'transparent' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    '        _disabled: {\n' +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '            backgroundColor: {\n' +
    "                value: 'transparent',\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    "    whiteSpace: { value: 'nowrap' },\n" +
    "    minWidth: { value: '6.5rem' },\n" +
    '    small: {\n' +
    "        minWidth: { value: '5.5rem' },\n" +
    "        paddingInlineEnd: { value: '{space.xl.value}' },\n" +
    '    },\n' +
    '    large: {\n' +
    "        minWidth: { value: '7.5rem' },\n" +
    "        paddingInlineEnd: { value: '{space.xxl.value}' },\n" +
    '    },\n' +
    '    expanded: {\n' +
    "        paddingBlock: { value: '{space.xs.value}' },\n" +
    "        paddingInline: { value: '{space.small.value}' },\n" +
    '        option: {\n' +
    "            paddingBlock: { value: '{space.xs.value}' },\n" +
    "            paddingInline: { value: '{space.small.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { select };\n'
} [Function: logger]
____9999999____ {
  code: 'const selectfield = {\n' +
    "    borderColor: { value: '{components.fieldcontrol.borderColor}' },\n" +
    "    color: { value: '{components.fieldcontrol.color}' },\n" +
    '    flexDirection: {\n' +
    "        value: 'column',\n" +
    '    },\n' +
    "    fontSize: { value: '{components.fieldcontrol.fontSize}' },\n" +
    '    _focus: {\n' +
    "        borderColor: { value: '{components.fieldcontrol._focus.borderColor}' },\n" +
    '    },\n' +
    '    label: {\n' +
    "        color: { value: '{components.field.label.color}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { selectfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const stepperfield = {\n' +
    "    borderColor: { value: '{components.fieldcontrol.borderColor}' },\n" +
    "    flexDirection: { value: 'column' },\n" +
    '    input: {\n' +
    "        color: { value: '{components.fieldcontrol.color}' },\n" +
    "        fontSize: { value: '{components.fieldcontrol.fontSize}' },\n" +
    "        textAlign: { value: 'center' },\n" +
    '    },\n' +
    '    button: {\n' +
    "        color: { value: '{components.button.color}' },\n" +
    "        backgroundColor: { value: '{colors.transparent}' },\n" +
    '        _active: {\n' +
    "            color: { value: '{components.button._active.color}' },\n" +
    "            backgroundColor: { value: '{components.button._active.backgroundColor}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            color: { value: '{components.button._focus.color}' },\n" +
    "            backgroundColor: { value: '{components.button._focus.backgroundColor}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    "            color: { value: '{components.button._disabled.color}' },\n" +
    '            backgroundColor: {\n' +
    "                value: '{components.fieldcontrol._disabled.backgroundColor}',\n" +
    '            },\n' +
    '        },\n' +
    '        _hover: {\n' +
    "            color: { value: '{components.button._hover.color}' },\n" +
    "            backgroundColor: { value: '{components.button._hover.backgroundColor}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { stepperfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const sliderfield = {\n' +
    "    paddingBlock: { value: '{space.xs.value}' },\n" +
    '    // The track is the thin background of the slider\n' +
    '    track: {\n' +
    "        backgroundColor: { value: '{colors.background.quaternary.value}' },\n" +
    "        borderRadius: { value: '9999px' },\n" +
    "        height: { value: '0.375rem' },\n" +
    "        minWidth: { value: '10rem' },\n" +
    '    },\n' +
    '    // The range is the filled part of the track\n' +
    '    range: {\n' +
    "        backgroundColor: { value: '{colors.primary.80.value}' },\n" +
    "        borderRadius: { value: '9999px' },\n" +
    '        _disabled: {\n' +
    "            backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    // The thumb is the circle above the track that the user drags\n' +
    '    thumb: {\n' +
    "        width: { value: '1.25rem' },\n" +
    "        height: { value: '1.25rem' },\n" +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        boxShadow: { value: '{shadows.small.value}' },\n" +
    "        borderRadius: { value: '50%' },\n" +
    "        borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    "        borderColor: { value: '{colors.border.primary.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    '        _disabled: {\n' +
    "            backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    "            borderColor: { value: 'transparent' },\n" +
    "            boxShadow: { value: 'none' },\n" +
    '        },\n' +
    '        _hover: {\n' +
    "            backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    "            boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    small: {\n' +
    '        track: {\n' +
    "            height: { value: '0.25rem' },\n" +
    '        },\n' +
    '        thumb: {\n' +
    "            width: { value: '1rem' },\n" +
    "            height: { value: '1rem' },\n" +
    '        },\n' +
    '    },\n' +
    '    large: {\n' +
    '        track: {\n' +
    "            height: { value: '0.625rem' },\n" +
    '        },\n' +
    '        thumb: {\n' +
    "            width: { value: '1.5rem' },\n" +
    "            height: { value: '1.5rem' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { sliderfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const switchfield = {\n' +
    '    // States\n' +
    '    _disabled: {\n' +
    "        opacity: { value: '{opacities.60.value}' },\n" +
    '    },\n' +
    '    _focused: {\n' +
    '        shadow: {\n' +
    "            value: '{components.fieldcontrol._focus.boxShadow.value}',\n" +
    '        },\n' +
    '    },\n' +
    '    // Sizes\n' +
    "    fontSize: { value: '{fontSizes.medium.value}' },\n" +
    '    large: {\n' +
    "        fontSize: { value: '{fontSizes.large.value}' },\n" +
    '    },\n' +
    '    small: {\n' +
    "        fontSize: { value: '{fontSizes.small.value}' },\n" +
    '    },\n' +
    '    // Child elements\n' +
    '    label: {\n' +
    "        padding: { value: '{space.xs.value}' },\n" +
    '    },\n' +
    '    thumb: {\n' +
    "        backgroundColor: { value: '{colors.background.primary.value}' },\n" +
    "        borderColor: { value: 'transparent' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderRadius: { value: '{radii.xxxl.value}' },\n" +
    '        checked: {\n' +
    "            transform: { value: '{transforms.slideX.medium.value}' },\n" +
    '        },\n' +
    '        transition: {\n' +
    "            duration: { value: '{time.medium.value}' },\n" +
    '        },\n' +
    "        width: { value: '{space.relative.medium.value}' },\n" +
    '    },\n' +
    '    track: {\n' +
    "        backgroundColor: { value: '{colors.background.quaternary.value}' },\n" +
    "        borderRadius: { value: '{radii.xxxl.value}' },\n" +
    '        checked: {\n' +
    "            backgroundColor: { value: '{colors.primary.80.value}' },\n" +
    '        },\n' +
    "        height: { value: '{space.relative.medium.value}' },\n" +
    "        padding: { value: '{outlineWidths.medium.value}' },\n" +
    '        transition: {\n' +
    "            duration: { value: '{time.short.value}' },\n" +
    '        },\n' +
    "        width: { value: '{space.relative.xl.value}' },\n" +
    '        _error: {\n' +
    "            backgroundColor: { value: '{colors.background.error.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { switchfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const text = {\n' +
    '    // default styles\n' +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    '    // variations\n' +
    '    primary: {\n' +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    '    },\n' +
    '    secondary: {\n' +
    "        color: { value: '{colors.font.secondary.value}' },\n" +
    '    },\n' +
    '    tertiary: {\n' +
    "        color: { value: '{colors.font.tertiary.value}' },\n" +
    '    },\n' +
    '    error: {\n' +
    "        color: { value: '{colors.font.error.value}' },\n" +
    '    },\n' +
    '    warning: {\n' +
    "        color: { value: '{colors.font.warning.value}' },\n" +
    '    },\n' +
    '    success: {\n' +
    "        color: { value: '{colors.font.success.value}' },\n" +
    '    },\n' +
    '    info: {\n' +
    "        color: { value: '{colors.font.info.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { text };\n'
} [Function: logger]
____9999999____ {
  code: 'const storagemanager = {\n' +
    '    dropzone: {\n' +
    "        backgroundColor: { value: '{colors.background.primary}' },\n" +
    "        borderRadius: { value: '{radii.small}' },\n" +
    "        borderColor: { value: '{colors.border.primary}' },\n" +
    "        borderStyle: { value: 'dashed' },\n" +
    "        borderWidth: { value: '{borderWidths.small}' },\n" +
    "        gap: { value: '{space.small}' },\n" +
    "        paddingBlock: { value: '{space.xl}' },\n" +
    "        paddingInline: { value: '{space.large}' },\n" +
    "        textAlign: { value: 'center' },\n" +
    '        _active: {\n' +
    "            backgroundColor: { value: '{colors.primary.10}' },\n" +
    '            borderRadius: {\n' +
    "                value: '{components.storagemanager.dropzone.borderRadius}',\n" +
    '            },\n' +
    "            borderColor: { value: '{colors.border.pressed}' },\n" +
    '            borderStyle: {\n' +
    "                value: '{components.storagemanager.dropzone.borderStyle}',\n" +
    '            },\n' +
    "            borderWidth: { value: '{borderWidths.medium}' },\n" +
    '        },\n' +
    '        icon: {\n' +
    "            color: { value: '{colors.border.primary}' },\n" +
    "            fontSize: { value: '{fontSizes.xxl}' },\n" +
    '        },\n' +
    '        text: {\n' +
    "            color: { value: '{colors.font.tertiary}' },\n" +
    "            fontSize: { value: '{fontSizes.medium}' },\n" +
    "            fontWeight: { value: '{fontWeights.bold}' },\n" +
    '        },\n' +
    '    },\n' +
    '    file: {\n' +
    "        backgroundColor: { value: '{colors.background.primary}' },\n" +
    "        borderRadius: { value: '{radii.small}' },\n" +
    "        borderColor: { value: '{colors.border.primary}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderWidth: { value: '{borderWidths.small}' },\n" +
    "        paddingBlock: { value: '{space.xs}' },\n" +
    "        paddingInline: { value: '{space.small}' },\n" +
    "        gap: { value: '{space.small}' },\n" +
    "        alignItems: { value: 'baseline' },\n" +
    '        name: {\n' +
    "            fontSize: { value: '{fontSizes.medium}' },\n" +
    "            fontWeight: { value: '{fontWeights.bold}' },\n" +
    "            color: { value: '{colors.font.primary}' },\n" +
    '        },\n' +
    '        size: {\n' +
    "            fontSize: { value: '{fontSizes.small}' },\n" +
    "            fontWeight: { value: '{fontWeights.normal}' },\n" +
    "            color: { value: '{colors.font.tertiary}' },\n" +
    '        },\n' +
    '        image: {\n' +
    "            width: { value: '{space.xxl}' },\n" +
    "            height: { value: '{space.xxl}' },\n" +
    "            backgroundColor: { value: '{colors.background.secondary}' },\n" +
    "            color: { value: '{colors.font.tertiary}' },\n" +
    "            borderRadius: { value: '{radii.small}' },\n" +
    '        },\n' +
    '    },\n' +
    '    filelist: {\n' +
    "        flexDirection: { value: 'column' },\n" +
    "        gap: { value: '{space.small}' },\n" +
    '    },\n' +
    '    loader: {\n' +
    "        strokeLinecap: { value: 'round' },\n" +
    "        strokeEmpty: { value: '{colors.border.secondary}' },\n" +
    "        strokeFilled: { value: '{components.loader.strokeFilled}' },\n" +
    "        strokeWidth: { value: '{borderWidths.large}' },\n" +
    '    },\n' +
    '    previewer: {\n' +
    "        backgroundColor: { value: '{colors.background.primary}' },\n" +
    "        borderColor: { value: '{colors.border.primary}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderWidth: { value: '{borderWidths.small}' },\n" +
    "        borderRadius: { value: '{radii.small}' },\n" +
    "        paddingBlock: { value: '{space.zero}' },\n" +
    "        paddingInline: { value: '{space.zero}' },\n" +
    "        maxHeight: { value: '40rem' },\n" +
    "        maxWidth: { value: 'auto' },\n" +
    '        text: {\n' +
    "            fontSize: { value: '{fontSizes.medium}' },\n" +
    "            fontWeight: { value: '{fontWeights.bold}' },\n" +
    "            color: { value: '{colors.font.primary}' },\n" +
    '        },\n' +
    '        body: {\n' +
    "            paddingBlock: { value: '{space.medium}' },\n" +
    "            paddingInline: { value: '{space.medium}' },\n" +
    "            gap: { value: '{space.small}' },\n" +
    '        },\n' +
    '        footer: {\n' +
    "            justifyContent: { value: 'flex-end' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { storagemanager };\n'
} [Function: logger]
____9999999____ {
  code: 'const table = {\n' +
    '    /**\n' +
    '     * Default table styles\n' +
    '     */\n' +
    "    borderCollapse: { value: 'collapse' },\n" +
    "    display: { value: 'table' },\n" +
    "    width: { value: '100%' },\n" +
    '    /**\n' +
    '     * Default table head styles\n' +
    '     */\n' +
    '    head: {\n' +
    "        display: { value: 'table-header-group' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '    },\n' +
    '    /**\n' +
    '     * Default table body styles\n' +
    '     */\n' +
    '    body: {\n' +
    "        display: { value: 'table-row-group' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '    },\n' +
    '    /**\n' +
    '     * Default table foot styles\n' +
    '     */\n' +
    '    foot: {\n' +
    "        display: { value: 'table-footer-group' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '    },\n' +
    '    /**\n' +
    '     * Default table row styles\n' +
    '     */\n' +
    '    row: {\n' +
    "        display: { value: 'table-row' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '        hover: {\n' +
    "            backgroundColor: { value: '{colors.background.tertiary.value}' },\n" +
    '        },\n' +
    '        striped: {\n' +
    "            backgroundColor: { value: '{colors.background.secondary.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    /**\n' +
    '     * Default table header cell styles\n' +
    '     */\n' +
    '    header: {\n' +
    "        borderColor: { value: '{colors.border.tertiary.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        display: { value: 'table-cell' },\n" +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    "        padding: { value: '{space.medium.value}' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '        large: {\n' +
    "            fontSize: { value: '{fontSizes.large.value}' },\n" +
    "            padding: { value: '{space.large.value}' },\n" +
    '        },\n' +
    '        small: {\n' +
    "            fontSize: { value: '{fontSizes.small.value}' },\n" +
    "            padding: { value: '{space.xs.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    /**\n' +
    '     * Default table data cell styles\n' +
    '     */\n' +
    '    data: {\n' +
    "        borderColor: { value: '{colors.border.tertiary.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        display: { value: 'table-cell' },\n" +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.normal.value}' },\n" +
    "        padding: { value: '{space.medium.value}' },\n" +
    "        verticalAlign: { value: 'middle' },\n" +
    '        large: {\n' +
    "            fontSize: { value: '{fontSizes.large.value}' },\n" +
    "            padding: { value: '{space.large.value}' },\n" +
    '        },\n' +
    '        small: {\n' +
    "            fontSize: { value: '{fontSizes.small.value}' },\n" +
    "            padding: { value: '{space.xs.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    /**\n' +
    '     * Default table caption styles\n' +
    '     */\n' +
    '    caption: {\n' +
    "        captionSide: { value: 'bottom' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        display: { value: 'table-caption' },\n" +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        textAlign: { value: 'center' },\n" +
    "        wordBreak: { value: 'break-all' },\n" +
    '        large: {\n' +
    "            fontSize: { value: '{fontSizes.large.value}' },\n" +
    '        },\n' +
    '        small: {\n' +
    "            fontSize: { value: '{fontSizes.small.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { table };\n'
} [Function: logger]
____9999999____ {
  code: 'const tabs = {\n' +
    "    backgroundColor: { value: 'transparent' },\n" +
    "    borderColor: { value: '{colors.border.secondary.value}' },\n" +
    "    borderStyle: { value: 'solid' },\n" +
    "    borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    "    gap: { value: '0' },\n" +
    '    item: {\n' +
    "        backgroundColor: { value: 'transparent' },\n" +
    "        borderColor: { value: '{colors.border.secondary.value}' },\n" +
    "        borderStyle: { value: 'solid' },\n" +
    "        borderWidth: { value: '{borderWidths.medium.value}' },\n" +
    "        color: { value: '{colors.font.secondary.value}' },\n" +
    "        fontSize: { value: '{fontSizes.medium.value}' },\n" +
    "        fontWeight: { value: '{fontWeights.bold.value}' },\n" +
    "        paddingVertical: { value: '{space.small.value}' },\n" +
    "        paddingHorizontal: { value: '{space.medium.value}' },\n" +
    "        textAlign: { value: 'center' },\n" +
    "        transitionDuration: { value: '{time.medium.value}' },\n" +
    '        _hover: {\n' +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    "            boxShadow: { value: 'none' },\n" +
    "            color: { value: '{colors.font.hover.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    '            boxShadow: {\n' +
    '                value: {\n' +
    "                    offsetX: '0px',\n" +
    "                    offsetY: '0px',\n" +
    "                    blurRadius: '0px',\n" +
    "                    spreadRadius: '{borderWidths.medium}',\n" +
    "                    color: '{colors.border.focus.value}',\n" +
    '                },\n' +
    '            },\n' +
    "            color: { value: '{colors.font.focus.value}' },\n" +
    '        },\n' +
    '        _active: {\n' +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            borderColor: { value: '{colors.font.interactive.value}' },\n" +
    "            boxShadow: { value: 'none' },\n" +
    "            color: { value: '{colors.font.interactive.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    "            backgroundColor: { value: 'transparent' },\n" +
    "            borderColor: { value: '{colors.border.tertiary.value}' },\n" +
    "            boxShadow: { value: 'none' },\n" +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    panel: {\n' +
    "        backgroundColor: { value: 'transparent' },\n" +
    "        paddingInline: { value: '0' },\n" +
    "        paddingBlock: { value: '{space.small.value}' },\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { tabs };\n'
} [Function: logger]
____9999999____ {
  code: 'const textareafield = {\n' +
    "    color: { value: '{components.fieldcontrol.color.value}' },\n" +
    "    borderColor: { value: '{components.fieldcontrol.borderColor.value}' },\n" +
    '    _focus: {\n' +
    '        borderColor: {\n' +
    "            value: '{components.fieldcontrol._focus.borderColor.value}',\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { textareafield };\n'
} [Function: logger]
____9999999____ {
  code: 'const textfield = {\n' +
    "    color: { value: '{components.fieldcontrol.color.value}' },\n" +
    "    borderColor: { value: '{components.fieldcontrol.borderColor.value}' },\n" +
    "    fontSize: { value: '{components.fieldcontrol.fontSize.value}' },\n" +
    '    _focus: {\n' +
    '        borderColor: {\n' +
    "            value: '{components.fieldcontrol._focus.borderColor.value}',\n" +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { textfield };\n'
} [Function: logger]
____9999999____ {
  code: 'const togglebuttongroup = {\n' +
    "    alignItems: { value: 'center' },\n" +
    "    alignContent: { value: 'center' },\n" +
    "    justifyContent: { value: 'flex-start' },\n" +
    '};\n' +
    '\n' +
    'export { togglebuttongroup };\n'
} [Function: logger]
____9999999____ {
  code: 'const togglebutton = {\n' +
    "    borderColor: { value: '{colors.border.primary.value}' },\n" +
    "    color: { value: '{colors.font.primary.value}' },\n" +
    '    _hover: {\n' +
    "        backgroundColor: { value: '{colors.overlay.10.value}' },\n" +
    '    },\n' +
    '    _focus: {\n' +
    "        borderColor: { value: '{colors.border.focus.value}' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    '    },\n' +
    '    _active: {\n' +
    "        backgroundColor: { value: '{colors.transparent.value}' },\n" +
    '    },\n' +
    '    _disabled: {\n' +
    "        backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "        borderColor: { value: '{colors.border.disabled.value}' },\n" +
    "        color: { value: '{colors.font.disabled.value}' },\n" +
    '    },\n' +
    '    _pressed: {\n' +
    "        borderColor: { value: '{colors.border.pressed.value}' },\n" +
    "        color: { value: '{colors.font.primary.value}' },\n" +
    "        backgroundColor: { value: '{colors.overlay.20.value}' },\n" +
    '        _hover: {\n' +
    "            backgroundColor: { value: '{colors.overlay.30.value}' },\n" +
    '        },\n' +
    '    },\n' +
    '    primary: {\n' +
    "        backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "        borderWidth: { value: '{borderWidths.small.value}' },\n" +
    '        _focus: {\n' +
    "            borderColor: { value: '{colors.border.focus.value}' },\n" +
    "            backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "            boxShadow: { value: '{components.fieldcontrol._focus.boxShadow.value}' },\n" +
    "            color: { value: '{colors.font.primary.value}' },\n" +
    '        },\n' +
    '        _hover: {\n' +
    "            backgroundColor: { value: '{colors.overlay.10.value}' },\n" +
    "            color: { value: '{colors.font.primary.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    "            borderColor: { value: '{colors.border.disabled.value}' },\n" +
    "            backgroundColor: { value: '{colors.background.disabled.value}' },\n" +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '        _pressed: {\n' +
    "            backgroundColor: { value: '{colors.primary.80.value}' },\n" +
    "            borderColor: { value: '{colors.primary.80.value}' },\n" +
    "            color: { value: '{colors.background.primary.value}' },\n" +
    '            _focus: {\n' +
    '                backgroundColor: {\n' +
    "                    value: '{colors.border.focus.value}',\n" +
    '                },\n' +
    "                borderColor: { value: '{colors.border.focus.value}' },\n" +
    "                color: { value: '{colors.background.primary.value}' },\n" +
    '            },\n' +
    '            _hover: {\n' +
    "                borderColor: { value: '{colors.primary.60.value}' },\n" +
    '                backgroundColor: {\n' +
    "                    value: '{colors.primary.60.value}',\n" +
    '                },\n' +
    "                boxShadow: { value: '{colors.primary.60.value}' },\n" +
    "                color: { value: '{colors.background.primary.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '    link: {\n' +
    "        backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "        color: { value: '{colors.overlay.50.value}' },\n" +
    '        _hover: {\n' +
    "            backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "            color: { value: '{colors.overlay.50.value}' },\n" +
    '        },\n' +
    '        _focus: {\n' +
    "            backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "            color: { value: '{colors.overlay.50.value}' },\n" +
    '        },\n' +
    '        _disabled: {\n' +
    "            backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "            color: { value: '{colors.font.disabled.value}' },\n" +
    '        },\n' +
    '        _pressed: {\n' +
    "            backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "            color: { value: '{colors.overlay.90.value}' },\n" +
    '            _focus: {\n' +
    "                backgroundColor: { value: '{colors.transparent.value}' },\n" +
    "                color: { value: '{colors.overlay.90.value}' },\n" +
    '            },\n' +
    '            _hover: {\n' +
    "                color: { value: '{colors.overlay.90.value}' },\n" +
    "                backgroundColor: { value: '{colors.transparent.value}' },\n" +
    '            },\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { togglebutton };\n'
} [Function: logger]
____9999999____ {
  code: "var arrayReduce = require('./_arrayReduce'),\n" +
    "    deburr = require('./deburr'),\n" +
    "    words = require('./words');\n" +
    '\n' +
    '/** Used to compose unicode capture groups. */\n' +
    `var rsApos = "['\\u2019]";\n` +
    '\n' +
    '/** Used to match apostrophes. */\n' +
    "var reApos = RegExp(rsApos, 'g');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a function like `_.camelCase`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} callback The function to combine each word.\n' +
    ' * @returns {Function} Returns the new compounder function.\n' +
    ' */\n' +
    'function createCompounder(callback) {\n' +
    '  return function(string) {\n' +
    "    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n" +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = createCompounder;\n'
} [Function: logger]
____9999999____ {
  code: 'const getFormDataFromEvent = (event) => {\n' +
    '    const formData = new FormData(event.target);\n' +
    '    return Object.fromEntries(formData);\n' +
    '};\n' +
    '\n' +
    'export { getFormDataFromEvent };\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    "const defaults = require('./defaults');\n" +
    '\n' +
    'function createReferenceRegex(opts = {}) {\n' +
    '  const options = Object.assign({}, defaults, opts);\n' +
    '\n' +
    '  return new RegExp(\n' +
    "    '\\\\' +\n" +
    '    options.opening_character +\n' +
    "    '([^' +\n" +
    '    options.closing_character +\n' +
    "    ']+)' +\n" +
    "    '\\\\' +\n" +
    "    options.closing_character, 'g'\n" +
    '  );\n' +
    '}\n' +
    '\n' +
    'module.exports = createReferenceRegex;\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { getErrors } from '@aws-amplify/ui';\n" +
    "import { PasswordField } from '../../../primitives/PasswordField/PasswordField.mjs';\n" +
    "import { PhoneNumberField } from '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\n" +
    "import { TextField } from '../../../primitives/TextField/TextField.mjs';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { useStableId } from '../../../primitives/utils/useStableId.mjs';\n" +
    "import { ValidationErrors } from '../../shared/ValidationErrors.mjs';\n" +
    '\n' +
    'function FormField({ autocomplete: autoComplete, dialCode, name, type, ...props }) {\n' +
    '    const { validationErrors } = useAuthenticator(({ validationErrors }) => [\n' +
    '        validationErrors,\n' +
    '    ]);\n' +
    '    const errors = React.useMemo(() => getErrors(validationErrors[name]), [name, validationErrors]);\n' +
    '    const hasError = errors?.length > 0;\n' +
    '    const errorId = useStableId();\n' +
    '    const ariaDescribedBy = hasError ? errorId : undefined;\n' +
    "    if (type === 'tel') {\n" +
    '        return (React.createElement(React.Fragment, null,\n' +
    '            React.createElement(PhoneNumberField, { ...props, name: name, defaultDialCode: dialCode, dialCodeName: "country_code", autoComplete: autoComplete, hasError: hasError, "aria-describedby": ariaDescribedBy }),\n' +
    '            React.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors: errors, id: errorId })));\n' +
    '    }\n' +
    "    else if (type === 'password') {\n" +
    '        return (React.createElement(React.Fragment, null,\n' +
    '            React.createElement(PasswordField, { ...props, name: name, autoComplete: autoComplete, hasError: hasError, "aria-describedby": ariaDescribedBy }),\n' +
    '            React.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors: errors, id: errorId })));\n' +
    '    }\n' +
    '    else {\n' +
    '        return (React.createElement(React.Fragment, null,\n' +
    '            React.createElement(TextField, { ...props, name: name, autoComplete: autoComplete, hasError: hasError, type: type, "aria-describedby": ariaDescribedBy }),\n' +
    '            React.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors: errors, id: errorId })));\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { FormField };\n'
} [Function: logger]
____9999999____ {
  code: '// can-promise has a crash in some versions of react native that dont have\n' +
    '// standard global objects\n' +
    '// https://github.com/soldair/node-qrcode/issues/157\n' +
    '\n' +
    'module.exports = function () {\n' +
    "  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Utils = require('./utils')\n" +
    "const ECLevel = require('./error-correction-level')\n" +
    "const BitBuffer = require('./bit-buffer')\n" +
    "const BitMatrix = require('./bit-matrix')\n" +
    "const AlignmentPattern = require('./alignment-pattern')\n" +
    "const FinderPattern = require('./finder-pattern')\n" +
    "const MaskPattern = require('./mask-pattern')\n" +
    "const ECCode = require('./error-correction-code')\n" +
    "const ReedSolomonEncoder = require('./reed-solomon-encoder')\n" +
    "const Version = require('./version')\n" +
    "const FormatInfo = require('./format-info')\n" +
    "const Mode = require('./mode')\n" +
    "const Segments = require('./segments')\n" +
    '\n' +
    '/**\n' +
    ' * QRCode for JavaScript\n' +
    ' *\n' +
    ' * modified by Ryan Day for nodejs support\n' +
    ' * Copyright (c) 2011 Ryan Day\n' +
    ' *\n' +
    ' * Licensed under the MIT license:\n' +
    ' *   http://www.opensource.org/licenses/mit-license.php\n' +
    ' *\n' +
    '//---------------------------------------------------------------------\n' +
    '// QRCode for JavaScript\n' +
    '//\n' +
    '// Copyright (c) 2009 Kazuhiko Arase\n' +
    '//\n' +
    '// URL: http://www.d-project.com/\n' +
    '//\n' +
    '// Licensed under the MIT license:\n' +
    '//   http://www.opensource.org/licenses/mit-license.php\n' +
    '//\n' +
    '// The word "QR Code" is registered trademark of\n' +
    '// DENSO WAVE INCORPORATED\n' +
    '//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n' +
    '//\n' +
    '//---------------------------------------------------------------------\n' +
    '*/\n' +
    '\n' +
    '/**\n' +
    ' * Add finder patterns bits to matrix\n' +
    ' *\n' +
    ' * @param  {BitMatrix} matrix  Modules matrix\n' +
    ' * @param  {Number}    version QR Code version\n' +
    ' */\n' +
    'function setupFinderPattern (matrix, version) {\n' +
    '  const size = matrix.size\n' +
    '  const pos = FinderPattern.getPositions(version)\n' +
    '\n' +
    '  for (let i = 0; i < pos.length; i++) {\n' +
    '    const row = pos[i][0]\n' +
    '    const col = pos[i][1]\n' +
    '\n' +
    '    for (let r = -1; r <= 7; r++) {\n' +
    '      if (row + r <= -1 || size <= row + r) continue\n' +
    '\n' +
    '      for (let c = -1; c <= 7; c++) {\n' +
    '        if (col + c <= -1 || size <= col + c) continue\n' +
    '\n' +
    '        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n' +
    '          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n' +
    '          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n' +
    '          matrix.set(row + r, col + c, true, true)\n' +
    '        } else {\n' +
    '          matrix.set(row + r, col + c, false, true)\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Add timing pattern bits to matrix\n' +
    ' *\n' +
    ' * Note: this function must be called before {@link setupAlignmentPattern}\n' +
    ' *\n' +
    ' * @param  {BitMatrix} matrix Modules matrix\n' +
    ' */\n' +
    'function setupTimingPattern (matrix) {\n' +
    '  const size = matrix.size\n' +
    '\n' +
    '  for (let r = 8; r < size - 8; r++) {\n' +
    '    const value = r % 2 === 0\n' +
    '    matrix.set(r, 6, value, true)\n' +
    '    matrix.set(6, r, value, true)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Add alignment patterns bits to matrix\n' +
    ' *\n' +
    ' * Note: this function must be called after {@link setupTimingPattern}\n' +
    ' *\n' +
    ' * @param  {BitMatrix} matrix  Modules matrix\n' +
    ' * @param  {Number}    version QR Code version\n' +
    ' */\n' +
    'function setupAlignmentPattern (matrix, version) {\n' +
    '  const pos = AlignmentPattern.getPositions(version)\n' +
    '\n' +
    '  for (let i = 0; i < pos.length; i++) {\n' +
    '    const row = pos[i][0]\n' +
    '    const col = pos[i][1]\n' +
    '\n' +
    '    for (let r = -2; r <= 2; r++) {\n' +
    '      for (let c = -2; c <= 2; c++) {\n' +
    '        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n' +
    '          (r === 0 && c === 0)) {\n' +
    '          matrix.set(row + r, col + c, true, true)\n' +
    '        } else {\n' +
    '          matrix.set(row + r, col + c, false, true)\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Add version info bits to matrix\n' +
    ' *\n' +
    ' * @param  {BitMatrix} matrix  Modules matrix\n' +
    ' * @param  {Number}    version QR Code version\n' +
    ' */\n' +
    'function setupVersionInfo (matrix, version) {\n' +
    '  const size = matrix.size\n' +
    '  const bits = Version.getEncodedBits(version)\n' +
    '  let row, col, mod\n' +
    '\n' +
    '  for (let i = 0; i < 18; i++) {\n' +
    '    row = Math.floor(i / 3)\n' +
    '    col = i % 3 + size - 8 - 3\n' +
    '    mod = ((bits >> i) & 1) === 1\n' +
    '\n' +
    '    matrix.set(row, col, mod, true)\n' +
    '    matrix.set(col, row, mod, true)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Add format info bits to matrix\n' +
    ' *\n' +
    ' * @param  {BitMatrix} matrix               Modules matrix\n' +
    ' * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n' +
    ' * @param  {Number}    maskPattern          Mask pattern reference value\n' +
    ' */\n' +
    'function setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n' +
    '  const size = matrix.size\n' +
    '  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n' +
    '  let i, mod\n' +
    '\n' +
    '  for (i = 0; i < 15; i++) {\n' +
    '    mod = ((bits >> i) & 1) === 1\n' +
    '\n' +
    '    // vertical\n' +
    '    if (i < 6) {\n' +
    '      matrix.set(i, 8, mod, true)\n' +
    '    } else if (i < 8) {\n' +
    '      matrix.set(i + 1, 8, mod, true)\n' +
    '    } else {\n' +
    '      matrix.set(size - 15 + i, 8, mod, true)\n' +
    '    }\n' +
    '\n' +
    '    // horizontal\n' +
    '    if (i < 8) {\n' +
    '      matrix.set(8, size - i - 1, mod, true)\n' +
    '    } else if (i < 9) {\n' +
    '      matrix.set(8, 15 - i - 1 + 1, mod, true)\n' +
    '    } else {\n' +
    '      matrix.set(8, 15 - i - 1, mod, true)\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  // fixed module\n' +
    '  matrix.set(size - 8, 8, 1, true)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Add encoded data bits to matrix\n' +
    ' *\n' +
    ' * @param  {BitMatrix}  matrix Modules matrix\n' +
    ' * @param  {Uint8Array} data   Data codewords\n' +
    ' */\n' +
    'function setupData (matrix, data) {\n' +
    '  const size = matrix.size\n' +
    '  let inc = -1\n' +
    '  let row = size - 1\n' +
    '  let bitIndex = 7\n' +
    '  let byteIndex = 0\n' +
    '\n' +
    '  for (let col = size - 1; col > 0; col -= 2) {\n' +
    '    if (col === 6) col--\n' +
    '\n' +
    '    while (true) {\n' +
    '      for (let c = 0; c < 2; c++) {\n' +
    '        if (!matrix.isReserved(row, col - c)) {\n' +
    '          let dark = false\n' +
    '\n' +
    '          if (byteIndex < data.length) {\n' +
    '            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n' +
    '          }\n' +
    '\n' +
    '          matrix.set(row, col - c, dark)\n' +
    '          bitIndex--\n' +
    '\n' +
    '          if (bitIndex === -1) {\n' +
    '            byteIndex++\n' +
    '            bitIndex = 7\n' +
    '          }\n' +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      row += inc\n' +
    '\n' +
    '      if (row < 0 || size <= row) {\n' +
    '        row -= inc\n' +
    '        inc = -inc\n' +
    '        break\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Create encoded codewords from data input\n' +
    ' *\n' +
    ' * @param  {Number}   version              QR Code version\n' +
    ' * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n' +
    ' * @param  {ByteData} data                 Data input\n' +
    ' * @return {Uint8Array}                    Buffer containing encoded codewords\n' +
    ' */\n' +
    'function createData (version, errorCorrectionLevel, segments) {\n' +
    '  // Prepare data buffer\n' +
    '  const buffer = new BitBuffer()\n' +
    '\n' +
    '  segments.forEach(function (data) {\n' +
    '    // prefix data with mode indicator (4 bits)\n' +
    '    buffer.put(data.mode.bit, 4)\n' +
    '\n' +
    '    // Prefix data with character count indicator.\n' +
    '    // The character count indicator is a string of bits that represents the\n' +
    '    // number of characters that are being encoded.\n' +
    '    // The character count indicator must be placed after the mode indicator\n' +
    '    // and must be a certain number of bits long, depending on the QR version\n' +
    '    // and data mode\n' +
    '    // @see {@link Mode.getCharCountIndicator}.\n' +
    '    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n' +
    '\n' +
    '    // add binary data sequence to buffer\n' +
    '    data.write(buffer)\n' +
    '  })\n' +
    '\n' +
    '  // Calculate required number of bits\n' +
    '  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n' +
    '  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n' +
    '  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n' +
    '\n' +
    '  // Add a terminator.\n' +
    '  // If the bit string is shorter than the total number of required bits,\n' +
    '  // a terminator of up to four 0s must be added to the right side of the string.\n' +
    '  // If the bit string is more than four bits shorter than the required number of bits,\n' +
    '  // add four 0s to the end.\n' +
    '  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n' +
    '    buffer.put(0, 4)\n' +
    '  }\n' +
    '\n' +
    '  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n' +
    '  // are needed to reach the required number of bits.\n' +
    '\n' +
    '  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n' +
    "  // pad the string on the right with 0s to make the string's length a multiple of 8.\n" +
    '  while (buffer.getLengthInBits() % 8 !== 0) {\n' +
    '    buffer.putBit(0)\n' +
    '  }\n' +
    '\n' +
    '  // Add pad bytes if the string is still shorter than the total number of required bits.\n' +
    '  // Extend the buffer to fill the data capacity of the symbol corresponding to\n' +
    '  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n' +
    '  // and 00010001 (0x11) alternately.\n' +
    '  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n' +
    '  for (let i = 0; i < remainingByte; i++) {\n' +
    '    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n' +
    '  }\n' +
    '\n' +
    '  return createCodewords(buffer, version, errorCorrectionLevel)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Encode input data with Reed-Solomon and return codewords with\n' +
    ' * relative error correction bits\n' +
    ' *\n' +
    ' * @param  {BitBuffer} bitBuffer            Data to encode\n' +
    ' * @param  {Number}    version              QR Code version\n' +
    ' * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n' +
    ' * @return {Uint8Array}                     Buffer containing encoded codewords\n' +
    ' */\n' +
    'function createCodewords (bitBuffer, version, errorCorrectionLevel) {\n' +
    '  // Total codewords for this QR code version (Data + Error correction)\n' +
    '  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n' +
    '\n' +
    '  // Total number of error correction codewords\n' +
    '  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n' +
    '\n' +
    '  // Total number of data codewords\n' +
    '  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n' +
    '\n' +
    '  // Total number of blocks\n' +
    '  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n' +
    '\n' +
    '  // Calculate how many blocks each group should contain\n' +
    '  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n' +
    '  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n' +
    '\n' +
    '  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n' +
    '\n' +
    '  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n' +
    '  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n' +
    '\n' +
    '  // Number of EC codewords is the same for both groups\n' +
    '  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n' +
    '\n' +
    '  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n' +
    '  const rs = new ReedSolomonEncoder(ecCount)\n' +
    '\n' +
    '  let offset = 0\n' +
    '  const dcData = new Array(ecTotalBlocks)\n' +
    '  const ecData = new Array(ecTotalBlocks)\n' +
    '  let'... 5128 more characters
} [Function: logger]
____9999999____ {
  code: "const Utils = require('./utils')\n" +
    '\n' +
    'function clearCanvas (ctx, canvas, size) {\n' +
    '  ctx.clearRect(0, 0, canvas.width, canvas.height)\n' +
    '\n' +
    '  if (!canvas.style) canvas.style = {}\n' +
    '  canvas.height = size\n' +
    '  canvas.width = size\n' +
    "  canvas.style.height = size + 'px'\n" +
    "  canvas.style.width = size + 'px'\n" +
    '}\n' +
    '\n' +
    'function getCanvasElement () {\n' +
    '  try {\n' +
    "    return document.createElement('canvas')\n" +
    '  } catch (e) {\n' +
    "    throw new Error('You need to specify a canvas element')\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    'exports.render = function render (qrData, canvas, options) {\n' +
    '  let opts = options\n' +
    '  let canvasEl = canvas\n' +
    '\n' +
    "  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n" +
    '    opts = canvas\n' +
    '    canvas = undefined\n' +
    '  }\n' +
    '\n' +
    '  if (!canvas) {\n' +
    '    canvasEl = getCanvasElement()\n' +
    '  }\n' +
    '\n' +
    '  opts = Utils.getOptions(opts)\n' +
    '  const size = Utils.getImageWidth(qrData.modules.size, opts)\n' +
    '\n' +
    "  const ctx = canvasEl.getContext('2d')\n" +
    '  const image = ctx.createImageData(size, size)\n' +
    '  Utils.qrToImageData(image.data, qrData, opts)\n' +
    '\n' +
    '  clearCanvas(ctx, canvasEl, size)\n' +
    '  ctx.putImageData(image, 0, 0)\n' +
    '\n' +
    '  return canvasEl\n' +
    '}\n' +
    '\n' +
    'exports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n' +
    '  let opts = options\n' +
    '\n' +
    "  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n" +
    '    opts = canvas\n' +
    '    canvas = undefined\n' +
    '  }\n' +
    '\n' +
    '  if (!opts) opts = {}\n' +
    '\n' +
    '  const canvasEl = exports.render(qrData, canvas, opts)\n' +
    '\n' +
    "  const type = opts.type || 'image/png'\n" +
    '  const rendererOpts = opts.rendererOpts || {}\n' +
    '\n' +
    '  return canvasEl.toDataURL(type, rendererOpts.quality)\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Utils = require('./utils')\n" +
    '\n' +
    'function getColorAttrib (color, attrib) {\n' +
    '  const alpha = color.a / 255\n' +
    `  const str = attrib + '="' + color.hex + '"'\n` +
    '\n' +
    '  return alpha < 1\n' +
    `    ? str + ' ' + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"'\n` +
    '    : str\n' +
    '}\n' +
    '\n' +
    'function svgCmd (cmd, x, y) {\n' +
    '  let str = cmd + x\n' +
    "  if (typeof y !== 'undefined') str += ' ' + y\n" +
    '\n' +
    '  return str\n' +
    '}\n' +
    '\n' +
    'function qrToPath (data, size, margin) {\n' +
    "  let path = ''\n" +
    '  let moveBy = 0\n' +
    '  let newRow = false\n' +
    '  let lineLength = 0\n' +
    '\n' +
    '  for (let i = 0; i < data.length; i++) {\n' +
    '    const col = Math.floor(i % size)\n' +
    '    const row = Math.floor(i / size)\n' +
    '\n' +
    '    if (!col && !newRow) newRow = true\n' +
    '\n' +
    '    if (data[i]) {\n' +
    '      lineLength++\n' +
    '\n' +
    '      if (!(i > 0 && col > 0 && data[i - 1])) {\n' +
    '        path += newRow\n' +
    "          ? svgCmd('M', col + margin, 0.5 + row + margin)\n" +
    "          : svgCmd('m', moveBy, 0)\n" +
    '\n' +
    '        moveBy = 0\n' +
    '        newRow = false\n' +
    '      }\n' +
    '\n' +
    '      if (!(col + 1 < size && data[i + 1])) {\n' +
    "        path += svgCmd('h', lineLength)\n" +
    '        lineLength = 0\n' +
    '      }\n' +
    '    } else {\n' +
    '      moveBy++\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return path\n' +
    '}\n' +
    '\n' +
    'exports.render = function render (qrData, options, cb) {\n' +
    '  const opts = Utils.getOptions(options)\n' +
    '  const size = qrData.modules.size\n' +
    '  const data = qrData.modules.data\n' +
    '  const qrcodesize = size + opts.margin * 2\n' +
    '\n' +
    '  const bg = !opts.color.light.a\n' +
    "    ? ''\n" +
    "    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n" +
    `      ' d="M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z"/>'\n` +
    '\n' +
    '  const path =\n' +
    "    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n" +
    `    ' d="' + qrToPath(data, size, opts.margin) + '"/>'\n` +
    '\n' +
    `  const viewBox = 'viewBox="' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '"'\n` +
    '\n' +
    `  const width = !opts.width ? '' : 'width="' + opts.width + '" height="' + opts.width + '" '\n` +
    '\n' +
    `  const svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + '</svg>\\n'\n` +
    '\n' +
    "  if (typeof cb === 'function') {\n" +
    '    cb(null, svgTag)\n' +
    '  }\n' +
    '\n' +
    '  return svgTag\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var __read = (this && this.__read) || function (o, n) {\n' +
    '    var m = typeof Symbol === "function" && o[Symbol.iterator];\n' +
    '    if (!m) return o;\n' +
    '    var i = m.call(o), r, ar = [], e;\n' +
    '    try {\n' +
    '        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n' +
    '    }\n' +
    '    catch (error) { e = { error: error }; }\n' +
    '    finally {\n' +
    '        try {\n' +
    '            if (r && !r.done && (m = i["return"])) m.call(i);\n' +
    '        }\n' +
    '        finally { if (e) throw e.error; }\n' +
    '    }\n' +
    '    return ar;\n' +
    '};\n' +
    "import { useCallback, useEffect } from 'react';\n" +
    "import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n" +
    "import { InterpreterStatus, State } from 'xstate';\n" +
    "import { useIdleInterpreter } from './useInterpret';\n" +
    "import { isInterpreterStateEqual } from './utils';\n" +
    'function identity(a) {\n' +
    '    return a;\n' +
    '}\n' +
    'export function useMachine(getMachine) {\n' +
    '    var _a = [];\n' +
    '    for (var _i = 1; _i < arguments.length; _i++) {\n' +
    '        _a[_i - 1] = arguments[_i];\n' +
    '    }\n' +
    '    var _b = __read(_a, 1), _c = _b[0], options = _c === void 0 ? {} : _c;\n' +
    '    // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n' +
    "    // so we don't miss any notifications\n" +
    '    var service = useIdleInterpreter(getMachine, options);\n' +
    '    var getSnapshot = useCallback(function () {\n' +
    '        if (service.status === InterpreterStatus.NotStarted) {\n' +
    '            return (options.state\n' +
    '                ? State.create(options.state)\n' +
    '                : service.machine.initialState);\n' +
    '        }\n' +
    '        return service.getSnapshot();\n' +
    '    }, [service]);\n' +
    '    var isEqual = useCallback(function (prevState, nextState) {\n' +
    '        return isInterpreterStateEqual(service, prevState, nextState);\n' +
    '    }, [service]);\n' +
    '    var subscribe = useCallback(function (handleStoreChange) {\n' +
    '        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n' +
    '        return unsubscribe;\n' +
    '    }, [service]);\n' +
    '    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n' +
    '    useEffect(function () {\n' +
    '        var rehydratedState = options.state;\n' +
    '        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n' +
    '        return function () {\n' +
    '            service.stop();\n' +
    '            service.status = InterpreterStatus.NotStarted;\n' +
    '        };\n' +
    '    }, []);\n' +
    '    return [storeSnapshot, service.send, service];\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { spawnBehavior } from 'xstate';\n" +
    "import useConstant from './useConstant';\n" +
    '/**\n' +
    ' * React hook that spawns an `ActorRef` with the specified `behavior`.\n' +
    ' * The returned `ActorRef` can be used with the `useActor(actorRef)` hook.\n' +
    ' *\n' +
    ' * @param behavior The actor behavior to spawn\n' +
    ' * @returns An ActorRef with the specified `behavior`\n' +
    ' */\n' +
    'export function useSpawn(behavior) {\n' +
    '    var actorRef = useConstant(function () {\n' +
    '        return spawnBehavior(behavior);\n' +
    '    });\n' +
    '    return actorRef;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var __read = (this && this.__read) || function (o, n) {\n' +
    '    var m = typeof Symbol === "function" && o[Symbol.iterator];\n' +
    '    if (!m) return o;\n' +
    '    var i = m.call(o), r, ar = [], e;\n' +
    '    try {\n' +
    '        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n' +
    '    }\n' +
    '    catch (error) { e = { error: error }; }\n' +
    '    finally {\n' +
    '        try {\n' +
    '            if (r && !r.done && (m = i["return"])) m.call(i);\n' +
    '        }\n' +
    '        finally { if (e) throw e.error; }\n' +
    '    }\n' +
    '    return ar;\n' +
    '};\n' +
    'var __values = (this && this.__values) || function(o) {\n' +
    '    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n' +
    '    if (m) return m.call(o);\n' +
    '    if (o && typeof o.length === "number") return {\n' +
    '        next: function () {\n' +
    '            if (o && i >= o.length) o = void 0;\n' +
    '            return { value: o && o[i++], done: !o };\n' +
    '        }\n' +
    '    };\n' +
    '    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n' +
    '};\n' +
    "import { InterpreterStatus } from 'xstate';\n" +
    'export function partition(items, predicate) {\n' +
    '    var e_1, _a;\n' +
    '    var _b = __read([[], []], 2), truthy = _b[0], falsy = _b[1];\n' +
    '    try {\n' +
    '        for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n' +
    '            var item = items_1_1.value;\n' +
    '            if (predicate(item)) {\n' +
    '                truthy.push(item);\n' +
    '            }\n' +
    '            else {\n' +
    '                falsy.push(item);\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n' +
    '    finally {\n' +
    '        try {\n' +
    '            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n' +
    '        }\n' +
    '        finally { if (e_1) throw e_1.error; }\n' +
    '    }\n' +
    '    return [truthy, falsy];\n' +
    '}\n' +
    'export function getServiceSnapshot(service) {\n' +
    '    return service.status !== 0\n' +
    '        ? service.getSnapshot()\n' +
    '        : service.machine.initialState;\n' +
    '}\n' +
    '// From https://github.com/reduxjs/react-redux/blob/master/src/utils/shallowEqual.ts\n' +
    'function is(x, y) {\n' +
    '    if (x === y) {\n' +
    '        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n' +
    '    }\n' +
    '    else {\n' +
    '        return x !== x && y !== y;\n' +
    '    }\n' +
    '}\n' +
    'export function shallowEqual(objA, objB) {\n' +
    '    if (is(objA, objB))\n' +
    '        return true;\n' +
    "    if (typeof objA !== 'object' ||\n" +
    '        objA === null ||\n' +
    "        typeof objB !== 'object' ||\n" +
    '        objB === null) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    var keysA = Object.keys(objA);\n' +
    '    var keysB = Object.keys(objB);\n' +
    '    if (keysA.length !== keysB.length)\n' +
    '        return false;\n' +
    '    for (var i = 0; i < keysA.length; i++) {\n' +
    '        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n' +
    '            !is(objA[keysA[i]], objB[keysA[i]])) {\n' +
    '            return false;\n' +
    '        }\n' +
    '    }\n' +
    '    return true;\n' +
    '}\n' +
    'export function isService(actor) {\n' +
    "    return 'state' in actor && 'machine' in actor;\n" +
    '}\n' +
    'export function isInterpreterStateEqual(service, prevState, nextState) {\n' +
    '    if (service.status === InterpreterStatus.NotStarted) {\n' +
    '        return true;\n' +
    '    }\n' +
    '    // Only change the current state if:\n' +
    '    // - the incoming state is the "live" initial state (since it might have new actors)\n' +
    '    // - OR the incoming state actually changed.\n' +
    '    //\n' +
    '    // The "live" initial state will have .changed === undefined.\n' +
    '    var initialStateChanged = nextState.changed === undefined &&\n' +
    '        (Object.keys(nextState.children).length > 0 ||\n' +
    "            typeof prevState.changed === 'boolean');\n" +
    '    return !(nextState.changed || initialStateChanged);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var __assign = (this && this.__assign) || function () {\n' +
    '    __assign = Object.assign || function(t) {\n' +
    '        for (var s, i = 1, n = arguments.length; i < n; i++) {\n' +
    '            s = arguments[i];\n' +
    '            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n' +
    '                t[p] = s[p];\n' +
    '        }\n' +
    '        return t;\n' +
    '    };\n' +
    '    return __assign.apply(this, arguments);\n' +
    '};\n' +
    "import * as React from 'react';\n" +
    "import { useInterpret } from './useInterpret';\n" +
    "import { useActor as useActorUnbound } from './useActor';\n" +
    "import { useSelector as useSelectorUnbound } from './useSelector';\n" +
    'export function createActorContext(machine, interpreterOptions, observerOrListener) {\n' +
    '    var ReactContext = React.createContext(null);\n' +
    '    var OriginalProvider = ReactContext.Provider;\n' +
    '    function Provider(_a) {\n' +
    '        var children = _a.children, _b = _a.machine, providedMachine = _b === void 0 ? machine : _b, options = _a.options;\n' +
    '        var actor = useInterpret(providedMachine, __assign(__assign({}, interpreterOptions), options), observerOrListener);\n' +
    '        return React.createElement(OriginalProvider, { value: actor }, children);\n' +
    '    }\n' +
    '    Provider.displayName = "ActorProvider(".concat(machine.id, ")");\n' +
    '    function useContext() {\n' +
    '        var actor = React.useContext(ReactContext);\n' +
    '        if (!actor) {\n' +
    `            throw new Error("You used a hook from \\"".concat(Provider.displayName, "\\" but it's not inside a <").concat(Provider.displayName, "> component."));\n` +
    '        }\n' +
    '        return actor;\n' +
    '    }\n' +
    '    function useActor() {\n' +
    '        var actor = useContext();\n' +
    '        return useActorUnbound(actor);\n' +
    '    }\n' +
    '    function useSelector(selector, compare) {\n' +
    '        var actor = useContext();\n' +
    '        return useSelectorUnbound(actor, selector, compare);\n' +
    '    }\n' +
    '    return {\n' +
    '        Provider: Provider,\n' +
    '        useActorRef: useContext,\n' +
    '        useActor: useActor,\n' +
    '        useSelector: useSelector\n' +
    '    };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var reactDom = {exports: {}}; export {reactDom as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/react-dom/cjs/react-dom.production.min.js";'
} [Function: logger]
____9999999____ {
  code: "import { useCallback, useRef } from 'react';\n" +
    "import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n" +
    "import { isActorWithState } from './useActor';\n" +
    "import { getServiceSnapshot, isService } from './utils';\n" +
    'var defaultCompare = function (a, b) { return a === b; };\n' +
    'var defaultGetSnapshot = function (a, initialStateCacheRef) {\n' +
    '    if (isService(a)) {\n' +
    '        // A status of 0 = interpreter not started\n' +
    '        if (a.status === 0 && initialStateCacheRef.current) {\n' +
    '            return initialStateCacheRef.current;\n' +
    '        }\n' +
    '        var snapshot = getServiceSnapshot(a);\n' +
    '        initialStateCacheRef.current = a.status === 0 ? snapshot : null;\n' +
    '        return snapshot;\n' +
    '    }\n' +
    '    return isActorWithState(a) ? a.state : undefined;\n' +
    '};\n' +
    'export function useSelector(actor, selector, compare, getSnapshot) {\n' +
    '    if (compare === void 0) { compare = defaultCompare; }\n' +
    '    var initialStateCacheRef = useRef(null);\n' +
    '    var subscribe = useCallback(function (handleStoreChange) {\n' +
    '        var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n' +
    '        return unsubscribe;\n' +
    '    }, [actor]);\n' +
    '    var boundGetSnapshot = useCallback(function () {\n' +
    '        if (getSnapshot) {\n' +
    '            return getSnapshot(actor);\n' +
    '        }\n' +
    '        return defaultGetSnapshot(actor, initialStateCacheRef);\n' +
    '    }, [actor, getSnapshot]);\n' +
    '    var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n' +
    '    return selectedSnapshot;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { useRef, useCallback } from 'react';\n" +
    "import useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n" +
    "import useConstant from './useConstant';\n" +
    "import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\n" +
    "import { getServiceSnapshot, isInterpreterStateEqual, isService } from './utils';\n" +
    'function identity(a) {\n' +
    '    return a;\n' +
    '}\n' +
    'export function isActorWithState(actorRef) {\n' +
    "    return 'state' in actorRef;\n" +
    '}\n' +
    'function isDeferredActor(actorRef) {\n' +
    "    return 'deferred' in actorRef;\n" +
    '}\n' +
    'function defaultGetSnapshot(actorRef) {\n' +
    "    return 'getSnapshot' in actorRef\n" +
    '        ? isService(actorRef)\n' +
    '            ? getServiceSnapshot(actorRef)\n' +
    '            : actorRef.getSnapshot()\n' +
    '        : isActorWithState(actorRef)\n' +
    '            ? actorRef.state\n' +
    '            : undefined;\n' +
    '}\n' +
    'export function useActor(actorRef, getSnapshot) {\n' +
    '    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n' +
    '    var actorRefRef = useRef(actorRef);\n' +
    '    var deferredEventsRef = useRef([]);\n' +
    '    var subscribe = useCallback(function (handleStoreChange) {\n' +
    '        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n' +
    '        return unsubscribe;\n' +
    '    }, [actorRef]);\n' +
    '    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [actorRef, getSnapshot]);\n' +
    '    var isEqual = useCallback(function (prevState, nextState) {\n' +
    '        if (isService(actorRef)) {\n' +
    '            return isInterpreterStateEqual(actorRef, prevState, nextState);\n' +
    '        }\n' +
    '        return prevState === nextState;\n' +
    '    }, [actorRef]);\n' +
    '    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, identity, isEqual);\n' +
    '    var send = useConstant(function () { return function () {\n' +
    '        var args = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            args[_i] = arguments[_i];\n' +
    '        }\n' +
    '        var event = args[0];\n' +
    "        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n" +
    '            console.warn("Unexpected payload: ".concat(JSON.stringify(args[1]), ". Only a single event object can be sent to actor send() functions."));\n' +
    '        }\n' +
    '        var currentActorRef = actorRefRef.current;\n' +
    '        // If the previous actor is a deferred actor,\n' +
    '        // queue the events so that they can be replayed\n' +
    '        // on the non-deferred actor.\n' +
    '        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n' +
    '            deferredEventsRef.current.push(event);\n' +
    '        }\n' +
    '        else {\n' +
    '            currentActorRef.send(event);\n' +
    '        }\n' +
    '    }; });\n' +
    '    useIsomorphicLayoutEffect(function () {\n' +
    '        actorRefRef.current = actorRef;\n' +
    '        // Dequeue deferred events from the previous deferred actorRef\n' +
    '        while (deferredEventsRef.current.length > 0) {\n' +
    '            var deferredEvent = deferredEventsRef.current.shift();\n' +
    '            actorRef.send(deferredEvent);\n' +
    '        }\n' +
    '    }, [actorRef]);\n' +
    '    return [storeSnapshot, send];\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var __assign = (this && this.__assign) || function () {\n' +
    '    __assign = Object.assign || function(t) {\n' +
    '        for (var s, i = 1, n = arguments.length; i < n; i++) {\n' +
    '            s = arguments[i];\n' +
    '            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n' +
    '                t[p] = s[p];\n' +
    '        }\n' +
    '        return t;\n' +
    '    };\n' +
    '    return __assign.apply(this, arguments);\n' +
    '};\n' +
    'var __rest = (this && this.__rest) || function (s, e) {\n' +
    '    var t = {};\n' +
    '    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n' +
    '        t[p] = s[p];\n' +
    '    if (s != null && typeof Object.getOwnPropertySymbols === "function")\n' +
    '        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n' +
    '            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n' +
    '                t[p[i]] = s[p[i]];\n' +
    '        }\n' +
    '    return t;\n' +
    '};\n' +
    'var __read = (this && this.__read) || function (o, n) {\n' +
    '    var m = typeof Symbol === "function" && o[Symbol.iterator];\n' +
    '    if (!m) return o;\n' +
    '    var i = m.call(o), r, ar = [], e;\n' +
    '    try {\n' +
    '        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n' +
    '    }\n' +
    '    catch (error) { e = { error: error }; }\n' +
    '    finally {\n' +
    '        try {\n' +
    '            if (r && !r.done && (m = i["return"])) m.call(i);\n' +
    '        }\n' +
    '        finally { if (e) throw e.error; }\n' +
    '    }\n' +
    '    return ar;\n' +
    '};\n' +
    "import { useEffect, useState } from 'react';\n" +
    "import useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n" +
    "import { interpret, InterpreterStatus, State, toObserver } from 'xstate';\n" +
    "import useConstant from './useConstant';\n" +
    'export function useIdleInterpreter(getMachine, options) {\n' +
    '    var machine = useConstant(function () {\n' +
    "        return typeof getMachine === 'function' ? getMachine() : getMachine;\n" +
    '    });\n' +
    "    if (process.env.NODE_ENV !== 'production' &&\n" +
    "        typeof getMachine !== 'function') {\n" +
    '        var _a = __read(useState(machine), 1), initialMachine = _a[0];\n' +
    '        if (getMachine !== initialMachine) {\n' +
    "            console.warn('Machine given to `useMachine` has changed between renders. This is not supported and might lead to unexpected results.\\n' +\n" +
    "                'Please make sure that you pass the same Machine as argument each time.');\n" +
    '        }\n' +
    '    }\n' +
    '    var context = options.context, guards = options.guards, actions = options.actions, activities = options.activities, services = options.services, delays = options.delays, rehydratedState = options.state, interpreterOptions = __rest(options, ["context", "guards", "actions", "activities", "services", "delays", "state"]);\n' +
    '    var service = useConstant(function () {\n' +
    '        var machineConfig = {\n' +
    '            context: context,\n' +
    '            guards: guards,\n' +
    '            actions: actions,\n' +
    '            activities: activities,\n' +
    '            services: services,\n' +
    '            delays: delays\n' +
    '        };\n' +
    '        var machineWithConfig = machine.withConfig(machineConfig, function () { return (__assign(__assign({}, machine.context), context)); });\n' +
    '        return interpret(machineWithConfig, interpreterOptions);\n' +
    '    });\n' +
    '    // Make sure options are kept updated when they change.\n' +
    '    // This mutation assignment is safe because the service instance is only used\n' +
    "    // in one place -- this hook's caller.\n" +
    '    useIsomorphicLayoutEffect(function () {\n' +
    '        Object.assign(service.machine.options.actions, actions);\n' +
    '        Object.assign(service.machine.options.guards, guards);\n' +
    '        Object.assign(service.machine.options.activities, activities);\n' +
    '        Object.assign(service.machine.options.services, services);\n' +
    '        Object.assign(service.machine.options.delays, delays);\n' +
    '    }, [actions, guards, activities, services, delays]);\n' +
    '    return service;\n' +
    '}\n' +
    'export function useInterpret(getMachine) {\n' +
    '    var _a = [];\n' +
    '    for (var _i = 1; _i < arguments.length; _i++) {\n' +
    '        _a[_i - 1] = arguments[_i];\n' +
    '    }\n' +
    '    var _b = __read(_a, 2), _c = _b[0], options = _c === void 0 ? {} : _c, observerOrListener = _b[1];\n' +
    '    var service = useIdleInterpreter(getMachine, options);\n' +
    '    useEffect(function () {\n' +
    '        if (!observerOrListener) {\n' +
    '            return;\n' +
    '        }\n' +
    '        var sub = service.subscribe(toObserver(observerOrListener));\n' +
    '        return function () {\n' +
    '            sub.unsubscribe();\n' +
    '        };\n' +
    '    }, [observerOrListener]);\n' +
    '    useEffect(function () {\n' +
    '        var rehydratedState = options.state;\n' +
    '        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n' +
    '        return function () {\n' +
    '            service.stop();\n' +
    '            service.status = InterpreterStatus.NotStarted;\n' +
    '        };\n' +
    '    }, []);\n' +
    '    return service;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import React__default from 'react';\n" +
    "import { useAuthenticator } from '@aws-amplify/ui-react-core';\n" +
    "import { Button } from '../../../../primitives/Button/Button.mjs';\n" +
    "import { Icon } from '../../../../primitives/Icon/Icon.mjs';\n" +
    "import '../../../../primitives/Icon/context/IconsContext.mjs';\n" +
    "import '@aws-amplify/ui';\n" +
    "import '../../../../primitives/View/View.mjs';\n" +
    "import { Text } from '../../../../primitives/Text/Text.mjs';\n" +
    '\n' +
    'const AppleIcon = () => {\n' +
    '    return (React__default.createElement("svg", { "aria-label": "Apple icon", className: "amplify-icon federated-sign-in-icon", fill: "#000", preserveAspectRatio: "xMidYMid", stroke: "#000", strokeWidth: "0", viewBox: "0 0 1024 1024", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '        React__default.createElement("path", { d: "M747.4 535.7c-.4-68.2 30.5-119.6 92.9-157.5-34.9-50-87.7-77.5-157.3-82.8-65.9-5.2-138 38.4-164.4 38.4-27.9 0-91.7-36.6-141.9-36.6C273.1 298.8 163 379.8 163 544.6c0 48.7 8.9 99 26.7 150.8 23.8 68.2 109.6 235.3 199.1 232.6 46.8-1.1 79.9-33.2 140.8-33.2 59.1 0 89.7 33.2 141.9 33.2 90.3-1.3 167.9-153.2 190.5-221.6-121.1-57.1-114.6-167.2-114.6-170.7zm-105.1-305c50.7-60.2 46.1-115 44.6-134.7-44.8 2.6-96.6 30.5-126.1 64.8-32.5 36.8-51.6 82.3-47.5 133.6 48.4 3.7 92.6-21.2 129-63.7z" })));\n' +
    '};\n' +
    'const GoogleIcon = () => {\n' +
    '    return (React__default.createElement("svg", { "aria-label": "Google icon", className: "amplify-icon federated-sign-in-icon", viewBox: "0 0 256 262", xmlns: "http://www.w3.org/2000/svg", preserveAspectRatio: "xMidYMid" },\n' +
    '        React__default.createElement("path", { d: "M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027", fill: "#4285F4" }),\n' +
    '        React__default.createElement("path", { d: "M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1", fill: "#34A853" }),\n' +
    '        React__default.createElement("path", { d: "M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782", fill: "#FBBC05" }),\n' +
    '        React__default.createElement("path", { d: "M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251", fill: "#EB4335" })));\n' +
    '};\n' +
    'const FacebookIcon = () => {\n' +
    '    return (React__default.createElement(Icon, { className: "federated-sign-in-icon", ariaLabel: "Facebook icon", viewBox: { minX: 0, minY: 0, width: 279, height: 538 }, pathData: "M82.3409742,538 L82.3409742,292.936652 L0,292.936652 L0,196.990154 L82.2410458,196.990154 L82.2410458,126.4295 C82.2410458,44.575144 132.205229,0 205.252865,0 C240.227794,0 270.306232,2.59855099 279,3.79788222 L279,89.2502322 L228.536175,89.2502322 C188.964542,89.2502322 181.270057,108.139699 181.270057,135.824262 L181.270057,196.89021 L276.202006,196.89021 L263.810888,292.836708 L181.16913,292.836708 L181.16913,538 L82.3409742,538 Z", fill: "#1877F2" }));\n' +
    '};\n' +
    'const AmazonIcon = () => {\n' +
    '    return (React__default.createElement("svg", { "aria-label": "Amazon icon", className: "amplify-icon federated-sign-in-icon", viewBox: "0 0 243 264", xmlns: "http://www.w3.org/2000/svg", preserveAspectRatio: "xMidYMid" },\n' +
    '        React__default.createElement("path", { d: "M230.826 208.039C227.468 203.683 208.551 205.982 200.056 206.998C197.471 207.321 197.076 205.042 199.407 203.405C214.475 192.665 239.201 195.766 242.082 199.364C244.966 202.982 241.337 228.071 227.173 240.049C225.001 241.888 222.93 240.904 223.898 238.468C227.077 230.431 234.205 212.419 230.826 208.039ZM123.769 264C71.0234 264 39.0764 241.955 14.7853 217.542C9.97339 212.706 3.71799 206.296 0.311513 200.691C-1.09773 198.372 2.59096 195.022 5.04421 196.844C35.239 219.268 79.1012 239.538 122.53 239.538C151.82 239.538 188.046 227.47 217.669 214.868C222.147 212.966 222.147 219.18 221.512 221.061C221.183 222.032 206.515 236.221 186.247 247.047C167.304 257.166 143.397 264 123.769 264Z", fill: "#F2541B" }),\n' +
    '        React__default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M142.943 111.185C142.943 124.756 143.268 136.054 136.406 148.123C130.856 157.913 122.027 163.95 112.222 163.95C98.8288 163.95 90.9806 153.772 90.9806 138.693C90.9806 109.036 117.677 103.647 142.943 103.647V111.185ZM178.166 196.081C175.858 198.15 171.635 198.22 169.914 196.894C157.974 187.684 149.89 173.688 149.89 173.688C130.706 193.156 117.127 199 92.2879 199C62.8772 199 40 180.905 40 144.729C40 116.461 55.3552 97.2408 77.2563 87.823C96.2094 79.5256 122.684 78.0173 142.943 75.7517C142.943 75.7517 144.633 53.933 138.699 45.9806C134.098 39.8163 126.272 36.9329 119.089 36.9329C106.127 36.8829 93.61 43.9051 91.1262 57.4188C90.4136 61.2829 87.5533 64.5261 84.54 64.206L51.0823 60.5922C48.5156 60.2951 45.0381 57.6639 45.8636 53.3081C53.644 12.3684 90.7373 0 123.989 0C140.983 0 163.21 4.51651 176.608 17.3349C193.597 33.1648 191.969 54.2755 191.969 77.2722V131.51C191.969 147.835 198.768 154.987 205.151 163.775C207.376 166.953 207.886 170.714 205.04 173.032C197.902 178.999 178.166 196.081 178.166 196.081Z", fill: "#F2541B" })));\n' +
    '};\n' +
    'const FederatedSignInButton = (props) => {\n' +
    '    const { icon, provider, text } = props;\n' +
    '    const { toFederatedSignIn } = useAuthenticator();\n' +
    '    const handleClick = (event) => {\n' +
    '        event.preventDefault();\n' +
    '        toFederatedSignIn({ provider });\n' +
    '    };\n' +
    '    let iconComponent;\n' +
    "    if (icon === 'facebook') {\n" +
    '        iconComponent = React__default.createElement(FacebookIcon, null);\n' +
    '    }\n' +
    "    else if (icon === 'google') {\n" +
    '        iconComponent = React__default.createElement(GoogleIcon, null);\n' +
    '    }\n' +
    "    else if (icon === 'amazon') {\n" +
    '        iconComponent = React__default.createElement(AmazonIcon, null);\n' +
    '    }\n' +
    "    else if (icon === 'apple') {\n" +
    '        iconComponent = React__default.createElement(AppleIcon, null);\n' +
    '    }\n' +
    '    return (React__default.createElement(Button, { onClick: handleClick, className: "federated-sign-in-button", fontWeight: "normal", gap: "1rem" },\n' +
    '        iconComponent,\n' +
    '        React__default.createElement(Text, { as: "span" }, text)));\n' +
    '};\n' +
    '\n' +
    'export { FederatedSignInButton };\n'
} [Function: logger]
____9999999____ {
  code: 'const EVENT_HANDLER_KEY_MAP = {\n' +
    "    updateBlur: 'handleBlur',\n" +
    "    updateForm: 'handleChange',\n" +
    "    submitForm: 'handleSubmit',\n" +
    '};\n' +
    'const COMMON_ROUTE_MACHINE_KEYS = [\n' +
    "    'error',\n" +
    "    'isPending',\n" +
    "    'submitForm',\n" +
    "    'updateBlur',\n" +
    "    'updateForm',\n" +
    '];\n' +
    'const CONFIRM_RESET_PASSWORD_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'hasValidationErrors',\n" +
    "    'resendCode',\n" +
    "    'validationErrors',\n" +
    '];\n' +
    'const CONFIRM_SIGN_IN_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'challengeName',\n" +
    "    'toSignIn',\n" +
    '];\n' +
    'const CONFIRM_SIGN_UP_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'codeDeliveryDetails',\n" +
    "    'resendCode',\n" +
    '];\n' +
    'const CONFIRM_VERIFY_USER_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'skipVerification',\n" +
    '];\n' +
    'const FORCE_NEW_PASSWORD_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'hasValidationErrors',\n" +
    "    'toSignIn',\n" +
    "    'validationErrors',\n" +
    '];\n' +
    'const RESET_PASSWORD_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'toSignIn',\n" +
    '];\n' +
    'const SIGN_IN_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'socialProviders',\n" +
    "    'toFederatedSignIn',\n" +
    "    'toForgotPassword',\n" +
    "    'toSignUp',\n" +
    '];\n' +
    'const SIGN_UP_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'hasValidationErrors',\n" +
    "    'socialProviders',\n" +
    "    'toFederatedSignIn',\n" +
    "    'toSignIn',\n" +
    "    'validationErrors',\n" +
    '];\n' +
    'const SETUP_TOTP_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'toSignIn',\n" +
    "    'totpSecretCode',\n" +
    "    'username',\n" +
    '];\n' +
    'const VERIFY_USER_MACHINE_KEYS = [\n' +
    '    ...COMMON_ROUTE_MACHINE_KEYS,\n' +
    "    'skipVerification',\n" +
    '];\n' +
    'const MACHINE_PROP_KEYS = {\n' +
    '    confirmResetPassword: CONFIRM_RESET_PASSWORD_MACHINE_KEYS,\n' +
    '    confirmSignIn: CONFIRM_SIGN_IN_MACHINE_KEYS,\n' +
    '    confirmSignUp: CONFIRM_SIGN_UP_MACHINE_KEYS,\n' +
    '    confirmVerifyUser: CONFIRM_VERIFY_USER_MACHINE_KEYS,\n' +
    '    forceNewPassword: FORCE_NEW_PASSWORD_MACHINE_KEYS,\n' +
    '    signIn: SIGN_IN_MACHINE_KEYS,\n' +
    '    signUp: SIGN_UP_MACHINE_KEYS,\n' +
    '    forgotPassword: RESET_PASSWORD_MACHINE_KEYS,\n' +
    '    setupTotp: SETUP_TOTP_MACHINE_KEYS,\n' +
    '    verifyUser: VERIFY_USER_MACHINE_KEYS,\n' +
    '};\n' +
    '\n' +
    'export { EVENT_HANDLER_KEY_MAP, MACHINE_PROP_KEYS };\n'
} [Function: logger]
____9999999____ {
  code: "var freeGlobal = require('./_freeGlobal');\n" +
    '\n' +
    '/** Detect free variable `self`. */\n' +
    "var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n" +
    '\n' +
    '/** Used as a reference to the global object. */\n' +
    "var root = freeGlobal || freeSelf || Function('return this')();\n" +
    '\n' +
    'module.exports = root;\n'
} [Function: logger]
____9999999____ {
  code: "var trimmedEndIndex = require('./_trimmedEndIndex');\n" +
    '\n' +
    '/** Used to match leading whitespace. */\n' +
    'var reTrimStart = /^\\s+/;\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.trim`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} string The string to trim.\n' +
    ' * @returns {string} Returns the trimmed string.\n' +
    ' */\n' +
    'function baseTrim(string) {\n' +
    '  return string\n' +
    "    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n" +
    '    : string;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseTrim;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetTag = require('./_baseGetTag'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var symbolTag = '[object Symbol]';\n" +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is classified as a `Symbol` primitive or object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isSymbol(Symbol.iterator);\n' +
    ' * // => true\n' +
    ' *\n' +
    " * _.isSymbol('abc');\n" +
    ' * // => false\n' +
    ' */\n' +
    'function isSymbol(value) {\n' +
    "  return typeof value == 'symbol' ||\n" +
    '    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n' +
    '}\n' +
    '\n' +
    'module.exports = isSymbol;\n'
} [Function: logger]
____9999999____ {
  code: 'import $kqwpH$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {createContext as $kqwpH$createContext, forwardRef as $kqwpH$forwardRef, useContext as $kqwpH$useContext, useState as $kqwpH$useState, useEffect as $kqwpH$useEffect, createElement as $kqwpH$createElement, useRef as $kqwpH$useRef} from "react";\n' +
    'import {composeEventHandlers as $kqwpH$composeEventHandlers} from "@radix-ui/primitive";\n' +
    'import {Primitive as $kqwpH$Primitive, dispatchDiscreteCustomEvent as $kqwpH$dispatchDiscreteCustomEvent} from "@radix-ui/react-primitive";\n' +
    'import {useComposedRefs as $kqwpH$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {useCallbackRef as $kqwpH$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    'import {useEscapeKeydown as $kqwpH$useEscapeKeydown} from "@radix-ui/react-use-escape-keydown";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DismissableLayer\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = 'DismissableLayer';\n" +
    "const $5cb92bef7577960e$var$CONTEXT_UPDATE = 'dismissableLayer.update';\n" +
    "const $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\n" +
    "const $5cb92bef7577960e$var$FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n" +
    'let $5cb92bef7577960e$var$originalBodyPointerEvents;\n' +
    'const $5cb92bef7577960e$var$DismissableLayerContext = /*#__PURE__*/ $kqwpH$createContext({\n' +
    '    layers: new Set(),\n' +
    '    layersWithOutsidePointerEventsDisabled: new Set(),\n' +
    '    branches: new Set()\n' +
    '});\n' +
    'const $5cb92bef7577960e$export$177fb62ff3ec1f22 = /*#__PURE__*/ $kqwpH$forwardRef((props, forwardedRef)=>{\n' +
    '    const { disableOutsidePointerEvents: disableOutsidePointerEvents = false , onEscapeKeyDown: onEscapeKeyDown , onPointerDownOutside: onPointerDownOutside , onFocusOutside: onFocusOutside , onInteractOutside: onInteractOutside , onDismiss: onDismiss , ...layerProps } = props;\n' +
    '    const context = $kqwpH$useContext($5cb92bef7577960e$var$DismissableLayerContext);\n' +
    '    const [node1, setNode] = $kqwpH$useState(null);\n' +
    '    const [, force] = $kqwpH$useState({});\n' +
    '    const composedRefs = $kqwpH$useComposedRefs(forwardedRef, (node)=>setNode(node)\n' +
    '    );\n' +
    '    const layers = Array.from(context.layers);\n' +
    '    const [highestLayerWithOutsidePointerEventsDisabled] = [\n' +
    '        ...context.layersWithOutsidePointerEventsDisabled\n' +
    '    ].slice(-1); // prettier-ignore\n' +
    '    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n' +
    '    const index = node1 ? layers.indexOf(node1) : -1;\n' +
    '    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n' +
    '    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n' +
    '    const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event)=>{\n' +
    '        const target = event.target;\n' +
    '        const isPointerDownOnBranch = [\n' +
    '            ...context.branches\n' +
    '        ].some((branch)=>branch.contains(target)\n' +
    '        );\n' +
    '        if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n' +
    '        onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);\n' +
    '        onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n' +
    '        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n' +
    '    });\n' +
    '    const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event)=>{\n' +
    '        const target = event.target;\n' +
    '        const isFocusInBranch = [\n' +
    '            ...context.branches\n' +
    '        ].some((branch)=>branch.contains(target)\n' +
    '        );\n' +
    '        if (isFocusInBranch) return;\n' +
    '        onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);\n' +
    '        onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n' +
    '        if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n' +
    '    });\n' +
    '    $kqwpH$useEscapeKeydown((event)=>{\n' +
    '        const isHighestLayer = index === context.layers.size - 1;\n' +
    '        if (!isHighestLayer) return;\n' +
    '        onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);\n' +
    '        if (!event.defaultPrevented && onDismiss) {\n' +
    '            event.preventDefault();\n' +
    '            onDismiss();\n' +
    '        }\n' +
    '    });\n' +
    '    $kqwpH$useEffect(()=>{\n' +
    '        if (!node1) return;\n' +
    '        if (disableOutsidePointerEvents) {\n' +
    '            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n' +
    '                $5cb92bef7577960e$var$originalBodyPointerEvents = document.body.style.pointerEvents;\n' +
    "                document.body.style.pointerEvents = 'none';\n" +
    '            }\n' +
    '            context.layersWithOutsidePointerEventsDisabled.add(node1);\n' +
    '        }\n' +
    '        context.layers.add(node1);\n' +
    '        $5cb92bef7577960e$var$dispatchUpdate();\n' +
    '        return ()=>{\n' +
    '            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) document.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;\n' +
    '        };\n' +
    '    }, [\n' +
    '        node1,\n' +
    '        disableOutsidePointerEvents,\n' +
    '        context\n' +
    '    ]);\n' +
    '    /**\n' +
    '   * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n' +
    '   * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n' +
    "   * and add it to the end again so the layering order wouldn't be _creation order_.\n" +
    '   * We only want them to be removed from context stacks when unmounted.\n' +
    '   */ $kqwpH$useEffect(()=>{\n' +
    '        return ()=>{\n' +
    '            if (!node1) return;\n' +
    '            context.layers.delete(node1);\n' +
    '            context.layersWithOutsidePointerEventsDisabled.delete(node1);\n' +
    '            $5cb92bef7577960e$var$dispatchUpdate();\n' +
    '        };\n' +
    '    }, [\n' +
    '        node1,\n' +
    '        context\n' +
    '    ]);\n' +
    '    $kqwpH$useEffect(()=>{\n' +
    '        const handleUpdate = ()=>force({})\n' +
    '        ;\n' +
    '        document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);\n' +
    '        return ()=>document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate)\n' +
    '        ;\n' +
    '    }, []);\n' +
    '    return /*#__PURE__*/ $kqwpH$createElement($kqwpH$Primitive.div, $kqwpH$babelruntimehelpersesmextends({}, layerProps, {\n' +
    '        ref: composedRefs,\n' +
    '        style: {\n' +
    "            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? 'auto' : 'none' : undefined,\n" +
    '            ...props.style\n' +
    '        },\n' +
    '        onFocusCapture: $kqwpH$composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),\n' +
    '        onBlurCapture: $kqwpH$composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),\n' +
    '        onPointerDownCapture: $kqwpH$composeEventHandlers(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {\n' +
    '    displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * DismissableLayerBranch\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $5cb92bef7577960e$var$BRANCH_NAME = 'DismissableLayerBranch';\n" +
    'const $5cb92bef7577960e$export$4d5eb2109db14228 = /*#__PURE__*/ $kqwpH$forwardRef((props, forwardedRef)=>{\n' +
    '    const context = $kqwpH$useContext($5cb92bef7577960e$var$DismissableLayerContext);\n' +
    '    const ref = $kqwpH$useRef(null);\n' +
    '    const composedRefs = $kqwpH$useComposedRefs(forwardedRef, ref);\n' +
    '    $kqwpH$useEffect(()=>{\n' +
    '        const node = ref.current;\n' +
    '        if (node) {\n' +
    '            context.branches.add(node);\n' +
    '            return ()=>{\n' +
    '                context.branches.delete(node);\n' +
    '            };\n' +
    '        }\n' +
    '    }, [\n' +
    '        context.branches\n' +
    '    ]);\n' +
    '    return /*#__PURE__*/ $kqwpH$createElement($kqwpH$Primitive.div, $kqwpH$babelruntimehelpersesmextends({}, props, {\n' +
    '        ref: composedRefs\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($5cb92bef7577960e$export$4d5eb2109db14228, {\n' +
    '    displayName: $5cb92bef7577960e$var$BRANCH_NAME\n' +
    '});\n' +
    '/* -----------------------------------------------------------------------------------------------*/ /**\n' +
    ' * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n' +
    ' * to mimic layer dismissing behaviour present in OS.\n' +
    ' * Returns props to pass to the node we want to check for outside events.\n' +
    ' */ function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside) {\n' +
    '    const handlePointerDownOutside = $kqwpH$useCallbackRef(onPointerDownOutside);\n' +
    '    const isPointerInsideReactTreeRef = $kqwpH$useRef(false);\n' +
    '    const handleClickRef = $kqwpH$useRef(()=>{});\n' +
    '    $kqwpH$useEffect(()=>{\n' +
    '        const handlePointerDown = (event)=>{\n' +
    '            if (event.target && !isPointerInsideReactTreeRef.current) {\n' +
    '                const eventDetail = {\n' +
    '                    originalEvent: event\n' +
    '                };\n' +
    '                function handleAndDispatchPointerDownOutsideEvent() {\n' +
    '                    $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n' +
    '                        discrete: true\n' +
    '                    });\n' +
    '                }\n' +
    '                /**\n' +
    '         * On touch devices, we need to wait for a click event because browsers implement\n' +
    '         * a ~350ms delay between the time the user stops touching the display and when the\n' +
    "         * browser executres events. We need to ensure we don't reactivate pointer-events within\n" +
    '         * this timeframe otherwise the browser may execute events that should have been prevented.\n' +
    '         *\n' +
    '         * Additionally, this also lets us deal automatically with cancellations when a click event\n' +
    "         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n" +
    '         *\n' +
    '         * This is why we also continuously remove the previous listener'... 3996 more characters
} [Function: logger]
____9999999____ {
  code: 'import {useEffect as $1wErz$useEffect} from "react";\n' +
    '\n' +
    '\n' +
    '/** Number of components which have requested interest to have focus guards */ let $3db38b7d1fb3fe6a$var$count = 0;\n' +
    'function $3db38b7d1fb3fe6a$export$ac5b58043b79449b(props) {\n' +
    '    $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();\n' +
    '    return props.children;\n' +
    '}\n' +
    '/**\n' +
    ' * Injects a pair of focus guards at the edges of the whole DOM tree\n' +
    ' * to ensure `focusin` & `focusout` events can be caught consistently.\n' +
    ' */ function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {\n' +
    '    $1wErz$useEffect(()=>{\n' +
    '        var _edgeGuards$, _edgeGuards$2;\n' +
    "        const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n" +
    "        document.body.insertAdjacentElement('afterbegin', (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());\n" +
    "        document.body.insertAdjacentElement('beforeend', (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());\n" +
    '        $3db38b7d1fb3fe6a$var$count++;\n' +
    '        return ()=>{\n' +
    "            if ($3db38b7d1fb3fe6a$var$count === 1) document.querySelectorAll('[data-radix-focus-guard]').forEach((node)=>node.remove()\n" +
    '            );\n' +
    '            $3db38b7d1fb3fe6a$var$count--;\n' +
    '        };\n' +
    '    }, []);\n' +
    '}\n' +
    'function $3db38b7d1fb3fe6a$var$createFocusGuard() {\n' +
    "    const element = document.createElement('span');\n" +
    "    element.setAttribute('data-radix-focus-guard', '');\n" +
    '    element.tabIndex = 0;\n' +
    "    element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n" +
    '    return element;\n' +
    '}\n' +
    'const $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9 = $3db38b7d1fb3fe6a$export$ac5b58043b79449b;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$3db38b7d1fb3fe6a$export$ac5b58043b79449b as FocusGuards, $3db38b7d1fb3fe6a$export$be92b6f5f03c0fe9 as Root, $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c as useFocusGuards};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import $45QHv$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $45QHv$forwardRef, useState as $45QHv$useState, useRef as $45QHv$useRef, useEffect as $45QHv$useEffect, useCallback as $45QHv$useCallback, createElement as $45QHv$createElement} from "react";\n' +
    'import {useComposedRefs as $45QHv$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {Primitive as $45QHv$Primitive} from "@radix-ui/react-primitive";\n' +
    'import {useCallbackRef as $45QHv$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    "const $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\n" +
    "const $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\n" +
    'const $d3863c46a17e8a28$var$EVENT_OPTIONS = {\n' +
    '    bubbles: false,\n' +
    '    cancelable: true\n' +
    '};\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * FocusScope\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME = 'FocusScope';\n" +
    'const $d3863c46a17e8a28$export$20e40289641fbbb6 = /*#__PURE__*/ $45QHv$forwardRef((props, forwardedRef)=>{\n' +
    '    const { loop: loop = false , trapped: trapped = false , onMountAutoFocus: onMountAutoFocusProp , onUnmountAutoFocus: onUnmountAutoFocusProp , ...scopeProps } = props;\n' +
    '    const [container1, setContainer] = $45QHv$useState(null);\n' +
    '    const onMountAutoFocus = $45QHv$useCallbackRef(onMountAutoFocusProp);\n' +
    '    const onUnmountAutoFocus = $45QHv$useCallbackRef(onUnmountAutoFocusProp);\n' +
    '    const lastFocusedElementRef = $45QHv$useRef(null);\n' +
    '    const composedRefs = $45QHv$useComposedRefs(forwardedRef, (node)=>setContainer(node)\n' +
    '    );\n' +
    '    const focusScope = $45QHv$useRef({\n' +
    '        paused: false,\n' +
    '        pause () {\n' +
    '            this.paused = true;\n' +
    '        },\n' +
    '        resume () {\n' +
    '            this.paused = false;\n' +
    '        }\n' +
    '    }).current; // Takes care of trapping focus if focus is moved outside programmatically for example\n' +
    '    $45QHv$useEffect(()=>{\n' +
    '        if (trapped) {\n' +
    '            function handleFocusIn(event) {\n' +
    '                if (focusScope.paused || !container1) return;\n' +
    '                const target = event.target;\n' +
    '                if (container1.contains(target)) lastFocusedElementRef.current = target;\n' +
    '                else $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {\n' +
    '                    select: true\n' +
    '                });\n' +
    '            }\n' +
    '            function handleFocusOut(event) {\n' +
    '                if (focusScope.paused || !container1) return;\n' +
    '                if (!container1.contains(event.relatedTarget)) $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {\n' +
    '                    select: true\n' +
    '                });\n' +
    '            }\n' +
    "            document.addEventListener('focusin', handleFocusIn);\n" +
    "            document.addEventListener('focusout', handleFocusOut);\n" +
    '            return ()=>{\n' +
    "                document.removeEventListener('focusin', handleFocusIn);\n" +
    "                document.removeEventListener('focusout', handleFocusOut);\n" +
    '            };\n' +
    '        }\n' +
    '    }, [\n' +
    '        trapped,\n' +
    '        container1,\n' +
    '        focusScope.paused\n' +
    '    ]);\n' +
    '    $45QHv$useEffect(()=>{\n' +
    '        if (container1) {\n' +
    '            $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);\n' +
    '            const previouslyFocusedElement = document.activeElement;\n' +
    '            const hasFocusedCandidate = container1.contains(previouslyFocusedElement);\n' +
    '            if (!hasFocusedCandidate) {\n' +
    '                const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);\n' +
    '                container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n' +
    '                container1.dispatchEvent(mountEvent);\n' +
    '                if (!mountEvent.defaultPrevented) {\n' +
    '                    $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {\n' +
    '                        select: true\n' +
    '                    });\n' +
    '                    if (document.activeElement === previouslyFocusedElement) $d3863c46a17e8a28$var$focus(container1);\n' +
    '                }\n' +
    '            }\n' +
    '            return ()=>{\n' +
    '                container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus); // We hit a react bug (fixed in v17) with focusing in unmount.\n' +
    '                // We need to delay the focus a little to get around it for now.\n' +
    '                // See: https://github.com/facebook/react/issues/17894\n' +
    '                setTimeout(()=>{\n' +
    '                    const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);\n' +
    '                    container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n' +
    '                    container1.dispatchEvent(unmountEvent);\n' +
    '                    if (!unmountEvent.defaultPrevented) $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {\n' +
    '                        select: true\n' +
    '                    });\n' +
    '                     // we need to remove the listener after we `dispatchEvent`\n' +
    '                    container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n' +
    '                    $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);\n' +
    '                }, 0);\n' +
    '            };\n' +
    '        }\n' +
    '    }, [\n' +
    '        container1,\n' +
    '        onMountAutoFocus,\n' +
    '        onUnmountAutoFocus,\n' +
    '        focusScope\n' +
    '    ]); // Takes care of looping focus (when tabbing whilst at the edges)\n' +
    '    const handleKeyDown = $45QHv$useCallback((event)=>{\n' +
    '        if (!loop && !trapped) return;\n' +
    '        if (focusScope.paused) return;\n' +
    "        const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n" +
    '        const focusedElement = document.activeElement;\n' +
    '        if (isTabKey && focusedElement) {\n' +
    '            const container = event.currentTarget;\n' +
    '            const [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);\n' +
    '            const hasTabbableElementsInside = first && last; // we can only wrap focus if we have tabbable edges\n' +
    '            if (!hasTabbableElementsInside) {\n' +
    '                if (focusedElement === container) event.preventDefault();\n' +
    '            } else {\n' +
    '                if (!event.shiftKey && focusedElement === last) {\n' +
    '                    event.preventDefault();\n' +
    '                    if (loop) $d3863c46a17e8a28$var$focus(first, {\n' +
    '                        select: true\n' +
    '                    });\n' +
    '                } else if (event.shiftKey && focusedElement === first) {\n' +
    '                    event.preventDefault();\n' +
    '                    if (loop) $d3863c46a17e8a28$var$focus(last, {\n' +
    '                        select: true\n' +
    '                    });\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '    }, [\n' +
    '        loop,\n' +
    '        trapped,\n' +
    '        focusScope.paused\n' +
    '    ]);\n' +
    '    return /*#__PURE__*/ $45QHv$createElement($45QHv$Primitive.div, $45QHv$babelruntimehelpersesmextends({\n' +
    '        tabIndex: -1\n' +
    '    }, scopeProps, {\n' +
    '        ref: composedRefs,\n' +
    '        onKeyDown: handleKeyDown\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($d3863c46a17e8a28$export$20e40289641fbbb6, {\n' +
    '    displayName: $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Utils\n' +
    ' * -----------------------------------------------------------------------------------------------*/ /**\n' +
    ' * Attempts focusing the first element in a list of candidates.\n' +
    ' * Stops when focus has actually moved.\n' +
    ' */ function $d3863c46a17e8a28$var$focusFirst(candidates, { select: select = false  } = {}) {\n' +
    '    const previouslyFocusedElement = document.activeElement;\n' +
    '    for (const candidate of candidates){\n' +
    '        $d3863c46a17e8a28$var$focus(candidate, {\n' +
    '            select: select\n' +
    '        });\n' +
    '        if (document.activeElement !== previouslyFocusedElement) return;\n' +
    '    }\n' +
    '}\n' +
    '/**\n' +
    ' * Returns the first and last tabbable elements inside a container.\n' +
    ' */ function $d3863c46a17e8a28$var$getTabbableEdges(container) {\n' +
    '    const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container);\n' +
    '    const first = $d3863c46a17e8a28$var$findVisible(candidates, container);\n' +
    '    const last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);\n' +
    '    return [\n' +
    '        first,\n' +
    '        last\n' +
    '    ];\n' +
    '}\n' +
    '/**\n' +
    ' * Returns a list of potential tabbable candidates.\n' +
    ' *\n' +
    " * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n" +
    ' * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n' +
    ' * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n' +
    ' *\n' +
    ' * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n' +
    ' * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n' +
    ' */ function $d3863c46a17e8a28$var$getTabbableCandidates(container) {\n' +
    '    const nodes = [];\n' +
    '    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n' +
    '        acceptNode: (node)=>{\n' +
    "            const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n" +
    '            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP; // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n' +
    "            // runtime's understanding of tabbability, so this automatically accounts\n" +
    '            // for any kind of element that could be tabbed to.\n' +
    '            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n' +
    '        }\n' +
    '    });\n' +
    '    while(walker.nextNode())nodes.push(walker.currentNode); // we do not take into account the order of nodes with positive `tabIndex` as it\n' +
    '    // hinders accessibility to have tab order different from visual order.\n' +
    '    return nodes;\n' +
    '}\n' +
    '/**\n' +
    ' * Returns the first visible element in a list.\n' +
    ' * NOTE: Only checks visibility up to the `containe'... 3256 more characters
} [Function: logger]
____9999999____ {
  code: 'import $kY93V$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {useState as $kY93V$useState, createElement as $kY93V$createElement, forwardRef as $kY93V$forwardRef, useRef as $kY93V$useRef, useEffect as $kY93V$useEffect, useLayoutEffect as $kY93V$useLayoutEffect} from "react";\n' +
    'import {useFloating as $kY93V$useFloating, autoUpdate as $kY93V$autoUpdate, offset as $kY93V$offset, shift as $kY93V$shift, limitShift as $kY93V$limitShift, arrow as $kY93V$arrow, flip as $kY93V$flip, hide as $kY93V$hide} from "@floating-ui/react-dom";\n' +
    'import {Root as $kY93V$Root} from "@radix-ui/react-arrow";\n' +
    'import {useComposedRefs as $kY93V$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {createContextScope as $kY93V$createContextScope} from "@radix-ui/react-context";\n' +
    'import {Primitive as $kY93V$Primitive} from "@radix-ui/react-primitive";\n' +
    'import {useLayoutEffect as $kY93V$useLayoutEffect1} from "@radix-ui/react-use-layout-effect";\n' +
    'import {useSize as $kY93V$useSize} from "@radix-ui/react-use-size";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'const $cf1ac5d9fe0e8206$export$36f0086da09c4b9f = [\n' +
    "    'top',\n" +
    "    'right',\n" +
    "    'bottom',\n" +
    "    'left'\n" +
    '];\n' +
    'const $cf1ac5d9fe0e8206$export$3671ffab7b302fc9 = [\n' +
    "    'start',\n" +
    "    'center',\n" +
    "    'end'\n" +
    '];\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Popper\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $cf1ac5d9fe0e8206$var$POPPER_NAME = 'Popper';\n" +
    'const [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $kY93V$createContextScope($cf1ac5d9fe0e8206$var$POPPER_NAME);\n' +
    'const [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME);\n' +
    'const $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props)=>{\n' +
    '    const { __scopePopper: __scopePopper , children: children  } = props;\n' +
    '    const [anchor, setAnchor] = $kY93V$useState(null);\n' +
    '    return /*#__PURE__*/ $kY93V$createElement($cf1ac5d9fe0e8206$var$PopperProvider, {\n' +
    '        scope: __scopePopper,\n' +
    '        anchor: anchor,\n' +
    '        onAnchorChange: setAnchor\n' +
    '    }, children);\n' +
    '};\n' +
    '/*#__PURE__*/ Object.assign($cf1ac5d9fe0e8206$export$badac9ada3a0bdf9, {\n' +
    '    displayName: $cf1ac5d9fe0e8206$var$POPPER_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * PopperAnchor\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $cf1ac5d9fe0e8206$var$ANCHOR_NAME = 'PopperAnchor';\n" +
    'const $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = /*#__PURE__*/ $kY93V$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopePopper: __scopePopper , virtualRef: virtualRef , ...anchorProps } = props;\n' +
    '    const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper);\n' +
    '    const ref = $kY93V$useRef(null);\n' +
    '    const composedRefs = $kY93V$useComposedRefs(forwardedRef, ref);\n' +
    '    $kY93V$useEffect(()=>{\n' +
    "        // Consumer can anchor the popper to something that isn't\n" +
    '        // a DOM node e.g. pointer position, so we override the\n' +
    '        // `anchorRef` with their virtual ref in this case.\n' +
    '        context.onAnchorChange((virtualRef === null || virtualRef === void 0 ? void 0 : virtualRef.current) || ref.current);\n' +
    '    });\n' +
    '    return virtualRef ? null : /*#__PURE__*/ $kY93V$createElement($kY93V$Primitive.div, $kY93V$babelruntimehelpersesmextends({}, anchorProps, {\n' +
    '        ref: composedRefs\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d, {\n' +
    '    displayName: $cf1ac5d9fe0e8206$var$ANCHOR_NAME\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * PopperContent\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $cf1ac5d9fe0e8206$var$CONTENT_NAME = 'PopperContent';\n" +
    'const [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME);\n' +
    'const [$cf1ac5d9fe0e8206$var$PositionContextProvider, $cf1ac5d9fe0e8206$var$usePositionContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, {\n' +
    '    hasParent: false,\n' +
    '    positionUpdateFns: new Set()\n' +
    '});\n' +
    'const $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = /*#__PURE__*/ $kY93V$forwardRef((props, forwardedRef)=>{\n' +
    '    var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$hide, _middlewareData$trans, _middlewareData$trans2;\n' +
    "    const { __scopePopper: __scopePopper , side: side = 'bottom' , sideOffset: sideOffset = 0 , align: align = 'center' , alignOffset: alignOffset = 0 , arrowPadding: arrowPadding = 0 , collisionBoundary: collisionBoundary = [] , collisionPadding: collisionPaddingProp = 0 , sticky: sticky = 'partial' , hideWhenDetached: hideWhenDetached = false , avoidCollisions: avoidCollisions = true , ...contentProps } = props;\n" +
    '    const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);\n' +
    '    const [content, setContent] = $kY93V$useState(null);\n' +
    '    const composedRefs = $kY93V$useComposedRefs(forwardedRef, (node)=>setContent(node)\n' +
    '    );\n' +
    '    const [arrow, setArrow] = $kY93V$useState(null);\n' +
    '    const arrowSize = $kY93V$useSize(arrow);\n' +
    '    const arrowWidth = (_arrowSize$width = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0;\n' +
    '    const arrowHeight = (_arrowSize$height = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0;\n' +
    "    const desiredPlacement = side + (align !== 'center' ? '-' + align : '');\n" +
    "    const collisionPadding = typeof collisionPaddingProp === 'number' ? collisionPaddingProp : {\n" +
    '        top: 0,\n' +
    '        right: 0,\n' +
    '        bottom: 0,\n' +
    '        left: 0,\n' +
    '        ...collisionPaddingProp\n' +
    '    };\n' +
    '    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [\n' +
    '        collisionBoundary\n' +
    '    ];\n' +
    '    const hasExplicitBoundaries = boundary.length > 0;\n' +
    '    const detectOverflowOptions = {\n' +
    '        padding: collisionPadding,\n' +
    '        boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),\n' +
    "        // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n" +
    '        altBoundary: hasExplicitBoundaries\n' +
    '    };\n' +
    '    const { reference: reference , floating: floating , strategy: strategy , x: x , y: y , placement: placement , middlewareData: middlewareData , update: update  } = $kY93V$useFloating({\n' +
    "        // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n" +
    "        strategy: 'fixed',\n" +
    '        placement: desiredPlacement,\n' +
    '        whileElementsMounted: $kY93V$autoUpdate,\n' +
    '        middleware: [\n' +
    '            $kY93V$offset({\n' +
    '                mainAxis: sideOffset + arrowHeight,\n' +
    '                alignmentAxis: alignOffset\n' +
    '            }),\n' +
    '            avoidCollisions ? $kY93V$shift({\n' +
    '                mainAxis: true,\n' +
    '                crossAxis: false,\n' +
    "                limiter: sticky === 'partial' ? $kY93V$limitShift() : undefined,\n" +
    '                ...detectOverflowOptions\n' +
    '            }) : undefined,\n' +
    '            arrow ? $kY93V$arrow({\n' +
    '                element: arrow,\n' +
    '                padding: arrowPadding\n' +
    '            }) : undefined,\n' +
    '            avoidCollisions ? $kY93V$flip({\n' +
    '                ...detectOverflowOptions\n' +
    '            }) : undefined,\n' +
    '            $cf1ac5d9fe0e8206$var$transformOrigin({\n' +
    '                arrowWidth: arrowWidth,\n' +
    '                arrowHeight: arrowHeight\n' +
    '            }),\n' +
    '            hideWhenDetached ? $kY93V$hide({\n' +
    "                strategy: 'referenceHidden'\n" +
    '            }) : undefined\n' +
    '        ].filter($cf1ac5d9fe0e8206$var$isDefined)\n' +
    '    }); // assign the reference dynamically once `Content` has mounted so we can collocate the logic\n' +
    '    $kY93V$useLayoutEffect1(()=>{\n' +
    '        reference(context.anchor);\n' +
    '    }, [\n' +
    '        reference,\n' +
    '        context.anchor\n' +
    '    ]);\n' +
    '    const isPlaced = x !== null && y !== null;\n' +
    '    const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);\n' +
    '    const arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x;\n' +
    '    const arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y;\n' +
    '    const cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0;\n' +
    '    const [contentZIndex, setContentZIndex] = $kY93V$useState();\n' +
    '    $kY93V$useLayoutEffect1(()=>{\n' +
    '        if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n' +
    '    }, [\n' +
    '        content\n' +
    '    ]);\n' +
    '    const { hasParent: hasParent , positionUpdateFns: positionUpdateFns  } = $cf1ac5d9fe0e8206$var$usePositionContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);\n' +
    '    const isRoot = !hasParent;\n' +
    '    $kY93V$useLayoutEffect(()=>{\n' +
    '        if (!isRoot) {\n' +
    '            positionUpdateFns.add(update);\n' +
    '            return ()=>{\n' +
    '                positionUpdateFns.delete(update);\n' +
    '            };\n' +
    '        }\n' +
    '    }, [\n' +
    '        isRoot,\n' +
    '        positionUpdateFns,\n' +
    '        update\n' +
    '    ]); // when nested contents are rendered in portals, they are appended out of order causing\n' +
    '    // children to be positioned incorrectly if initially open.\n' +
    '    // we need to re-compute the positioning once the parent has finally been placed.\n' +
    '    // https://github.com/floating-ui/floating-ui/issues/1531\n' +
    '    $kY93V$useLayoutEffect(()=>{\n' +
    '        if (isRoot && isPlaced) Array.from(positionUpdateFns).reverse().forEach((fn)=>requestAnimationFrame(fn)\n' +
    '        );\n' +
    '    }, [\n' +
    '        isRoot,\n' +
    '        isPlaced,\n' +
    '        positionUpdateFns\n' +
    '    ]);\n' +
    '  '... 8640 more characters
} [Function: logger]
____9999999____ {
  code: 'import $7SXl2$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $7SXl2$forwardRef, createElement as $7SXl2$createElement} from "react";\n' +
    'import $7SXl2$reactdom from "react-dom";\n' +
    'import {Primitive as $7SXl2$Primitive} from "@radix-ui/react-primitive";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Portal\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $f1701beae083dbae$var$PORTAL_NAME = 'Portal';\n" +
    'const $f1701beae083dbae$export$602eac185826482c = /*#__PURE__*/ $7SXl2$forwardRef((props, forwardedRef)=>{\n' +
    '    var _globalThis$document;\n' +
    '    const { container: container = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body , ...portalProps } = props;\n' +
    '    return container ? /*#__PURE__*/ $7SXl2$reactdom.createPortal(/*#__PURE__*/ $7SXl2$createElement($7SXl2$Primitive.div, $7SXl2$babelruntimehelpersesmextends({}, portalProps, {\n' +
    '        ref: forwardedRef\n' +
    '    })), container) : null;\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($f1701beae083dbae$export$602eac185826482c, {\n' +
    '    displayName: $f1701beae083dbae$var$PORTAL_NAME\n' +
    '});\n' +
    '/* -----------------------------------------------------------------------------------------------*/ const $f1701beae083dbae$export$be92b6f5f03c0fe9 = $f1701beae083dbae$export$602eac185826482c;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$f1701beae083dbae$export$602eac185826482c as Portal, $f1701beae083dbae$export$be92b6f5f03c0fe9 as Root};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import {Children as $iqq3r$Children, cloneElement as $iqq3r$cloneElement, useState as $iqq3r$useState, useRef as $iqq3r$useRef, useEffect as $iqq3r$useEffect, useCallback as $iqq3r$useCallback, useReducer as $iqq3r$useReducer} from "react";\n' +
    'import {flushSync as $iqq3r$flushSync} from "react-dom";\n' +
    'import {useComposedRefs as $iqq3r$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {useLayoutEffect as $iqq3r$useLayoutEffect} from "@radix-ui/react-use-layout-effect";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {\n' +
    '    return $iqq3r$useReducer((state, event)=>{\n' +
    '        const nextState = machine[state][event];\n' +
    '        return nextState !== null && nextState !== void 0 ? nextState : state;\n' +
    '    }, initialState);\n' +
    '}\n' +
    '\n' +
    '\n' +
    'const $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props)=>{\n' +
    '    const { present: present , children: children  } = props;\n' +
    '    const presence = $921a889cee6df7e8$var$usePresence(present);\n' +
    "    const child = typeof children === 'function' ? children({\n" +
    '        present: presence.isPresent\n' +
    '    }) : $iqq3r$Children.only(children);\n' +
    '    const ref = $iqq3r$useComposedRefs(presence.ref, child.ref);\n' +
    "    const forceMount = typeof children === 'function';\n" +
    '    return forceMount || presence.isPresent ? /*#__PURE__*/ $iqq3r$cloneElement(child, {\n' +
    '        ref: ref\n' +
    '    }) : null;\n' +
    '};\n' +
    "$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = 'Presence';\n" +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * usePresence\n' +
    ' * -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$usePresence(present) {\n' +
    '    const [node1, setNode] = $iqq3r$useState();\n' +
    '    const stylesRef = $iqq3r$useRef({});\n' +
    '    const prevPresentRef = $iqq3r$useRef(present);\n' +
    "    const prevAnimationNameRef = $iqq3r$useRef('none');\n" +
    "    const initialState = present ? 'mounted' : 'unmounted';\n" +
    '    const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {\n' +
    '        mounted: {\n' +
    "            UNMOUNT: 'unmounted',\n" +
    "            ANIMATION_OUT: 'unmountSuspended'\n" +
    '        },\n' +
    '        unmountSuspended: {\n' +
    "            MOUNT: 'mounted',\n" +
    "            ANIMATION_END: 'unmounted'\n" +
    '        },\n' +
    '        unmounted: {\n' +
    "            MOUNT: 'mounted'\n" +
    '        }\n' +
    '    });\n' +
    '    $iqq3r$useEffect(()=>{\n' +
    '        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n' +
    "        prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n" +
    '    }, [\n' +
    '        state\n' +
    '    ]);\n' +
    '    $iqq3r$useLayoutEffect(()=>{\n' +
    '        const styles = stylesRef.current;\n' +
    '        const wasPresent = prevPresentRef.current;\n' +
    '        const hasPresentChanged = wasPresent !== present;\n' +
    '        if (hasPresentChanged) {\n' +
    '            const prevAnimationName = prevAnimationNameRef.current;\n' +
    '            const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);\n' +
    "            if (present) send('MOUNT');\n" +
    "            else if (currentAnimationName === 'none' || (styles === null || styles === void 0 ? void 0 : styles.display) === 'none') // If there is no exit animation or the element is hidden, animations won't run\n" +
    '            // so we unmount instantly\n' +
    "            send('UNMOUNT');\n" +
    '            else {\n' +
    '                /**\n' +
    '         * When `present` changes to `false`, we check changes to animation-name to\n' +
    '         * determine whether an animation has started. We chose this approach (reading\n' +
    '         * computed styles) because there is no `animationrun` event and `animationstart`\n' +
    '         * fires after `animation-delay` has expired which would be too late.\n' +
    '         */ const isAnimating = prevAnimationName !== currentAnimationName;\n' +
    "                if (wasPresent && isAnimating) send('ANIMATION_OUT');\n" +
    "                else send('UNMOUNT');\n" +
    '            }\n' +
    '            prevPresentRef.current = present;\n' +
    '        }\n' +
    '    }, [\n' +
    '        present,\n' +
    '        send\n' +
    '    ]);\n' +
    '    $iqq3r$useLayoutEffect(()=>{\n' +
    '        if (node1) {\n' +
    '            /**\n' +
    '       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n' +
    '       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n' +
    '       * make sure we only trigger ANIMATION_END for the currently active animation.\n' +
    '       */ const handleAnimationEnd = (event)=>{\n' +
    '                const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n' +
    '                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n' +
    '                if (event.target === node1 && isCurrentAnimation) // With React 18 concurrency this update is applied\n' +
    '                // a frame after the animation ends, creating a flash of visible content.\n' +
    '                // By manually flushing we ensure they sync within a frame, removing the flash.\n' +
    "                $iqq3r$flushSync(()=>send('ANIMATION_END')\n" +
    '                );\n' +
    '            };\n' +
    '            const handleAnimationStart = (event)=>{\n' +
    '                if (event.target === node1) // if animation occurred, store its name as the previous animation.\n' +
    '                prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);\n' +
    '            };\n' +
    "            node1.addEventListener('animationstart', handleAnimationStart);\n" +
    "            node1.addEventListener('animationcancel', handleAnimationEnd);\n" +
    "            node1.addEventListener('animationend', handleAnimationEnd);\n" +
    '            return ()=>{\n' +
    "                node1.removeEventListener('animationstart', handleAnimationStart);\n" +
    "                node1.removeEventListener('animationcancel', handleAnimationEnd);\n" +
    "                node1.removeEventListener('animationend', handleAnimationEnd);\n" +
    '            };\n' +
    '        } else // Transition to the unmounted state if the node is removed prematurely.\n' +
    '        // We avoid doing so during cleanup as the node may change but still exist.\n' +
    "        send('ANIMATION_END');\n" +
    '    }, [\n' +
    '        node1,\n' +
    '        send\n' +
    '    ]);\n' +
    '    return {\n' +
    '        isPresent: [\n' +
    "            'mounted',\n" +
    "            'unmountSuspended'\n" +
    '        ].includes(state),\n' +
    '        ref: $iqq3r$useCallback((node)=>{\n' +
    '            if (node) stylesRef.current = getComputedStyle(node);\n' +
    '            setNode(node);\n' +
    '        }, [])\n' +
    '    };\n' +
    '}\n' +
    '/* -----------------------------------------------------------------------------------------------*/ function $921a889cee6df7e8$var$getAnimationName(styles) {\n' +
    "    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || 'none';\n" +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$921a889cee6df7e8$export$99c2b779aa4e8b8b as Presence};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import $98Iye$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $98Iye$forwardRef, createElement as $98Iye$createElement, useRef as $98Iye$useRef, useState as $98Iye$useState, useEffect as $98Iye$useEffect, useCallback as $98Iye$useCallback} from "react";\n' +
    'import {composeEventHandlers as $98Iye$composeEventHandlers} from "@radix-ui/primitive";\n' +
    'import {createCollection as $98Iye$createCollection} from "@radix-ui/react-collection";\n' +
    'import {useComposedRefs as $98Iye$useComposedRefs} from "@radix-ui/react-compose-refs";\n' +
    'import {createContextScope as $98Iye$createContextScope} from "@radix-ui/react-context";\n' +
    'import {useId as $98Iye$useId} from "@radix-ui/react-id";\n' +
    'import {Primitive as $98Iye$Primitive} from "@radix-ui/react-primitive";\n' +
    'import {useCallbackRef as $98Iye$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    'import {useControllableState as $98Iye$useControllableState} from "@radix-ui/react-use-controllable-state";\n' +
    'import {useDirection as $98Iye$useDirection} from "@radix-ui/react-direction";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    "const $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\n" +
    'const $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {\n' +
    '    bubbles: false,\n' +
    '    cancelable: true\n' +
    '};\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * RovingFocusGroup\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d7bdfb9eb0fdf311$var$GROUP_NAME = 'RovingFocusGroup';\n" +
    'const [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $98Iye$createCollection($d7bdfb9eb0fdf311$var$GROUP_NAME);\n' +
    'const [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $98Iye$createContextScope($d7bdfb9eb0fdf311$var$GROUP_NAME, [\n' +
    '    $d7bdfb9eb0fdf311$var$createCollectionScope\n' +
    ']);\n' +
    'const [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME);\n' +
    'const $d7bdfb9eb0fdf311$export$8699f7c8af148338 = /*#__PURE__*/ $98Iye$forwardRef((props, forwardedRef)=>{\n' +
    '    return /*#__PURE__*/ $98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.Provider, {\n' +
    '        scope: props.__scopeRovingFocusGroup\n' +
    '    }, /*#__PURE__*/ $98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.Slot, {\n' +
    '        scope: props.__scopeRovingFocusGroup\n' +
    '    }, /*#__PURE__*/ $98Iye$createElement($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, $98Iye$babelruntimehelpersesmextends({}, props, {\n' +
    '        ref: forwardedRef\n' +
    '    }))));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($d7bdfb9eb0fdf311$export$8699f7c8af148338, {\n' +
    '    displayName: $d7bdfb9eb0fdf311$var$GROUP_NAME\n' +
    '});\n' +
    '/* -----------------------------------------------------------------------------------------------*/ const $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = /*#__PURE__*/ $98Iye$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeRovingFocusGroup: __scopeRovingFocusGroup , orientation: orientation , loop: loop = false , dir: dir , currentTabStopId: currentTabStopIdProp , defaultCurrentTabStopId: defaultCurrentTabStopId , onCurrentTabStopIdChange: onCurrentTabStopIdChange , onEntryFocus: onEntryFocus , ...groupProps } = props;\n' +
    '    const ref = $98Iye$useRef(null);\n' +
    '    const composedRefs = $98Iye$useComposedRefs(forwardedRef, ref);\n' +
    '    const direction = $98Iye$useDirection(dir);\n' +
    '    const [currentTabStopId = null, setCurrentTabStopId] = $98Iye$useControllableState({\n' +
    '        prop: currentTabStopIdProp,\n' +
    '        defaultProp: defaultCurrentTabStopId,\n' +
    '        onChange: onCurrentTabStopIdChange\n' +
    '    });\n' +
    '    const [isTabbingBackOut, setIsTabbingBackOut] = $98Iye$useState(false);\n' +
    '    const handleEntryFocus = $98Iye$useCallbackRef(onEntryFocus);\n' +
    '    const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);\n' +
    '    const isClickFocusRef = $98Iye$useRef(false);\n' +
    '    $98Iye$useEffect(()=>{\n' +
    '        const node = ref.current;\n' +
    '        if (node) {\n' +
    '            node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);\n' +
    '            return ()=>node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus)\n' +
    '            ;\n' +
    '        }\n' +
    '    }, [\n' +
    '        handleEntryFocus\n' +
    '    ]);\n' +
    '    return /*#__PURE__*/ $98Iye$createElement($d7bdfb9eb0fdf311$var$RovingFocusProvider, {\n' +
    '        scope: __scopeRovingFocusGroup,\n' +
    '        orientation: orientation,\n' +
    '        dir: direction,\n' +
    '        loop: loop,\n' +
    '        currentTabStopId: currentTabStopId,\n' +
    '        onItemFocus: $98Iye$useCallback((tabStopId)=>setCurrentTabStopId(tabStopId)\n' +
    '        , [\n' +
    '            setCurrentTabStopId\n' +
    '        ]),\n' +
    '        onItemShiftTab: $98Iye$useCallback(()=>setIsTabbingBackOut(true)\n' +
    '        , [])\n' +
    '    }, /*#__PURE__*/ $98Iye$createElement($98Iye$Primitive.div, $98Iye$babelruntimehelpersesmextends({\n' +
    '        tabIndex: isTabbingBackOut ? -1 : 0,\n' +
    '        "data-orientation": orientation\n' +
    '    }, groupProps, {\n' +
    '        ref: composedRefs,\n' +
    '        style: {\n' +
    "            outline: 'none',\n" +
    '            ...props.style\n' +
    '        },\n' +
    '        onMouseDown: $98Iye$composeEventHandlers(props.onMouseDown, ()=>{\n' +
    '            isClickFocusRef.current = true;\n' +
    '        }),\n' +
    '        onFocus: $98Iye$composeEventHandlers(props.onFocus, (event)=>{\n' +
    "            // We normally wouldn't need this check, because we already check\n" +
    '            // that the focus is on the current target and not bubbling to it.\n' +
    "            // We do this because Safari doesn't focus buttons when clicked, and\n" +
    '            // instead, the wrapper will get focused and not through a bubbling event.\n' +
    '            const isKeyboardFocus = !isClickFocusRef.current;\n' +
    '            if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n' +
    '                const entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);\n' +
    '                event.currentTarget.dispatchEvent(entryFocusEvent);\n' +
    '                if (!entryFocusEvent.defaultPrevented) {\n' +
    '                    const items = getItems().filter((item)=>item.focusable\n' +
    '                    );\n' +
    '                    const activeItem = items.find((item)=>item.active\n' +
    '                    );\n' +
    '                    const currentItem = items.find((item)=>item.id === currentTabStopId\n' +
    '                    );\n' +
    '                    const candidateItems = [\n' +
    '                        activeItem,\n' +
    '                        currentItem,\n' +
    '                        ...items\n' +
    '                    ].filter(Boolean);\n' +
    '                    const candidateNodes = candidateItems.map((item)=>item.ref.current\n' +
    '                    );\n' +
    '                    $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);\n' +
    '                }\n' +
    '            }\n' +
    '            isClickFocusRef.current = false;\n' +
    '        }),\n' +
    '        onBlur: $98Iye$composeEventHandlers(props.onBlur, ()=>setIsTabbingBackOut(false)\n' +
    '        )\n' +
    '    })));\n' +
    '});\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * RovingFocusGroupItem\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $d7bdfb9eb0fdf311$var$ITEM_NAME = 'RovingFocusGroupItem';\n" +
    'const $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = /*#__PURE__*/ $98Iye$forwardRef((props, forwardedRef)=>{\n' +
    '    const { __scopeRovingFocusGroup: __scopeRovingFocusGroup , focusable: focusable = true , active: active = false , ...itemProps } = props;\n' +
    '    const id = $98Iye$useId();\n' +
    '    const context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup);\n' +
    '    const isCurrentTabStop = context.currentTabStopId === id;\n' +
    '    const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);\n' +
    '    return /*#__PURE__*/ $98Iye$createElement($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {\n' +
    '        scope: __scopeRovingFocusGroup,\n' +
    '        id: id,\n' +
    '        focusable: focusable,\n' +
    '        active: active\n' +
    '    }, /*#__PURE__*/ $98Iye$createElement($98Iye$Primitive.span, $98Iye$babelruntimehelpersesmextends({\n' +
    '        tabIndex: isCurrentTabStop ? 0 : -1,\n' +
    '        "data-orientation": context.orientation\n' +
    '    }, itemProps, {\n' +
    '        ref: forwardedRef,\n' +
    '        onMouseDown: $98Iye$composeEventHandlers(props.onMouseDown, (event)=>{\n' +
    '            // We prevent focusing non-focusable items on `mousedown`.\n' +
    '            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n' +
    "            if (!focusable) event.preventDefault(); // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n" +
    '            else context.onItemFocus(id);\n' +
    '        }),\n' +
    '        onFocus: $98Iye$composeEventHandlers(props.onFocus, ()=>context.onItemFocus(id)\n' +
    '        ),\n' +
    '        onKeyDown: $98Iye$composeEventHandlers(props.onKeyDown, (event)=>{\n' +
    "            if (event.key === 'Tab' && event.shiftKey) {\n" +
    '                context.onItemShiftTab();\n' +
    '                return;\n' +
    '            }\n' +
    '            if (event.target !== event.currentTarget) return;\n' +
    '            const focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);\n' +
    '            if (focusIntent !== undefined) {\n' +
    '                event.preventDefault();\n' +
    '                const items = getItems().filter((item)=>item.focusable\n' +
    '                );\n' +
    '                let candidateNodes = items.map((item)=>item.ref.current\n' +
    '                );\n' +
    "                if (focusIntent === 'last') candidateNodes.reverse();\n" +
    "                else if (focusIntent === 'prev' || focusIntent === 'next') {\n" +
    "                    if (focusIntent === 'prev') candidateNodes.reverse();\n" +
    '                    const currentIndex = candidateNodes.indexOf(event.currentTarget);\n' +
    '                    candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);\n' +
    '                }\n' +
    '                /**\n' +
    "         * Imperative focus during keydown is risky so we prevent React's batching updates\n" +
    '         * to avoid '... 2583 more characters
} [Function: logger]
____9999999____ {
  code: 'import $9IrjX$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $9IrjX$forwardRef, Children as $9IrjX$Children, isValidElement as $9IrjX$isValidElement, createElement as $9IrjX$createElement, cloneElement as $9IrjX$cloneElement, Fragment as $9IrjX$Fragment} from "react";\n' +
    'import {composeRefs as $9IrjX$composeRefs} from "@radix-ui/react-compose-refs";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Slot\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n' +
    '    const { children: children , ...slotProps } = props;\n' +
    '    const childrenArray = $9IrjX$Children.toArray(children);\n' +
    '    const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n' +
    '    if (slottable) {\n' +
    '        // the new element to render is the one passed as a child of `Slottable`\n' +
    '        const newElement = slottable.props.children;\n' +
    '        const newChildren = childrenArray.map((child)=>{\n' +
    '            if (child === slottable) {\n' +
    '                // because the new element will be the one rendered, we are only interested\n' +
    '                // in grabbing its children (`newElement.props.children`)\n' +
    '                if ($9IrjX$Children.count(newElement) > 1) return $9IrjX$Children.only(null);\n' +
    '                return /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? newElement.props.children : null;\n' +
    '            } else return child;\n' +
    '        });\n' +
    '        return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n' +
    '            ref: forwardedRef\n' +
    '        }), /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? /*#__PURE__*/ $9IrjX$cloneElement(newElement, undefined, newChildren) : null);\n' +
    '    }\n' +
    '    return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n' +
    '        ref: forwardedRef\n' +
    '    }), children);\n' +
    '});\n' +
    "$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n" +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * SlotClone\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n' +
    '    const { children: children , ...slotProps } = props;\n' +
    '    if (/*#__PURE__*/ $9IrjX$isValidElement(children)) return /*#__PURE__*/ $9IrjX$cloneElement(children, {\n' +
    '        ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n' +
    '        ref: $9IrjX$composeRefs(forwardedRef, children.ref)\n' +
    '    });\n' +
    '    return $9IrjX$Children.count(children) > 1 ? $9IrjX$Children.only(null) : null;\n' +
    '});\n' +
    "$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n" +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Slottable\n' +
    ' * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{\n' +
    '    return /*#__PURE__*/ $9IrjX$createElement($9IrjX$Fragment, null, children);\n' +
    '};\n' +
    '/* ---------------------------------------------------------------------------------------------- */ function $5e63c961fc1ce211$var$isSlottable(child) {\n' +
    '    return /*#__PURE__*/ $9IrjX$isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n' +
    '}\n' +
    'function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n' +
    '    // all child props should override\n' +
    '    const overrideProps = {\n' +
    '        ...childProps\n' +
    '    };\n' +
    '    for(const propName in childProps){\n' +
    '        const slotPropValue = slotProps[propName];\n' +
    '        const childPropValue = childProps[propName];\n' +
    "        const isHandler = /^on[A-Z]/.test(propName); // if it's a handler, modify the override by composing the base handler\n" +
    '        if (isHandler) overrideProps[propName] = (...args)=>{\n' +
    '            childPropValue === null || childPropValue === void 0 || childPropValue(...args);\n' +
    '            slotPropValue === null || slotPropValue === void 0 || slotPropValue(...args);\n' +
    '        };\n' +
    "        else if (propName === 'style') overrideProps[propName] = {\n" +
    '            ...slotPropValue,\n' +
    '            ...childPropValue\n' +
    '        };\n' +
    "        else if (propName === 'className') overrideProps[propName] = [\n" +
    '            slotPropValue,\n' +
    '            childPropValue\n' +
    "        ].filter(Boolean).join(' ');\n" +
    '    }\n' +
    '    return {\n' +
    '        ...slotProps,\n' +
    '        ...overrideProps\n' +
    '    };\n' +
    '}\n' +
    'const $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = $5e63c961fc1ce211$export$8c6ed5c666ac1360;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable, $5e63c961fc1ce211$export$be92b6f5f03c0fe9 as Root};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import {useRef as $lwiWj$useRef, useEffect as $lwiWj$useEffect, useMemo as $lwiWj$useMemo} from "react";\n' +
    '\n' +
    '\n' +
    '/**\n' +
    ' * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n' +
    ' * prop or avoid re-executing effects when passed as a dependency\n' +
    ' */ function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {\n' +
    '    const callbackRef = $lwiWj$useRef(callback);\n' +
    '    $lwiWj$useEffect(()=>{\n' +
    '        callbackRef.current = callback;\n' +
    '    }); // https://github.com/facebook/react/issues/19240\n' +
    '    return $lwiWj$useMemo(()=>(...args)=>{\n' +
    '            var _callbackRef$current;\n' +
    '            return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);\n' +
    '        }\n' +
    '    , []);\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$b1b2314f5f9a1d84$export$25bec8c6f54ee79a as useCallbackRef};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: "import RemoveScroll from './Combination';\nexport { RemoveScroll };\n"
} [Function: logger]
____9999999____ {
  code: 'import {useLayoutEffect as $dxlwH$useLayoutEffect} from "react";\n' +
    '\n' +
    '\n' +
    '/**\n' +
    ' * On the server, React emits a warning when calling `useLayoutEffect`.\n' +
    ' * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n' +
    ' * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n' +
    ' *\n' +
    ' * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n' +
    ' */ const $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? $dxlwH$useLayoutEffect : ()=>{};\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$9f79659886946c16$export$e5c5a5f917a5871c as useLayoutEffect};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'var getDefaultParent = function (originalTarget) {\n' +
    "    if (typeof document === 'undefined') {\n" +
    '        return null;\n' +
    '    }\n' +
    '    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n' +
    '    return sampleTarget.ownerDocument.body;\n' +
    '};\n' +
    'var counterMap = new WeakMap();\n' +
    'var uncontrolledNodes = new WeakMap();\n' +
    'var markerMap = {};\n' +
    'var lockCount = 0;\n' +
    'var unwrapHost = function (node) {\n' +
    '    return node && (node.host || unwrapHost(node.parentNode));\n' +
    '};\n' +
    'var correctTargets = function (parent, targets) {\n' +
    '    return targets\n' +
    '        .map(function (target) {\n' +
    '        if (parent.contains(target)) {\n' +
    '            return target;\n' +
    '        }\n' +
    '        var correctedTarget = unwrapHost(target);\n' +
    '        if (correctedTarget && parent.contains(correctedTarget)) {\n' +
    '            return correctedTarget;\n' +
    '        }\n' +
    "        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n" +
    '        return null;\n' +
    '    })\n' +
    '        .filter(function (x) { return Boolean(x); });\n' +
    '};\n' +
    '/**\n' +
    ' * Marks everything except given node(or nodes) as aria-hidden\n' +
    ' * @param {Element | Element[]} originalTarget - elements to keep on the page\n' +
    ' * @param [parentNode] - top element, defaults to document.body\n' +
    ' * @param {String} [markerName] - a special attribute to mark every node\n' +
    ' * @param {String} [controlAttribute] - html Attribute to control\n' +
    ' * @return {Undo} undo command\n' +
    ' */\n' +
    'var applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n' +
    '    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n' +
    '    if (!markerMap[markerName]) {\n' +
    '        markerMap[markerName] = new WeakMap();\n' +
    '    }\n' +
    '    var markerCounter = markerMap[markerName];\n' +
    '    var hiddenNodes = [];\n' +
    '    var elementsToKeep = new Set();\n' +
    '    var elementsToStop = new Set(targets);\n' +
    '    var keep = function (el) {\n' +
    '        if (!el || elementsToKeep.has(el)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        elementsToKeep.add(el);\n' +
    '        keep(el.parentNode);\n' +
    '    };\n' +
    '    targets.forEach(keep);\n' +
    '    var deep = function (parent) {\n' +
    '        if (!parent || elementsToStop.has(parent)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        Array.prototype.forEach.call(parent.children, function (node) {\n' +
    '            if (elementsToKeep.has(node)) {\n' +
    '                deep(node);\n' +
    '            }\n' +
    '            else {\n' +
    '                var attr = node.getAttribute(controlAttribute);\n' +
    "                var alreadyHidden = attr !== null && attr !== 'false';\n" +
    '                var counterValue = (counterMap.get(node) || 0) + 1;\n' +
    '                var markerValue = (markerCounter.get(node) || 0) + 1;\n' +
    '                counterMap.set(node, counterValue);\n' +
    '                markerCounter.set(node, markerValue);\n' +
    '                hiddenNodes.push(node);\n' +
    '                if (counterValue === 1 && alreadyHidden) {\n' +
    '                    uncontrolledNodes.set(node, true);\n' +
    '                }\n' +
    '                if (markerValue === 1) {\n' +
    "                    node.setAttribute(markerName, 'true');\n" +
    '                }\n' +
    '                if (!alreadyHidden) {\n' +
    "                    node.setAttribute(controlAttribute, 'true');\n" +
    '                }\n' +
    '            }\n' +
    '        });\n' +
    '    };\n' +
    '    deep(parentNode);\n' +
    '    elementsToKeep.clear();\n' +
    '    lockCount++;\n' +
    '    return function () {\n' +
    '        hiddenNodes.forEach(function (node) {\n' +
    '            var counterValue = counterMap.get(node) - 1;\n' +
    '            var markerValue = markerCounter.get(node) - 1;\n' +
    '            counterMap.set(node, counterValue);\n' +
    '            markerCounter.set(node, markerValue);\n' +
    '            if (!counterValue) {\n' +
    '                if (!uncontrolledNodes.has(node)) {\n' +
    '                    node.removeAttribute(controlAttribute);\n' +
    '                }\n' +
    '                uncontrolledNodes.delete(node);\n' +
    '            }\n' +
    '            if (!markerValue) {\n' +
    '                node.removeAttribute(markerName);\n' +
    '            }\n' +
    '        });\n' +
    '        lockCount--;\n' +
    '        if (!lockCount) {\n' +
    '            // clear\n' +
    '            counterMap = new WeakMap();\n' +
    '            counterMap = new WeakMap();\n' +
    '            uncontrolledNodes = new WeakMap();\n' +
    '            markerMap = {};\n' +
    '        }\n' +
    '    };\n' +
    '};\n' +
    '/**\n' +
    ' * Marks everything except given node(or nodes) as aria-hidden\n' +
    ' * @param {Element | Element[]} originalTarget - elements to keep on the page\n' +
    ' * @param [parentNode] - top element, defaults to document.body\n' +
    ' * @param {String} [markerName] - a special attribute to mark every node\n' +
    ' * @return {Undo} undo command\n' +
    ' */\n' +
    'export var hideOthers = function (originalTarget, parentNode, markerName) {\n' +
    "    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n" +
    '    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n' +
    '    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n' +
    '    if (!activeParentNode) {\n' +
    '        return function () { return null; };\n' +
    '    }\n' +
    '    // we should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n' +
    "    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live]')));\n" +
    "    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n" +
    '};\n' +
    '/**\n' +
    ' * Marks everything except given node(or nodes) as inert\n' +
    ' * @param {Element | Element[]} originalTarget - elements to keep on the page\n' +
    ' * @param [parentNode] - top element, defaults to document.body\n' +
    ' * @param {String} [markerName] - a special attribute to mark every node\n' +
    ' * @return {Undo} undo command\n' +
    ' */\n' +
    'export var inertOthers = function (originalTarget, parentNode, markerName) {\n' +
    "    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n" +
    '    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n' +
    '    if (!activeParentNode) {\n' +
    '        return function () { return null; };\n' +
    '    }\n' +
    "    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n" +
    '};\n' +
    '/**\n' +
    ' * @returns if current browser supports inert\n' +
    ' */\n' +
    'export var supportsInert = function () {\n' +
    "    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n" +
    '};\n' +
    '/**\n' +
    ' * Automatic function to "suppress" DOM elements - _hide_ or _inert_ in the best possible way\n' +
    ' * @param {Element | Element[]} originalTarget - elements to keep on the page\n' +
    ' * @param [parentNode] - top element, defaults to document.body\n' +
    ' * @param {String} [markerName] - a special attribute to mark every node\n' +
    ' * @return {Undo} undo command\n' +
    ' */\n' +
    'export var suppressOthers = function (originalTarget, parentNode, markerName) {\n' +
    "    if (markerName === void 0) { markerName = 'data-suppressed'; }\n" +
    '    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'export function isEmptyData(data) {\n' +
    '    if (typeof data === "string") {\n' +
    '        return data.length === 0;\n' +
    '    }\n' +
    '    return data.byteLength === 0;\n' +
    '}\n' +
    '//# sourceMappingURL=isEmptyData.js.map'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconChevronRight = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M9.99984 6L8.58984 7.41L13.1698 12L8.58984 16.59L9.99984 18L15.9998 12L9.99984 6Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconChevronRight };\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'import { fromUtf8 as fromUtf8Browser } from "@smithy/util-utf8";\n' +
    '// Quick polyfill\n' +
    'var fromUtf8 = typeof Buffer !== "undefined" && Buffer.from\n' +
    '    ? function (input) { return Buffer.from(input, "utf8"); }\n' +
    '    : fromUtf8Browser;\n' +
    'export function convertToBuffer(data) {\n' +
    '    // Already a Uint8, do nothing\n' +
    '    if (data instanceof Uint8Array)\n' +
    '        return data;\n' +
    '    if (typeof data === "string") {\n' +
    '        return fromUtf8(data);\n' +
    '    }\n' +
    '    if (ArrayBuffer.isView(data)) {\n' +
    '        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n' +
    '    }\n' +
    '    return new Uint8Array(data);\n' +
    '}\n' +
    '//# sourceMappingURL=convertToBuffer.js.map'
} [Function: logger]
____9999999____ {
  code: "import { classNames, ComponentClassName } from '@aws-amplify/ui';\n" +
    "import * as React from 'react';\n" +
    "import { View } from '../../View/View.mjs';\n" +
    '\n' +
    '/**\n' +
    ' * @internal For internal Amplify UI use only. May be removed in a future release.\n' +
    ' */\n' +
    'const IconChevronLeft = (props) => {\n' +
    '    const { className, ...rest } = props;\n' +
    '    return (React.createElement(View, { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },\n' +
    '        React.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },\n' +
    '            React.createElement("path", { d: "M15.41 7.41L14 6L8 12L14 18L15.41 16.59L10.83 12L15.41 7.41Z", fill: "currentColor" }))));\n' +
    '};\n' +
    '\n' +
    'export { IconChevronLeft };\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'export function numToUint8(num) {\n' +
    '    return new Uint8Array([\n' +
    '        (num & 0xff000000) >> 24,\n' +
    '        (num & 0x00ff0000) >> 16,\n' +
    '        (num & 0x0000ff00) >> 8,\n' +
    '        num & 0x000000ff,\n' +
    '    ]);\n' +
    '}\n' +
    '//# sourceMappingURL=numToUint8.js.map'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// IE 11 does not support Array.from, so we do it manually\n' +
    'export function uint32ArrayFrom(a_lookUpTable) {\n' +
    '    if (!Uint32Array.from) {\n' +
    '        var return_array = new Uint32Array(a_lookUpTable.length);\n' +
    '        var a_index = 0;\n' +
    '        while (a_index < a_lookUpTable.length) {\n' +
    '            return_array[a_index] = a_lookUpTable[a_index];\n' +
    '            a_index += 1;\n' +
    '        }\n' +
    '        return return_array;\n' +
    '    }\n' +
    '    return Uint32Array.from(a_lookUpTable);\n' +
    '}\n' +
    '//# sourceMappingURL=uint32ArrayFrom.js.map'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const PROVIDER_NAME = 'pinpoint';\n" +
    '/**\n' +
    ' * Returns a unique cache key for a particular category/appId combination.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCacheKey = (appId, category) => `${category}:${PROVIDER_NAME}:${appId}`;\n' +
    '\n' +
    'export { getCacheKey };\n' +
    '//# sourceMappingURL=getCacheKey.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Cache } from '../../../Cache/index.mjs';\n" +
    "import { getCacheKey } from './getCacheKey.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Writes an endpoint id to a long-lived cache.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const cacheEndpointId = async (appId, category, endpointId) => {\n' +
    '    const cacheKey = getCacheKey(appId, category);\n' +
    '    // Set a longer TTL to avoid endpoint id being deleted after the default TTL (3 days)\n' +
    '    // Also set its priority to the highest to reduce its chance of being deleted when cache is full\n' +
    '    const ttl = 1000 * 60 * 60 * 24 * 365 * 100; // 100 years\n' +
    '    const expiration = new Date().getTime() + ttl;\n' +
    '    return Cache.setItem(cacheKey, endpointId, {\n' +
    '        expires: expiration,\n' +
    '        priority: 1,\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { cacheEndpointId };\n' +
    '//# sourceMappingURL=cacheEndpointId.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { authenticatedHandler } from '../../clients/handlers/authenticated.mjs';\n" +
    "import { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\n" +
    "import { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\n" +
    "import { parseMetadata } from '../../clients/serde/responseInfo.mjs';\n" +
    "import { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\n" +
    "import { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n" +
    "import { defaultConfig, getSharedHeaders } from './base.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const updateEndpointSerializer = ({ ApplicationId = '', EndpointId = '', EndpointRequest }, endpoint) => {\n" +
    '    const headers = getSharedHeaders();\n' +
    '    const url = new AmplifyUrl(endpoint.url);\n' +
    '    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/endpoints/${extendedEncodeURIComponent(EndpointId)}`;\n' +
    '    const body = JSON.stringify(EndpointRequest);\n' +
    "    return { method: 'PUT', headers, url, body };\n" +
    '};\n' +
    'const updateEndpointDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = await parseJsonError(response);\n' +
    '        throw error;\n' +
    '    }\n' +
    '    else {\n' +
    '        const { Message, RequestID } = await parseJsonBody(response);\n' +
    '        return {\n' +
    '            MessageBody: {\n' +
    '                Message,\n' +
    '                RequestID,\n' +
    '            },\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const updateEndpoint = composeServiceApi(authenticatedHandler, updateEndpointSerializer, updateEndpointDeserializer, defaultConfig);\n' +
    '\n' +
    'export { updateEndpoint };\n' +
    '//# sourceMappingURL=updateEndpoint.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a canonical query string.\n' +
    ' *\n' +
    ' * @param searchParams `searchParams` from the request url.\n' +
    ' * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n' +
    ' * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n' +
    ' * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n' +
    ' * is no query string, use an empty string ("").\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n' +
    '    .sort(([keyA, valA], [keyB, valB]) => {\n' +
    '    if (keyA === keyB) {\n' +
    '        return valA < valB ? -1 : 1;\n' +
    '    }\n' +
    '    return keyA < keyB ? -1 : 1;\n' +
    '})\n' +
    '    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n' +
    "    .join('&');\n" +
    "const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n" +
    'const hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n' +
    '\n' +
    'export { getCanonicalQueryString };\n' +
    '//# sourceMappingURL=getCanonicalQueryString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a canonical uri.\n' +
    ' *\n' +
    ' * @param pathname `pathname` from request url.\n' +
    " * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n" +
    ' *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n' +
    ' * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n' +
    ' * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n' +
    '    ? uriEscapePath\n' +
    "        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n" +
    '        : pathname\n' +
    "    : '/';\n" +
    '\n' +
    'export { getCanonicalUri };\n' +
    '//# sourceMappingURL=getCanonicalUri.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns canonical headers.\n' +
    ' *\n' +
    ' * @param headers Headers from the request.\n' +
    ' * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n' +
    ' * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n' +
    ' * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n' +
    ' * for a multi-value header using commas.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getCanonicalHeaders = (headers) => Object.entries(headers)\n' +
    '    .map(([key, value]) => ({\n' +
    '    key: key.toLowerCase(),\n' +
    "    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n" +
    '}))\n' +
    '    .sort((a, b) => (a.key < b.key ? -1 : 1))\n' +
    '    .map(entry => `${entry.key}:${entry.value}\\n`)\n' +
    "    .join('');\n" +
    '\n' +
    'export { getCanonicalHeaders };\n' +
    '//# sourceMappingURL=getCanonicalHeaders.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const globalExists = () => {\n' +
    "    return typeof global !== 'undefined';\n" +
    '};\n' +
    'const globalThisExists = () => {\n' +
    "    return typeof globalThis !== 'undefined';\n" +
    '};\n' +
    'const windowExists = () => {\n' +
    "    return typeof window !== 'undefined';\n" +
    '};\n' +
    'const documentExists = () => {\n' +
    "    return typeof document !== 'undefined';\n" +
    '};\n' +
    'const processExists = () => {\n' +
    "    return typeof process !== 'undefined';\n" +
    '};\n' +
    'const keyPrefixMatch = (object, prefix) => {\n' +
    '    return !!Object.keys(object).find(key => key.startsWith(prefix));\n' +
    '};\n' +
    '\n' +
    'export { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n' +
    '//# sourceMappingURL=helpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    "import { Immediate } from '../util/Immediate';\n" +
    'var setImmediate = Immediate.setImmediate, clearImmediate = Immediate.clearImmediate;\n' +
    'export var immediateProvider = {\n' +
    '    setImmediate: function () {\n' +
    '        var args = [];\n' +
    '        for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '            args[_i] = arguments[_i];\n' +
    '        }\n' +
    '        var delegate = immediateProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, __spreadArray([], __read(args)));\n' +
    '    },\n' +
    '    clearImmediate: function (handle) {\n' +
    '        var delegate = immediateProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=immediateProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __extends } from "tslib";\n' +
    "import { Subscription } from '../Subscription';\n" +
    'var Action = (function (_super) {\n' +
    '    __extends(Action, _super);\n' +
    '    function Action(scheduler, work) {\n' +
    '        return _super.call(this) || this;\n' +
    '    }\n' +
    '    Action.prototype.schedule = function (state, delay) {\n' +
    '        if (delay === void 0) { delay = 0; }\n' +
    '        return this;\n' +
    '    };\n' +
    '    return Action;\n' +
    '}(Subscription));\n' +
    'export { Action };\n' +
    '//# sourceMappingURL=Action.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __read, __spreadArray } from "tslib";\n' +
    'export var intervalProvider = {\n' +
    '    setInterval: function (handler, timeout) {\n' +
    '        var args = [];\n' +
    '        for (var _i = 2; _i < arguments.length; _i++) {\n' +
    '            args[_i - 2] = arguments[_i];\n' +
    '        }\n' +
    '        var delegate = intervalProvider.delegate;\n' +
    '        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n' +
    '            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n' +
    '        }\n' +
    '        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n' +
    '    },\n' +
    '    clearInterval: function (handle) {\n' +
    '        var delegate = intervalProvider.delegate;\n' +
    '        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n' +
    '    },\n' +
    '    delegate: undefined,\n' +
    '};\n' +
    '//# sourceMappingURL=intervalProvider.js.map'
} [Function: logger]
____9999999____ {
  code: 'export function getSymbolIterator() {\n' +
    "    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n" +
    "        return '@@iterator';\n" +
    '    }\n' +
    '    return Symbol.iterator;\n' +
    '}\n' +
    'export var iterator = getSymbolIterator();\n' +
    '//# sourceMappingURL=iterator.js.map'
} [Function: logger]
____9999999____ {
  code: "import axios from 'axios';\n" +
    'export const getBalance = (params, options) => {\n' +
    '    return axios.get(`/balance`, {\n' +
    '        ...options,\n' +
    '        params: { ...params, ...options?.params },\n' +
    '    });\n' +
    '};\n' +
    'export const getTransactions = (params, options) => {\n' +
    '    return axios.get(`/transactions`, {\n' +
    '        ...options,\n' +
    '        params: { ...params, ...options?.params },\n' +
    '    });\n' +
    '};\n' +
    'export const getTransactionById = (params, options) => {\n' +
    '    return axios.get(`/transaction`, {\n' +
    '        ...options,\n' +
    '        params: { ...params, ...options?.params },\n' +
    '    });\n' +
    '};\n' +
    'export const postPayment = (postPaymentBody, options) => {\n' +
    '    return axios.post(`/payment`, postPaymentBody, options);\n' +
    '};\n' +
    'export const getAxiosInstance = () => axios;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQVBJLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjLy5nZW5lcmF0ZWQvcGF5Y29kZS1wcm94eS9jbGllbnQvQVBJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQWtFekIsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQ3RCLE1BQXdCLEVBQUUsT0FBNEIsRUFDdkMsRUFBRTtJQUNqQixPQUFPLEtBQUssQ0FBQyxHQUFHLENBQ2QsVUFBVSxFQUFDO1FBQ2IsR0FBRyxPQUFPO1FBQ04sTUFBTSxFQUFFLEVBQUMsR0FBRyxNQUFNLEVBQUUsR0FBRyxPQUFPLEVBQUUsTUFBTSxFQUFDO0tBQUUsQ0FDNUMsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQUtILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUMzQixNQUE2QixFQUFFLE9BQTRCLEVBQzVDLEVBQUU7SUFDakIsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUNkLGVBQWUsRUFBQztRQUNsQixHQUFHLE9BQU87UUFDTixNQUFNLEVBQUUsRUFBQyxHQUFHLE1BQU0sRUFBRSxHQUFHLE9BQU8sRUFBRSxNQUFNLEVBQUM7S0FBRSxDQUM1QyxDQUFDO0FBQ0osQ0FBQyxDQUFBO0FBS0gsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FDOUIsTUFBZ0MsRUFBRSxPQUE0QixFQUMvQyxFQUFFO0lBQ2pCLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FDZCxjQUFjLEVBQUM7UUFDakIsR0FBRyxPQUFPO1FBQ04sTUFBTSxFQUFFLEVBQUMsR0FBRyxNQUFNLEVBQUUsR0FBRyxPQUFPLEVBQUUsTUFBTSxFQUFDO0tBQUUsQ0FDNUMsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQUtILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUN2QixlQUFnQyxFQUFFLE9BQTRCLEVBQy9DLEVBQUU7SUFDakIsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUNmLFVBQVUsRUFDVixlQUFlLEVBQUMsT0FBTyxDQUN4QixDQUFDO0FBQ0osQ0FBQyxDQUFBO0FBT0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnkgb3J2YWwgdjYuMjQuMCDwn426XG4gKiBEbyBub3QgZWRpdCBtYW51YWxseS5cbiAqIFBheUNvZGVQcm94eSBBUElcbiAqIE9wZW5BUEkgc3BlYyB2ZXJzaW9uOiAxLjAuMFxuICovXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5pbXBvcnQgdHlwZSB7XG4gIEF4aW9zUmVxdWVzdENvbmZpZyxcbiAgQXhpb3NSZXNwb25zZVxufSBmcm9tICdheGlvcydcbmV4cG9ydCB0eXBlIFBvc3RQYXltZW50MjAyID0ge1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBwYXltZW50LiAqL1xuICBpZD86IHN0cmluZztcbiAgLyoqIFN0YXR1cyBvZiB0aGUgcGF5bWVudCBvcGVyYXRpb24uICovXG4gIHN0YXR1cz86IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIFBvc3RQYXltZW50Qm9keSA9IHtcbiAgLyoqIEFtb3VudCB0byBiZSBwYWlkLiAqL1xuICBhbW91bnQ/OiBzdHJpbmc7XG4gIC8qKiBUaGUgdXNlcm5hbWUgaW5pdGlhdGluZyB0aGUgcGF5bWVudC4gKi9cbiAgdXNlcm5hbWU/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBHZXRUcmFuc2FjdGlvbkJ5SWQyMDAgPSB7XG4gIC8qKiBUcmFuc2FjdGlvbiBhbW91bnQuICovXG4gIGFtb3VudD86IHN0cmluZztcbiAgLyoqIERhdGUgd2hlbiB0aGUgdHJhbnNhY3Rpb24gb2NjdXJyZWQuICovXG4gIGRhdGU/OiBzdHJpbmc7XG4gIC8qKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHRyYW5zYWN0aW9uLiAqL1xuICBpZD86IHN0cmluZztcbiAgLyoqIEN1cnJlbnQgc3RhdHVzIG9mIHRoZSB0cmFuc2FjdGlvbi4gKi9cbiAgc3RhdHVzPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgR2V0VHJhbnNhY3Rpb25CeUlkUGFyYW1zID0ge1xuaWQ6IHN0cmluZztcbnVzZXJuYW1lOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBHZXRUcmFuc2FjdGlvbnMyMDBJdGVtID0ge1xuICAvKiogVHJhbnNhY3Rpb24gYW1vdW50LiAqL1xuICBhbW91bnQ/OiBzdHJpbmc7XG4gIC8qKiBEYXRlIHdoZW4gdGhlIHRyYW5zYWN0aW9uIG9jY3VycmVkLiAqL1xuICBkYXRlPzogc3RyaW5nO1xuICAvKiogVW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSB0cmFuc2FjdGlvbi4gKi9cbiAgaWQ/OiBzdHJpbmc7XG4gIC8qKiBDdXJyZW50IHN0YXR1cyBvZiB0aGUgdHJhbnNhY3Rpb24uICovXG4gIHN0YXR1cz86IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIEdldFRyYW5zYWN0aW9uc1BhcmFtcyA9IHtcbnVzZXJuYW1lOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBHZXRCYWxhbmNlMjAwID0ge1xuICAvKiogVGhlIGN1cnJlbnQgYmFsYW5jZSBmb3IgdGhlIHNwZWNpZmllZCB1c2VybmFtZS4gKi9cbiAgYmFsYW5jZT86IG51bWJlcjtcbn07XG5cbmV4cG9ydCB0eXBlIEdldEJhbGFuY2VQYXJhbXMgPSB7XG51c2VybmFtZTogc3RyaW5nO1xufTtcblxuXG5cblxuXG4gIC8qKlxuICogQHN1bW1hcnkgR2V0IGJhbGFuY2UgZm9yIGEgdXNlclxuICovXG5leHBvcnQgY29uc3QgZ2V0QmFsYW5jZSA9IDxURGF0YSA9IEF4aW9zUmVzcG9uc2U8R2V0QmFsYW5jZTIwMD4+KFxuICAgIHBhcmFtczogR2V0QmFsYW5jZVBhcmFtcywgb3B0aW9ucz86IEF4aW9zUmVxdWVzdENvbmZpZ1xuICk6IFByb21pc2U8VERhdGE+ID0+IHtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KFxuICAgICAgYC9iYWxhbmNlYCx7XG4gICAgLi4ub3B0aW9ucyxcbiAgICAgICAgcGFyYW1zOiB7Li4ucGFyYW1zLCAuLi5vcHRpb25zPy5wYXJhbXN9LH1cbiAgICApO1xuICB9XG5cbi8qKlxuICogQHN1bW1hcnkgR2V0IHRyYW5zYWN0aW9ucyBmb3IgYSB1c2VyXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRUcmFuc2FjdGlvbnMgPSA8VERhdGEgPSBBeGlvc1Jlc3BvbnNlPEdldFRyYW5zYWN0aW9uczIwMEl0ZW1bXT4+KFxuICAgIHBhcmFtczogR2V0VHJhbnNhY3Rpb25zUGFyYW1zLCBvcHRpb25zPzogQXhpb3NSZXF1ZXN0Q29uZmlnXG4gKTogUHJvbWlzZTxURGF0YT4gPT4ge1xuICAgIHJldHVybiBheGlvcy5nZXQoXG4gICAgICBgL3RyYW5zYWN0aW9uc2Ase1xuICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIHBhcmFtczogey4uLnBhcmFtcywgLi4ub3B0aW9ucz8ucGFyYW1zfSx9XG4gICAgKTtcbiAgfVxuXG4vKipcbiAqIEBzdW1tYXJ5IEdldCB0cmFuc2FjdGlvbiBieSBJRCBhbmQgdXNlcm5hbWVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFRyYW5zYWN0aW9uQnlJZCA9IDxURGF0YSA9IEF4aW9zUmVzcG9uc2U8R2V0VHJhbnNhY3Rpb25CeUlkMjAwPj4oXG4gICAgcGFyYW1zOiBHZXRUcmFuc2FjdGlvbkJ5SWRQYXJhbXMsIG9wdGlvbnM/OiBBeGlvc1JlcXVlc3RDb25maWdcbiApOiBQcm9taXNlPFREYXRhPiA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLmdldChcbiAgICAgIGAvdHJhbnNhY3Rpb25gLHtcbiAgICAuLi5vcHRpb25zLFxuICAgICAgICBwYXJhbXM6IHsuLi5wYXJhbXMsIC4uLm9wdGlvbnM/LnBhcmFtc30sfVxuICAgICk7XG4gIH1cblxuLyoqXG4gKiBAc3VtbWFyeSBQb3N0IGEgcGF5bWVudFxuICovXG5leHBvcnQgY29uc3QgcG9zdFBheW1lbnQgPSA8VERhdGEgPSBBeGlvc1Jlc3BvbnNlPFBvc3RQYXltZW50MjAyPj4oXG4gICAgcG9zdFBheW1lbnRCb2R5OiBQb3N0UGF5bWVudEJvZHksIG9wdGlvbnM/OiBBeGlvc1JlcXVlc3RDb25maWdcbiApOiBQcm9taXNlPFREYXRhPiA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLnBvc3QoXG4gICAgICBgL3BheW1lbnRgLFxuICAgICAgcG9zdFBheW1lbnRCb2R5LG9wdGlvbnNcbiAgICApO1xuICB9XG5cbmV4cG9ydCB0eXBlIEdldEJhbGFuY2VSZXN1bHQgPSBBeGlvc1Jlc3BvbnNlPEdldEJhbGFuY2UyMDA+XG5leHBvcnQgdHlwZSBHZXRUcmFuc2FjdGlvbnNSZXN1bHQgPSBBeGlvc1Jlc3BvbnNlPEdldFRyYW5zYWN0aW9uczIwMEl0ZW1bXT5cbmV4cG9ydCB0eXBlIEdldFRyYW5zYWN0aW9uQnlJZFJlc3VsdCA9IEF4aW9zUmVzcG9uc2U8R2V0VHJhbnNhY3Rpb25CeUlkMjAwPlxuZXhwb3J0IHR5cGUgUG9zdFBheW1lbnRSZXN1bHQgPSBBeGlvc1Jlc3BvbnNlPFBvc3RQYXltZW50MjAyPlxuXG5leHBvcnQgY29uc3QgZ2V0QXhpb3NJbnN0YW5jZSA9ICgpID0+IGF4aW9zO1xuIl19'
} [Function: logger]
____9999999____ {
  code: 'export function getBalance(username) {\n' +
    '    console.log(username);\n' +
    '    return new Promise(resolve => {\n' +
    '        setTimeout(() => {\n' +
    '            resolve({\n' +
    '                data: {\n' +
    '                    body: JSON.stringify({ balance: { balance: 1000 } }),\n' +
    '                },\n' +
    '            });\n' +
    '        }, 100);\n' +
    '    });\n' +
    '}\n' +
    'export function postPayment({ username, amount, }) {\n' +
    "    console.log('postPayment called with username: ', username, ' and amount: ', amount);\n" +
    '    return Promise.resolve({\n' +
    '        data: JSON.stringify({\n' +
    "            message: 'Payment successful',\n" +
    '            username: username,\n' +
    '            amount: amount,\n' +
    '        }),\n' +
    '    });\n' +
    '}\n' +
    'export const getQRCode = (username) => {\n' +
    '    console.log(username);\n' +
    '    return Promise.resolve({\n' +
    '        data: JSON.stringify({\n' +
    "            qrCode: { url: 'https://via.placeholder.com/150' },\n" +
    '        }),\n' +
    '    });\n' +
    '};\n' +
    'export const getTransactions = (username) => {\n' +
    '    console.log(username);\n' +
    '    return Promise.resolve({\n' +
    '        data: JSON.stringify({\n' +
    '            transactions: [\n' +
    "                { id: '1', date: '2024-02-01', amount: '100.00', status: 'Completed' },\n" +
    "                { id: '2', date: '2024-02-02', amount: '200.00', status: 'Pending' },\n" +
    '            ],\n' +
    '        }),\n' +
    '    });\n' +
    '};\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcGF5Y29kZS1wcm94eS9tb2NrLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxNQUFNLFVBQVUsVUFBVSxDQUFDLFFBQWdCO0lBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUMzQixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsT0FBTyxDQUFDO2dCQUNOLElBQUksRUFBRTtvQkFDSixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDO2lCQUNyRDthQUNGLENBQUMsQ0FBQztRQUNMLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxXQUFXLENBQUMsRUFDMUIsUUFBUSxFQUNSLE1BQU0sR0FJUDtJQUNDLE9BQU8sQ0FBQyxHQUFHLENBQ1Qsb0NBQW9DLEVBQ3BDLFFBQVEsRUFDUixlQUFlLEVBQ2YsTUFBTSxDQUNQLENBQUM7SUFFRixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDbkIsT0FBTyxFQUFFLG9CQUFvQjtZQUM3QixRQUFRLEVBQUUsUUFBUTtZQUNsQixNQUFNLEVBQUUsTUFBTTtTQUNmLENBQUM7S0FDSCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsUUFBZ0IsRUFBRSxFQUFFO0lBQzVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFdEIsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ25CLE1BQU0sRUFBRSxFQUFFLEdBQUcsRUFBRSxpQ0FBaUMsRUFBRTtTQUNuRCxDQUFDO0tBQ0gsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQUMsUUFBZ0IsRUFBRSxFQUFFO0lBQ2xELE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFdEIsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ25CLFlBQVksRUFBRTtnQkFDWixFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7Z0JBQ3RFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRTthQUVyRTtTQUNGLENBQUM7S0FDSCxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFbnN1cmUgdGhlIHN0cnVjdHVyZSBtYXRjaGVzIHRoZSBiYWNrZW5kIHJlc3BvbnNlIGFzIHdlbGwgYXMgbWltaWNrIHRoZSBBeGlvcyByZXNwb25zZSArIHNpbXVsYXRlIG5ldHdvcmsgZGVsYXlcbmV4cG9ydCBmdW5jdGlvbiBnZXRCYWxhbmNlKHVzZXJuYW1lOiBzdHJpbmcpIHtcbiAgY29uc29sZS5sb2codXNlcm5hbWUpO1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICByZXNvbHZlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYmFsYW5jZTogeyBiYWxhbmNlOiAxMDAwIH0gfSksXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9LCAxMDApO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvc3RQYXltZW50KHtcbiAgdXNlcm5hbWUsXG4gIGFtb3VudCxcbn06IHtcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgYW1vdW50OiBzdHJpbmc7XG59KSB7XG4gIGNvbnNvbGUubG9nKFxuICAgICdwb3N0UGF5bWVudCBjYWxsZWQgd2l0aCB1c2VybmFtZTogJyxcbiAgICB1c2VybmFtZSxcbiAgICAnIGFuZCBhbW91bnQ6ICcsXG4gICAgYW1vdW50LFxuICApO1xuICAvLyBTaW11bGF0ZSBhbiBBeGlvcyByZXNwb25zZSB3aXRoIHN0cmluZ2lmaWVkIEpTT05cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgbWVzc2FnZTogJ1BheW1lbnQgc3VjY2Vzc2Z1bCcsXG4gICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICBhbW91bnQ6IGFtb3VudCxcbiAgICB9KSxcbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRRUkNvZGUgPSAodXNlcm5hbWU6IHN0cmluZykgPT4ge1xuICBjb25zb2xlLmxvZyh1c2VybmFtZSk7XG4gIC8vIFJldHVybiBhIHN0cnVjdHVyZSB0aGF0IG1pbWljcyBhbiBBeGlvcyByZXNwb25zZSB3aXRoIHN0cmluZ2lmaWVkIEpTT05cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcXJDb2RlOiB7IHVybDogJ2h0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS8xNTAnIH0sXG4gICAgfSksXG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFRyYW5zYWN0aW9ucyA9ICh1c2VybmFtZTogc3RyaW5nKSA9PiB7XG4gIGNvbnNvbGUubG9nKHVzZXJuYW1lKTtcbiAgLy8gUmV0dXJuIGEgc3RydWN0dXJlIHRoYXQgbWltaWNzIGFuIEF4aW9zIHJlc3BvbnNlIHdpdGggc3RyaW5naWZpZWQgSlNPTlxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICB0cmFuc2FjdGlvbnM6IFtcbiAgICAgICAgeyBpZDogJzEnLCBkYXRlOiAnMjAyNC0wMi0wMScsIGFtb3VudDogJzEwMC4wMCcsIHN0YXR1czogJ0NvbXBsZXRlZCcgfSxcbiAgICAgICAgeyBpZDogJzInLCBkYXRlOiAnMjAyNC0wMi0wMicsIGFtb3VudDogJzIwMC4wMCcsIHN0YXR1czogJ1BlbmRpbmcnIH0sXG4gICAgICAgIC8vIEFkZCBtb3JlIHRyYW5zYWN0aW9ucyBhcyBuZWVkZWRcbiAgICAgIF0sXG4gICAgfSksXG4gIH0pO1xufTtcbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: "import axios from './lib/axios.js';\n" +
    '\n' +
    '// This module is intended to unwrap Axios default export as named.\n' +
    '// Keep top-level export same with static properties\n' +
    '// so that it can keep same with es module or cjs\n' +
    'const {\n' +
    '  Axios,\n' +
    '  AxiosError,\n' +
    '  CanceledError,\n' +
    '  isCancel,\n' +
    '  CancelToken,\n' +
    '  VERSION,\n' +
    '  all,\n' +
    '  Cancel,\n' +
    '  isAxiosError,\n' +
    '  spread,\n' +
    '  toFormData,\n' +
    '  AxiosHeaders,\n' +
    '  HttpStatusCode,\n' +
    '  formToJSON,\n' +
    '  getAdapter,\n' +
    '  mergeConfig\n' +
    '} = axios;\n' +
    '\n' +
    'export {\n' +
    '  axios as default,\n' +
    '  Axios,\n' +
    '  AxiosError,\n' +
    '  CanceledError,\n' +
    '  isCancel,\n' +
    '  CancelToken,\n' +
    '  VERSION,\n' +
    '  all,\n' +
    '  Cancel,\n' +
    '  isAxiosError,\n' +
    '  spread,\n' +
    '  toFormData,\n' +
    '  AxiosHeaders,\n' +
    '  HttpStatusCode,\n' +
    '  formToJSON,\n' +
    '  getAdapter,\n' +
    '  mergeConfig\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    'if (typeof global === "undefined") {\n' +
    '    window.global = window;\n' +
    '}\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWZpbGxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BvbHlmaWxscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLEVBQUUsQ0FBQztJQUNoQyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztBQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUG9seWZpbGwgZm9yIGBnbG9iYWxgIG9iamVjdFxyXG5pZiAodHlwZW9mIGdsb2JhbCA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgd2luZG93Lmdsb2JhbCA9IHdpbmRvdztcclxuICB9XHJcbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "export { default as AuthenticationDetails } from './AuthenticationDetails';\n" +
    "export { default as AuthenticationHelper } from './AuthenticationHelper';\n" +
    "export { default as CognitoAccessToken } from './CognitoAccessToken';\n" +
    "export { default as CognitoIdToken } from './CognitoIdToken';\n" +
    "export { default as CognitoRefreshToken } from './CognitoRefreshToken';\n" +
    "export { default as CognitoUser } from './CognitoUser';\n" +
    "export { default as CognitoUserAttribute } from './CognitoUserAttribute';\n" +
    "export { default as CognitoUserPool } from './CognitoUserPool';\n" +
    "export { default as CognitoUserSession } from './CognitoUserSession';\n" +
    "export { default as CookieStorage } from './CookieStorage';\n" +
    "export { default as DateHelper } from './DateHelper';\n" +
    "export { appendToCognitoUserAgent } from './UserAgent';\n" +
    "export { default as WordArray } from './utils/WordArray';"
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const calculateS = async ({ a, g, k, x, B, N, U, }) => {\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        g.modPow(x, N, (outerErr, outerResult) => {\n' +
    '            if (outerErr) {\n' +
    '                reject(outerErr);\n' +
    '                return;\n' +
    '            }\n' +
    '            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n' +
    '                if (innerErr) {\n' +
    '                    reject(innerErr);\n' +
    '                    return;\n' +
    '                }\n' +
    '                resolve(innerResult.mod(N));\n' +
    '            });\n' +
    '        });\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { calculateS };\n' +
    '//# sourceMappingURL=calculateS.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import BigInteger from '../BigInteger/BigInteger.mjs';\n" +
    "import { getHashFromHex } from '../getHashFromHex.mjs';\n" +
    "import { getPaddedHex } from '../getPaddedHex.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const calculateU = ({ A, B, }) => {\n' +
    '    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n' +
    '    if (U.equals(BigInteger.ZERO)) {\n' +
    "        throw new Error('U cannot be zero.');\n" +
    '    }\n' +
    '    return U;\n' +
    '};\n' +
    '\n' +
    'export { calculateU };\n' +
    '//# sourceMappingURL=calculateU.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    "import { getHexFromBytes } from './getHexFromBytes.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Calculate a hash from a `SourceData`\n' +
    ' * @param {SourceData} data Value to hash.\n' +
    ' * @returns {string} Hex-encoded hash.\n' +
    ' * @private\n' +
    ' */\n' +
    'const getHashFromData = (data) => {\n' +
    '    const sha256 = new Sha256();\n' +
    '    sha256.update(data);\n' +
    '    const hashedData = sha256.digestSync();\n' +
    '    const hashHexFromUint8 = getHexFromBytes(hashedData);\n' +
    "    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n" +
    '};\n' +
    '\n' +
    'export { getHashFromData };\n' +
    '//# sourceMappingURL=getHashFromData.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'import { AxiosHeaders } from "axios";\n' +
    'function evaluate(isCorrect, varName, expected, actual) {\n' +
    '    if (!isCorrect) {\n' +
    '        console.error(`${varName} type mismatch, expected: ${expected}, found:`, actual);\n' +
    '    }\n' +
    '    return isCorrect;\n' +
    '}\n' +
    'export function isPostPayment202(obj, argumentName = "postPayment202") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate((typeof typedObj["id"] === "undefined" ||\n' +
    '            typeof typedObj["id"] === "string"), `${argumentName}["id"]`, "string | undefined", typedObj["id"]) &&\n' +
    '        evaluate((typeof typedObj["status"] === "undefined" ||\n' +
    '            typeof typedObj["status"] === "string"), `${argumentName}["status"]`, "string | undefined", typedObj["status"]));\n' +
    '}\n' +
    'export function isPostPaymentBody(obj, argumentName = "postPaymentBody") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate((typeof typedObj["amount"] === "undefined" ||\n' +
    '            typeof typedObj["amount"] === "string"), `${argumentName}["amount"]`, "string | undefined", typedObj["amount"]) &&\n' +
    '        evaluate((typeof typedObj["username"] === "undefined" ||\n' +
    '            typeof typedObj["username"] === "string"), `${argumentName}["username"]`, "string | undefined", typedObj["username"]));\n' +
    '}\n' +
    'export function isGetTransactionById200(obj, argumentName = "getTransactionById200") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate((typeof typedObj["amount"] === "undefined" ||\n' +
    '            typeof typedObj["amount"] === "string"), `${argumentName}["amount"]`, "string | undefined", typedObj["amount"]) &&\n' +
    '        evaluate((typeof typedObj["date"] === "undefined" ||\n' +
    '            typeof typedObj["date"] === "string"), `${argumentName}["date"]`, "string | undefined", typedObj["date"]) &&\n' +
    '        evaluate((typeof typedObj["id"] === "undefined" ||\n' +
    '            typeof typedObj["id"] === "string"), `${argumentName}["id"]`, "string | undefined", typedObj["id"]) &&\n' +
    '        evaluate((typeof typedObj["status"] === "undefined" ||\n' +
    '            typeof typedObj["status"] === "string"), `${argumentName}["status"]`, "string | undefined", typedObj["status"]));\n' +
    '}\n' +
    'export function isGetTransactionByIdParams(obj, argumentName = "getTransactionByIdParams") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate(typeof typedObj["id"] === "string", `${argumentName}["id"]`, "string", typedObj["id"]) &&\n' +
    '        evaluate(typeof typedObj["username"] === "string", `${argumentName}["username"]`, "string", typedObj["username"]));\n' +
    '}\n' +
    'export function isGetTransactions200Item(obj, argumentName = "getTransactions200Item") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate((typeof typedObj["amount"] === "undefined" ||\n' +
    '            typeof typedObj["amount"] === "string"), `${argumentName}["amount"]`, "string | undefined", typedObj["amount"]) &&\n' +
    '        evaluate((typeof typedObj["date"] === "undefined" ||\n' +
    '            typeof typedObj["date"] === "string"), `${argumentName}["date"]`, "string | undefined", typedObj["date"]) &&\n' +
    '        evaluate((typeof typedObj["id"] === "undefined" ||\n' +
    '            typeof typedObj["id"] === "string"), `${argumentName}["id"]`, "string | undefined", typedObj["id"]) &&\n' +
    '        evaluate((typeof typedObj["status"] === "undefined" ||\n' +
    '            typeof typedObj["status"] === "string"), `${argumentName}["status"]`, "string | undefined", typedObj["status"]));\n' +
    '}\n' +
    'export function isGetTransactionsParams(obj, argumentName = "getTransactionsParams") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate(typeof typedObj["username"] === "string", `${argumentName}["username"]`, "string", typedObj["username"]));\n' +
    '}\n' +
    'export function isGetBalance200(obj, argumentName = "getBalance200") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate((typeof typedObj["balance"] === "undefined" ||\n' +
    '            typeof typedObj["balance"] === "number"), `${argumentName}["balance"]`, "number | undefined", typedObj["balance"]));\n' +
    '}\n' +
    'export function isGetBalanceParams(obj, argumentName = "getBalanceParams") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate(typeof typedObj["username"] === "string", `${argumentName}["username"]`, "string", typedObj["username"]));\n' +
    '}\n' +
    'export function isGetBalanceResult(obj, argumentName = "getBalanceResult") {\n' +
    '    const typedObj = obj;\n' +
    '    return ((typedObj !== null &&\n' +
    '        typeof typedObj === "object" ||\n' +
    '        typeof typedObj === "function") &&\n' +
    '        evaluate(isGetBalance200(typedObj["data"]), `${argumentName}["data"]`, "import(\\"./.temp-generateClientAndDocs/client/API\\").GetBalance200", typedObj["data"]) &&\n' +
    '        evaluate(typeof typedObj["status"] === "number", `${argumentName}["status"]`, "number", typedObj["status"]) &&\n' +
    '        evaluate(typeof typedObj["statusText"] === "string", `${argumentName}["statusText"]`, "string", typedObj["statusText"]) &&\n' +
    '        evaluate(((typedObj["headers"] !== null &&\n' +
    '            typeof typedObj["headers"] === "object" ||\n' +
    '            typeof typedObj["headers"] === "function") &&\n' +
    '            evaluate((typeof typedObj["headers"]["Server"] === "undefined" ||\n' +
    '                typedObj["headers"]["Server"] === null ||\n' +
    '                typeof typedObj["headers"]["Server"] === "string" ||\n' +
    '                typeof typedObj["headers"]["Server"] === "number" ||\n' +
    '                typedObj["headers"]["Server"] === false ||\n' +
    '                typedObj["headers"]["Server"] === true ||\n' +
    '                typedObj["headers"]["Server"] instanceof AxiosHeaders ||\n' +
    '                Array.isArray(typedObj["headers"]["Server"]) &&\n' +
    '                    typedObj["headers"]["Server"].every((e) => typeof e === "string")), `${argumentName}["headers"]["Server"]`, "import(\\"F:/ws2/middle_earth/paycode-customer-v2/node_modules/axios/index\\").AxiosHeaderValue | undefined", typedObj["headers"]["Server"]) &&\n' +
    '            evaluate((typeof typedObj["headers"]["Content-Type"] === "undefined" ||\n' +
    '                typedObj["headers"]["Content-Type"] === null ||\n' +
    '                typeof typedObj["headers"]["Content-Type"] === "string" ||\n' +
    '                typeof typedObj["headers"]["Content-Type"] === "number" ||\n' +
    '                typedObj["headers"]["Content-Type"] === false ||\n' +
    '                typedObj["headers"]["Content-Type"] === true ||\n' +
    '                typedObj["headers"]["Content-Type"] instanceof AxiosHeaders ||\n' +
    '                Array.isArray(typedObj["headers"]["Content-Type"]) &&\n' +
    '                    typedObj["headers"]["Content-Type"].every((e) => typeof e === "string")), `${argumentName}["headers"]["Content-Type"]`, "import(\\"F:/ws2/middle_earth/paycode-customer-v2/node_modules/axios/index\\").AxiosHeaderValue | undefined", typedObj["headers"]["Content-Type"]) &&\n' +
    '            evaluate((typeof typedObj["headers"]["Content-Length"] === "undefined" ||\n' +
    '                typedObj["headers"]["Content-Length"] === null ||\n' +
    '                typeof typedObj["headers"]["Content-Length"] === "string" ||\n' +
    '                typeof typedObj["headers"]["Content-Length"] === "number" ||\n' +
    '                typedObj["headers"]["Content-Length"] === false ||\n' +
    '                typedObj["headers"]["Content-Length"] === true ||\n' +
    '                typedObj["headers"]["Content-Length"] instanceof AxiosHeaders ||\n' +
    '                Array.isArray(typedObj["headers"]["Content-Length"]) &&\n' +
    '                    typedObj["headers"]["Content-Length"].every((e) => typeof e === "string")), `${argumentName}["headers"]["Content-Length"]`, "import(\\"F:/ws2/middle_earth/paycode-customer-v2/node_modules/axios/index\\").AxiosHeaderValue | undefined", typedObj["headers"]["Content-Length"]) &&\n' +
    '            evaluate((typeof typedObj["headers"]["Cache-Control"] === "undefined" ||\n' +
    '                typedObj["headers"]["Cache-Control"] === null ||\n' +
    '                typeof typedObj["headers"]["Cache-Control"] === "string" ||\n' +
    '                typeof typedObj["headers"]["Cache-Control"] === "number" ||\n' +
    '                typedObj["headers"]["Cache-Control"] === false ||\n' +
    '                typedObj["headers"]["Cache-Control"] === true ||\n' +
    '                typedObj["headers"]["Cache-Control"] instanceof AxiosHeaders ||\n' +
    '                Array.isArray(typedObj["headers"]["Cache-Control"]) &&\n' +
    '                    typedObj["headers"]["Cache-Control"].every((e) => typeof e === "string")), `${argumentName}["headers"]["Cache-Control"]`, "import(\\"F:/ws2/middle_earth/paycode-customer-v2/node_modules/axios/index\\").AxiosHeaderValue | undefined", typedObj["headers"]["Cache-Control"]) &&\n' +
    '            evaluate((typeof typedObj["headers"]["Content-Encoding"] === "undefined" ||\n' +
    '                typedObj["headers"]["Content-Encoding"] === null ||\n' +
    '                typeof typedObj["headers"]["Content-Encoding"] === "string" ||\n' +
    '                typeof typedObj["headers"]["Content-Encoding"] === "number" ||\n' +
    '                typedObj["headers"]["Content-Encoding"] === false ||\n' +
    '                typedObj["headers"]["Content-Encoding"] === true ||\n' +
    '                typedObj["headers"]["Content-Encoding"] instanceof AxiosHeaders ||\n' +
    '                Array.isArray(typedObj["headers"]["Content-Encoding"]) &&\n' +
    '                    typedObj["headers"]["Content-Encoding"].every((e) => typeof e === "string")), `${argumentName}["headers"]["Content-Encoding"]`, "import(\\"F:/ws2/middle_earth/paycode-customer-v2/node_modules/axios/in'... 656085 more characters
} [Function: logger]
____9999999____ {
  code: "import { getBytesFromHex } from './getBytesFromHex.mjs';\n" +
    "import { getHashFromData } from './getHashFromData.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Calculate a hash from a hex string\n' +
    ' * @param {string} hexStr Value to hash.\n' +
    ' * @returns {string} Hex-encoded hash.\n' +
    ' * @private\n' +
    ' */\n' +
    'const getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n' +
    '\n' +
    'export { getHashFromHex };\n' +
    '//# sourceMappingURL=getHashFromHex.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Standard HKDF algorithm.\n' +
    ' *\n' +
    ' * @param {Uint8Array} ikm Input key material.\n' +
    ' * @param {Uint8Array} salt Salt value.\n' +
    ' * @param {Uint8Array} info Context and application specific info.\n' +
    ' *\n' +
    ' * @returns {Uint8Array} Strong key material.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getHkdfKey = (ikm, salt, info) => {\n' +
    '    const awsCryptoHash = new Sha256(salt);\n' +
    '    awsCryptoHash.update(ikm);\n' +
    '    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n' +
    '    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n' +
    '    awsCryptoHashHmac.update(info);\n' +
    '    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n' +
    '    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n' +
    '    return hashHexFromAWSCrypto.slice(0, 16);\n' +
    '};\n' +
    '\n' +
    'export { getHkdfKey };\n' +
    '//# sourceMappingURL=getHkdfKey.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import BigInteger from './BigInteger/BigInteger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Tests if a hex string has it most significant bit set (case-insensitive regex)\n' +
    ' */\n' +
    'const HEX_MSB_REGEX = /^[89a-f]/i;\n' +
    '/**\n' +
    " * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n" +
    ' *\n' +
    " * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n" +
    " * byte array containing the two's-complement representation of a BigInteger. The array contains\n" +
    ' * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n' +
    ' *\n' +
    ' * Examples showing how ambiguity is avoided by left padding with:\n' +
    ' * \t"00" (for positive values where the most-significant-bit is set)\n' +
    ' *  "FF" (for negative values where the most-significant-bit is set)\n' +
    ' *\n' +
    ' * padHex(bigInteger.fromInt(-236))  === "FF14"\n' +
    ' * padHex(bigInteger.fromInt(20))    === "14"\n' +
    ' *\n' +
    ' * padHex(bigInteger.fromInt(-200))  === "FF38"\n' +
    ' * padHex(bigInteger.fromInt(56))    === "38"\n' +
    ' *\n' +
    ' * padHex(bigInteger.fromInt(-20))   === "EC"\n' +
    ' * padHex(bigInteger.fromInt(236))   === "00EC"\n' +
    ' *\n' +
    ' * padHex(bigInteger.fromInt(-56))   === "C8"\n' +
    ' * padHex(bigInteger.fromInt(200))   === "00C8"\n' +
    ' *\n' +
    ' * @param {AuthBigInteger} bigInt Number to encode.\n' +
    " * @returns {String} even-length hex string of the two's complement encoding.\n" +
    ' */\n' +
    'const getPaddedHex = (bigInt) => {\n' +
    '    if (!(bigInt instanceof BigInteger)) {\n' +
    "        throw new Error('Not a BigInteger');\n" +
    '    }\n' +
    '    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n' +
    '    /* Get a hex string for abs(bigInt) */\n' +
    '    let hexStr = bigInt.abs().toString(16);\n' +
    '    /* Pad hex to even length if needed */\n' +
    '    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n' +
    '    /* Prepend "00" if the most significant bit is set */\n' +
    '    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n' +
    '    if (isNegative) {\n' +
    '        /* Flip the bits of the representation */\n' +
    '        const invertedNibbles = hexStr\n' +
    "            .split('')\n" +
    '            .map((x) => {\n' +
    '            const invertedNibble = ~parseInt(x, 16) & 0xf;\n' +
    "            return '0123456789ABCDEF'.charAt(invertedNibble);\n" +
    '        })\n' +
    "            .join('');\n" +
    "        /* After flipping the bits, add one to get the 2's complement representation */\n" +
    '        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n' +
    '        hexStr = flippedBitsBI.toString(16);\n' +
    '        /*\n' +
    "        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n" +
    '\n' +
    "        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n" +
    '        without changing the represented value.\n' +
    '\n' +
    '        This only happens in the case when the input is 80...00\n' +
    '        */\n' +
    "        if (hexStr.toUpperCase().startsWith('FF8')) {\n" +
    '            hexStr = hexStr.substring(2);\n' +
    '        }\n' +
    '    }\n' +
    '    return hexStr;\n' +
    '};\n' +
    '\n' +
    'export { getPaddedHex };\n' +
    '//# sourceMappingURL=getPaddedHex.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { base64Encoder } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRandomBytes } from './getRandomBytes.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Helper function to generate a random string\n' +
    ' * @returns {string} a random value.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n' +
    '\n' +
    'export { getRandomString };\n' +
    '//# sourceMappingURL=getRandomString.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns a `Date` that is corrected for clock skew.\n' +
    ' *\n' +
    ' * @param systemClockOffset The offset of the system clock in milliseconds.\n' +
    ' *\n' +
    ' * @returns `Date` representing the current time adjusted by the system clock offset.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n' +
    '\n' +
    'export { getSkewCorrectedDate };\n' +
    '//# sourceMappingURL=getSkewCorrectedDate.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { isClockSkewed } from './isClockSkewed.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Returns the difference between clock time and the current system time if clock is skewed.\n' +
    ' *\n' +
    ' * @param clockTimeInMilliseconds Clock time in milliseconds.\n' +
    ' * @param currentSystemClockOffset Current system clock offset in milliseconds.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n' +
    '    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n' +
    '        return clockTimeInMilliseconds - Date.now();\n' +
    '    }\n' +
    '    return currentSystemClockOffset;\n' +
    '};\n' +
    '\n' +
    'export { getUpdatedSystemClockOffset };\n' +
    '//# sourceMappingURL=getUpdatedSystemClockOffset.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'export * from "camel-case";\n' +
    'export * from "capital-case";\n' +
    'export * from "constant-case";\n' +
    'export * from "dot-case";\n' +
    'export * from "header-case";\n' +
    'export * from "no-case";\n' +
    'export * from "param-case";\n' +
    'export * from "pascal-case";\n' +
    'export * from "path-case";\n' +
    'export * from "sentence-case";\n' +
    'export * from "snake-case";\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: "var Stack = require('./_Stack'),\n" +
    "    equalArrays = require('./_equalArrays'),\n" +
    "    equalByTag = require('./_equalByTag'),\n" +
    "    equalObjects = require('./_equalObjects'),\n" +
    "    getTag = require('./_getTag'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    isBuffer = require('./isBuffer'),\n" +
    "    isTypedArray = require('./isTypedArray');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1;\n' +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var argsTag = '[object Arguments]',\n" +
    "    arrayTag = '[object Array]',\n" +
    "    objectTag = '[object Object]';\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseIsEqual` for arrays and objects which performs\n' +
    ' * deep comparisons and tracks traversed objects enabling objects with circular\n' +
    ' * references to be compared.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to compare.\n' +
    ' * @param {Object} other The other object to compare.\n' +
    ' * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n' +
    ' * @param {Function} customizer The function to customize comparisons.\n' +
    ' * @param {Function} equalFunc The function to determine equivalents of values.\n' +
    ' * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n' +
    ' * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n' +
    ' */\n' +
    'function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n' +
    '  var objIsArr = isArray(object),\n' +
    '      othIsArr = isArray(other),\n' +
    '      objTag = objIsArr ? arrayTag : getTag(object),\n' +
    '      othTag = othIsArr ? arrayTag : getTag(other);\n' +
    '\n' +
    '  objTag = objTag == argsTag ? objectTag : objTag;\n' +
    '  othTag = othTag == argsTag ? objectTag : othTag;\n' +
    '\n' +
    '  var objIsObj = objTag == objectTag,\n' +
    '      othIsObj = othTag == objectTag,\n' +
    '      isSameTag = objTag == othTag;\n' +
    '\n' +
    '  if (isSameTag && isBuffer(object)) {\n' +
    '    if (!isBuffer(other)) {\n' +
    '      return false;\n' +
    '    }\n' +
    '    objIsArr = true;\n' +
    '    objIsObj = false;\n' +
    '  }\n' +
    '  if (isSameTag && !objIsObj) {\n' +
    '    stack || (stack = new Stack);\n' +
    '    return (objIsArr || isTypedArray(object))\n' +
    '      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n' +
    '      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n' +
    '  }\n' +
    '  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n' +
    "    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n" +
    "        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n" +
    '\n' +
    '    if (objIsWrapped || othIsWrapped) {\n' +
    '      var objUnwrapped = objIsWrapped ? object.value() : object,\n' +
    '          othUnwrapped = othIsWrapped ? other.value() : other;\n' +
    '\n' +
    '      stack || (stack = new Stack);\n' +
    '      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n' +
    '    }\n' +
    '  }\n' +
    '  if (!isSameTag) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  stack || (stack = new Stack);\n' +
    '  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsEqualDeep;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    " * Checks if `value` is object-like. A value is object-like if it's not `null`\n" +
    ' * and has a `typeof` result of "object".\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isObjectLike({});\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isObjectLike([1, 2, 3]);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isObjectLike(_.noop);\n' +
    ' * // => false\n' +
    ' *\n' +
    ' * _.isObjectLike(null);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isObjectLike(value) {\n' +
    "  return value != null && typeof value == 'object';\n" +
    '}\n' +
    '\n' +
    'module.exports = isObjectLike;\n'
} [Function: logger]
____9999999____ {
  code: "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import { assertValidationError } from '../../../../errors/utils/assertValidationError.mjs';\n" +
    "import { StorageValidationErrorCode } from '../../../../errors/types/validation.mjs';\n" +
    "import { MAX_OBJECT_SIZE, DEFAULT_PART_SIZE } from '../../utils/constants.mjs';\n" +
    "import { createUploadTask } from '../../utils/transferTask.mjs';\n" +
    "import { byteLength } from './byteLength.mjs';\n" +
    "import { putObjectJob } from './putObjectJob.mjs';\n" +
    "import { getMultipartUploadHandlers } from './multipart/uploadHandlers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Upload data to specified S3 object. By default, it uses single PUT operation to upload if the data is less than 5MB.\n' +
    ' * Otherwise, it uses multipart upload to upload the data. If the data length is unknown, it uses multipart upload.\n' +
    ' *\n' +
    ' * Limitations:\n' +
    ' * * Maximum object size is 5TB.\n' +
    ' * * Maximum object size if the size cannot be determined before upload is 50GB.\n' +
    ' *\n' +
    ' * @param input - The UploadDataInput object.\n' +
    ' * @returns A cancelable and resumable task exposing result promise from `result`\n' +
    ' * \tproperty.\n' +
    ' * @throws service: {@link S3Exception} - thrown when checking for existence of the object\n' +
    ' * @throws validation: {@link StorageValidationErrorCode } - Validation errors.\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // Upload a file to s3 bucket\n' +
    ' * await uploadData({ key, data: file, options: {\n' +
    ' *   onProgress, // Optional progress callback.\n' +
    ' * } }).result;\n' +
    ' * ```\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // Cancel a task\n' +
    ' * const uploadTask = uploadData({ key, data: file });\n' +
    ' * //...\n' +
    ' * uploadTask.cancel();\n' +
    ' * try {\n' +
    ' *   await uploadTask.result;\n' +
    ' * } catch (error) {\n' +
    ' *   if(isCancelError(error)) {\n' +
    ' *     // Handle error thrown by task cancelation.\n' +
    ' *   }\n' +
    ' * }\n' +
    ' *```\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // Pause and resume a task\n' +
    ' * const uploadTask = uploadData({ key, data: file });\n' +
    ' * //...\n' +
    ' * uploadTask.pause();\n' +
    ' * //...\n' +
    ' * uploadTask.resume();\n' +
    ' * //...\n' +
    ' * await uploadTask.result;\n' +
    ' * ```\n' +
    ' */\n' +
    'const uploadData = (input) => {\n' +
    '    const { data } = input;\n' +
    '    const dataByteLength = byteLength(data);\n' +
    '    assertValidationError(dataByteLength === undefined || dataByteLength <= MAX_OBJECT_SIZE, StorageValidationErrorCode.ObjectIsTooLarge);\n' +
    '    if (dataByteLength && dataByteLength <= DEFAULT_PART_SIZE) {\n' +
    '        const abortController = new AbortController();\n' +
    '        return createUploadTask({\n' +
    '            isMultipartUpload: false,\n' +
    '            job: putObjectJob(input, abortController.signal, dataByteLength),\n' +
    '            onCancel: (message) => {\n' +
    '                abortController.abort(message);\n' +
    '            },\n' +
    '        });\n' +
    '    }\n' +
    '    else {\n' +
    '        const { multipartUploadJob, onPause, onResume, onCancel } = getMultipartUploadHandlers(input, dataByteLength);\n' +
    '        return createUploadTask({\n' +
    '            isMultipartUpload: true,\n' +
    '            job: multipartUploadJob,\n' +
    '            onCancel: (message) => {\n' +
    '                onCancel(message);\n' +
    '            },\n' +
    '            onPause,\n' +
    '            onResume,\n' +
    '        });\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { uploadData };\n' +
    '//# sourceMappingURL=index.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { resolveS3ConfigAndInput } from '../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { createDownloadTask } from '../utils/transferTask.mjs';\n" +
    "import '../utils/client/base.mjs';\n" +
    "import { getObject } from '../utils/client/getObject.mjs';\n" +
    "import '../utils/client/listObjectsV2.mjs';\n" +
    "import '../utils/client/putObject.mjs';\n" +
    "import '../utils/client/createMultipartUpload.mjs';\n" +
    "import '../utils/client/uploadPart.mjs';\n" +
    "import '../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../utils/client/listParts.mjs';\n" +
    "import '../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../utils/client/copyObject.mjs';\n" +
    "import '../utils/client/headObject.mjs';\n" +
    "import '../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../utils/userAgent.mjs';\n" +
    "import '../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../utils/logger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Download S3 object data to memory\n' +
    ' *\n' +
    ' * @param input - The DownloadDataInput object.\n' +
    ' * @returns A cancelable task exposing result promise from `result` property.\n' +
    ' * @throws service: {@link S3Exception} - thrown when checking for existence of the object\n' +
    ' * @throws validation: {@link StorageValidationErrorCode } - Validation errors\n' +
    ' *\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // Download a file from s3 bucket\n' +
    ' * const { body, eTag } = await downloadData({ key, data: file, options: {\n' +
    ' *   onProgress, // Optional progress callback.\n' +
    ' * } }).result;\n' +
    ' * ```\n' +
    ' * @example\n' +
    ' * ```ts\n' +
    ' * // Cancel a task\n' +
    ' * const downloadTask = downloadData({ key, data: file });\n' +
    ' * //...\n' +
    ' * downloadTask.cancel();\n' +
    ' * try {\n' +
    ' * \tawait downloadTask.result;\n' +
    ' * } catch (error) {\n' +
    ' * \tif(isCancelError(error)) {\n' +
    ' *    // Handle error thrown by task cancelation.\n' +
    ' * \t}\n' +
    ' * }\n' +
    ' *```\n' +
    ' */\n' +
    'const downloadData = (input) => {\n' +
    '    const abortController = new AbortController();\n' +
    '    const downloadTask = createDownloadTask({\n' +
    '        job: downloadDataJob(input, abortController.signal),\n' +
    '        onCancel: (message) => {\n' +
    '            abortController.abort(message);\n' +
    '        },\n' +
    '    });\n' +
    '    return downloadTask;\n' +
    '};\n' +
    'const downloadDataJob = ({ options: downloadDataOptions, key }, abortSignal) => async () => {\n' +
    '    const { bucket, keyPrefix, s3Config } = await resolveS3ConfigAndInput(Amplify, downloadDataOptions);\n' +
    '    const finalKey = keyPrefix + key;\n' +
    '    logger.debug(`download ${key} from ${finalKey}.`);\n' +
    '    const { Body: body, LastModified: lastModified, ContentLength: size, ETag: eTag, Metadata: metadata, VersionId: versionId, ContentType: contentType, } = await getObject({\n' +
    '        ...s3Config,\n' +
    '        abortSignal,\n' +
    '        onDownloadProgress: downloadDataOptions?.onProgress,\n' +
    '        userAgentValue: getStorageUserAgentValue(StorageAction.DownloadData),\n' +
    '    }, {\n' +
    '        Bucket: bucket,\n' +
    '        Key: finalKey,\n' +
    '        ...(downloadDataOptions?.bytesRange && {\n' +
    '            Range: `bytes=${downloadDataOptions.bytesRange.start}-${downloadDataOptions.bytesRange.end}`,\n' +
    '        }),\n' +
    '    });\n' +
    '    return {\n' +
    '        key,\n' +
    '        body,\n' +
    '        lastModified,\n' +
    '        size,\n' +
    '        contentType,\n' +
    '        eTag,\n' +
    '        metadata,\n' +
    '        versionId,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { downloadData };\n' +
    '//# sourceMappingURL=downloadData.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { remove as remove$1 } from './internal/remove.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Remove a file from your S3 bucket.\n' +
    ' * @param input - The RemoveInput object.\n' +
    ' * @return Output containing the removed object key\n' +
    ' * @throws service: {@link S3Exception} - S3 service errors thrown while getting properties\n' +
    ' * @throws validation: {@link StorageValidationErrorCode } - Validation errors thrown\n' +
    ' */\n' +
    'const remove = (input) => {\n' +
    '    return remove$1(Amplify, input);\n' +
    '};\n' +
    '\n' +
    'export { remove };\n' +
    '//# sourceMappingURL=remove.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { list as list$1 } from './internal/list.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const list = (input) => {\n' +
    '    return list$1(Amplify, input ?? {});\n' +
    '};\n' +
    '\n' +
    'export { list };\n' +
    '//# sourceMappingURL=list.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { copy as copy$1 } from './internal/copy.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n' +
    " * different level or identityId (if source object's level is 'protected').\n" +
    ' *\n' +
    ' * @param input - The CopyInput object.\n' +
    ' * @returns Output containing the destination key.\n' +
    ' * @throws service: {@link S3Exception} - Thrown when checking for existence of the object\n' +
    ' * @throws validation: {@link StorageValidationErrorCode } - Thrown when\n' +
    ' * source or destination key are not defined.\n' +
    ' */\n' +
    'const copy = async (input) => {\n' +
    '    return copy$1(Amplify, input);\n' +
    '};\n' +
    '\n' +
    'export { copy };\n' +
    '//# sourceMappingURL=copy.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { getProperties as getProperties$1 } from './internal/getProperties.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Gets the properties of a file. The properties include S3 system metadata and\n' +
    ' * the user metadata that was provided when uploading the file.\n' +
    ' *\n' +
    ' * @param input - The GetPropertiesInput object.\n' +
    ' * @returns Requested object properties.\n' +
    ' * @throws A {@link S3Exception} when the underlying S3 service returned error.\n' +
    ' * @throws A {@link StorageValidationErrorCode} when API call parameters are invalid.\n' +
    ' */\n' +
    'const getProperties = (input) => {\n' +
    '    return getProperties$1(Amplify, input);\n' +
    '};\n' +
    '\n' +
    'export { getProperties };\n' +
    '//# sourceMappingURL=getProperties.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { getUrl as getUrl$1 } from './internal/getUrl.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Get a temporary presigned URL to download the specified S3 object.\n' +
    ' * The presigned URL expires when the associated role used to sign the request expires or\n' +
    ' * the option  `expiresIn` is reached. The `expiresAt` property in the output object indicates when the URL MAY expire.\n' +
    ' *\n' +
    ' * By default, it will not validate the object that exists in S3. If you set the `options.validateObjectExistence`\n' +
    ' * to true, this method will verify the given object already exists in S3 before returning a presigned\n' +
    ' * URL, and will throw {@link StorageError} if the object does not exist.\n' +
    ' *\n' +
    ' * @param input - The GetUrlInput object.\n' +
    ' * @returns Presigned URL and timestamp when the URL MAY expire.\n' +
    ' * @throws service: {@link S3Exception} - thrown when checking for existence of the object\n' +
    ' * @throws validation: {@link StorageValidationErrorCode } - Validation errors\n' +
    ' * thrown either username or key are not defined.\n' +
    ' *\n' +
    ' */\n' +
    'const getUrl = (input) => {\n' +
    '    return getUrl$1(Amplify, input);\n' +
    '};\n' +
    '\n' +
    'export { getUrl };\n' +
    '//# sourceMappingURL=getUrl.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageError } from './StorageError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Internal-only class for CanceledError thrown by XHR handler or multipart upload when cancellation is invoked\n' +
    ' * without overwriting behavior.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'class CanceledError extends StorageError {\n' +
    '    constructor(params = {}) {\n' +
    '        super({\n' +
    "            name: 'CanceledError',\n" +
    "            message: 'Upload is canceled by user',\n" +
    '            ...params,\n' +
    '        });\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = CanceledError;\n' +
    '        Object.setPrototypeOf(this, CanceledError.prototype);\n' +
    '    }\n' +
    '}\n' +
    '/**\n' +
    ' * Check if an error is caused by user calling `cancel()` on a upload/download task. If an overwriting error is\n' +
    ' * supplied to `task.cancel(errorOverwrite)`, this function will return `false`.\n' +
    ' */\n' +
    'const isCancelError = (error) => !!error && error instanceof CanceledError;\n' +
    '\n' +
    'export { CanceledError, isCancelError };\n' +
    '//# sourceMappingURL=CanceledError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { AmplifyError } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'class StorageError extends AmplifyError {\n' +
    '    constructor(params) {\n' +
    '        super(params);\n' +
    '        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n' +
    '        this.constructor = StorageError;\n' +
    '        Object.setPrototypeOf(this, StorageError.prototype);\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { StorageError };\n' +
    '//# sourceMappingURL=StorageError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/*! *****************************************************************************\r\n' +
    'Copyright (c) Microsoft Corporation.\r\n' +
    '\r\n' +
    'Permission to use, copy, modify, and/or distribute this software for any\r\n' +
    'purpose with or without fee is hereby granted.\r\n' +
    '\r\n' +
    'THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n' +
    'REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n' +
    'AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n' +
    'INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n' +
    'LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n' +
    'OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n' +
    'PERFORMANCE OF THIS SOFTWARE.\r\n' +
    '***************************************************************************** */\r\n' +
    '\r\n' +
    'var __assign = function() {\r\n' +
    '    __assign = Object.assign || function __assign(t) {\r\n' +
    '        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n' +
    '            s = arguments[i];\r\n' +
    '            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n' +
    '        }\r\n' +
    '        return t;\r\n' +
    '    };\r\n' +
    '    return __assign.apply(this, arguments);\r\n' +
    '};\r\n' +
    '\r\n' +
    'function __rest(s, e) {\r\n' +
    '    var t = {};\r\n' +
    '    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n' +
    '        t[p] = s[p];\r\n' +
    '    if (s != null && typeof Object.getOwnPropertySymbols === "function")\r\n' +
    '        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n' +
    '            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n' +
    '                t[p[i]] = s[p[i]];\r\n' +
    '        }\r\n' +
    '    return t;\r\n' +
    '}\r\n' +
    '\r\n' +
    'function __values(o) {\r\n' +
    '    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\r\n' +
    '    if (m) return m.call(o);\r\n' +
    '    if (o && typeof o.length === "number") return {\r\n' +
    '        next: function () {\r\n' +
    '            if (o && i >= o.length) o = void 0;\r\n' +
    '            return { value: o && o[i++], done: !o };\r\n' +
    '        }\r\n' +
    '    };\r\n' +
    '    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\r\n' +
    '}\r\n' +
    '\r\n' +
    'function __read(o, n) {\r\n' +
    '    var m = typeof Symbol === "function" && o[Symbol.iterator];\r\n' +
    '    if (!m) return o;\r\n' +
    '    var i = m.call(o), r, ar = [], e;\r\n' +
    '    try {\r\n' +
    '        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n' +
    '    }\r\n' +
    '    catch (error) { e = { error: error }; }\r\n' +
    '    finally {\r\n' +
    '        try {\r\n' +
    '            if (r && !r.done && (m = i["return"])) m.call(i);\r\n' +
    '        }\r\n' +
    '        finally { if (e) throw e.error; }\r\n' +
    '    }\r\n' +
    '    return ar;\r\n' +
    '}\r\n' +
    '\r\n' +
    'function __spreadArray(to, from, pack) {\r\n' +
    '    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n' +
    '        if (ar || !(i in from)) {\r\n' +
    '            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n' +
    '            ar[i] = from[i];\r\n' +
    '        }\r\n' +
    '    }\r\n' +
    '    return to.concat(ar || Array.prototype.slice.call(from));\r\n' +
    '}\n' +
    '\n' +
    'export { __assign, __read, __rest, __spreadArray, __values };\n'
} [Function: logger]
____9999999____ {
  code: "import { ActionTypes } from './types.js';\n" +
    '\n' +
    'var start = ActionTypes.Start;\n' +
    'var stop = ActionTypes.Stop;\n' +
    'var raise = ActionTypes.Raise;\n' +
    'var send = ActionTypes.Send;\n' +
    'var cancel = ActionTypes.Cancel;\n' +
    'var nullEvent = ActionTypes.NullEvent;\n' +
    'var assign = ActionTypes.Assign;\n' +
    'var after = ActionTypes.After;\n' +
    'var doneState = ActionTypes.DoneState;\n' +
    'var log = ActionTypes.Log;\n' +
    'var init = ActionTypes.Init;\n' +
    'var invoke = ActionTypes.Invoke;\n' +
    'var errorExecution = ActionTypes.ErrorExecution;\n' +
    'var errorPlatform = ActionTypes.ErrorPlatform;\n' +
    'var error = ActionTypes.ErrorCustom;\n' +
    'var update = ActionTypes.Update;\n' +
    'var choose = ActionTypes.Choose;\n' +
    'var pure = ActionTypes.Pure;\n' +
    '\n' +
    'export { after, assign, cancel, choose, doneState, error, errorExecution, errorPlatform, init, invoke, log, nullEvent, pure, raise, send, start, stop, update };\n'
} [Function: logger]
____9999999____ {
  code: "var IS_PRODUCTION = process.env.NODE_ENV === 'production';\n" +
    '\n' +
    'export { IS_PRODUCTION };\n'
} [Function: logger]
____9999999____ {
  code: "var STATE_DELIMITER = '.';\n" +
    'var EMPTY_ACTIVITY_MAP = {};\n' +
    "var DEFAULT_GUARD_TYPE = 'xstate.guard';\n" +
    "var TARGETLESS_KEY = '';\n" +
    '\n' +
    'export { DEFAULT_GUARD_TYPE, EMPTY_ACTIVITY_MAP, STATE_DELIMITER, TARGETLESS_KEY };\n'
} [Function: logger]
____9999999____ {
  code: "import { __values, __spreadArray, __read } from './_virtual/_tslib.js';\n" +
    "import { flatten } from './utils.js';\n" +
    '\n' +
    'var isLeafNode = function (stateNode) {\n' +
    "  return stateNode.type === 'atomic' || stateNode.type === 'final';\n" +
    '};\n' +
    'function getAllChildren(stateNode) {\n' +
    '  return Object.keys(stateNode.states).map(function (key) {\n' +
    '    return stateNode.states[key];\n' +
    '  });\n' +
    '}\n' +
    'function getChildren(stateNode) {\n' +
    '  return getAllChildren(stateNode).filter(function (sn) {\n' +
    "    return sn.type !== 'history';\n" +
    '  });\n' +
    '}\n' +
    'function getAllStateNodes(stateNode) {\n' +
    '  var stateNodes = [stateNode];\n' +
    '\n' +
    '  if (isLeafNode(stateNode)) {\n' +
    '    return stateNodes;\n' +
    '  }\n' +
    '\n' +
    '  return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));\n' +
    '}\n' +
    'function getConfiguration(prevStateNodes, stateNodes) {\n' +
    '  var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n' +
    '\n' +
    '  var prevConfiguration = new Set(prevStateNodes);\n' +
    '  var prevAdjList = getAdjList(prevConfiguration);\n' +
    '  var configuration = new Set(stateNodes);\n' +
    '\n' +
    '  try {\n' +
    '    // add all ancestors\n' +
    '    for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n' +
    '      var s = configuration_1_1.value;\n' +
    '      var m = s.parent;\n' +
    '\n' +
    '      while (m && !configuration.has(m)) {\n' +
    '        configuration.add(m);\n' +
    '        m = m.parent;\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_1_1) {\n' +
    '    e_1 = {\n' +
    '      error: e_1_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n' +
    '    } finally {\n' +
    '      if (e_1) throw e_1.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  var adjList = getAdjList(configuration);\n' +
    '\n' +
    '  try {\n' +
    '    // add descendants\n' +
    '    for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n' +
    '      var s = configuration_2_1.value; // if previously active, add existing child nodes\n' +
    '\n' +
    "      if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n" +
    '        if (prevAdjList.get(s)) {\n' +
    '          prevAdjList.get(s).forEach(function (sn) {\n' +
    '            return configuration.add(sn);\n' +
    '          });\n' +
    '        } else {\n' +
    '          s.initialStateNodes.forEach(function (sn) {\n' +
    '            return configuration.add(sn);\n' +
    '          });\n' +
    '        }\n' +
    '      } else {\n' +
    "        if (s.type === 'parallel') {\n" +
    '          try {\n' +
    '            for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n' +
    '              var child = _f.value;\n' +
    '\n' +
    '              if (!configuration.has(child)) {\n' +
    '                configuration.add(child);\n' +
    '\n' +
    '                if (prevAdjList.get(child)) {\n' +
    '                  prevAdjList.get(child).forEach(function (sn) {\n' +
    '                    return configuration.add(sn);\n' +
    '                  });\n' +
    '                } else {\n' +
    '                  child.initialStateNodes.forEach(function (sn) {\n' +
    '                    return configuration.add(sn);\n' +
    '                  });\n' +
    '                }\n' +
    '              }\n' +
    '            }\n' +
    '          } catch (e_3_1) {\n' +
    '            e_3 = {\n' +
    '              error: e_3_1\n' +
    '            };\n' +
    '          } finally {\n' +
    '            try {\n' +
    '              if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n' +
    '            } finally {\n' +
    '              if (e_3) throw e_3.error;\n' +
    '            }\n' +
    '          }\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_2_1) {\n' +
    '    e_2 = {\n' +
    '      error: e_2_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n' +
    '    } finally {\n' +
    '      if (e_2) throw e_2.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  try {\n' +
    '    // add all ancestors\n' +
    '    for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n' +
    '      var s = configuration_3_1.value;\n' +
    '      var m = s.parent;\n' +
    '\n' +
    '      while (m && !configuration.has(m)) {\n' +
    '        configuration.add(m);\n' +
    '        m = m.parent;\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_4_1) {\n' +
    '    e_4 = {\n' +
    '      error: e_4_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n' +
    '    } finally {\n' +
    '      if (e_4) throw e_4.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return configuration;\n' +
    '}\n' +
    '\n' +
    'function getValueFromAdj(baseNode, adjList) {\n' +
    '  var childStateNodes = adjList.get(baseNode);\n' +
    '\n' +
    '  if (!childStateNodes) {\n' +
    '    return {}; // todo: fix?\n' +
    '  }\n' +
    '\n' +
    "  if (baseNode.type === 'compound') {\n" +
    '    var childStateNode = childStateNodes[0];\n' +
    '\n' +
    '    if (childStateNode) {\n' +
    '      if (isLeafNode(childStateNode)) {\n' +
    '        return childStateNode.key;\n' +
    '      }\n' +
    '    } else {\n' +
    '      return {};\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  var stateValue = {};\n' +
    '  childStateNodes.forEach(function (csn) {\n' +
    '    stateValue[csn.key] = getValueFromAdj(csn, adjList);\n' +
    '  });\n' +
    '  return stateValue;\n' +
    '}\n' +
    '\n' +
    'function getAdjList(configuration) {\n' +
    '  var e_5, _a;\n' +
    '\n' +
    '  var adjList = new Map();\n' +
    '\n' +
    '  try {\n' +
    '    for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n' +
    '      var s = configuration_4_1.value;\n' +
    '\n' +
    '      if (!adjList.has(s)) {\n' +
    '        adjList.set(s, []);\n' +
    '      }\n' +
    '\n' +
    '      if (s.parent) {\n' +
    '        if (!adjList.has(s.parent)) {\n' +
    '          adjList.set(s.parent, []);\n' +
    '        }\n' +
    '\n' +
    '        adjList.get(s.parent).push(s);\n' +
    '      }\n' +
    '    }\n' +
    '  } catch (e_5_1) {\n' +
    '    e_5 = {\n' +
    '      error: e_5_1\n' +
    '    };\n' +
    '  } finally {\n' +
    '    try {\n' +
    '      if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n' +
    '    } finally {\n' +
    '      if (e_5) throw e_5.error;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return adjList;\n' +
    '}\n' +
    'function getValue(rootNode, configuration) {\n' +
    '  var config = getConfiguration([rootNode], configuration);\n' +
    '  return getValueFromAdj(rootNode, getAdjList(config));\n' +
    '}\n' +
    'function has(iterable, item) {\n' +
    '  if (Array.isArray(iterable)) {\n' +
    '    return iterable.some(function (member) {\n' +
    '      return member === item;\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  if (iterable instanceof Set) {\n' +
    '    return iterable.has(item);\n' +
    '  }\n' +
    '\n' +
    '  return false; // TODO: fix\n' +
    '}\n' +
    'function nextEvents(configuration) {\n' +
    '  return __spreadArray([], __read(new Set(flatten(__spreadArray([], __read(configuration.map(function (sn) {\n' +
    '    return sn.ownEvents;\n' +
    '  })), false)))), false);\n' +
    '}\n' +
    'function isInFinalState(configuration, stateNode) {\n' +
    "  if (stateNode.type === 'compound') {\n" +
    '    return getChildren(stateNode).some(function (s) {\n' +
    "      return s.type === 'final' && has(configuration, s);\n" +
    '    });\n' +
    '  }\n' +
    '\n' +
    "  if (stateNode.type === 'parallel') {\n" +
    '    return getChildren(stateNode).every(function (sn) {\n' +
    '      return isInFinalState(configuration, sn);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function getMeta(configuration) {\n' +
    '  if (configuration === void 0) {\n' +
    '    configuration = [];\n' +
    '  }\n' +
    '\n' +
    '  return configuration.reduce(function (acc, stateNode) {\n' +
    '    if (stateNode.meta !== undefined) {\n' +
    '      acc[stateNode.id] = stateNode.meta;\n' +
    '    }\n' +
    '\n' +
    '    return acc;\n' +
    '  }, {});\n' +
    '}\n' +
    'function getTagsFromConfiguration(configuration) {\n' +
    '  return new Set(flatten(configuration.map(function (sn) {\n' +
    '    return sn.tags;\n' +
    '  })));\n' +
    '}\n' +
    '\n' +
    'export { getAdjList, getAllChildren, getAllStateNodes, getChildren, getConfiguration, getMeta, getTagsFromConfiguration, getValue, has, isInFinalState, isLeafNode, nextEvents };\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign, __rest } from './_virtual/_tslib.js';\n" +
    "import './types.js';\n" +
    "import { invoke } from './actionTypes.js';\n" +
    "import './utils.js';\n" +
    "import './environment.js';\n" +
    '\n' +
    'function toInvokeSource(src) {\n' +
    "  if (typeof src === 'string') {\n" +
    '    var simpleSrc = {\n' +
    '      type: src\n' +
    '    };\n' +
    '\n' +
    '    simpleSrc.toString = function () {\n' +
    '      return src;\n' +
    '    }; // v4 compat - TODO: remove in v5\n' +
    '\n' +
    '\n' +
    '    return simpleSrc;\n' +
    '  }\n' +
    '\n' +
    '  return src;\n' +
    '}\n' +
    'function toInvokeDefinition(invokeConfig) {\n' +
    '  return __assign(__assign({\n' +
    '    type: invoke\n' +
    '  }, invokeConfig), {\n' +
    '    toJSON: function () {\n' +
    '      invokeConfig.onDone;\n' +
    '          invokeConfig.onError;\n' +
    '          var invokeDef = __rest(invokeConfig, ["onDone", "onError"]);\n' +
    '\n' +
    '      return __assign(__assign({}, invokeDef), {\n' +
    '        type: invoke,\n' +
    '        src: toInvokeSource(invokeConfig.src)\n' +
    '      });\n' +
    '    }\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'export { toInvokeDefinition, toInvokeSource };\n'
} [Function: logger]
____9999999____ {
  code: '/**\r\n' +
    ' * Maintains a stack of the current service in scope.\r\n' +
    ' * This is used to provide the correct service to spawn().\r\n' +
    ' */\n' +
    'var serviceStack = [];\n' +
    'var provide = function (service, fn) {\n' +
    '  serviceStack.push(service);\n' +
    '  var result = fn(service);\n' +
    '  serviceStack.pop();\n' +
    '  return result;\n' +
    '};\n' +
    'var consume = function (fn) {\n' +
    '  return fn(serviceStack[serviceStack.length - 1]);\n' +
    '};\n' +
    '\n' +
    'export { consume, provide };\n'
} [Function: logger]
____9999999____ {
  code: "var arrayMap = require('./_arrayMap'),\n" +
    "    baseIteratee = require('./_baseIteratee'),\n" +
    "    basePickBy = require('./_basePickBy'),\n" +
    "    getAllKeysIn = require('./_getAllKeysIn');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an object composed of the `object` properties `predicate` returns\n' +
    ' * truthy for. The predicate is invoked with two arguments: (value, key).\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The source object.\n' +
    ' * @param {Function} [predicate=_.identity] The function invoked per property.\n' +
    ' * @returns {Object} Returns the new object.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': 1, 'b': '2', 'c': 3 };\n" +
    ' *\n' +
    ' * _.pickBy(object, _.isNumber);\n' +
    " * // => { 'a': 1, 'c': 3 }\n" +
    ' */\n' +
    'function pickBy(object, predicate) {\n' +
    '  if (object == null) {\n' +
    '    return {};\n' +
    '  }\n' +
    '  var props = arrayMap(getAllKeysIn(object), function(prop) {\n' +
    '    return [prop];\n' +
    '  });\n' +
    '  predicate = baseIteratee(predicate);\n' +
    '  return basePickBy(object, props, function(value, path) {\n' +
    '    return predicate(value, path[0]);\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'module.exports = pickBy;\n'
} [Function: logger]
____9999999____ {
  code: "import { __assign } from './_virtual/_tslib.js';\n" +
    '\n' +
    'var defaultOptions = {\n' +
    '  deferEvents: false\n' +
    '};\n' +
    '\n' +
    'var Scheduler =\n' +
    '/*#__PURE__*/\n' +
    '\n' +
    '/** @class */\n' +
    'function () {\n' +
    '  function Scheduler(options) {\n' +
    '    this.processingEvent = false;\n' +
    '    this.queue = [];\n' +
    '    this.initialized = false;\n' +
    '    this.options = __assign(__assign({}, defaultOptions), options);\n' +
    '  }\n' +
    '\n' +
    '  Scheduler.prototype.initialize = function (callback) {\n' +
    '    this.initialized = true;\n' +
    '\n' +
    '    if (callback) {\n' +
    '      if (!this.options.deferEvents) {\n' +
    '        this.schedule(callback);\n' +
    '        return;\n' +
    '      }\n' +
    '\n' +
    '      this.process(callback);\n' +
    '    }\n' +
    '\n' +
    '    this.flushEvents();\n' +
    '  };\n' +
    '\n' +
    '  Scheduler.prototype.schedule = function (task) {\n' +
    '    if (!this.initialized || this.processingEvent) {\n' +
    '      this.queue.push(task);\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    if (this.queue.length !== 0) {\n' +
    "      throw new Error('Event queue should be empty when it is not processing events');\n" +
    '    }\n' +
    '\n' +
    '    this.process(task);\n' +
    '    this.flushEvents();\n' +
    '  };\n' +
    '\n' +
    '  Scheduler.prototype.clear = function () {\n' +
    '    this.queue = [];\n' +
    '  };\n' +
    '\n' +
    '  Scheduler.prototype.flushEvents = function () {\n' +
    '    var nextCallback = this.queue.shift();\n' +
    '\n' +
    '    while (nextCallback) {\n' +
    '      this.process(nextCallback);\n' +
    '      nextCallback = this.queue.shift();\n' +
    '    }\n' +
    '  };\n' +
    '\n' +
    '  Scheduler.prototype.process = function (callback) {\n' +
    '    this.processingEvent = true;\n' +
    '\n' +
    '    try {\n' +
    '      callback();\n' +
    '    } catch (e) {\n' +
    '      // there is no use to keep the future events\n' +
    '      // as the situation is not anymore the same\n' +
    '      this.clear();\n' +
    '      throw e;\n' +
    '    } finally {\n' +
    '      this.processingEvent = false;\n' +
    '    }\n' +
    '  };\n' +
    '\n' +
    '  return Scheduler;\n' +
    '}();\n' +
    '\n' +
    'export { Scheduler };\n'
} [Function: logger]
____9999999____ {
  code: 'var children = /*#__PURE__*/new Map();\n' +
    'var sessionIdIndex = 0;\n' +
    'var registry = {\n' +
    '  bookId: function () {\n' +
    '    return "x:".concat(sessionIdIndex++);\n' +
    '  },\n' +
    '  register: function (id, actor) {\n' +
    '    children.set(id, actor);\n' +
    '    return id;\n' +
    '  },\n' +
    '  get: function (id) {\n' +
    '    return children.get(id);\n' +
    '  },\n' +
    '  free: function (id) {\n' +
    '    children.delete(id);\n' +
    '  }\n' +
    '};\n' +
    '\n' +
    'export { registry };\n'
} [Function: logger]
____9999999____ {
  code: "import { IS_PRODUCTION } from './environment.js';\n" +
    '\n' +
    'function getGlobal() {\n' +
    "  if (typeof globalThis !== 'undefined') {\n" +
    '    return globalThis;\n' +
    '  }\n' +
    '\n' +
    "  if (typeof self !== 'undefined') {\n" +
    '    return self;\n' +
    '  }\n' +
    '\n' +
    "  if (typeof window !== 'undefined') {\n" +
    '    return window;\n' +
    '  }\n' +
    '\n' +
    "  if (typeof global !== 'undefined') {\n" +
    '    return global;\n' +
    '  }\n' +
    '\n' +
    '  if (!IS_PRODUCTION) {\n' +
    "    console.warn('XState could not find a global object in this environment. Please let the maintainers know and raise an issue here: https://github.com/statelyai/xstate/issues');\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    'function getDevTools() {\n' +
    '  var global = getGlobal();\n' +
    '\n' +
    "  if (global && '__xstate__' in global) {\n" +
    '    return global.__xstate__;\n' +
    '  }\n' +
    '\n' +
    '  return undefined;\n' +
    '}\n' +
    '\n' +
    'function registerService(service) {\n' +
    '  if (!getGlobal()) {\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  var devTools = getDevTools();\n' +
    '\n' +
    '  if (devTools) {\n' +
    '    devTools.register(service);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export { getGlobal, registerService };\n'
} [Function: logger]
____9999999____ {
  code: "var baseMerge = require('./_baseMerge'),\n" +
    "    createAssigner = require('./_createAssigner');\n" +
    '\n' +
    '/**\n' +
    ' * This method is like `_.assign` except that it recursively merges own and\n' +
    ' * inherited enumerable string keyed properties of source objects into the\n' +
    ' * destination object. Source properties that resolve to `undefined` are\n' +
    ' * skipped if a destination value exists. Array and plain object properties\n' +
    ' * are merged recursively. Other objects and value types are overridden by\n' +
    ' * assignment. Source objects are applied from left to right. Subsequent\n' +
    ' * sources overwrite property assignments of previous sources.\n' +
    ' *\n' +
    ' * **Note:** This method mutates `object`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.5.0\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The destination object.\n' +
    ' * @param {...Object} [sources] The source objects.\n' +
    ' * @returns {Object} Returns `object`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * var object = {\n' +
    " *   'a': [{ 'b': 2 }, { 'd': 4 }]\n" +
    ' * };\n' +
    ' *\n' +
    ' * var other = {\n' +
    " *   'a': [{ 'c': 3 }, { 'e': 5 }]\n" +
    ' * };\n' +
    ' *\n' +
    ' * _.merge(object, other);\n' +
    " * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n" +
    ' */\n' +
    'var merge = createAssigner(function(object, source, srcIndex) {\n' +
    '  baseMerge(object, source, srcIndex);\n' +
    '});\n' +
    '\n' +
    'module.exports = merge;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A specialized version of `_.reduce` for arrays without support for\n' +
    ' * iteratee shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} [array] The array to iterate over.\n' +
    ' * @param {Function} iteratee The function invoked per iteration.\n' +
    ' * @param {*} [accumulator] The initial value.\n' +
    ' * @param {boolean} [initAccum] Specify using the first element of `array` as\n' +
    ' *  the initial value.\n' +
    ' * @returns {*} Returns the accumulated value.\n' +
    ' */\n' +
    'function arrayReduce(array, iteratee, accumulator, initAccum) {\n' +
    '  var index = -1,\n' +
    '      length = array == null ? 0 : array.length;\n' +
    '\n' +
    '  if (initAccum && length) {\n' +
    '    accumulator = array[++index];\n' +
    '  }\n' +
    '  while (++index < length) {\n' +
    '    accumulator = iteratee(accumulator, array[index], index, array);\n' +
    '  }\n' +
    '  return accumulator;\n' +
    '}\n' +
    '\n' +
    'module.exports = arrayReduce;\n'
} [Function: logger]
____9999999____ {
  code: '/*\n' +
    ' * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' *\n' +
    ' * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with\n' +
    ' * the License. A copy of the License is located at\n' +
    ' *\n' +
    ' * http://www.apache.org/licenses/LICENSE-2.0\n' +
    ' *\n' +
    ' * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n' +
    ' * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n' +
    ' * and limitations under the License.\n' +
    ' */\n' +
    '\n' +
    'const defaults = {\n' +
    "  opening_character: '{',\n" +
    "  closing_character: '}',\n" +
    "  separator: '.'\n" +
    '};\n' +
    '\n' +
    'module.exports = defaults;\n'
} [Function: logger]
____9999999____ {
  code: 'var reactDom_production_min = {}; export {reactDom_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/scheduler/index.js";'
} [Function: logger]
____9999999____ {
  code: "var deburrLetter = require('./_deburrLetter'),\n" +
    "    toString = require('./toString');\n" +
    '\n' +
    '/** Used to match Latin Unicode letters (excluding mathematical operators). */\n' +
    'var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n' +
    '\n' +
    '/** Used to compose unicode character classes. */\n' +
    "var rsComboMarksRange = '\\\\u0300-\\\\u036f',\n" +
    "    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n" +
    "    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n" +
    '    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n' +
    '\n' +
    '/** Used to compose unicode capture groups. */\n' +
    "var rsCombo = '[' + rsComboRange + ']';\n" +
    '\n' +
    '/**\n' +
    ' * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n' +
    ' * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n' +
    ' */\n' +
    "var reComboMark = RegExp(rsCombo, 'g');\n" +
    '\n' +
    '/**\n' +
    ' * Deburrs `string` by converting\n' +
    ' * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n' +
    ' * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n' +
    ' * letters to basic Latin letters and removing\n' +
    ' * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category String\n' +
    " * @param {string} [string=''] The string to deburr.\n" +
    ' * @returns {string} Returns the deburred string.\n' +
    ' * @example\n' +
    ' *\n' +
    " * _.deburr('déjà vu');\n" +
    " * // => 'deja vu'\n" +
    ' */\n' +
    'function deburr(string) {\n' +
    '  string = toString(string);\n' +
    "  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n" +
    '}\n' +
    '\n' +
    'module.exports = deburr;\n'
} [Function: logger]
____9999999____ {
  code: "var asciiWords = require('./_asciiWords'),\n" +
    "    hasUnicodeWord = require('./_hasUnicodeWord'),\n" +
    "    toString = require('./toString'),\n" +
    "    unicodeWords = require('./_unicodeWords');\n" +
    '\n' +
    '/**\n' +
    ' * Splits `string` into an array of its words.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category String\n' +
    " * @param {string} [string=''] The string to inspect.\n" +
    ' * @param {RegExp|string} [pattern] The pattern to match words.\n' +
    ' * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n' +
    ' * @returns {Array} Returns the words of `string`.\n' +
    ' * @example\n' +
    ' *\n' +
    " * _.words('fred, barney, & pebbles');\n" +
    " * // => ['fred', 'barney', 'pebbles']\n" +
    ' *\n' +
    " * _.words('fred, barney, & pebbles', /[^, ]+/g);\n" +
    " * // => ['fred', 'barney', '&', 'pebbles']\n" +
    ' */\n' +
    'function words(string, pattern, guard) {\n' +
    '  string = toString(string);\n' +
    '  pattern = guard ? undefined : pattern;\n' +
    '\n' +
    '  if (pattern === undefined) {\n' +
    '    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n' +
    '  }\n' +
    '  return string.match(pattern) || [];\n' +
    '}\n' +
    '\n' +
    'module.exports = words;\n'
} [Function: logger]
____9999999____ {
  code: 'let toSJISFunction\n' +
    'const CODEWORDS_COUNT = [\n' +
    '  0, // Not used\n' +
    '  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n' +
    '  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n' +
    '  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n' +
    '  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n' +
    ']\n' +
    '\n' +
    '/**\n' +
    ' * Returns the QR Code size for the specified version\n' +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Number}         size of QR code\n' +
    ' */\n' +
    'exports.getSymbolSize = function getSymbolSize (version) {\n' +
    `  if (!version) throw new Error('"version" cannot be null or undefined')\n` +
    `  if (version < 1 || version > 40) throw new Error('"version" should be in range from 1 to 40')\n` +
    '  return version * 4 + 17\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns the total number of codewords used to store data and EC information.\n' +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Number}         Data length in bits\n' +
    ' */\n' +
    'exports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n' +
    '  return CODEWORDS_COUNT[version]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Encode data with Bose-Chaudhuri-Hocquenghem\n' +
    ' *\n' +
    ' * @param  {Number} data Value to encode\n' +
    ' * @return {Number}      Encoded value\n' +
    ' */\n' +
    'exports.getBCHDigit = function (data) {\n' +
    '  let digit = 0\n' +
    '\n' +
    '  while (data !== 0) {\n' +
    '    digit++\n' +
    '    data >>>= 1\n' +
    '  }\n' +
    '\n' +
    '  return digit\n' +
    '}\n' +
    '\n' +
    'exports.setToSJISFunction = function setToSJISFunction (f) {\n' +
    "  if (typeof f !== 'function') {\n" +
    `    throw new Error('"toSJISFunc" is not a valid function.')\n` +
    '  }\n' +
    '\n' +
    '  toSJISFunction = f\n' +
    '}\n' +
    '\n' +
    'exports.isKanjiModeEnabled = function () {\n' +
    "  return typeof toSJISFunction !== 'undefined'\n" +
    '}\n' +
    '\n' +
    'exports.toSJIS = function toSJIS (kanji) {\n' +
    '  return toSJISFunction(kanji)\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'exports.L = { bit: 1 }\n' +
    'exports.M = { bit: 0 }\n' +
    'exports.Q = { bit: 3 }\n' +
    'exports.H = { bit: 2 }\n' +
    '\n' +
    'function fromString (string) {\n' +
    "  if (typeof string !== 'string') {\n" +
    "    throw new Error('Param is not a string')\n" +
    '  }\n' +
    '\n' +
    '  const lcStr = string.toLowerCase()\n' +
    '\n' +
    '  switch (lcStr) {\n' +
    "    case 'l':\n" +
    "    case 'low':\n" +
    '      return exports.L\n' +
    '\n' +
    "    case 'm':\n" +
    "    case 'medium':\n" +
    '      return exports.M\n' +
    '\n' +
    "    case 'q':\n" +
    "    case 'quartile':\n" +
    '      return exports.Q\n' +
    '\n' +
    "    case 'h':\n" +
    "    case 'high':\n" +
    '      return exports.H\n' +
    '\n' +
    '    default:\n' +
    "      throw new Error('Unknown EC Level: ' + string)\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    'exports.isValid = function isValid (level) {\n' +
    "  return level && typeof level.bit !== 'undefined' &&\n" +
    '    level.bit >= 0 && level.bit < 4\n' +
    '}\n' +
    '\n' +
    'exports.from = function from (value, defaultValue) {\n' +
    '  if (exports.isValid(value)) {\n' +
    '    return value\n' +
    '  }\n' +
    '\n' +
    '  try {\n' +
    '    return fromString(value)\n' +
    '  } catch (e) {\n' +
    '    return defaultValue\n' +
    '  }\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'function BitBuffer () {\n' +
    '  this.buffer = []\n' +
    '  this.length = 0\n' +
    '}\n' +
    '\n' +
    'BitBuffer.prototype = {\n' +
    '\n' +
    '  get: function (index) {\n' +
    '    const bufIndex = Math.floor(index / 8)\n' +
    '    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n' +
    '  },\n' +
    '\n' +
    '  put: function (num, length) {\n' +
    '    for (let i = 0; i < length; i++) {\n' +
    '      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  getLengthInBits: function () {\n' +
    '    return this.length\n' +
    '  },\n' +
    '\n' +
    '  putBit: function (bit) {\n' +
    '    const bufIndex = Math.floor(this.length / 8)\n' +
    '    if (this.buffer.length <= bufIndex) {\n' +
    '      this.buffer.push(0)\n' +
    '    }\n' +
    '\n' +
    '    if (bit) {\n' +
    '      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n' +
    '    }\n' +
    '\n' +
    '    this.length++\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = BitBuffer\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Helper class to handle QR Code symbol modules\n' +
    ' *\n' +
    ' * @param {Number} size Symbol size\n' +
    ' */\n' +
    'function BitMatrix (size) {\n' +
    '  if (!size || size < 1) {\n' +
    "    throw new Error('BitMatrix size must be defined and greater than 0')\n" +
    '  }\n' +
    '\n' +
    '  this.size = size\n' +
    '  this.data = new Uint8Array(size * size)\n' +
    '  this.reservedBit = new Uint8Array(size * size)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Set bit value at specified location\n' +
    ' * If reserved flag is set, this bit will be ignored during masking process\n' +
    ' *\n' +
    ' * @param {Number}  row\n' +
    ' * @param {Number}  col\n' +
    ' * @param {Boolean} value\n' +
    ' * @param {Boolean} reserved\n' +
    ' */\n' +
    'BitMatrix.prototype.set = function (row, col, value, reserved) {\n' +
    '  const index = row * this.size + col\n' +
    '  this.data[index] = value\n' +
    '  if (reserved) this.reservedBit[index] = true\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns bit value at specified location\n' +
    ' *\n' +
    ' * @param  {Number}  row\n' +
    ' * @param  {Number}  col\n' +
    ' * @return {Boolean}\n' +
    ' */\n' +
    'BitMatrix.prototype.get = function (row, col) {\n' +
    '  return this.data[row * this.size + col]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Applies xor operator at specified location\n' +
    ' * (used during masking process)\n' +
    ' *\n' +
    ' * @param {Number}  row\n' +
    ' * @param {Number}  col\n' +
    ' * @param {Boolean} value\n' +
    ' */\n' +
    'BitMatrix.prototype.xor = function (row, col, value) {\n' +
    '  this.data[row * this.size + col] ^= value\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Check if bit at specified location is reserved\n' +
    ' *\n' +
    ' * @param {Number}   row\n' +
    ' * @param {Number}   col\n' +
    ' * @return {Boolean}\n' +
    ' */\n' +
    'BitMatrix.prototype.isReserved = function (row, col) {\n' +
    '  return this.reservedBit[row * this.size + col]\n' +
    '}\n' +
    '\n' +
    'module.exports = BitMatrix\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Alignment pattern are fixed reference pattern in defined positions\n' +
    ' * in a matrix symbology, which enables the decode software to re-synchronise\n' +
    ' * the coordinate mapping of the image modules in the event of moderate amounts\n' +
    ' * of distortion of the image.\n' +
    ' *\n' +
    ' * Alignment patterns are present only in QR Code symbols of version 2 or larger\n' +
    ' * and their number depends on the symbol version.\n' +
    ' */\n' +
    '\n' +
    "const getSymbolSize = require('./utils').getSymbolSize\n" +
    '\n' +
    '/**\n' +
    ' * Calculate the row/column coordinates of the center module of each alignment pattern\n' +
    ' * for the specified QR Code version.\n' +
    ' *\n' +
    ' * The alignment patterns are positioned symmetrically on either side of the diagonal\n' +
    ' * running from the top left corner of the symbol to the bottom right corner.\n' +
    ' *\n' +
    ' * Since positions are simmetrical only half of the coordinates are returned.\n' +
    ' * Each item of the array will represent in turn the x and y coordinate.\n' +
    ' * @see {@link getPositions}\n' +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Array}          Array of coordinate\n' +
    ' */\n' +
    'exports.getRowColCoords = function getRowColCoords (version) {\n' +
    '  if (version === 1) return []\n' +
    '\n' +
    '  const posCount = Math.floor(version / 7) + 2\n' +
    '  const size = getSymbolSize(version)\n' +
    '  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n' +
    '  const positions = [size - 7] // Last coord is always (size - 7)\n' +
    '\n' +
    '  for (let i = 1; i < posCount - 1; i++) {\n' +
    '    positions[i] = positions[i - 1] - intervals\n' +
    '  }\n' +
    '\n' +
    '  positions.push(6) // First coord is always 6\n' +
    '\n' +
    '  return positions.reverse()\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns an array containing the positions of each alignment pattern.\n' +
    " * Each array's element represent the center point of the pattern as (x, y) coordinates\n" +
    ' *\n' +
    ' * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n' +
    ' * and filtering out the items that overlaps with finder pattern\n' +
    ' *\n' +
    ' * @example\n' +
    ' * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n' +
    ' * The alignment patterns, therefore, are to be centered on (row, column)\n' +
    ' * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n' +
    ' * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n' +
    ' * and are not therefore used for alignment patterns.\n' +
    ' *\n' +
    ' * let pos = getPositions(7)\n' +
    ' * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n' +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Array}          Array of coordinates\n' +
    ' */\n' +
    'exports.getPositions = function getPositions (version) {\n' +
    '  const coords = []\n' +
    '  const pos = exports.getRowColCoords(version)\n' +
    '  const posLength = pos.length\n' +
    '\n' +
    '  for (let i = 0; i < posLength; i++) {\n' +
    '    for (let j = 0; j < posLength; j++) {\n' +
    '      // Skip if position is occupied by finder patterns\n' +
    '      if ((i === 0 && j === 0) || // top-left\n' +
    '          (i === 0 && j === posLength - 1) || // bottom-left\n' +
    '          (i === posLength - 1 && j === 0)) { // top-right\n' +
    '        continue\n' +
    '      }\n' +
    '\n' +
    '      coords.push([pos[i], pos[j]])\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return coords\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const getSymbolSize = require('./utils').getSymbolSize\n" +
    'const FINDER_PATTERN_SIZE = 7\n' +
    '\n' +
    '/**\n' +
    ' * Returns an array containing the positions of each finder pattern.\n' +
    " * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n" +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Array}          Array of coordinates\n' +
    ' */\n' +
    'exports.getPositions = function getPositions (version) {\n' +
    '  const size = getSymbolSize(version)\n' +
    '\n' +
    '  return [\n' +
    '    // top-left\n' +
    '    [0, 0],\n' +
    '    // top-right\n' +
    '    [size - FINDER_PATTERN_SIZE, 0],\n' +
    '    // bottom-left\n' +
    '    [0, size - FINDER_PATTERN_SIZE]\n' +
    '  ]\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const ECLevel = require('./error-correction-level')\r\n" +
    '\r\n' +
    'const EC_BLOCKS_TABLE = [\r\n' +
    '// L  M  Q  H\r\n' +
    '  1, 1, 1, 1,\r\n' +
    '  1, 1, 1, 1,\r\n' +
    '  1, 1, 2, 2,\r\n' +
    '  1, 2, 2, 4,\r\n' +
    '  1, 2, 4, 4,\r\n' +
    '  2, 4, 4, 4,\r\n' +
    '  2, 4, 6, 5,\r\n' +
    '  2, 4, 6, 6,\r\n' +
    '  2, 5, 8, 8,\r\n' +
    '  4, 5, 8, 8,\r\n' +
    '  4, 5, 8, 11,\r\n' +
    '  4, 8, 10, 11,\r\n' +
    '  4, 9, 12, 16,\r\n' +
    '  4, 9, 16, 16,\r\n' +
    '  6, 10, 12, 18,\r\n' +
    '  6, 10, 17, 16,\r\n' +
    '  6, 11, 16, 19,\r\n' +
    '  6, 13, 18, 21,\r\n' +
    '  7, 14, 21, 25,\r\n' +
    '  8, 16, 20, 25,\r\n' +
    '  8, 17, 23, 25,\r\n' +
    '  9, 17, 23, 34,\r\n' +
    '  9, 18, 25, 30,\r\n' +
    '  10, 20, 27, 32,\r\n' +
    '  12, 21, 29, 35,\r\n' +
    '  12, 23, 34, 37,\r\n' +
    '  12, 25, 34, 40,\r\n' +
    '  13, 26, 35, 42,\r\n' +
    '  14, 28, 38, 45,\r\n' +
    '  15, 29, 40, 48,\r\n' +
    '  16, 31, 43, 51,\r\n' +
    '  17, 33, 45, 54,\r\n' +
    '  18, 35, 48, 57,\r\n' +
    '  19, 37, 51, 60,\r\n' +
    '  19, 38, 53, 63,\r\n' +
    '  20, 40, 56, 66,\r\n' +
    '  21, 43, 59, 70,\r\n' +
    '  22, 45, 62, 74,\r\n' +
    '  24, 47, 65, 77,\r\n' +
    '  25, 49, 68, 81\r\n' +
    ']\r\n' +
    '\r\n' +
    'const EC_CODEWORDS_TABLE = [\r\n' +
    '// L  M  Q  H\r\n' +
    '  7, 10, 13, 17,\r\n' +
    '  10, 16, 22, 28,\r\n' +
    '  15, 26, 36, 44,\r\n' +
    '  20, 36, 52, 64,\r\n' +
    '  26, 48, 72, 88,\r\n' +
    '  36, 64, 96, 112,\r\n' +
    '  40, 72, 108, 130,\r\n' +
    '  48, 88, 132, 156,\r\n' +
    '  60, 110, 160, 192,\r\n' +
    '  72, 130, 192, 224,\r\n' +
    '  80, 150, 224, 264,\r\n' +
    '  96, 176, 260, 308,\r\n' +
    '  104, 198, 288, 352,\r\n' +
    '  120, 216, 320, 384,\r\n' +
    '  132, 240, 360, 432,\r\n' +
    '  144, 280, 408, 480,\r\n' +
    '  168, 308, 448, 532,\r\n' +
    '  180, 338, 504, 588,\r\n' +
    '  196, 364, 546, 650,\r\n' +
    '  224, 416, 600, 700,\r\n' +
    '  224, 442, 644, 750,\r\n' +
    '  252, 476, 690, 816,\r\n' +
    '  270, 504, 750, 900,\r\n' +
    '  300, 560, 810, 960,\r\n' +
    '  312, 588, 870, 1050,\r\n' +
    '  336, 644, 952, 1110,\r\n' +
    '  360, 700, 1020, 1200,\r\n' +
    '  390, 728, 1050, 1260,\r\n' +
    '  420, 784, 1140, 1350,\r\n' +
    '  450, 812, 1200, 1440,\r\n' +
    '  480, 868, 1290, 1530,\r\n' +
    '  510, 924, 1350, 1620,\r\n' +
    '  540, 980, 1440, 1710,\r\n' +
    '  570, 1036, 1530, 1800,\r\n' +
    '  570, 1064, 1590, 1890,\r\n' +
    '  600, 1120, 1680, 1980,\r\n' +
    '  630, 1204, 1770, 2100,\r\n' +
    '  660, 1260, 1860, 2220,\r\n' +
    '  720, 1316, 1950, 2310,\r\n' +
    '  750, 1372, 2040, 2430\r\n' +
    ']\r\n' +
    '\r\n' +
    '/**\r\n' +
    ' * Returns the number of error correction block that the QR Code should contain\r\n' +
    ' * for the specified version and error correction level.\r\n' +
    ' *\r\n' +
    ' * @param  {Number} version              QR Code version\r\n' +
    ' * @param  {Number} errorCorrectionLevel Error correction level\r\n' +
    ' * @return {Number}                      Number of error correction blocks\r\n' +
    ' */\r\n' +
    'exports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n' +
    '  switch (errorCorrectionLevel) {\r\n' +
    '    case ECLevel.L:\r\n' +
    '      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n' +
    '    case ECLevel.M:\r\n' +
    '      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n' +
    '    case ECLevel.Q:\r\n' +
    '      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n' +
    '    case ECLevel.H:\r\n' +
    '      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n' +
    '    default:\r\n' +
    '      return undefined\r\n' +
    '  }\r\n' +
    '}\r\n' +
    '\r\n' +
    '/**\r\n' +
    ' * Returns the number of error correction codewords to use for the specified\r\n' +
    ' * version and error correction level.\r\n' +
    ' *\r\n' +
    ' * @param  {Number} version              QR Code version\r\n' +
    ' * @param  {Number} errorCorrectionLevel Error correction level\r\n' +
    ' * @return {Number}                      Number of error correction codewords\r\n' +
    ' */\r\n' +
    'exports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n' +
    '  switch (errorCorrectionLevel) {\r\n' +
    '    case ECLevel.L:\r\n' +
    '      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n' +
    '    case ECLevel.M:\r\n' +
    '      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n' +
    '    case ECLevel.Q:\r\n' +
    '      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n' +
    '    case ECLevel.H:\r\n' +
    '      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n' +
    '    default:\r\n' +
    '      return undefined\r\n' +
    '  }\r\n' +
    '}\r\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Data mask pattern reference\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.Patterns = {\n' +
    '  PATTERN000: 0,\n' +
    '  PATTERN001: 1,\n' +
    '  PATTERN010: 2,\n' +
    '  PATTERN011: 3,\n' +
    '  PATTERN100: 4,\n' +
    '  PATTERN101: 5,\n' +
    '  PATTERN110: 6,\n' +
    '  PATTERN111: 7\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Weighted penalty scores for the undesirable features\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'const PenaltyScores = {\n' +
    '  N1: 3,\n' +
    '  N2: 3,\n' +
    '  N3: 40,\n' +
    '  N4: 10\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Check if mask pattern value is valid\n' +
    ' *\n' +
    ' * @param  {Number}  mask    Mask pattern\n' +
    ' * @return {Boolean}         true if valid, false otherwise\n' +
    ' */\n' +
    'exports.isValid = function isValid (mask) {\n' +
    "  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n" +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns mask pattern from a value.\n' +
    ' * If value is not valid, returns undefined\n' +
    ' *\n' +
    ' * @param  {Number|String} value        Mask pattern value\n' +
    ' * @return {Number}                     Valid mask pattern or undefined\n' +
    ' */\n' +
    'exports.from = function from (value) {\n' +
    '  return exports.isValid(value) ? parseInt(value, 10) : undefined\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    '* Find adjacent modules in row/column with the same color\n' +
    '* and assign a penalty value.\n' +
    '*\n' +
    '* Points: N1 + i\n' +
    '* i is the amount by which the number of adjacent modules of the same color exceeds 5\n' +
    '*/\n' +
    'exports.getPenaltyN1 = function getPenaltyN1 (data) {\n' +
    '  const size = data.size\n' +
    '  let points = 0\n' +
    '  let sameCountCol = 0\n' +
    '  let sameCountRow = 0\n' +
    '  let lastCol = null\n' +
    '  let lastRow = null\n' +
    '\n' +
    '  for (let row = 0; row < size; row++) {\n' +
    '    sameCountCol = sameCountRow = 0\n' +
    '    lastCol = lastRow = null\n' +
    '\n' +
    '    for (let col = 0; col < size; col++) {\n' +
    '      let module = data.get(row, col)\n' +
    '      if (module === lastCol) {\n' +
    '        sameCountCol++\n' +
    '      } else {\n' +
    '        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n' +
    '        lastCol = module\n' +
    '        sameCountCol = 1\n' +
    '      }\n' +
    '\n' +
    '      module = data.get(col, row)\n' +
    '      if (module === lastRow) {\n' +
    '        sameCountRow++\n' +
    '      } else {\n' +
    '        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n' +
    '        lastRow = module\n' +
    '        sameCountRow = 1\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n' +
    '    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n' +
    '  }\n' +
    '\n' +
    '  return points\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Find 2x2 blocks with the same color and assign a penalty value\n' +
    ' *\n' +
    ' * Points: N2 * (m - 1) * (n - 1)\n' +
    ' */\n' +
    'exports.getPenaltyN2 = function getPenaltyN2 (data) {\n' +
    '  const size = data.size\n' +
    '  let points = 0\n' +
    '\n' +
    '  for (let row = 0; row < size - 1; row++) {\n' +
    '    for (let col = 0; col < size - 1; col++) {\n' +
    '      const last = data.get(row, col) +\n' +
    '        data.get(row, col + 1) +\n' +
    '        data.get(row + 1, col) +\n' +
    '        data.get(row + 1, col + 1)\n' +
    '\n' +
    '      if (last === 4 || last === 0) points++\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return points * PenaltyScores.N2\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n' +
    ' * preceded or followed by light area 4 modules wide\n' +
    ' *\n' +
    ' * Points: N3 * number of pattern found\n' +
    ' */\n' +
    'exports.getPenaltyN3 = function getPenaltyN3 (data) {\n' +
    '  const size = data.size\n' +
    '  let points = 0\n' +
    '  let bitsCol = 0\n' +
    '  let bitsRow = 0\n' +
    '\n' +
    '  for (let row = 0; row < size; row++) {\n' +
    '    bitsCol = bitsRow = 0\n' +
    '    for (let col = 0; col < size; col++) {\n' +
    '      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n' +
    '      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n' +
    '\n' +
    '      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n' +
    '      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return points * PenaltyScores.N3\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Calculate proportion of dark modules in entire symbol\n' +
    ' *\n' +
    ' * Points: N4 * k\n' +
    ' *\n' +
    ' * k is the rating of the deviation of the proportion of dark modules\n' +
    ' * in the symbol from 50% in steps of 5%\n' +
    ' */\n' +
    'exports.getPenaltyN4 = function getPenaltyN4 (data) {\n' +
    '  let darkCount = 0\n' +
    '  const modulesCount = data.data.length\n' +
    '\n' +
    '  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n' +
    '\n' +
    '  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n' +
    '\n' +
    '  return k * PenaltyScores.N4\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Return mask value at given position\n' +
    ' *\n' +
    ' * @param  {Number} maskPattern Pattern reference value\n' +
    ' * @param  {Number} i           Row\n' +
    ' * @param  {Number} j           Column\n' +
    ' * @return {Boolean}            Mask value\n' +
    ' */\n' +
    'function getMaskAt (maskPattern, i, j) {\n' +
    '  switch (maskPattern) {\n' +
    '    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n' +
    '    case exports.Patterns.PATTERN001: return i % 2 === 0\n' +
    '    case exports.Patterns.PATTERN010: return j % 3 === 0\n' +
    '    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n' +
    '    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n' +
    '    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n' +
    '    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n' +
    '    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n' +
    '\n' +
    "    default: throw new Error('bad maskPattern:' + maskPattern)\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Apply a mask pattern to a BitMatrix\n' +
    ' *\n' +
    ' * @param  {Number}    pattern Pattern reference number\n' +
    ' * @param  {BitMatrix} data    BitMatrix data\n' +
    ' */\n' +
    'exports.applyMask = function applyMask (pattern, data) {\n' +
    '  const size = data.size\n' +
    '\n' +
    '  for (let col = 0; col < size; col++) {\n' +
    '    for (let row = 0; row < size; row++) {\n' +
    '      if (data.isReserved(row, col)) continue\n' +
    '      data.xor(row, col, getMaskAt(pattern, row, col))\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns the best mask pattern for data\n' +
    ' *\n' +
    ' * @param  {BitMatrix} data\n' +
    ' * @return {Number} Mask pattern reference number\n' +
    ' */\n' +
    'exports.getBestMask = function getBestMask (data, setupFormatFunc) {\n' +
    '  const numPatterns = Object.keys(exports.Patterns).length\n' +
    '  let bestPattern = 0\n' +
    '  let lowerPenalty = Infinity\n' +
    '\n' +
    '  for (let p = 0; p < numPatterns; p++) {\n' +
    '    setupFormatFunc(p)\n' +
    '    exports.applyMask(p, data)\n' +
    '\n' +
    '    // Calculate penalty\n' +
    '    const penalty =\n' +
    '      exports.getPenaltyN1(data) +\n' +
    '      exports.getPenaltyN2(data) +\n' +
    '      exports.getPenaltyN3(data) +\n' +
    '      exports.getPenaltyN4(data)\n' +
    '\n' +
    '    // Undo previously applied mask\n' +
    '    exports.applyMask(p, data)\n' +
    '\n' +
    '    if (penalty < lowerPenalty) {\n' +
    '      lowerPenalty = penalty\n' +
    '      bestPattern = p\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return bestPattern\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Polynomial = require('./polynomial')\n" +
    '\n' +
    'function ReedSolomonEncoder (degree) {\n' +
    '  this.genPoly = undefined\n' +
    '  this.degree = degree\n' +
    '\n' +
    '  if (this.degree) this.initialize(this.degree)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Initialize the encoder.\n' +
    ' * The input param should correspond to the number of error correction codewords.\n' +
    ' *\n' +
    ' * @param  {Number} degree\n' +
    ' */\n' +
    'ReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n' +
    '  // create an irreducible generator polynomial\n' +
    '  this.degree = degree\n' +
    '  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Encodes a chunk of data\n' +
    ' *\n' +
    ' * @param  {Uint8Array} data Buffer containing input data\n' +
    ' * @return {Uint8Array}      Buffer containing encoded data\n' +
    ' */\n' +
    'ReedSolomonEncoder.prototype.encode = function encode (data) {\n' +
    '  if (!this.genPoly) {\n' +
    "    throw new Error('Encoder not initialized')\n" +
    '  }\n' +
    '\n' +
    '  // Calculate EC for this data block\n' +
    '  // extends data size to data+genPoly size\n' +
    '  const paddedData = new Uint8Array(data.length + this.degree)\n' +
    '  paddedData.set(data)\n' +
    '\n' +
    '  // The error correction codewords are the remainder after dividing the data codewords\n' +
    '  // by a generator polynomial\n' +
    '  const remainder = Polynomial.mod(paddedData, this.genPoly)\n' +
    '\n' +
    '  // return EC data blocks (last n byte, where n is the degree of genPoly)\n' +
    '  // If coefficients number in remainder are less than genPoly degree,\n' +
    '  // pad with 0s to the left to reach the needed number of coefficients\n' +
    '  const start = this.degree - remainder.length\n' +
    '  if (start > 0) {\n' +
    '    const buff = new Uint8Array(this.degree)\n' +
    '    buff.set(remainder, start)\n' +
    '\n' +
    '    return buff\n' +
    '  }\n' +
    '\n' +
    '  return remainder\n' +
    '}\n' +
    '\n' +
    'module.exports = ReedSolomonEncoder\n'
} [Function: logger]
____9999999____ {
  code: "const Utils = require('./utils')\n" +
    "const ECCode = require('./error-correction-code')\n" +
    "const ECLevel = require('./error-correction-level')\n" +
    "const Mode = require('./mode')\n" +
    "const VersionCheck = require('./version-check')\n" +
    '\n' +
    '// Generator polynomial used to encode version information\n' +
    'const G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\n' +
    'const G18_BCH = Utils.getBCHDigit(G18)\n' +
    '\n' +
    'function getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n' +
    '  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n' +
    '    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n' +
    '      return currentVersion\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return undefined\n' +
    '}\n' +
    '\n' +
    'function getReservedBitsCount (mode, version) {\n' +
    '  // Character count indicator + mode indicator bits\n' +
    '  return Mode.getCharCountIndicator(mode, version) + 4\n' +
    '}\n' +
    '\n' +
    'function getTotalBitsFromDataArray (segments, version) {\n' +
    '  let totalBits = 0\n' +
    '\n' +
    '  segments.forEach(function (data) {\n' +
    '    const reservedBits = getReservedBitsCount(data.mode, version)\n' +
    '    totalBits += reservedBits + data.getBitsLength()\n' +
    '  })\n' +
    '\n' +
    '  return totalBits\n' +
    '}\n' +
    '\n' +
    'function getBestVersionForMixedData (segments, errorCorrectionLevel) {\n' +
    '  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n' +
    '    const length = getTotalBitsFromDataArray(segments, currentVersion)\n' +
    '    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n' +
    '      return currentVersion\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return undefined\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns version number from a value.\n' +
    ' * If value is not a valid version, returns defaultValue\n' +
    ' *\n' +
    ' * @param  {Number|String} value        QR Code version\n' +
    ' * @param  {Number}        defaultValue Fallback value\n' +
    ' * @return {Number}                     QR Code version number\n' +
    ' */\n' +
    'exports.from = function from (value, defaultValue) {\n' +
    '  if (VersionCheck.isValid(value)) {\n' +
    '    return parseInt(value, 10)\n' +
    '  }\n' +
    '\n' +
    '  return defaultValue\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns how much data can be stored with the specified QR code version\n' +
    ' * and error correction level\n' +
    ' *\n' +
    ' * @param  {Number} version              QR Code version (1-40)\n' +
    ' * @param  {Number} errorCorrectionLevel Error correction level\n' +
    ' * @param  {Mode}   mode                 Data mode\n' +
    ' * @return {Number}                      Quantity of storable data\n' +
    ' */\n' +
    'exports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n' +
    '  if (!VersionCheck.isValid(version)) {\n' +
    "    throw new Error('Invalid QR Code version')\n" +
    '  }\n' +
    '\n' +
    '  // Use Byte mode as default\n' +
    "  if (typeof mode === 'undefined') mode = Mode.BYTE\n" +
    '\n' +
    '  // Total codewords for this QR code version (Data + Error correction)\n' +
    '  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n' +
    '\n' +
    '  // Total number of error correction codewords\n' +
    '  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n' +
    '\n' +
    '  // Total number of data codewords\n' +
    '  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n' +
    '\n' +
    '  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n' +
    '\n' +
    '  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n' +
    '\n' +
    '  // Return max number of storable codewords\n' +
    '  switch (mode) {\n' +
    '    case Mode.NUMERIC:\n' +
    '      return Math.floor((usableBits / 10) * 3)\n' +
    '\n' +
    '    case Mode.ALPHANUMERIC:\n' +
    '      return Math.floor((usableBits / 11) * 2)\n' +
    '\n' +
    '    case Mode.KANJI:\n' +
    '      return Math.floor(usableBits / 13)\n' +
    '\n' +
    '    case Mode.BYTE:\n' +
    '    default:\n' +
    '      return Math.floor(usableBits / 8)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns the minimum version needed to contain the amount of data\n' +
    ' *\n' +
    ' * @param  {Segment} data                    Segment of data\n' +
    ' * @param  {Number} [errorCorrectionLevel=H] Error correction level\n' +
    ' * @param  {Mode} mode                       Data mode\n' +
    ' * @return {Number}                          QR Code version\n' +
    ' */\n' +
    'exports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n' +
    '  let seg\n' +
    '\n' +
    '  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n' +
    '\n' +
    '  if (Array.isArray(data)) {\n' +
    '    if (data.length > 1) {\n' +
    '      return getBestVersionForMixedData(data, ecl)\n' +
    '    }\n' +
    '\n' +
    '    if (data.length === 0) {\n' +
    '      return 1\n' +
    '    }\n' +
    '\n' +
    '    seg = data[0]\n' +
    '  } else {\n' +
    '    seg = data\n' +
    '  }\n' +
    '\n' +
    '  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns version information with relative error correction bits\n' +
    ' *\n' +
    ' * The version information is included in QR Code symbols of version 7 or larger.\n' +
    ' * It consists of an 18-bit sequence containing 6 data bits,\n' +
    ' * with 12 error correction bits calculated using the (18, 6) Golay code.\n' +
    ' *\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Number}         Encoded version info bits\n' +
    ' */\n' +
    'exports.getEncodedBits = function getEncodedBits (version) {\n' +
    '  if (!VersionCheck.isValid(version) || version < 7) {\n' +
    "    throw new Error('Invalid QR Code version')\n" +
    '  }\n' +
    '\n' +
    '  let d = version << 12\n' +
    '\n' +
    '  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n' +
    '    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n' +
    '  }\n' +
    '\n' +
    '  return (version << 12) | d\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Utils = require('./utils')\n" +
    '\n' +
    'const G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\n' +
    'const G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\n' +
    'const G15_BCH = Utils.getBCHDigit(G15)\n' +
    '\n' +
    '/**\n' +
    ' * Returns format information with relative error correction bits\n' +
    ' *\n' +
    ' * The format information is a 15-bit sequence containing 5 data bits,\n' +
    ' * with 10 error correction bits calculated using the (15, 5) BCH code.\n' +
    ' *\n' +
    ' * @param  {Number} errorCorrectionLevel Error correction level\n' +
    ' * @param  {Number} mask                 Mask pattern\n' +
    ' * @return {Number}                      Encoded format information bits\n' +
    ' */\n' +
    'exports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n' +
    '  const data = ((errorCorrectionLevel.bit << 3) | mask)\n' +
    '  let d = data << 10\n' +
    '\n' +
    '  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n' +
    '    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n' +
    '  }\n' +
    '\n' +
    '  // xor final data with mask pattern in order to ensure that\n' +
    '  // no combination of Error Correction Level and data mask pattern\n' +
    '  // will result in an all-zero data string\n' +
    '  return ((data << 10) | d) ^ G15_MASK\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const VersionCheck = require('./version-check')\n" +
    "const Regex = require('./regex')\n" +
    '\n' +
    '/**\n' +
    ' * Numeric mode encodes data from the decimal digit set (0 - 9)\n' +
    ' * (byte values 30HEX to 39HEX).\n' +
    ' * Normally, 3 data characters are represented by 10 bits.\n' +
    ' *\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.NUMERIC = {\n' +
    "  id: 'Numeric',\n" +
    '  bit: 1 << 0,\n' +
    '  ccBits: [10, 12, 14]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Alphanumeric mode encodes data from a set of 45 characters,\n' +
    ' * i.e. 10 numeric digits (0 - 9),\n' +
    ' *      26 alphabetic characters (A - Z),\n' +
    ' *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n' +
    ' * Normally, two input characters are represented by 11 bits.\n' +
    ' *\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.ALPHANUMERIC = {\n' +
    "  id: 'Alphanumeric',\n" +
    '  bit: 1 << 1,\n' +
    '  ccBits: [9, 11, 13]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * In byte mode, data is encoded at 8 bits per character.\n' +
    ' *\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.BYTE = {\n' +
    "  id: 'Byte',\n" +
    '  bit: 1 << 2,\n' +
    '  ccBits: [8, 16, 16]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * The Kanji mode efficiently encodes Kanji characters in accordance with\n' +
    ' * the Shift JIS system based on JIS X 0208.\n' +
    ' * The Shift JIS values are shifted from the JIS X 0208 values.\n' +
    ' * JIS X 0208 gives details of the shift coded representation.\n' +
    ' * Each two-byte character value is compacted to a 13-bit binary codeword.\n' +
    ' *\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.KANJI = {\n' +
    "  id: 'Kanji',\n" +
    '  bit: 1 << 3,\n' +
    '  ccBits: [8, 10, 12]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Mixed mode will contain a sequences of data in a combination of any of\n' +
    ' * the modes described above\n' +
    ' *\n' +
    ' * @type {Object}\n' +
    ' */\n' +
    'exports.MIXED = {\n' +
    '  bit: -1\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns the number of bits needed to store the data length\n' +
    ' * according to QR Code specifications.\n' +
    ' *\n' +
    ' * @param  {Mode}   mode    Data mode\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Number}         Number of bits\n' +
    ' */\n' +
    'exports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n' +
    "  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n" +
    '\n' +
    '  if (!VersionCheck.isValid(version)) {\n' +
    "    throw new Error('Invalid version: ' + version)\n" +
    '  }\n' +
    '\n' +
    '  if (version >= 1 && version < 10) return mode.ccBits[0]\n' +
    '  else if (version < 27) return mode.ccBits[1]\n' +
    '  return mode.ccBits[2]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns the most efficient mode to store the specified data\n' +
    ' *\n' +
    ' * @param  {String} dataStr Input data string\n' +
    ' * @return {Mode}           Best mode\n' +
    ' */\n' +
    'exports.getBestModeForData = function getBestModeForData (dataStr) {\n' +
    '  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n' +
    '  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n' +
    '  else if (Regex.testKanji(dataStr)) return exports.KANJI\n' +
    '  else return exports.BYTE\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Return mode name as string\n' +
    ' *\n' +
    ' * @param {Mode} mode Mode object\n' +
    ' * @returns {String}  Mode name\n' +
    ' */\n' +
    'exports.toString = function toString (mode) {\n' +
    '  if (mode && mode.id) return mode.id\n' +
    "  throw new Error('Invalid mode')\n" +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Check if input param is a valid mode object\n' +
    ' *\n' +
    ' * @param   {Mode}    mode Mode object\n' +
    ' * @returns {Boolean} True if valid mode, false otherwise\n' +
    ' */\n' +
    'exports.isValid = function isValid (mode) {\n' +
    '  return mode && mode.bit && mode.ccBits\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Get mode object from its name\n' +
    ' *\n' +
    ' * @param   {String} string Mode name\n' +
    ' * @returns {Mode}          Mode object\n' +
    ' */\n' +
    'function fromString (string) {\n' +
    "  if (typeof string !== 'string') {\n" +
    "    throw new Error('Param is not a string')\n" +
    '  }\n' +
    '\n' +
    '  const lcStr = string.toLowerCase()\n' +
    '\n' +
    '  switch (lcStr) {\n' +
    "    case 'numeric':\n" +
    '      return exports.NUMERIC\n' +
    "    case 'alphanumeric':\n" +
    '      return exports.ALPHANUMERIC\n' +
    "    case 'kanji':\n" +
    '      return exports.KANJI\n' +
    "    case 'byte':\n" +
    '      return exports.BYTE\n' +
    '    default:\n' +
    "      throw new Error('Unknown mode: ' + string)\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns mode from a value.\n' +
    ' * If value is not a valid mode, returns defaultValue\n' +
    ' *\n' +
    ' * @param  {Mode|String} value        Encoding mode\n' +
    ' * @param  {Mode}        defaultValue Fallback value\n' +
    ' * @return {Mode}                     Encoding mode\n' +
    ' */\n' +
    'exports.from = function from (value, defaultValue) {\n' +
    '  if (exports.isValid(value)) {\n' +
    '    return value\n' +
    '  }\n' +
    '\n' +
    '  try {\n' +
    '    return fromString(value)\n' +
    '  } catch (e) {\n' +
    '    return defaultValue\n' +
    '  }\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Mode = require('./mode')\n" +
    "const NumericData = require('./numeric-data')\n" +
    "const AlphanumericData = require('./alphanumeric-data')\n" +
    "const ByteData = require('./byte-data')\n" +
    "const KanjiData = require('./kanji-data')\n" +
    "const Regex = require('./regex')\n" +
    "const Utils = require('./utils')\n" +
    "const dijkstra = require('dijkstrajs')\n" +
    '\n' +
    '/**\n' +
    ' * Returns UTF8 byte length\n' +
    ' *\n' +
    ' * @param  {String} str Input string\n' +
    ' * @return {Number}     Number of byte\n' +
    ' */\n' +
    'function getStringByteLength (str) {\n' +
    '  return unescape(encodeURIComponent(str)).length\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Get a list of segments of the specified mode\n' +
    ' * from a string\n' +
    ' *\n' +
    ' * @param  {Mode}   mode Segment mode\n' +
    ' * @param  {String} str  String to process\n' +
    ' * @return {Array}       Array of object with segments data\n' +
    ' */\n' +
    'function getSegments (regex, mode, str) {\n' +
    '  const segments = []\n' +
    '  let result\n' +
    '\n' +
    '  while ((result = regex.exec(str)) !== null) {\n' +
    '    segments.push({\n' +
    '      data: result[0],\n' +
    '      index: result.index,\n' +
    '      mode: mode,\n' +
    '      length: result[0].length\n' +
    '    })\n' +
    '  }\n' +
    '\n' +
    '  return segments\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Extracts a series of segments with the appropriate\n' +
    ' * modes from a string\n' +
    ' *\n' +
    ' * @param  {String} dataStr Input string\n' +
    ' * @return {Array}          Array of object with segments data\n' +
    ' */\n' +
    'function getSegmentsFromString (dataStr) {\n' +
    '  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n' +
    '  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n' +
    '  let byteSegs\n' +
    '  let kanjiSegs\n' +
    '\n' +
    '  if (Utils.isKanjiModeEnabled()) {\n' +
    '    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n' +
    '    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n' +
    '  } else {\n' +
    '    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n' +
    '    kanjiSegs = []\n' +
    '  }\n' +
    '\n' +
    '  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n' +
    '\n' +
    '  return segs\n' +
    '    .sort(function (s1, s2) {\n' +
    '      return s1.index - s2.index\n' +
    '    })\n' +
    '    .map(function (obj) {\n' +
    '      return {\n' +
    '        data: obj.data,\n' +
    '        mode: obj.mode,\n' +
    '        length: obj.length\n' +
    '      }\n' +
    '    })\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns how many bits are needed to encode a string of\n' +
    ' * specified length with the specified mode\n' +
    ' *\n' +
    ' * @param  {Number} length String length\n' +
    ' * @param  {Mode} mode     Segment mode\n' +
    ' * @return {Number}        Bit length\n' +
    ' */\n' +
    'function getSegmentBitsLength (length, mode) {\n' +
    '  switch (mode) {\n' +
    '    case Mode.NUMERIC:\n' +
    '      return NumericData.getBitsLength(length)\n' +
    '    case Mode.ALPHANUMERIC:\n' +
    '      return AlphanumericData.getBitsLength(length)\n' +
    '    case Mode.KANJI:\n' +
    '      return KanjiData.getBitsLength(length)\n' +
    '    case Mode.BYTE:\n' +
    '      return ByteData.getBitsLength(length)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Merges adjacent segments which have the same mode\n' +
    ' *\n' +
    ' * @param  {Array} segs Array of object with segments data\n' +
    ' * @return {Array}      Array of object with segments data\n' +
    ' */\n' +
    'function mergeSegments (segs) {\n' +
    '  return segs.reduce(function (acc, curr) {\n' +
    '    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n' +
    '    if (prevSeg && prevSeg.mode === curr.mode) {\n' +
    '      acc[acc.length - 1].data += curr.data\n' +
    '      return acc\n' +
    '    }\n' +
    '\n' +
    '    acc.push(curr)\n' +
    '    return acc\n' +
    '  }, [])\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Generates a list of all possible nodes combination which\n' +
    ' * will be used to build a segments graph.\n' +
    ' *\n' +
    ' * Nodes are divided by groups. Each group will contain a list of all the modes\n' +
    ' * in which is possible to encode the given text.\n' +
    ' *\n' +
    " * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n" +
    " * The group for '12345' will contain then 3 objects, one for each\n" +
    ' * possible encoding mode.\n' +
    ' *\n' +
    ' * Each node represents a possible segment.\n' +
    ' *\n' +
    ' * @param  {Array} segs Array of object with segments data\n' +
    ' * @return {Array}      Array of object with segments data\n' +
    ' */\n' +
    'function buildNodes (segs) {\n' +
    '  const nodes = []\n' +
    '  for (let i = 0; i < segs.length; i++) {\n' +
    '    const seg = segs[i]\n' +
    '\n' +
    '    switch (seg.mode) {\n' +
    '      case Mode.NUMERIC:\n' +
    '        nodes.push([seg,\n' +
    '          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n' +
    '          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n' +
    '        ])\n' +
    '        break\n' +
    '      case Mode.ALPHANUMERIC:\n' +
    '        nodes.push([seg,\n' +
    '          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n' +
    '        ])\n' +
    '        break\n' +
    '      case Mode.KANJI:\n' +
    '        nodes.push([seg,\n' +
    '          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n' +
    '        ])\n' +
    '        break\n' +
    '      case Mode.BYTE:\n' +
    '        nodes.push([\n' +
    '          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n' +
    '        ])\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return nodes\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Builds a graph from a list of nodes.\n' +
    ' * All segments in each node group will be connected with all the segments of\n' +
    ' * the next group and so on.\n' +
    ' *\n' +
    ' * At each connection will be assigned a weight depending on the\n' +
    " * segment's byte length.\n" +
    ' *\n' +
    ' * @param  {Array} nodes    Array of object with segments data\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Object}         Graph of all possible segments\n' +
    ' */\n' +
    'function buildGraph (nodes, version) {\n' +
    '  const table = {}\n' +
    '  const graph = { start: {} }\n' +
    "  let prevNodeIds = ['start']\n" +
    '\n' +
    '  for (let i = 0; i < nodes.length; i++) {\n' +
    '    const nodeGroup = nodes[i]\n' +
    '    const currentNodeIds = []\n' +
    '\n' +
    '    for (let j = 0; j < nodeGroup.length; j++) {\n' +
    '      const node = nodeGroup[j]\n' +
    "      const key = '' + i + j\n" +
    '\n' +
    '      currentNodeIds.push(key)\n' +
    '      table[key] = { node: node, lastCount: 0 }\n' +
    '      graph[key] = {}\n' +
    '\n' +
    '      for (let n = 0; n < prevNodeIds.length; n++) {\n' +
    '        const prevNodeId = prevNodeIds[n]\n' +
    '\n' +
    '        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n' +
    '          graph[prevNodeId][key] =\n' +
    '            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n' +
    '            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n' +
    '\n' +
    '          table[prevNodeId].lastCount += node.length\n' +
    '        } else {\n' +
    '          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n' +
    '\n' +
    '          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n' +
    '            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    prevNodeIds = currentNodeIds\n' +
    '  }\n' +
    '\n' +
    '  for (let n = 0; n < prevNodeIds.length; n++) {\n' +
    '    graph[prevNodeIds[n]].end = 0\n' +
    '  }\n' +
    '\n' +
    '  return { map: graph, table: table }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Builds a segment from a specified data and mode.\n' +
    ' * If a mode is not specified, the more suitable will be used.\n' +
    ' *\n' +
    ' * @param  {String} data             Input data\n' +
    ' * @param  {Mode | String} modesHint Data mode\n' +
    ' * @return {Segment}                 Segment\n' +
    ' */\n' +
    'function buildSingleSegment (data, modesHint) {\n' +
    '  let mode\n' +
    '  const bestMode = Mode.getBestModeForData(data)\n' +
    '\n' +
    '  mode = Mode.from(modesHint, bestMode)\n' +
    '\n' +
    '  // Make sure data can be encoded\n' +
    '  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n' +
    `    throw new Error('"' + data + '"' +\n` +
    "      ' cannot be encoded with mode ' + Mode.toString(mode) +\n" +
    "      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n" +
    '  }\n' +
    '\n' +
    '  // Use Mode.BYTE if Kanji support is disabled\n' +
    '  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n' +
    '    mode = Mode.BYTE\n' +
    '  }\n' +
    '\n' +
    '  switch (mode) {\n' +
    '    case Mode.NUMERIC:\n' +
    '      return new NumericData(data)\n' +
    '\n' +
    '    case Mode.ALPHANUMERIC:\n' +
    '      return new AlphanumericData(data)\n' +
    '\n' +
    '    case Mode.KANJI:\n' +
    '      return new KanjiData(data)\n' +
    '\n' +
    '    case Mode.BYTE:\n' +
    '      return new ByteData(data)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Builds a list of segments from an array.\n' +
    " * Array can contain Strings or Objects with segment's info.\n" +
    ' *\n' +
    ' * For each item which is a string, will be generated a segment with the given\n' +
    ' * string and the more appropriate encoding mode.\n' +
    ' *\n' +
    ' * For each item which is an object, will be generated a segment with the given\n' +
    ' * data and mode.\n' +
    ' * Objects must contain at least the property "data".\n' +
    ' * If property "mode" is not present, the more suitable mode will be used.\n' +
    ' *\n' +
    ' * @param  {Array} array Array of objects with segments data\n' +
    ' * @return {Array}       Array of Segments\n' +
    ' */\n' +
    'exports.fromArray = function fromArray (array) {\n' +
    '  return array.reduce(function (acc, seg) {\n' +
    "    if (typeof seg === 'string') {\n" +
    '      acc.push(buildSingleSegment(seg, null))\n' +
    '    } else if (seg.data) {\n' +
    '      acc.push(buildSingleSegment(seg.data, seg.mode))\n' +
    '    }\n' +
    '\n' +
    '    return acc\n' +
    '  }, [])\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Builds an optimized sequence of segments from a string,\n' +
    ' * which will produce the shortest possible bitstream.\n' +
    ' *\n' +
    ' * @param  {String} data    Input string\n' +
    ' * @param  {Number} version QR Code version\n' +
    ' * @return {Array}          Array of segments\n' +
    ' */\n' +
    'exports.fromString = function fromString (data, version) {\n' +
    '  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n' +
    '\n' +
    '  const nodes = buildNodes(segs)\n' +
    '  const graph = buildGraph(nodes, version)\n' +
    "  const path = dijkstra.find_path(graph.map, 'start', 'end')\n" +
    '\n' +
    '  const optimizedSegs = []\n' +
    '  for (let i = 1; i < path.length - 1; i++) {\n' +
    '    optimizedSegs.push(graph.table[path[i]].node)\n' +
    '  }\n' +
    '\n' +
    '  return exports.fromArray(mergeSegments(optimizedSegs))\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Splits a string in various segments with the modes which\n' +
    ' * best represent their content.\n' +
    ' * The produced segments are far from being optimized.\n' +
    ' * The output of this function is only used to estimate a QR Code version\n' +
    ' * which may contain the data.\n' +
    ' *\n' +
    ' * @param  {string} data Input string\n' +
    ' * @return {Array}       Array of segments\n' +
    ' */\n' +
    'exports.rawSplit = function rawSplit (data) {\n' +
    '  return exports.fromArray(\n' +
    '    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n' +
    '  )\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'function hex2rgba (hex) {\n' +
    "  if (typeof hex === 'number') {\n" +
    '    hex = hex.toString()\n' +
    '  }\n' +
    '\n' +
    "  if (typeof hex !== 'string') {\n" +
    "    throw new Error('Color should be defined as hex string')\n" +
    '  }\n' +
    '\n' +
    "  let hexCode = hex.slice().replace('#', '').split('')\n" +
    '  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n' +
    "    throw new Error('Invalid hex color: ' + hex)\n" +
    '  }\n' +
    '\n' +
    '  // Convert from short to long form (fff -> ffffff)\n' +
    '  if (hexCode.length === 3 || hexCode.length === 4) {\n' +
    '    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n' +
    '      return [c, c]\n' +
    '    }))\n' +
    '  }\n' +
    '\n' +
    '  // Add default alpha value\n' +
    "  if (hexCode.length === 6) hexCode.push('F', 'F')\n" +
    '\n' +
    "  const hexValue = parseInt(hexCode.join(''), 16)\n" +
    '\n' +
    '  return {\n' +
    '    r: (hexValue >> 24) & 255,\n' +
    '    g: (hexValue >> 16) & 255,\n' +
    '    b: (hexValue >> 8) & 255,\n' +
    '    a: hexValue & 255,\n' +
    "    hex: '#' + hexCode.slice(0, 6).join('')\n" +
    '  }\n' +
    '}\n' +
    '\n' +
    'exports.getOptions = function getOptions (options) {\n' +
    '  if (!options) options = {}\n' +
    '  if (!options.color) options.color = {}\n' +
    '\n' +
    "  const margin = typeof options.margin === 'undefined' ||\n" +
    '    options.margin === null ||\n' +
    '    options.margin < 0\n' +
    '    ? 4\n' +
    '    : options.margin\n' +
    '\n' +
    '  const width = options.width && options.width >= 21 ? options.width : undefined\n' +
    '  const scale = options.scale || 4\n' +
    '\n' +
    '  return {\n' +
    '    width: width,\n' +
    '    scale: width ? 4 : scale,\n' +
    '    margin: margin,\n' +
    '    color: {\n' +
    "      dark: hex2rgba(options.color.dark || '#000000ff'),\n" +
    "      light: hex2rgba(options.color.light || '#ffffffff')\n" +
    '    },\n' +
    '    type: options.type,\n' +
    '    rendererOpts: options.rendererOpts || {}\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'exports.getScale = function getScale (qrSize, opts) {\n' +
    '  return opts.width && opts.width >= qrSize + opts.margin * 2\n' +
    '    ? opts.width / (qrSize + opts.margin * 2)\n' +
    '    : opts.scale\n' +
    '}\n' +
    '\n' +
    'exports.getImageWidth = function getImageWidth (qrSize, opts) {\n' +
    '  const scale = exports.getScale(qrSize, opts)\n' +
    '  return Math.floor((qrSize + opts.margin * 2) * scale)\n' +
    '}\n' +
    '\n' +
    'exports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n' +
    '  const size = qr.modules.size\n' +
    '  const data = qr.modules.data\n' +
    '  const scale = exports.getScale(size, opts)\n' +
    '  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n' +
    '  const scaledMargin = opts.margin * scale\n' +
    '  const palette = [opts.color.light, opts.color.dark]\n' +
    '\n' +
    '  for (let i = 0; i < symbolSize; i++) {\n' +
    '    for (let j = 0; j < symbolSize; j++) {\n' +
    '      let posDst = (i * symbolSize + j) * 4\n' +
    '      let pxColor = opts.color.light\n' +
    '\n' +
    '      if (i >= scaledMargin && j >= scaledMargin &&\n' +
    '        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n' +
    '        const iSrc = Math.floor((i - scaledMargin) / scale)\n' +
    '        const jSrc = Math.floor((j - scaledMargin) / scale)\n' +
    '        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n' +
    '      }\n' +
    '\n' +
    '      imgData[posDst++] = pxColor.r\n' +
    '      imgData[posDst++] = pxColor.g\n' +
    '      imgData[posDst++] = pxColor.b\n' +
    '      imgData[posDst] = pxColor.a\n' +
    '    }\n' +
    '  }\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/** Detect free variable `global` from Node.js. */\n' +
    "var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n" +
    '\n' +
    'module.exports = freeGlobal;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    "  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    'export default function useConstant(fn) {\n' +
    '    var ref = React.useRef();\n' +
    '    if (!ref.current) {\n' +
    '        ref.current = { v: fn() };\n' +
    '    }\n' +
    '    return ref.current.v;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to match a single whitespace character. */\n' +
    'var reWhitespace = /\\s/;\n' +
    '\n' +
    '/**\n' +
    ' * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n' +
    ' * character of `string`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} string The string to inspect.\n' +
    ' * @returns {number} Returns the index of the last non-whitespace character.\n' +
    ' */\n' +
    'function trimmedEndIndex(string) {\n' +
    '  var index = string.length;\n' +
    '\n' +
    '  while (index-- && reWhitespace.test(string.charAt(index))) {}\n' +
    '  return index;\n' +
    '}\n' +
    '\n' +
    'module.exports = trimmedEndIndex;\n'
} [Function: logger]
____9999999____ {
  code: "import { useLayoutEffect } from 'react';\n" +
    '\n' +
    'var index =  useLayoutEffect ;\n' +
    '\n' +
    'export default index;\n'
} [Function: logger]
____9999999____ {
  code: "var Symbol = require('./_Symbol'),\n" +
    "    getRawTag = require('./_getRawTag'),\n" +
    "    objectToString = require('./_objectToString');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var nullTag = '[object Null]',\n" +
    "    undefinedTag = '[object Undefined]';\n" +
    '\n' +
    '/** Built-in value references. */\n' +
    'var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `getTag` without fallbacks for buggy environments.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to query.\n' +
    ' * @returns {string} Returns the `toStringTag`.\n' +
    ' */\n' +
    'function baseGetTag(value) {\n' +
    '  if (value == null) {\n' +
    '    return value === undefined ? undefinedTag : nullTag;\n' +
    '  }\n' +
    '  return (symToStringTag && symToStringTag in Object(value))\n' +
    '    ? getRawTag(value)\n' +
    '    : objectToString(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseGetTag;\n'
} [Function: logger]
____9999999____ {
  code: "import { computePosition, arrow as arrow$1 } from '@floating-ui/dom';\n" +
    "export * from '@floating-ui/dom';\n" +
    "import * as React from 'react';\n" +
    "import { useLayoutEffect, useEffect } from 'react';\n" +
    "import * as ReactDOM from 'react-dom';\n" +
    '\n' +
    "var index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n" +
    '\n' +
    '// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n' +
    '// functions\n' +
    'function deepEqual(a, b) {\n' +
    '  if (a === b) {\n' +
    '    return true;\n' +
    '  }\n' +
    '\n' +
    '  if (typeof a !== typeof b) {\n' +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    "  if (typeof a === 'function' && a.toString() === b.toString()) {\n" +
    '    return true;\n' +
    '  }\n' +
    '\n' +
    '  let length, i, keys;\n' +
    '\n' +
    "  if (a && b && typeof a == 'object') {\n" +
    '    if (Array.isArray(a)) {\n' +
    '      length = a.length;\n' +
    '      if (length != b.length) return false;\n' +
    '\n' +
    '      for (i = length; i-- !== 0;) {\n' +
    '        if (!deepEqual(a[i], b[i])) {\n' +
    '          return false;\n' +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      return true;\n' +
    '    }\n' +
    '\n' +
    '    keys = Object.keys(a);\n' +
    '    length = keys.length;\n' +
    '\n' +
    '    if (length !== Object.keys(b).length) {\n' +
    '      return false;\n' +
    '    }\n' +
    '\n' +
    '    for (i = length; i-- !== 0;) {\n' +
    '      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n' +
    '        return false;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    for (i = length; i-- !== 0;) {\n' +
    '      const key = keys[i];\n' +
    '\n' +
    "      if (key === '_owner' && a.$$typeof) {\n" +
    '        continue;\n' +
    '      }\n' +
    '\n' +
    '      if (!deepEqual(a[key], b[key])) {\n' +
    '        return false;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return true;\n' +
    '  }\n' +
    '\n' +
    '  return a !== a && b !== b;\n' +
    '}\n' +
    '\n' +
    'function useLatestRef(value) {\n' +
    '  const ref = React.useRef(value);\n' +
    '  index(() => {\n' +
    '    ref.current = value;\n' +
    '  });\n' +
    '  return ref;\n' +
    '}\n' +
    '\n' +
    'function useFloating(_temp) {\n' +
    '  let {\n' +
    '    middleware,\n' +
    "    placement = 'bottom',\n" +
    "    strategy = 'absolute',\n" +
    '    whileElementsMounted\n' +
    '  } = _temp === void 0 ? {} : _temp;\n' +
    '  const reference = React.useRef(null);\n' +
    '  const floating = React.useRef(null);\n' +
    '  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n' +
    '  const cleanupRef = React.useRef(null);\n' +
    '  const [data, setData] = React.useState({\n' +
    '    // Setting these to `null` will allow the consumer to determine if\n' +
    '    // `computePosition()` has run yet\n' +
    '    x: null,\n' +
    '    y: null,\n' +
    '    strategy,\n' +
    '    placement,\n' +
    '    middlewareData: {}\n' +
    '  });\n' +
    '  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n' +
    '\n' +
    '  if (!deepEqual(latestMiddleware == null ? void 0 : latestMiddleware.map(_ref => {\n' +
    '    let {\n' +
    '      options\n' +
    '    } = _ref;\n' +
    '    return options;\n' +
    '  }), middleware == null ? void 0 : middleware.map(_ref2 => {\n' +
    '    let {\n' +
    '      options\n' +
    '    } = _ref2;\n' +
    '    return options;\n' +
    '  }))) {\n' +
    '    setLatestMiddleware(middleware);\n' +
    '  }\n' +
    '\n' +
    '  const update = React.useCallback(() => {\n' +
    '    if (!reference.current || !floating.current) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    computePosition(reference.current, floating.current, {\n' +
    '      middleware: latestMiddleware,\n' +
    '      placement,\n' +
    '      strategy\n' +
    '    }).then(data => {\n' +
    '      if (isMountedRef.current) {\n' +
    '        ReactDOM.flushSync(() => {\n' +
    '          setData(data);\n' +
    '        });\n' +
    '      }\n' +
    '    });\n' +
    '  }, [latestMiddleware, placement, strategy]);\n' +
    '  index(() => {\n' +
    '    // Skip first update\n' +
    '    if (isMountedRef.current) {\n' +
    '      update();\n' +
    '    }\n' +
    '  }, [update]);\n' +
    '  const isMountedRef = React.useRef(false);\n' +
    '  index(() => {\n' +
    '    isMountedRef.current = true;\n' +
    '    return () => {\n' +
    '      isMountedRef.current = false;\n' +
    '    };\n' +
    '  }, []);\n' +
    '  const runElementMountCallback = React.useCallback(() => {\n' +
    "    if (typeof cleanupRef.current === 'function') {\n" +
    '      cleanupRef.current();\n' +
    '      cleanupRef.current = null;\n' +
    '    }\n' +
    '\n' +
    '    if (reference.current && floating.current) {\n' +
    '      if (whileElementsMountedRef.current) {\n' +
    '        const cleanupFn = whileElementsMountedRef.current(reference.current, floating.current, update);\n' +
    '        cleanupRef.current = cleanupFn;\n' +
    '      } else {\n' +
    '        update();\n' +
    '      }\n' +
    '    }\n' +
    '  }, [update, whileElementsMountedRef]);\n' +
    '  const setReference = React.useCallback(node => {\n' +
    '    reference.current = node;\n' +
    '    runElementMountCallback();\n' +
    '  }, [runElementMountCallback]);\n' +
    '  const setFloating = React.useCallback(node => {\n' +
    '    floating.current = node;\n' +
    '    runElementMountCallback();\n' +
    '  }, [runElementMountCallback]);\n' +
    '  const refs = React.useMemo(() => ({\n' +
    '    reference,\n' +
    '    floating\n' +
    '  }), []);\n' +
    '  return React.useMemo(() => ({ ...data,\n' +
    '    update,\n' +
    '    refs,\n' +
    '    reference: setReference,\n' +
    '    floating: setFloating\n' +
    '  }), [data, update, refs, setReference, setFloating]);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Positions an inner element of the floating element such that it is centered\n' +
    ' * to the reference element.\n' +
    ' * This wraps the core `arrow` middleware to allow React refs as the element.\n' +
    ' * @see https://floating-ui.com/docs/arrow\n' +
    ' */\n' +
    '\n' +
    'const arrow = options => {\n' +
    '  const {\n' +
    '    element,\n' +
    '    padding\n' +
    '  } = options;\n' +
    '\n' +
    '  function isRef(value) {\n' +
    "    return Object.prototype.hasOwnProperty.call(value, 'current');\n" +
    '  }\n' +
    '\n' +
    '  return {\n' +
    "    name: 'arrow',\n" +
    '    options,\n' +
    '\n' +
    '    fn(args) {\n' +
    '      if (isRef(element)) {\n' +
    '        if (element.current != null) {\n' +
    '          return arrow$1({\n' +
    '            element: element.current,\n' +
    '            padding\n' +
    '          }).fn(args);\n' +
    '        }\n' +
    '\n' +
    '        return {};\n' +
    '      } else if (element) {\n' +
    '        return arrow$1({\n' +
    '          element,\n' +
    '          padding\n' +
    '        }).fn(args);\n' +
    '      }\n' +
    '\n' +
    '      return {};\n' +
    '    }\n' +
    '\n' +
    '  };\n' +
    '};\n' +
    '\n' +
    'export { arrow, useFloating };\n'
} [Function: logger]
____9999999____ {
  code: 'import $jbnEx$babelruntimehelpersesmextends from "@babel/runtime/helpers/esm/extends";\n' +
    'import {forwardRef as $jbnEx$forwardRef, createElement as $jbnEx$createElement} from "react";\n' +
    'import {Primitive as $jbnEx$Primitive} from "@radix-ui/react-primitive";\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '/* -------------------------------------------------------------------------------------------------\n' +
    ' * Arrow\n' +
    " * -----------------------------------------------------------------------------------------------*/ const $7e8f5cd07187803e$var$NAME = 'Arrow';\n" +
    'const $7e8f5cd07187803e$export$21b07c8f274aebd5 = /*#__PURE__*/ $jbnEx$forwardRef((props, forwardedRef)=>{\n' +
    '    const { children: children , width: width = 10 , height: height = 5 , ...arrowProps } = props;\n' +
    '    return /*#__PURE__*/ $jbnEx$createElement($jbnEx$Primitive.svg, $jbnEx$babelruntimehelpersesmextends({}, arrowProps, {\n' +
    '        ref: forwardedRef,\n' +
    '        width: width,\n' +
    '        height: height,\n' +
    '        viewBox: "0 0 30 10",\n' +
    '        preserveAspectRatio: "none"\n' +
    '    }), props.asChild ? children : /*#__PURE__*/ $jbnEx$createElement("polygon", {\n' +
    '        points: "0,0 30,0 15,10"\n' +
    '    }));\n' +
    '});\n' +
    '/*#__PURE__*/ Object.assign($7e8f5cd07187803e$export$21b07c8f274aebd5, {\n' +
    '    displayName: $7e8f5cd07187803e$var$NAME\n' +
    '});\n' +
    '/* -----------------------------------------------------------------------------------------------*/ const $7e8f5cd07187803e$export$be92b6f5f03c0fe9 = $7e8f5cd07187803e$export$21b07c8f274aebd5;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$7e8f5cd07187803e$export$21b07c8f274aebd5 as Arrow, $7e8f5cd07187803e$export$be92b6f5f03c0fe9 as Root};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import {useEffect as $hPSQ5$useEffect} from "react";\n' +
    'import {useCallbackRef as $hPSQ5$useCallbackRef} from "@radix-ui/react-use-callback-ref";\n' +
    '\n' +
    '\n' +
    '\n' +
    '/**\n' +
    ' * Listens for when the escape key is down\n' +
    ' */ function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {\n' +
    '    const onEscapeKeyDown = $hPSQ5$useCallbackRef(onEscapeKeyDownProp);\n' +
    '    $hPSQ5$useEffect(()=>{\n' +
    '        const handleKeyDown = (event)=>{\n' +
    "            if (event.key === 'Escape') onEscapeKeyDown(event);\n" +
    '        };\n' +
    "        document.addEventListener('keydown', handleKeyDown);\n" +
    "        return ()=>document.removeEventListener('keydown', handleKeyDown)\n" +
    '        ;\n' +
    '    }, [\n' +
    '        onEscapeKeyDown\n' +
    '    ]);\n' +
    '}\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    'export {$addc16e1bbe58fd0$export$3a72a57244d6e765 as useEscapeKeydown};\n' +
    '//# sourceMappingURL=index.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    "import * as React from 'react';\n" +
    "import { RemoveScroll } from './UI';\n" +
    "import SideCar from './sidecar';\n" +
    'var ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\n' +
    'ReactRemoveScroll.classNames = RemoveScroll.classNames;\n' +
    'export default ReactRemoveScroll;\n'
} [Function: logger]
____9999999____ {
  code: 'export * from "./fromUtf8";\n' +
    'export * from "./toUint8Array";\n' +
    'export * from "./toUtf8";\n'
} [Function: logger]
____9999999____ {
  code: 'var nextHandle = 1;\n' +
    'var resolved;\n' +
    'var activeHandles = {};\n' +
    'function findAndClearHandle(handle) {\n' +
    '    if (handle in activeHandles) {\n' +
    '        delete activeHandles[handle];\n' +
    '        return true;\n' +
    '    }\n' +
    '    return false;\n' +
    '}\n' +
    'export var Immediate = {\n' +
    '    setImmediate: function (cb) {\n' +
    '        var handle = nextHandle++;\n' +
    '        activeHandles[handle] = true;\n' +
    '        if (!resolved) {\n' +
    '            resolved = Promise.resolve();\n' +
    '        }\n' +
    '        resolved.then(function () { return findAndClearHandle(handle) && cb(); });\n' +
    '        return handle;\n' +
    '    },\n' +
    '    clearImmediate: function (handle) {\n' +
    '        findAndClearHandle(handle);\n' +
    '    },\n' +
    '};\n' +
    'export var TestTools = {\n' +
    '    pending: function () {\n' +
    '        return Object.keys(activeHandles).length;\n' +
    '    }\n' +
    '};\n' +
    '//# sourceMappingURL=Immediate.js.map'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './utils.js';\n" +
    "import bind from './helpers/bind.js';\n" +
    "import Axios from './core/Axios.js';\n" +
    "import mergeConfig from './core/mergeConfig.js';\n" +
    "import defaults from './defaults/index.js';\n" +
    "import formDataToJSON from './helpers/formDataToJSON.js';\n" +
    "import CanceledError from './cancel/CanceledError.js';\n" +
    "import CancelToken from './cancel/CancelToken.js';\n" +
    "import isCancel from './cancel/isCancel.js';\n" +
    "import {VERSION} from './env/data.js';\n" +
    "import toFormData from './helpers/toFormData.js';\n" +
    "import AxiosError from './core/AxiosError.js';\n" +
    "import spread from './helpers/spread.js';\n" +
    "import isAxiosError from './helpers/isAxiosError.js';\n" +
    'import AxiosHeaders from "./core/AxiosHeaders.js";\n' +
    "import adapters from './adapters/adapters.js';\n" +
    "import HttpStatusCode from './helpers/HttpStatusCode.js';\n" +
    '\n' +
    '/**\n' +
    ' * Create an instance of Axios\n' +
    ' *\n' +
    ' * @param {Object} defaultConfig The default config for the instance\n' +
    ' *\n' +
    ' * @returns {Axios} A new instance of Axios\n' +
    ' */\n' +
    'function createInstance(defaultConfig) {\n' +
    '  const context = new Axios(defaultConfig);\n' +
    '  const instance = bind(Axios.prototype.request, context);\n' +
    '\n' +
    '  // Copy axios.prototype to instance\n' +
    '  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n' +
    '\n' +
    '  // Copy context to instance\n' +
    '  utils.extend(instance, context, null, {allOwnKeys: true});\n' +
    '\n' +
    '  // Factory for creating new instances\n' +
    '  instance.create = function create(instanceConfig) {\n' +
    '    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n' +
    '  };\n' +
    '\n' +
    '  return instance;\n' +
    '}\n' +
    '\n' +
    '// Create the default instance to be exported\n' +
    'const axios = createInstance(defaults);\n' +
    '\n' +
    '// Expose Axios class to allow class inheritance\n' +
    'axios.Axios = Axios;\n' +
    '\n' +
    '// Expose Cancel & CancelToken\n' +
    'axios.CanceledError = CanceledError;\n' +
    'axios.CancelToken = CancelToken;\n' +
    'axios.isCancel = isCancel;\n' +
    'axios.VERSION = VERSION;\n' +
    'axios.toFormData = toFormData;\n' +
    '\n' +
    '// Expose AxiosError class\n' +
    'axios.AxiosError = AxiosError;\n' +
    '\n' +
    '// alias for CanceledError for backward compatibility\n' +
    'axios.Cancel = axios.CanceledError;\n' +
    '\n' +
    '// Expose all/spread\n' +
    'axios.all = function all(promises) {\n' +
    '  return Promise.all(promises);\n' +
    '};\n' +
    '\n' +
    'axios.spread = spread;\n' +
    '\n' +
    '// Expose isAxiosError\n' +
    'axios.isAxiosError = isAxiosError;\n' +
    '\n' +
    '// Expose mergeConfig\n' +
    'axios.mergeConfig = mergeConfig;\n' +
    '\n' +
    'axios.AxiosHeaders = AxiosHeaders;\n' +
    '\n' +
    'axios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n' +
    '\n' +
    'axios.getAdapter = adapters.getAdapter;\n' +
    '\n' +
    'axios.HttpStatusCode = HttpStatusCode;\n' +
    '\n' +
    'axios.default = axios;\n' +
    '\n' +
    '// this module should only have a default export\n' +
    'export default axios\n'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '/** @class */\n' +
    'var AuthenticationDetails = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new AuthenticationDetails object\n' +
    '   * @param {object=} data Creation options.\n' +
    '   * @param {string} data.Username User being authenticated.\n' +
    '   * @param {string} data.Password Plain-text password to authenticate with.\n' +
    '   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n' +
    '   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\n' +
    '   */\n' +
    '  function AuthenticationDetails(data) {\n' +
    '    var _ref = data || {},\n' +
    '      ValidationData = _ref.ValidationData,\n' +
    '      Username = _ref.Username,\n' +
    '      Password = _ref.Password,\n' +
    '      AuthParameters = _ref.AuthParameters,\n' +
    '      ClientMetadata = _ref.ClientMetadata;\n' +
    '    this.validationData = ValidationData || {};\n' +
    '    this.authParameters = AuthParameters || {};\n' +
    '    this.clientMetadata = ClientMetadata || {};\n' +
    '    this.username = Username;\n' +
    '    this.password = Password;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's username\n" +
    '   */\n' +
    '  var _proto = AuthenticationDetails.prototype;\n' +
    '  _proto.getUsername = function getUsername() {\n' +
    '    return this.username;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's password\n" +
    '   */;\n' +
    '  _proto.getPassword = function getPassword() {\n' +
    '    return this.password;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {Array} the record's validationData\n" +
    '   */;\n' +
    '  _proto.getValidationData = function getValidationData() {\n' +
    '    return this.validationData;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {Array} the record's authParameters\n" +
    '   */;\n' +
    '  _proto.getAuthParameters = function getAuthParameters() {\n' +
    '    return this.authParameters;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {ClientMetadata} the clientMetadata for a Lambda trigger\n' +
    '   */;\n' +
    '  _proto.getClientMetadata = function getClientMetadata() {\n' +
    '    return this.clientMetadata;\n' +
    '  };\n' +
    '  return AuthenticationDetails;\n' +
    '}();\n' +
    'export { AuthenticationDetails as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import { Buffer } from 'buffer';\n" +
    "import WordArray from './utils/WordArray';\n" +
    "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    '\n' +
    '/**\n' +
    ' * Returns a Buffer with a sequence of random nBytes\n' +
    ' *\n' +
    ' * @param {number} nBytes\n' +
    ' * @returns {Buffer} fixed-length sequence of random bytes\n' +
    ' */\n' +
    '\n' +
    'function randomBytes(nBytes) {\n' +
    "  return Buffer.from(new WordArray().random(nBytes).toString(), 'hex');\n" +
    '}\n' +
    "import BigInteger from './BigInteger';\n" +
    '\n' +
    '/**\n' +
    ' * Tests if a hex string has it most significant bit set (case-insensitive regex)\n' +
    ' */\n' +
    'var HEX_MSB_REGEX = /^[89a-f]/i;\n' +
    "var initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n" +
    "var newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n" +
    '\n' +
    '/** @class */\n' +
    'var AuthenticationHelper = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new AuthenticationHelper object\n' +
    '   * @param {string} PoolName Cognito user pool name.\n' +
    '   */\n' +
    '  function AuthenticationHelper(PoolName) {\n' +
    '    this.N = new BigInteger(initN, 16);\n' +
    "    this.g = new BigInteger('2', 16);\n" +
    '    this.k = new BigInteger(this.hexHash("" + this.padHex(this.N) + this.padHex(this.g)), 16);\n' +
    '    this.smallAValue = this.generateRandomSmallA();\n' +
    '    this.getLargeAValue(function () {});\n' +
    "    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\n" +
    '    this.poolName = PoolName;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {BigInteger} small A, a random number\n' +
    '   */\n' +
    '  var _proto = AuthenticationHelper.prototype;\n' +
    '  _proto.getSmallAValue = function getSmallAValue() {\n' +
    '    return this.smallAValue;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.getLargeAValue = function getLargeAValue(callback) {\n' +
    '    var _this = this;\n' +
    '    if (this.largeAValue) {\n' +
    '      callback(null, this.largeAValue);\n' +
    '    } else {\n' +
    '      this.calculateA(this.smallAValue, function (err, largeAValue) {\n' +
    '        if (err) {\n' +
    '          callback(err, null);\n' +
    '        }\n' +
    '        _this.largeAValue = largeAValue;\n' +
    '        callback(null, _this.largeAValue);\n' +
    '      });\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * helper function to generate a random big integer\n' +
    '   * @returns {BigInteger} a random value.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.generateRandomSmallA = function generateRandomSmallA() {\n' +
    '    // This will be interpreted as a postive 128-bit integer\n' +
    "    var hexRandom = randomBytes(128).toString('hex');\n" +
    '    var randomBigInt = new BigInteger(hexRandom, 16);\n' +
    '\n' +
    '    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n' +
    '\n' +
    '    return randomBigInt;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * helper function to generate a random string\n' +
    '   * @returns {string} a random value.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.generateRandomString = function generateRandomString() {\n' +
    "    return randomBytes(40).toString('base64');\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} Generated random value included in password hash.\n' +
    '   */;\n' +
    '  _proto.getRandomPassword = function getRandomPassword() {\n' +
    '    return this.randomPassword;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} Generated random value included in devices hash.\n' +
    '   */;\n' +
    '  _proto.getSaltDevices = function getSaltDevices() {\n' +
    '    return this.SaltToHashDevices;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} Value used to verify devices.\n' +
    '   */;\n' +
    '  _proto.getVerifierDevices = function getVerifierDevices() {\n' +
    '    return this.verifierDevices;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Generate salts and compute verifier.\n' +
    '   * @param {string} deviceGroupKey Devices to generate verifier for.\n' +
    '   * @param {string} username User to generate verifier for.\n' +
    '   * @param {nodeCallback<null>} callback Called with (err, null)\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n' +
    '    var _this2 = this;\n' +
    '    this.randomPassword = this.generateRandomString();\n' +
    '    var combinedString = "" + deviceGroupKey + username + ":" + this.randomPassword;\n' +
    '    var hashedString = this.hash(combinedString);\n' +
    "    var hexRandom = randomBytes(16).toString('hex');\n" +
    '\n' +
    '    // The random hex will be unambiguously represented as a postive integer\n' +
    '    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n' +
    '    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n' +
    '      if (err) {\n' +
    '        callback(err, null);\n' +
    '      }\n' +
    '      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n' +
    '      callback(null, null);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * Calculate the client's public value A = g^a%N\n" +
    '   * with the generated random number a\n' +
    '   * @param {BigInteger} a Randomly generated small A.\n' +
    '   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n' +
    '   * @returns {void}\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.calculateA = function calculateA(a, callback) {\n' +
    '    var _this3 = this;\n' +
    '    this.g.modPow(a, this.N, function (err, A) {\n' +
    '      if (err) {\n' +
    '        callback(err, null);\n' +
    '      }\n' +
    '      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\n' +
    "        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n" +
    '      }\n' +
    '      callback(null, A);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * Calculate the client's value U which is the hash of A and B\n" +
    '   * @param {BigInteger} A Large A value.\n' +
    '   * @param {BigInteger} B Server B value.\n' +
    '   * @returns {BigInteger} Computed U value.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.calculateU = function calculateU(A, B) {\n' +
    '    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n' +
    '    var finalU = new BigInteger(this.UHexHash, 16);\n' +
    '    return finalU;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Calculate a hash from a bitArray\n' +
    '   * @param {Buffer} buf Value to hash.\n' +
    '   * @returns {String} Hex-encoded hash.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.hash = function hash(buf) {\n' +
    '    var awsCryptoHash = new Sha256();\n' +
    '    awsCryptoHash.update(buf);\n' +
    '    var resultFromAWSCrypto = awsCryptoHash.digestSync();\n' +
    "    var hashHex = Buffer.from(resultFromAWSCrypto).toString('hex');\n" +
    "    return new Array(64 - hashHex.length).join('0') + hashHex;\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Calculate a hash from a hex string\n' +
    '   * @param {String} hexStr Value to hash.\n' +
    '   * @returns {String} Hex-encoded hash.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.hexHash = function hexHash(hexStr) {\n' +
    "    return this.hash(Buffer.from(hexStr, 'hex'));\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Standard hkdf algorithm\n' +
    '   * @param {Buffer} ikm Input key material.\n' +
    '   * @param {Buffer} salt Salt value.\n' +
    '   * @returns {Buffer} Strong key material.\n' +
    '   * @private\n' +
    '   */;\n' +
    '  _proto.computehkdf = function computehkdf(ikm, salt) {\n' +
    "    var infoBitsBuffer = Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]);\n" +
    '    var awsCryptoHash = new Sha256(salt);\n' +
    '    awsCryptoHash.update(ikm);\n' +
    '    var resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n' +
    '    var awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n' +
    '    awsCryptoHashHmac.update(infoBitsBuffer);\n' +
    '    var resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n' +
    '    var hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n' +
    '    var currentHex = hashHexFromAWSCrypto.slice(0, 16);\n' +
    '    return currentHex;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Calculates the final hkdf based on computed S value, and computed U value and the key\n' +
    '   * @param {String} username Username.\n' +
    '   * @param {String} password Password.\n' +
    '   * @param {BigInteger} serverBValue Server B value.\n' +
    '   * @param {BigInteger} salt Generated salt.\n' +
    '   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n' +
    '    var _this4 = this;\n' +
    '    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n' +
    "      throw new Error('B cannot be zero.');\n" +
    '    }\n' +
    '    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n' +
    '    if (this.UValue.equals(BigInteger.ZERO)) {\n' +
    "      throw new Error('U cannot be zero.');\n" +
    '    }\n' +
    '    var usernamePassword = "" + this.poolName + username + ":" + password;\n' +
    '    var usernamePasswordHash = this.hash(usernamePassword);\n' +
    '    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n' +
    '    this.calculateS(xValue, serverBValue, function (err, sValue) {\n' +
    '      if (err) {\n' +
    '        callback(err, null);\n' +
    '      }\n' +
    "      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue), 'hex'));\n" +
    '      callback(null, hkdf);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Calculates the S value used in getPasswordAuthenticationKey\n' +
    '   * @param {BigInteger} xValue Salted password hash value.\n' +
    '   * @param {BigInteger} serverBValue Server B value.\n' +
    '   * @param {nodeCallback<string>} callback Called on success or error.\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\n' +
    '    var _this5 = this;\n' +
    '    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n' +
    '      if (err) {\n' +
    '        callback(err, null);\n' +
    '      }\n' +
    '      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n' +
    '      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n' +
    '        if (err2) {\n' +
    '          callback(err2, null);\n' +
    '        }\n' +
    '        callback(null, result.mod(_this5.N));\n' +
    '      });\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Return constant newPasswordRequiredChallengeUserAttributeP'... 2986 more characters
} [Function: logger]
____9999999____ {
  code: 'function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n' +
    'function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n' +
    '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import CognitoJwtToken from './CognitoJwtToken';\n" +
    '\n' +
    '/** @class */\n' +
    'var CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\n' +
    '  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\n' +
    '  /**\n' +
    '   * Constructs a new CognitoAccessToken object\n' +
    '   * @param {string=} AccessToken The JWT access token.\n' +
    '   */\n' +
    '  function CognitoAccessToken(_temp) {\n' +
    '    var _ref = _temp === void 0 ? {} : _temp,\n' +
    '      AccessToken = _ref.AccessToken;\n' +
    "    return _CognitoJwtToken.call(this, AccessToken || '') || this;\n" +
    '  }\n' +
    '  return CognitoAccessToken;\n' +
    '}(CognitoJwtToken);\n' +
    'export { CognitoAccessToken as default };'
} [Function: logger]
____9999999____ {
  code: 'function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n' +
    'function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n' +
    '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import CognitoJwtToken from './CognitoJwtToken';\n" +
    '\n' +
    '/** @class */\n' +
    'var CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\n' +
    '  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\n' +
    '  /**\n' +
    '   * Constructs a new CognitoIdToken object\n' +
    '   * @param {string=} IdToken The JWT Id token\n' +
    '   */\n' +
    '  function CognitoIdToken(_temp) {\n' +
    '    var _ref = _temp === void 0 ? {} : _temp,\n' +
    '      IdToken = _ref.IdToken;\n' +
    "    return _CognitoJwtToken.call(this, IdToken || '') || this;\n" +
    '  }\n' +
    '  return CognitoIdToken;\n' +
    '}(CognitoJwtToken);\n' +
    'export { CognitoIdToken as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '/** @class */\n' +
    'var CognitoRefreshToken = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoRefreshToken object\n' +
    '   * @param {string=} RefreshToken The JWT refresh token.\n' +
    '   */\n' +
    '  function CognitoRefreshToken(_temp) {\n' +
    '    var _ref = _temp === void 0 ? {} : _temp,\n' +
    '      RefreshToken = _ref.RefreshToken;\n' +
    '    // Assign object\n' +
    "    this.token = RefreshToken || '';\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's token.\n" +
    '   */\n' +
    '  var _proto = CognitoRefreshToken.prototype;\n' +
    '  _proto.getToken = function getToken() {\n' +
    '    return this.token;\n' +
    '  };\n' +
    '  return CognitoRefreshToken;\n' +
    '}();\n' +
    'export { CognitoRefreshToken as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import { Buffer } from 'buffer';\n" +
    "import { Sha256 } from '@aws-crypto/sha256-js';\n" +
    "import { Platform } from './Platform';\n" +
    "import BigInteger from './BigInteger';\n" +
    "import AuthenticationHelper from './AuthenticationHelper';\n" +
    "import CognitoAccessToken from './CognitoAccessToken';\n" +
    "import CognitoIdToken from './CognitoIdToken';\n" +
    "import CognitoRefreshToken from './CognitoRefreshToken';\n" +
    "import CognitoUserSession from './CognitoUserSession';\n" +
    "import DateHelper from './DateHelper';\n" +
    "import CognitoUserAttribute from './CognitoUserAttribute';\n" +
    "import StorageHelper from './StorageHelper';\n" +
    '\n' +
    '/**\n' +
    ' * @callback nodeCallback\n' +
    ' * @template T result\n' +
    ' * @param {*} err The operation failure reason, or null.\n' +
    ' * @param {T} result The operation result.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback onFailure\n' +
    ' * @param {*} err Failure reason.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback onSuccess\n' +
    ' * @template T result\n' +
    ' * @param {T} result The operation result.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback mfaRequired\n' +
    ' * @param {*} details MFA challenge details.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback customChallenge\n' +
    ' * @param {*} details Custom challenge details.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback inputVerificationCode\n' +
    ' * @param {*} data Server response.\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @callback authSuccess\n' +
    ' * @param {CognitoUserSession} session The new session.\n' +
    ' * @param {bool=} userConfirmationNecessary User must be confirmed.\n' +
    ' */\n' +
    '\n' +
    "var isNavigatorAvailable = typeof navigator !== 'undefined';\n" +
    "var userAgent = isNavigatorAvailable ? Platform.isReactNative ? 'react-native' : navigator.userAgent : 'nodejs';\n" +
    '\n' +
    '/** @class */\n' +
    'var CognitoUser = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoUser object\n' +
    '   * @param {object} data Creation options\n' +
    "   * @param {string} data.Username The user's username.\n" +
    '   * @param {CognitoUserPool} data.Pool Pool containing the user.\n' +
    '   * @param {object} data.Storage Optional storage object.\n' +
    '   */\n' +
    '  function CognitoUser(data) {\n' +
    '    if (data == null || data.Username == null || data.Pool == null) {\n' +
    "      throw new Error('Username and Pool information are required.');\n" +
    '    }\n' +
    "    this.username = data.Username || '';\n" +
    '    this.pool = data.Pool;\n' +
    '    this.Session = null;\n' +
    '    this.client = data.Pool.client;\n' +
    '    this.signInUserSession = null;\n' +
    "    this.authenticationFlowType = 'USER_SRP_AUTH';\n" +
    '    this.storage = data.Storage || new StorageHelper().getStorage();\n' +
    '    this.keyPrefix = "CognitoIdentityServiceProvider." + this.pool.getClientId();\n' +
    '    this.userDataKey = this.keyPrefix + "." + this.username + ".userData";\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Sets the session for this user\n' +
    '   * @param {CognitoUserSession} signInUserSession the session\n' +
    '   * @returns {void}\n' +
    '   */\n' +
    '  var _proto = CognitoUser.prototype;\n' +
    '  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n' +
    '    this.clearCachedUserData();\n' +
    '    this.signInUserSession = signInUserSession;\n' +
    '    this.cacheTokens();\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {CognitoUserSession} the current session for this user\n' +
    '   */;\n' +
    '  _proto.getSignInUserSession = function getSignInUserSession() {\n' +
    '    return this.signInUserSession;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the user's username\n" +
    '   */;\n' +
    '  _proto.getUsername = function getUsername() {\n' +
    '    return this.username;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {String} the authentication flow type\n' +
    '   */;\n' +
    '  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\n' +
    '    return this.authenticationFlowType;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * sets authentication flow type\n' +
    '   * @param {string} authenticationFlowType New value.\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n' +
    '    this.authenticationFlowType = authenticationFlowType;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used for authenticating the user through the custom authentication flow.\n' +
    '   * @param {AuthenticationDetails} authDetails Contains the authentication data\n' +
    '   * @param {object} callback Result callback map.\n' +
    '   * @param {onFailure} callback.onFailure Called on any error.\n' +
    '   * @param {customChallenge} callback.customChallenge Custom challenge\n' +
    '   *        response required to continue.\n' +
    '   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\n' +
    '    var _this = this;\n' +
    '    var authParameters = authDetails.getAuthParameters();\n' +
    '    authParameters.USERNAME = this.username;\n' +
    '    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n' +
    '    var jsonReq = {\n' +
    "      AuthFlow: 'CUSTOM_AUTH',\n" +
    '      ClientId: this.pool.getClientId(),\n' +
    '      AuthParameters: authParameters,\n' +
    '      ClientMetadata: clientMetaData\n' +
    '    };\n' +
    '    if (this.getUserContextData()) {\n' +
    '      jsonReq.UserContextData = this.getUserContextData();\n' +
    '    }\n' +
    "    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n" +
    '      if (err) {\n' +
    '        return callback.onFailure(err);\n' +
    '      }\n' +
    '      var challengeName = data.ChallengeName;\n' +
    '      var challengeParameters = data.ChallengeParameters;\n' +
    "      if (challengeName === 'CUSTOM_CHALLENGE') {\n" +
    '        _this.Session = data.Session;\n' +
    '        return callback.customChallenge(challengeParameters);\n' +
    '      }\n' +
    '      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n' +
    '      _this.cacheTokens();\n' +
    '      return callback.onSuccess(_this.signInUserSession);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used for authenticating the user.\n' +
    '   * stuff\n' +
    '   * @param {AuthenticationDetails} authDetails Contains the authentication data\n' +
    '   * @param {object} callback Result callback map.\n' +
    '   * @param {onFailure} callback.onFailure Called on any error.\n' +
    '   * @param {newPasswordRequired} callback.newPasswordRequired new\n' +
    '   *        password and any required attributes are required to continue\n' +
    '   * @param {mfaRequired} callback.mfaRequired MFA code\n' +
    '   *        required to continue.\n' +
    '   * @param {customChallenge} callback.customChallenge Custom challenge\n' +
    '   *        response required to continue.\n' +
    '   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\n' +
    "    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n" +
    '      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n' +
    "    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n" +
    '      return this.authenticateUserDefaultAuth(authDetails, callback);\n' +
    '    }\n' +
    "    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * PRIVATE ONLY: This is an internal only method and should not\n' +
    '   * be directly called by the consumers.\n' +
    '   * It calls the AuthenticationHelper for SRP related\n' +
    '   * stuff\n' +
    '   * @param {AuthenticationDetails} authDetails Contains the authentication data\n' +
    '   * @param {object} callback Result callback map.\n' +
    '   * @param {onFailure} callback.onFailure Called on any error.\n' +
    '   * @param {newPasswordRequired} callback.newPasswordRequired new\n' +
    '   *        password and any required attributes are required to continue\n' +
    '   * @param {mfaRequired} callback.mfaRequired MFA code\n' +
    '   *        required to continue.\n' +
    '   * @param {customChallenge} callback.customChallenge Custom challenge\n' +
    '   *        response required to continue.\n' +
    '   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n' +
    '    var _this2 = this;\n' +
    '    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolName());\n' +
    '    var dateHelper = new DateHelper();\n' +
    '    var serverBValue;\n' +
    '    var salt;\n' +
    '    var authParameters = {};\n' +
    '    if (this.deviceKey != null) {\n' +
    '      authParameters.DEVICE_KEY = this.deviceKey;\n' +
    '    }\n' +
    '    authParameters.USERNAME = this.username;\n' +
    '    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n' +
    '      // getLargeAValue callback start\n' +
    '      if (errOnAValue) {\n' +
    '        callback.onFailure(errOnAValue);\n' +
    '      }\n' +
    '      authParameters.SRP_A = aValue.toString(16);\n' +
    "      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n" +
    "        authParameters.CHALLENGE_NAME = 'SRP_A';\n" +
    '      }\n' +
    '      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n' +
    '      var jsonReq = {\n' +
    '        AuthFlow: _this2.authenticationFlowType,\n' +
    '        ClientId: _this2.pool.getClientId(),\n' +
    '        AuthParameters: authParameters,\n' +
    '        ClientMetadata: clientMetaData\n' +
    '      };\n' +
    '      if (_this2.getUserContextData(_this2.username)) {\n' +
    '        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n' +
    '      }\n' +
    "      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n" +
    '        if (err) {\n' +
    '          return callback.onFailure(err);\n' +
    '        }\n' +
    '        var challengeParameters = data.ChallengeParameters;\n' +
    '        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n' +
    '        _this2.userDataKey = _this2.keyPrefix + "." + _this2.username + ".userData";\n' +
    '        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n' +
    '        salt = new BigInteger(challengeParameters.SALT, 16);\n' +
    '        _this2.getCachedDeviceKeyAndPassword();\n' +
    '        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n' +
    '          // getPasswordAuthenticationKey callback start\n' +
    '          if (errOnHkdf) {\n' +
    '            callback.onFailure(errOnHkdf);\n' +
    '          }\n' +
    '          var dateNow = dateHelper.getNowString();\n' +
    "          var concatBuffer = Buffer.concat([Buffer.from(_this2.pool.getUserPoolName(), 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]);\n" +
    '          var awsCryptoHash = new Sha256(hkdf);\n' +
    '          awsCryptoHash.update(concatBuffer);\n' +
    '          var resu'... 61427 more characters
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '/** @class */\n' +
    'var CognitoUserAttribute = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoUserAttribute object\n' +
    "   * @param {string=} Name The record's name\n" +
    "   * @param {string=} Value The record's value\n" +
    '   */\n' +
    '  function CognitoUserAttribute(_temp) {\n' +
    '    var _ref = _temp === void 0 ? {} : _temp,\n' +
    '      Name = _ref.Name,\n' +
    '      Value = _ref.Value;\n' +
    "    this.Name = Name || '';\n" +
    "    this.Value = Value || '';\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's value.\n" +
    '   */\n' +
    '  var _proto = CognitoUserAttribute.prototype;\n' +
    '  _proto.getValue = function getValue() {\n' +
    '    return this.Value;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * Sets the record's value.\n" +
    '   * @param {string} value The new value.\n' +
    '   * @returns {CognitoUserAttribute} The record for method chaining.\n' +
    '   */;\n' +
    '  _proto.setValue = function setValue(value) {\n' +
    '    this.Value = value;\n' +
    '    return this;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's name.\n" +
    '   */;\n' +
    '  _proto.getName = function getName() {\n' +
    '    return this.Name;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * Sets the record's name\n" +
    '   * @param {string} name The new name.\n' +
    '   * @returns {CognitoUserAttribute} The record for method chaining.\n' +
    '   */;\n' +
    '  _proto.setName = function setName(name) {\n' +
    '    this.Name = name;\n' +
    '    return this;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} a string representation of the record.\n' +
    '   */;\n' +
    '  _proto.toString = function toString() {\n' +
    '    return JSON.stringify(this);\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {object} a flat object representing the record.\n' +
    '   */;\n' +
    '  _proto.toJSON = function toJSON() {\n' +
    '    return {\n' +
    '      Name: this.Name,\n' +
    '      Value: this.Value\n' +
    '    };\n' +
    '  };\n' +
    '  return CognitoUserAttribute;\n' +
    '}();\n' +
    'export { CognitoUserAttribute as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import Client from './Client';\n" +
    "import CognitoUser from './CognitoUser';\n" +
    "import StorageHelper from './StorageHelper';\n" +
    'var USER_POOL_ID_MAX_LENGTH = 55;\n' +
    '\n' +
    '/** @class */\n' +
    'var CognitoUserPool = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoUserPool object\n' +
    '   * @param {object} data Creation options.\n' +
    '   * @param {string} data.UserPoolId Cognito user pool id.\n' +
    '   * @param {string} data.ClientId User pool application client id.\n' +
    '   * @param {string} data.endpoint Optional custom service endpoint.\n' +
    '   * @param {object} data.fetchOptions Optional options for fetch API.\n' +
    '   *        (only credentials option is supported)\n' +
    '   * @param {object} data.Storage Optional storage object.\n' +
    '   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n' +
    '   *        boolean flag indicating if the data collection is enabled\n' +
    '   *        to support cognito advanced security features. By default, this\n' +
    '   *        flag is set to true.\n' +
    '   */\n' +
    '  function CognitoUserPool(data, wrapRefreshSessionCallback) {\n' +
    '    var _ref = data || {},\n' +
    '      UserPoolId = _ref.UserPoolId,\n' +
    '      ClientId = _ref.ClientId,\n' +
    '      endpoint = _ref.endpoint,\n' +
    '      fetchOptions = _ref.fetchOptions,\n' +
    '      AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n' +
    '    if (!UserPoolId || !ClientId) {\n' +
    "      throw new Error('Both UserPoolId and ClientId are required.');\n" +
    '    }\n' +
    '    if (UserPoolId.length > USER_POOL_ID_MAX_LENGTH || !/^[\\w-]+_[0-9a-zA-Z]+$/.test(UserPoolId)) {\n' +
    "      throw new Error('Invalid UserPoolId format.');\n" +
    '    }\n' +
    "    var region = UserPoolId.split('_')[0];\n" +
    '    this.userPoolId = UserPoolId;\n' +
    '    this.clientId = ClientId;\n' +
    '    this.client = new Client(region, endpoint, fetchOptions);\n' +
    '\n' +
    '    /**\n' +
    '     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n' +
    '     * if no input value is provided.\n' +
    '     */\n' +
    '    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n' +
    '    this.storage = data.Storage || new StorageHelper().getStorage();\n' +
    '    if (wrapRefreshSessionCallback) {\n' +
    '      this.wrapRefreshSessionCallback = wrapRefreshSessionCallback;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} the user pool id\n' +
    '   */\n' +
    '  var _proto = CognitoUserPool.prototype;\n' +
    '  _proto.getUserPoolId = function getUserPoolId() {\n' +
    '    return this.userPoolId;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} the user pool name\n' +
    '   */;\n' +
    '  _proto.getUserPoolName = function getUserPoolName() {\n' +
    "    return this.getUserPoolId().split('_')[1];\n" +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @returns {string} the client id\n' +
    '   */;\n' +
    '  _proto.getClientId = function getClientId() {\n' +
    '    return this.clientId;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * @typedef {object} SignUpResult\n' +
    '   * @property {CognitoUser} user New user.\n' +
    '   * @property {bool} userConfirmed If the user is already confirmed.\n' +
    '   */\n' +
    '  /**\n' +
    '   * method for signing up a user\n' +
    "   * @param {string} username User's username.\n" +
    '   * @param {string} password Plain-text initial password entered by user.\n' +
    '   * @param {(AttributeArg[])=} userAttributes New user attributes.\n' +
    '   * @param {(AttributeArg[])=} validationData Application metadata.\n' +
    '   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n' +
    '   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n' +
    '   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n' +
    '    var _this = this;\n' +
    '    var jsonReq = {\n' +
    '      ClientId: this.clientId,\n' +
    '      Username: username,\n' +
    '      Password: password,\n' +
    '      UserAttributes: userAttributes,\n' +
    '      ValidationData: validationData,\n' +
    '      ClientMetadata: clientMetadata\n' +
    '    };\n' +
    '    if (this.getUserContextData(username)) {\n' +
    '      jsonReq.UserContextData = this.getUserContextData(username);\n' +
    '    }\n' +
    "    this.client.request('SignUp', jsonReq, function (err, data) {\n" +
    '      if (err) {\n' +
    '        return callback(err, null);\n' +
    '      }\n' +
    '      var cognitoUser = {\n' +
    '        Username: username,\n' +
    '        Pool: _this,\n' +
    '        Storage: _this.storage\n' +
    '      };\n' +
    '      var returnData = {\n' +
    '        user: new CognitoUser(cognitoUser),\n' +
    '        userConfirmed: data.UserConfirmed,\n' +
    '        userSub: data.UserSub,\n' +
    '        codeDeliveryDetails: data.CodeDeliveryDetails\n' +
    '      };\n' +
    '      return callback(null, returnData);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * method for getting the current user of the application from the local storage\n' +
    '   *\n' +
    '   * @returns {CognitoUser} the user retrieved from storage\n' +
    '   */;\n' +
    '  _proto.getCurrentUser = function getCurrentUser() {\n' +
    '    var lastUserKey = "CognitoIdentityServiceProvider." + this.clientId + ".LastAuthUser";\n' +
    '    var lastAuthUser = this.storage.getItem(lastUserKey);\n' +
    '    if (lastAuthUser) {\n' +
    '      var cognitoUser = {\n' +
    '        Username: lastAuthUser,\n' +
    '        Pool: this,\n' +
    '        Storage: this.storage\n' +
    '      };\n' +
    '      return new CognitoUser(cognitoUser);\n' +
    '    }\n' +
    '    return null;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This method returns the encoded data string used for cognito advanced security feature.\n' +
    '   * This would be generated only when developer has included the JS used for collecting the\n' +
    '   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n' +
    '   * features\n' +
    '   * @param {string} username the username for the context data\n' +
    '   * @returns {string} the user context data\n' +
    '   **/;\n' +
    '  _proto.getUserContextData = function getUserContextData(username) {\n' +
    "    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n" +
    '      return undefined;\n' +
    '    }\n' +
    '    /* eslint-disable */\n' +
    '    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n' +
    '    /* eslint-enable */\n' +
    '\n' +
    '    if (this.advancedSecurityDataCollectionFlag) {\n' +
    '      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n' +
    '      if (advancedSecurityData) {\n' +
    '        var userContextData = {\n' +
    '          EncodedData: advancedSecurityData\n' +
    '        };\n' +
    '        return userContextData;\n' +
    '      }\n' +
    '    }\n' +
    '    return {};\n' +
    '  };\n' +
    '  return CognitoUserPool;\n' +
    '}();\n' +
    'export { CognitoUserPool as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '/** @class */\n' +
    'var CognitoUserSession = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoUserSession object\n' +
    "   * @param {CognitoIdToken} IdToken The session's Id token.\n" +
    "   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n" +
    "   * @param {CognitoAccessToken} AccessToken The session's access token.\n" +
    "   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n" +
    '   */\n' +
    '  function CognitoUserSession(_temp) {\n' +
    '    var _ref = _temp === void 0 ? {} : _temp,\n' +
    '      IdToken = _ref.IdToken,\n' +
    '      RefreshToken = _ref.RefreshToken,\n' +
    '      AccessToken = _ref.AccessToken,\n' +
    '      ClockDrift = _ref.ClockDrift;\n' +
    '    if (AccessToken == null || IdToken == null) {\n' +
    "      throw new Error('Id token and Access Token must be present.');\n" +
    '    }\n' +
    '    this.idToken = IdToken;\n' +
    '    this.refreshToken = RefreshToken;\n' +
    '    this.accessToken = AccessToken;\n' +
    '    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {CognitoIdToken} the session's Id token\n" +
    '   */\n' +
    '  var _proto = CognitoUserSession.prototype;\n' +
    '  _proto.getIdToken = function getIdToken() {\n' +
    '    return this.idToken;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {CognitoRefreshToken} the session's refresh token\n" +
    '   */;\n' +
    '  _proto.getRefreshToken = function getRefreshToken() {\n' +
    '    return this.refreshToken;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {CognitoAccessToken} the session's access token\n" +
    '   */;\n' +
    '  _proto.getAccessToken = function getAccessToken() {\n' +
    '    return this.accessToken;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {int} the session's clock drift\n" +
    '   */;\n' +
    '  _proto.getClockDrift = function getClockDrift() {\n' +
    '    return this.clockDrift;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {int} the computer's clock drift\n" +
    '   */;\n' +
    '  _proto.calculateClockDrift = function calculateClockDrift() {\n' +
    '    var now = Math.floor(new Date() / 1000);\n' +
    '    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n' +
    '    return now - iat;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Checks to see if the session is still valid based on session expiry information found\n' +
    '   * in tokens and the current time (adjusted with clock drift)\n' +
    '   * @returns {boolean} if the session is still valid\n' +
    '   */;\n' +
    '  _proto.isValid = function isValid() {\n' +
    '    var now = Math.floor(new Date() / 1000);\n' +
    '    var adjusted = now - this.clockDrift;\n' +
    '    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n' +
    '  };\n' +
    '  return CognitoUserSession;\n' +
    '}();\n' +
    'export { CognitoUserSession as default };'
} [Function: logger]
____9999999____ {
  code: "import * as Cookies from 'js-cookie';\n" +
    '\n' +
    '/** @class */\n' +
    'var CookieStorage = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CookieStorage object\n' +
    '   * @param {object} data Creation options.\n' +
    '   * @param {string} data.domain Cookies domain (default: domain of the page\n' +
    '   * \t\t\t\twhere the cookie was created, excluding subdomains)\n' +
    "   * @param {string} data.path Cookies path (default: '/')\n" +
    '   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n' +
    '   * @param {boolean} data.secure Cookie secure flag (default: true)\n' +
    '   * @param {string} data.sameSite Cookie request behavior (default: null)\n' +
    '   */\n' +
    '  function CookieStorage(data) {\n' +
    '    if (data === void 0) {\n' +
    '      data = {};\n' +
    '    }\n' +
    '    if (data.domain) {\n' +
    '      this.domain = data.domain;\n' +
    '    }\n' +
    '    if (data.path) {\n' +
    '      this.path = data.path;\n' +
    '    } else {\n' +
    "      this.path = '/';\n" +
    '    }\n' +
    "    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n" +
    '      this.expires = data.expires;\n' +
    '    } else {\n' +
    '      this.expires = 365;\n' +
    '    }\n' +
    "    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n" +
    '      this.secure = data.secure;\n' +
    '    } else {\n' +
    '      this.secure = true;\n' +
    '    }\n' +
    "    if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n" +
    "      if (!['strict', 'lax', 'none'].includes(data.sameSite)) {\n" +
    `        throw new Error('The sameSite value of cookieStorage must be "lax", "strict" or "none".');\n` +
    '      }\n' +
    "      if (data.sameSite === 'none' && !this.secure) {\n" +
    "        throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n" +
    '      }\n' +
    '      this.sameSite = data.sameSite;\n' +
    '    } else {\n' +
    '      this.sameSite = null;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to set a specific item in storage\n' +
    '   * @param {string} key - the key for the item\n' +
    '   * @param {object} value - the value\n' +
    '   * @returns {string} value that was set\n' +
    '   */\n' +
    '  var _proto = CookieStorage.prototype;\n' +
    '  _proto.setItem = function setItem(key, value) {\n' +
    '    var options = {\n' +
    '      path: this.path,\n' +
    '      expires: this.expires,\n' +
    '      domain: this.domain,\n' +
    '      secure: this.secure\n' +
    '    };\n' +
    '    if (this.sameSite) {\n' +
    '      options.sameSite = this.sameSite;\n' +
    '    }\n' +
    '    Cookies.set(key, value, options);\n' +
    '    return Cookies.get(key);\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to get a specific key from storage\n' +
    '   * @param {string} key - the key for the item\n' +
    '   * This is used to clear the storage\n' +
    '   * @returns {string} the data item\n' +
    '   */;\n' +
    '  _proto.getItem = function getItem(key) {\n' +
    '    return Cookies.get(key);\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to remove an item from storage\n' +
    '   * @param {string} key - the key being set\n' +
    '   * @returns {string} value - value that was deleted\n' +
    '   */;\n' +
    '  _proto.removeItem = function removeItem(key) {\n' +
    '    var options = {\n' +
    '      path: this.path,\n' +
    '      expires: this.expires,\n' +
    '      domain: this.domain,\n' +
    '      secure: this.secure\n' +
    '    };\n' +
    '    if (this.sameSite) {\n' +
    '      options.sameSite = this.sameSite;\n' +
    '    }\n' +
    '    return Cookies.remove(key, options);\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to clear the storage of optional\n' +
    '   * items that were previously set\n' +
    '   * @returns {} an empty object\n' +
    '   */;\n' +
    '  _proto.clear = function clear() {\n' +
    '    var cookies = Cookies.get();\n' +
    '    var numKeys = Object.keys(cookies).length;\n' +
    '    for (var index = 0; index < numKeys; ++index) {\n' +
    '      this.removeItem(Object.keys(cookies)[index]);\n' +
    '    }\n' +
    '    return {};\n' +
    '  };\n' +
    '  return CookieStorage;\n' +
    '}();\n' +
    'export { CookieStorage as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n" +
    "var weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n" +
    '\n' +
    '/** @class */\n' +
    'var DateHelper = /*#__PURE__*/function () {\n' +
    '  function DateHelper() {}\n' +
    '  var _proto = DateHelper.prototype;\n' +
    '  /**\n' +
    '   * @returns {string} The current time in "ddd MMM D HH:mm:ss UTC YYYY" format.\n' +
    '   */\n' +
    '  _proto.getNowString = function getNowString() {\n' +
    '    var now = new Date();\n' +
    '    var weekDay = weekNames[now.getUTCDay()];\n' +
    '    var month = monthNames[now.getUTCMonth()];\n' +
    '    var day = now.getUTCDate();\n' +
    '    var hours = now.getUTCHours();\n' +
    '    if (hours < 10) {\n' +
    '      hours = "0" + hours;\n' +
    '    }\n' +
    '    var minutes = now.getUTCMinutes();\n' +
    '    if (minutes < 10) {\n' +
    '      minutes = "0" + minutes;\n' +
    '    }\n' +
    '    var seconds = now.getUTCSeconds();\n' +
    '    if (seconds < 10) {\n' +
    '      seconds = "0" + seconds;\n' +
    '    }\n' +
    '    var year = now.getUTCFullYear();\n' +
    '\n' +
    '    // ddd MMM D HH:mm:ss UTC YYYY\n' +
    '    var dateNow = weekDay + " " + month + " " + day + " " + hours + ":" + minutes + ":" + seconds + " UTC " + year;\n' +
    '    return dateNow;\n' +
    '  };\n' +
    '  return DateHelper;\n' +
    '}();\n' +
    'export { DateHelper as default };'
} [Function: logger]
____9999999____ {
  code: "import { getUserAgent } from './Platform';\n" +
    "import { AUTH_CATEGORY } from './Platform/constants';\n" +
    '\n' +
    '// constructor\n' +
    'function UserAgent() {}\n' +
    '// public\n' +
    'UserAgent.prototype.userAgent = getUserAgent();\n' +
    'export var appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\n' +
    '  if (!content) {\n' +
    '    return;\n' +
    '  }\n' +
    '  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\n' +
    "    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\n" +
    '  }\n' +
    "  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\n" +
    '    UserAgent.prototype.userAgent = content;\n' +
    '  }\n' +
    '};\n' +
    'export var addAuthCategoryToCognitoUserAgent = function addAuthCategoryToCognitoUserAgent() {\n' +
    '  UserAgent.category = AUTH_CATEGORY;\n' +
    '};\n' +
    'export var addFrameworkToCognitoUserAgent = function addFrameworkToCognitoUserAgent(framework) {\n' +
    '  UserAgent.framework = framework;\n' +
    '};\n' +
    'export var getAmplifyUserAgent = function getAmplifyUserAgent(action) {\n' +
    `  var uaCategoryAction = UserAgent.category ? " " + UserAgent.category : '';\n` +
    `  var uaFramework = UserAgent.framework ? " framework/" + UserAgent.framework : '';\n` +
    '  var userAgent = "" + UserAgent.prototype.userAgent + uaCategoryAction + uaFramework;\n' +
    '  return userAgent;\n' +
    '};\n' +
    '\n' +
    '// class for defining the amzn user-agent\n' +
    'export default UserAgent;'
} [Function: logger]
____9999999____ {
  code: "import cryptoSecureRandomInt from './cryptoSecureRandomInt';\n" +
    '\n' +
    '/**\n' +
    ' * Hex encoding strategy.\n' +
    ' * Converts a word array to a hex string.\n' +
    ' * @param {WordArray} wordArray The word array.\n' +
    ' * @return {string} The hex string.\n' +
    ' * @static\n' +
    ' */\n' +
    'function hexStringify(wordArray) {\n' +
    '  // Shortcuts\n' +
    '  var words = wordArray.words;\n' +
    '  var sigBytes = wordArray.sigBytes;\n' +
    '\n' +
    '  // Convert\n' +
    '  var hexChars = [];\n' +
    '  for (var i = 0; i < sigBytes; i++) {\n' +
    '    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n' +
    '    hexChars.push((bite >>> 4).toString(16));\n' +
    '    hexChars.push((bite & 0x0f).toString(16));\n' +
    '  }\n' +
    "  return hexChars.join('');\n" +
    '}\n' +
    'var WordArray = /*#__PURE__*/function () {\n' +
    '  function WordArray(words, sigBytes) {\n' +
    '    words = this.words = words || [];\n' +
    '    if (sigBytes != undefined) {\n' +
    '      this.sigBytes = sigBytes;\n' +
    '    } else {\n' +
    '      this.sigBytes = words.length * 4;\n' +
    '    }\n' +
    '  }\n' +
    '  var _proto = WordArray.prototype;\n' +
    '  _proto.random = function random(nBytes) {\n' +
    '    var words = [];\n' +
    '    for (var i = 0; i < nBytes; i += 4) {\n' +
    '      words.push(cryptoSecureRandomInt());\n' +
    '    }\n' +
    '    return new WordArray(words, nBytes);\n' +
    '  };\n' +
    '  _proto.toString = function toString() {\n' +
    '    return hexStringify(this);\n' +
    '  };\n' +
    '  return WordArray;\n' +
    '}();\n' +
    'export { WordArray as default };'
} [Function: logger]
____9999999____ {
  code: "var ListCache = require('./_ListCache'),\n" +
    "    stackClear = require('./_stackClear'),\n" +
    "    stackDelete = require('./_stackDelete'),\n" +
    "    stackGet = require('./_stackGet'),\n" +
    "    stackHas = require('./_stackHas'),\n" +
    "    stackSet = require('./_stackSet');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a stack cache object to store key-value pairs.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @constructor\n' +
    ' * @param {Array} [entries] The key-value pairs to cache.\n' +
    ' */\n' +
    'function Stack(entries) {\n' +
    '  var data = this.__data__ = new ListCache(entries);\n' +
    '  this.size = data.size;\n' +
    '}\n' +
    '\n' +
    '// Add methods to `Stack`.\n' +
    'Stack.prototype.clear = stackClear;\n' +
    "Stack.prototype['delete'] = stackDelete;\n" +
    'Stack.prototype.get = stackGet;\n' +
    'Stack.prototype.has = stackHas;\n' +
    'Stack.prototype.set = stackSet;\n' +
    '\n' +
    'module.exports = Stack;\n'
} [Function: logger]
____9999999____ {
  code: "var SetCache = require('./_SetCache'),\n" +
    "    arraySome = require('./_arraySome'),\n" +
    "    cacheHas = require('./_cacheHas');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1,\n' +
    '    COMPARE_UNORDERED_FLAG = 2;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseIsEqualDeep` for arrays with support for\n' +
    ' * partial deep comparisons.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} array The array to compare.\n' +
    ' * @param {Array} other The other array to compare.\n' +
    ' * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n' +
    ' * @param {Function} customizer The function to customize comparisons.\n' +
    ' * @param {Function} equalFunc The function to determine equivalents of values.\n' +
    ' * @param {Object} stack Tracks traversed `array` and `other` objects.\n' +
    ' * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n' +
    ' */\n' +
    'function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n' +
    '  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n' +
    '      arrLength = array.length,\n' +
    '      othLength = other.length;\n' +
    '\n' +
    '  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  // Check that cyclic values are equal.\n' +
    '  var arrStacked = stack.get(array);\n' +
    '  var othStacked = stack.get(other);\n' +
    '  if (arrStacked && othStacked) {\n' +
    '    return arrStacked == other && othStacked == array;\n' +
    '  }\n' +
    '  var index = -1,\n' +
    '      result = true,\n' +
    '      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n' +
    '\n' +
    '  stack.set(array, other);\n' +
    '  stack.set(other, array);\n' +
    '\n' +
    '  // Ignore non-index properties.\n' +
    '  while (++index < arrLength) {\n' +
    '    var arrValue = array[index],\n' +
    '        othValue = other[index];\n' +
    '\n' +
    '    if (customizer) {\n' +
    '      var compared = isPartial\n' +
    '        ? customizer(othValue, arrValue, index, other, array, stack)\n' +
    '        : customizer(arrValue, othValue, index, array, other, stack);\n' +
    '    }\n' +
    '    if (compared !== undefined) {\n' +
    '      if (compared) {\n' +
    '        continue;\n' +
    '      }\n' +
    '      result = false;\n' +
    '      break;\n' +
    '    }\n' +
    '    // Recursively compare arrays (susceptible to call stack limits).\n' +
    '    if (seen) {\n' +
    '      if (!arraySome(other, function(othValue, othIndex) {\n' +
    '            if (!cacheHas(seen, othIndex) &&\n' +
    '                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n' +
    '              return seen.push(othIndex);\n' +
    '            }\n' +
    '          })) {\n' +
    '        result = false;\n' +
    '        break;\n' +
    '      }\n' +
    '    } else if (!(\n' +
    '          arrValue === othValue ||\n' +
    '            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n' +
    '        )) {\n' +
    '      result = false;\n' +
    '      break;\n' +
    '    }\n' +
    '  }\n' +
    "  stack['delete'](array);\n" +
    "  stack['delete'](other);\n" +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = equalArrays;\n'
} [Function: logger]
____9999999____ {
  code: "var Symbol = require('./_Symbol'),\n" +
    "    Uint8Array = require('./_Uint8Array'),\n" +
    "    eq = require('./eq'),\n" +
    "    equalArrays = require('./_equalArrays'),\n" +
    "    mapToArray = require('./_mapToArray'),\n" +
    "    setToArray = require('./_setToArray');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1,\n' +
    '    COMPARE_UNORDERED_FLAG = 2;\n' +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var boolTag = '[object Boolean]',\n" +
    "    dateTag = '[object Date]',\n" +
    "    errorTag = '[object Error]',\n" +
    "    mapTag = '[object Map]',\n" +
    "    numberTag = '[object Number]',\n" +
    "    regexpTag = '[object RegExp]',\n" +
    "    setTag = '[object Set]',\n" +
    "    stringTag = '[object String]',\n" +
    "    symbolTag = '[object Symbol]';\n" +
    '\n' +
    "var arrayBufferTag = '[object ArrayBuffer]',\n" +
    "    dataViewTag = '[object DataView]';\n" +
    '\n' +
    '/** Used to convert symbols to primitives and strings. */\n' +
    'var symbolProto = Symbol ? Symbol.prototype : undefined,\n' +
    '    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseIsEqualDeep` for comparing objects of\n' +
    ' * the same `toStringTag`.\n' +
    ' *\n' +
    ' * **Note:** This function only supports comparing values with tags of\n' +
    ' * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to compare.\n' +
    ' * @param {Object} other The other object to compare.\n' +
    ' * @param {string} tag The `toStringTag` of the objects to compare.\n' +
    ' * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n' +
    ' * @param {Function} customizer The function to customize comparisons.\n' +
    ' * @param {Function} equalFunc The function to determine equivalents of values.\n' +
    ' * @param {Object} stack Tracks traversed `object` and `other` objects.\n' +
    ' * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n' +
    ' */\n' +
    'function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n' +
    '  switch (tag) {\n' +
    '    case dataViewTag:\n' +
    '      if ((object.byteLength != other.byteLength) ||\n' +
    '          (object.byteOffset != other.byteOffset)) {\n' +
    '        return false;\n' +
    '      }\n' +
    '      object = object.buffer;\n' +
    '      other = other.buffer;\n' +
    '\n' +
    '    case arrayBufferTag:\n' +
    '      if ((object.byteLength != other.byteLength) ||\n' +
    '          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n' +
    '        return false;\n' +
    '      }\n' +
    '      return true;\n' +
    '\n' +
    '    case boolTag:\n' +
    '    case dateTag:\n' +
    '    case numberTag:\n' +
    '      // Coerce booleans to `1` or `0` and dates to milliseconds.\n' +
    '      // Invalid dates are coerced to `NaN`.\n' +
    '      return eq(+object, +other);\n' +
    '\n' +
    '    case errorTag:\n' +
    '      return object.name == other.name && object.message == other.message;\n' +
    '\n' +
    '    case regexpTag:\n' +
    '    case stringTag:\n' +
    '      // Coerce regexes to strings and treat strings, primitives and objects,\n' +
    '      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n' +
    '      // for more details.\n' +
    "      return object == (other + '');\n" +
    '\n' +
    '    case mapTag:\n' +
    '      var convert = mapToArray;\n' +
    '\n' +
    '    case setTag:\n' +
    '      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n' +
    '      convert || (convert = setToArray);\n' +
    '\n' +
    '      if (object.size != other.size && !isPartial) {\n' +
    '        return false;\n' +
    '      }\n' +
    '      // Assume cyclic values are equal.\n' +
    '      var stacked = stack.get(object);\n' +
    '      if (stacked) {\n' +
    '        return stacked == other;\n' +
    '      }\n' +
    '      bitmask |= COMPARE_UNORDERED_FLAG;\n' +
    '\n' +
    '      // Recursively compare objects (susceptible to call stack limits).\n' +
    '      stack.set(object, other);\n' +
    '      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n' +
    "      stack['delete'](object);\n" +
    '      return result;\n' +
    '\n' +
    '    case symbolTag:\n' +
    '      if (symbolValueOf) {\n' +
    '        return symbolValueOf.call(object) == symbolValueOf.call(other);\n' +
    '      }\n' +
    '  }\n' +
    '  return false;\n' +
    '}\n' +
    '\n' +
    'module.exports = equalByTag;\n'
} [Function: logger]
____9999999____ { code: 'export default {}' } [Function: logger]
____9999999____ {
  code: "var getAllKeys = require('./_getAllKeys');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1;\n' +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseIsEqualDeep` for objects with support for\n' +
    ' * partial deep comparisons.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to compare.\n' +
    ' * @param {Object} other The other object to compare.\n' +
    ' * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n' +
    ' * @param {Function} customizer The function to customize comparisons.\n' +
    ' * @param {Function} equalFunc The function to determine equivalents of values.\n' +
    ' * @param {Object} stack Tracks traversed `object` and `other` objects.\n' +
    ' * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n' +
    ' */\n' +
    'function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n' +
    '  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n' +
    '      objProps = getAllKeys(object),\n' +
    '      objLength = objProps.length,\n' +
    '      othProps = getAllKeys(other),\n' +
    '      othLength = othProps.length;\n' +
    '\n' +
    '  if (objLength != othLength && !isPartial) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var index = objLength;\n' +
    '  while (index--) {\n' +
    '    var key = objProps[index];\n' +
    '    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n' +
    '      return false;\n' +
    '    }\n' +
    '  }\n' +
    '  // Check that cyclic values are equal.\n' +
    '  var objStacked = stack.get(object);\n' +
    '  var othStacked = stack.get(other);\n' +
    '  if (objStacked && othStacked) {\n' +
    '    return objStacked == other && othStacked == object;\n' +
    '  }\n' +
    '  var result = true;\n' +
    '  stack.set(object, other);\n' +
    '  stack.set(other, object);\n' +
    '\n' +
    '  var skipCtor = isPartial;\n' +
    '  while (++index < objLength) {\n' +
    '    key = objProps[index];\n' +
    '    var objValue = object[key],\n' +
    '        othValue = other[key];\n' +
    '\n' +
    '    if (customizer) {\n' +
    '      var compared = isPartial\n' +
    '        ? customizer(othValue, objValue, key, other, object, stack)\n' +
    '        : customizer(objValue, othValue, key, object, other, stack);\n' +
    '    }\n' +
    '    // Recursively compare objects (susceptible to call stack limits).\n' +
    '    if (!(compared === undefined\n' +
    '          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n' +
    '          : compared\n' +
    '        )) {\n' +
    '      result = false;\n' +
    '      break;\n' +
    '    }\n' +
    "    skipCtor || (skipCtor = key == 'constructor');\n" +
    '  }\n' +
    '  if (result && !skipCtor) {\n' +
    '    var objCtor = object.constructor,\n' +
    '        othCtor = other.constructor;\n' +
    '\n' +
    '    // Non `Object` object instances with different constructors are not equal.\n' +
    '    if (objCtor != othCtor &&\n' +
    "        ('constructor' in object && 'constructor' in other) &&\n" +
    "        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n" +
    "          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n" +
    '      result = false;\n' +
    '    }\n' +
    '  }\n' +
    "  stack['delete'](object);\n" +
    "  stack['delete'](other);\n" +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = equalObjects;\n'
} [Function: logger]
____9999999____ {
  code: "var DataView = require('./_DataView'),\n" +
    "    Map = require('./_Map'),\n" +
    "    Promise = require('./_Promise'),\n" +
    "    Set = require('./_Set'),\n" +
    "    WeakMap = require('./_WeakMap'),\n" +
    "    baseGetTag = require('./_baseGetTag'),\n" +
    "    toSource = require('./_toSource');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var mapTag = '[object Map]',\n" +
    "    objectTag = '[object Object]',\n" +
    "    promiseTag = '[object Promise]',\n" +
    "    setTag = '[object Set]',\n" +
    "    weakMapTag = '[object WeakMap]';\n" +
    '\n' +
    "var dataViewTag = '[object DataView]';\n" +
    '\n' +
    '/** Used to detect maps, sets, and weakmaps. */\n' +
    'var dataViewCtorString = toSource(DataView),\n' +
    '    mapCtorString = toSource(Map),\n' +
    '    promiseCtorString = toSource(Promise),\n' +
    '    setCtorString = toSource(Set),\n' +
    '    weakMapCtorString = toSource(WeakMap);\n' +
    '\n' +
    '/**\n' +
    ' * Gets the `toStringTag` of `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to query.\n' +
    ' * @returns {string} Returns the `toStringTag`.\n' +
    ' */\n' +
    'var getTag = baseGetTag;\n' +
    '\n' +
    '// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n' +
    'if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n' +
    '    (Map && getTag(new Map) != mapTag) ||\n' +
    '    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n' +
    '    (Set && getTag(new Set) != setTag) ||\n' +
    '    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n' +
    '  getTag = function(value) {\n' +
    '    var result = baseGetTag(value),\n' +
    '        Ctor = result == objectTag ? value.constructor : undefined,\n' +
    "        ctorString = Ctor ? toSource(Ctor) : '';\n" +
    '\n' +
    '    if (ctorString) {\n' +
    '      switch (ctorString) {\n' +
    '        case dataViewCtorString: return dataViewTag;\n' +
    '        case mapCtorString: return mapTag;\n' +
    '        case promiseCtorString: return promiseTag;\n' +
    '        case setCtorString: return setTag;\n' +
    '        case weakMapCtorString: return weakMapTag;\n' +
    '      }\n' +
    '    }\n' +
    '    return result;\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = getTag;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if `value` is classified as an `Array` object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isArray([1, 2, 3]);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isArray(document.body.children);\n' +
    ' * // => false\n' +
    ' *\n' +
    " * _.isArray('abc');\n" +
    ' * // => false\n' +
    ' *\n' +
    ' * _.isArray(_.noop);\n' +
    ' * // => false\n' +
    ' */\n' +
    'var isArray = Array.isArray;\n' +
    '\n' +
    'module.exports = isArray;\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsTypedArray = require('./_baseIsTypedArray'),\n" +
    "    baseUnary = require('./_baseUnary'),\n" +
    "    nodeUtil = require('./_nodeUtil');\n" +
    '\n' +
    '/* Node.js helper references. */\n' +
    'var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is classified as a typed array.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isTypedArray(new Uint8Array);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isTypedArray([]);\n' +
    ' * // => false\n' +
    ' */\n' +
    'var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n' +
    '\n' +
    'module.exports = isTypedArray;\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root'),\n" +
    "    stubFalse = require('./stubFalse');\n" +
    '\n' +
    '/** Detect free variable `exports`. */\n' +
    "var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n" +
    '\n' +
    '/** Detect free variable `module`. */\n' +
    "var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n" +
    '\n' +
    '/** Detect the popular CommonJS extension `module.exports`. */\n' +
    'var moduleExports = freeModule && freeModule.exports === freeExports;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var Buffer = moduleExports ? root.Buffer : undefined;\n' +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is a buffer.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.3.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isBuffer(new Buffer(2));\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isBuffer(new Uint8Array(2));\n' +
    ' * // => false\n' +
    ' */\n' +
    'var isBuffer = nativeIsBuffer || stubFalse;\n' +
    '\n' +
    'module.exports = isBuffer;\n'
} [Function: logger]
____9999999____ {
  code: "import { getSkewCorrectedDate } from './getSkewCorrectedDate.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\n' +
    'const SKEW_WINDOW = 5 * 60 * 1000;\n' +
    '/**\n' +
    ' * Checks if the provided date is within the skew window of 5 minutes.\n' +
    ' *\n' +
    ' * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n' +
    ' * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n' +
    ' *\n' +
    ' * @returns True if skewed. False otherwise.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n' +
    '    clockTimeInMilliseconds) >= SKEW_WINDOW;\n' +
    '\n' +
    'export { isClockSkewed };\n' +
    '//# sourceMappingURL=isClockSkewed.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { pascalCase, pascalCaseTransform, pascalCaseTransformMerge, } from "pascal-case";\n' +
    'export function camelCaseTransform(input, index) {\n' +
    '    if (index === 0)\n' +
    '        return input.toLowerCase();\n' +
    '    return pascalCaseTransform(input, index);\n' +
    '}\n' +
    'export function camelCaseTransformMerge(input, index) {\n' +
    '    if (index === 0)\n' +
    '        return input.toLowerCase();\n' +
    '    return pascalCaseTransformMerge(input);\n' +
    '}\n' +
    'export function camelCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return pascalCase(input, __assign({ transform: camelCaseTransform }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { noCase } from "no-case";\n' +
    'import { upperCaseFirst } from "upper-case-first";\n' +
    'export function capitalCaseTransform(input) {\n' +
    '    return upperCaseFirst(input.toLowerCase());\n' +
    '}\n' +
    'export function capitalCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return noCase(input, __assign({ delimiter: " ", transform: capitalCaseTransform }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { noCase } from "no-case";\n' +
    'import { upperCase } from "upper-case";\n' +
    'export function constantCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return noCase(input, __assign({ delimiter: "_", transform: upperCase }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { noCase } from "no-case";\n' +
    'export function dotCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return noCase(input, __assign({ delimiter: "." }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { capitalCase } from "capital-case";\n' +
    'export function headerCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return capitalCase(input, __assign({ delimiter: "-" }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { lowerCase } from "lower-case";\n' +
    '// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").\n' +
    'var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n' +
    '// Remove all non-word characters.\n' +
    'var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n' +
    '/**\n' +
    ' * Normalize the string into something other libraries can manipulate easier.\n' +
    ' */\n' +
    'export function noCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;\n' +
    '    var result = replace(replace(input, splitRegexp, "$1\\0$2"), stripRegexp, "\\0");\n' +
    '    var start = 0;\n' +
    '    var end = result.length;\n' +
    '    // Trim the delimiter from around the output string.\n' +
    '    while (result.charAt(start) === "\\0")\n' +
    '        start++;\n' +
    '    while (result.charAt(end - 1) === "\\0")\n' +
    '        end--;\n' +
    '    // Transform each token independently.\n' +
    '    return result.slice(start, end).split("\\0").map(transform).join(delimiter);\n' +
    '}\n' +
    '/**\n' +
    ' * Replace `re` in the input string with the replacement value.\n' +
    ' */\n' +
    'function replace(input, re, value) {\n' +
    '    if (re instanceof RegExp)\n' +
    '        return input.replace(re, value);\n' +
    '    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { dotCase } from "dot-case";\n' +
    'export function paramCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return dotCase(input, __assign({ delimiter: "-" }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { noCase } from "no-case";\n' +
    'export function pascalCaseTransform(input, index) {\n' +
    '    var firstChar = input.charAt(0);\n' +
    '    var lowerChars = input.substr(1).toLowerCase();\n' +
    '    if (index > 0 && firstChar >= "0" && firstChar <= "9") {\n' +
    '        return "_" + firstChar + lowerChars;\n' +
    '    }\n' +
    '    return "" + firstChar.toUpperCase() + lowerChars;\n' +
    '}\n' +
    'export function pascalCaseTransformMerge(input) {\n' +
    '    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n' +
    '}\n' +
    'export function pascalCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return noCase(input, __assign({ delimiter: "", transform: pascalCaseTransform }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { dotCase } from "dot-case";\n' +
    'export function pathCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return dotCase(input, __assign({ delimiter: "/" }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { fromUtf8 } from "@smithy/util-utf8";\n' +
    'import { BLOCK_SIZE, DIGEST_LENGTH, INIT } from "./constants";\n' +
    'export class Md5 {\n' +
    '    constructor() {\n' +
    '        this.reset();\n' +
    '    }\n' +
    '    update(sourceData) {\n' +
    '        if (isEmptyData(sourceData)) {\n' +
    '            return;\n' +
    '        }\n' +
    '        else if (this.finished) {\n' +
    '            throw new Error("Attempted to update an already finished hash.");\n' +
    '        }\n' +
    '        const data = convertToBuffer(sourceData);\n' +
    '        let position = 0;\n' +
    '        let { byteLength } = data;\n' +
    '        this.bytesHashed += byteLength;\n' +
    '        while (byteLength > 0) {\n' +
    '            this.buffer.setUint8(this.bufferLength++, data[position++]);\n' +
    '            byteLength--;\n' +
    '            if (this.bufferLength === BLOCK_SIZE) {\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    async digest() {\n' +
    '        if (!this.finished) {\n' +
    '            const { buffer, bufferLength: undecoratedLength, bytesHashed } = this;\n' +
    '            const bitsHashed = bytesHashed * 8;\n' +
    '            buffer.setUint8(this.bufferLength++, 0b10000000);\n' +
    '            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n' +
    '                for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n' +
    '                    buffer.setUint8(i, 0);\n' +
    '                }\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '            for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n' +
    '                buffer.setUint8(i, 0);\n' +
    '            }\n' +
    '            buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n' +
    '            buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n' +
    '            this.hashBuffer();\n' +
    '            this.finished = true;\n' +
    '        }\n' +
    '        const out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n' +
    '        for (let i = 0; i < 4; i++) {\n' +
    '            out.setUint32(i * 4, this.state[i], true);\n' +
    '        }\n' +
    '        return new Uint8Array(out.buffer, out.byteOffset, out.byteLength);\n' +
    '    }\n' +
    '    hashBuffer() {\n' +
    '        const { buffer, state } = this;\n' +
    '        let a = state[0], b = state[1], c = state[2], d = state[3];\n' +
    '        a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n' +
    '        d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n' +
    '        c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n' +
    '        b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n' +
    '        a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n' +
    '        d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n' +
    '        c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n' +
    '        b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n' +
    '        a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n' +
    '        d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n' +
    '        c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n' +
    '        b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n' +
    '        a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n' +
    '        d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n' +
    '        c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n' +
    '        b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n' +
    '        a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n' +
    '        d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n' +
    '        c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n' +
    '        b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n' +
    '        a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n' +
    '        d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n' +
    '        c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n' +
    '        b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n' +
    '        a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n' +
    '        d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n' +
    '        c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n' +
    '        b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n' +
    '        a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n' +
    '        d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n' +
    '        c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n' +
    '        b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n' +
    '        a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n' +
    '        d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n' +
    '        c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n' +
    '        b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n' +
    '        a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n' +
    '        d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n' +
    '        c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n' +
    '        b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n' +
    '        a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n' +
    '        d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n' +
    '        c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n' +
    '        b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n' +
    '        a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n' +
    '        d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n' +
    '        c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n' +
    '        b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n' +
    '        a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n' +
    '        d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n' +
    '        c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n' +
    '        b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n' +
    '        a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n' +
    '        d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n' +
    '        c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n' +
    '        b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n' +
    '        a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n' +
    '        d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n' +
    '        c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n' +
    '        b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n' +
    '        a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n' +
    '        d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n' +
    '        c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n' +
    '        b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n' +
    '        state[0] = (a + state[0]) & 0xffffffff;\n' +
    '        state[1] = (b + state[1]) & 0xffffffff;\n' +
    '        state[2] = (c + state[2]) & 0xffffffff;\n' +
    '        state[3] = (d + state[3]) & 0xffffffff;\n' +
    '    }\n' +
    '    reset() {\n' +
    '        this.state = Uint32Array.from(INIT);\n' +
    '        this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n' +
    '        this.bufferLength = 0;\n' +
    '        this.bytesHashed = 0;\n' +
    '        this.finished = false;\n' +
    '    }\n' +
    '}\n' +
    'function cmn(q, a, b, x, s, t) {\n' +
    '    a = (((a + q) & 0xffffffff) + ((x + t) & 0xffffffff)) & 0xffffffff;\n' +
    '    return (((a << s) | (a >>> (32 - s))) + b) & 0xffffffff;\n' +
    '}\n' +
    'function ff(a, b, c, d, x, s, t) {\n' +
    '    return cmn((b & c) | (~b & d), a, b, x, s, t);\n' +
    '}\n' +
    'function gg(a, b, c, d, x, s, t) {\n' +
    '    return cmn((b & d) | (c & ~d), a, b, x, s, t);\n' +
    '}\n' +
    'function hh(a, b, c, d, x, s, t) {\n' +
    '    return cmn(b ^ c ^ d, a, b, x, s, t);\n' +
    '}\n' +
    'function ii(a, b, c, d, x, s, t) {\n' +
    '    return cmn(c ^ (b | ~d), a, b, x, s, t);\n' +
    '}\n' +
    'function isEmptyData(data) {\n' +
    '    if (typeof data === "string") {\n' +
    '        return data.length === 0;\n' +
    '    }\n' +
    '    return data.byteLength === 0;\n' +
    '}\n' +
    'function convertToBuffer(data) {\n' +
    '    if (typeof data === "string") {\n' +
    '        return fromUtf8(data);\n' +
    '    }\n' +
    '    if (ArrayBuffer.isView(data)) {\n' +
    '        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n' +
    '    }\n' +
    '    return new Uint8Array(data);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { noCase } from "no-case";\n' +
    'import { upperCaseFirst } from "upper-case-first";\n' +
    'export function sentenceCaseTransform(input, index) {\n' +
    '    var result = input.toLowerCase();\n' +
    '    if (index === 0)\n' +
    '        return upperCaseFirst(result);\n' +
    '    return result;\n' +
    '}\n' +
    'export function sentenceCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return noCase(input, __assign({ delimiter: " ", transform: sentenceCaseTransform }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'import { dotCase } from "dot-case";\n' +
    'export function snakeCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    return dotCase(input, __assign({ delimiter: "_" }, options));\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: "import { validationErrorMap } from '../types/validation.mjs';\n" +
    "import { StorageError } from '../StorageError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function assertValidationError(assertion, name) {\n' +
    '    const { message, recoverySuggestion } = validationErrorMap[name];\n' +
    '    if (!assertion) {\n' +
    '        throw new StorageError({ name, message, recoverySuggestion });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { assertValidationError };\n' +
    '//# sourceMappingURL=assertValidationError.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { userAgentMiddlewareFactory, retryMiddlewareFactory, signingMiddlewareFactory } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { contentSha256MiddlewareFactory } from '../contentSha256middleware.mjs';\n" +
    "import { xhrTransferHandler } from '../xhrTransferHandler.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * S3 transfer handler for browser and React Native based on XHR. On top of basic transfer handler, it also supports\n' +
    ' * x-amz-content-sha256 header, and request&response process tracking.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const s3TransferHandler = composeTransferHandler(xhrTransferHandler, [\n' +
    '    contentSha256MiddlewareFactory,\n' +
    '    userAgentMiddlewareFactory,\n' +
    '    retryMiddlewareFactory,\n' +
    '    signingMiddlewareFactory,\n' +
    ']);\n' +
    '\n' +
    'export { s3TransferHandler };\n' +
    '//# sourceMappingURL=xhr.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'var StorageValidationErrorCode;\n' +
    '(function (StorageValidationErrorCode) {\n' +
    '    StorageValidationErrorCode["NoCredentials"] = "NoCredentials";\n' +
    '    StorageValidationErrorCode["NoIdentityId"] = "NoIdentityId";\n' +
    '    StorageValidationErrorCode["NoKey"] = "NoKey";\n' +
    '    StorageValidationErrorCode["NoSourceKey"] = "NoSourceKey";\n' +
    '    StorageValidationErrorCode["NoDestinationKey"] = "NoDestinationKey";\n' +
    '    StorageValidationErrorCode["NoBucket"] = "NoBucket";\n' +
    '    StorageValidationErrorCode["NoRegion"] = "NoRegion";\n' +
    '    StorageValidationErrorCode["UrlExpirationMaxLimitExceed"] = "UrlExpirationMaxLimitExceed";\n' +
    '    StorageValidationErrorCode["ObjectIsTooLarge"] = "ObjectIsTooLarge";\n' +
    '    StorageValidationErrorCode["InvalidUploadSource"] = "InvalidUploadSource";\n' +
    '})(StorageValidationErrorCode || (StorageValidationErrorCode = {}));\n' +
    'const validationErrorMap = {\n' +
    '    [StorageValidationErrorCode.NoCredentials]: {\n' +
    "        message: 'Credentials should not be empty.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoIdentityId]: {\n' +
    "        message: 'Missing identity ID when accessing objects in protected or private access level.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoKey]: {\n' +
    "        message: 'Missing key in api call.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoSourceKey]: {\n' +
    "        message: 'Missing source key in copy api call.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoDestinationKey]: {\n' +
    "        message: 'Missing destination key in copy api call.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoBucket]: {\n' +
    "        message: 'Missing bucket name while accessing object.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.NoRegion]: {\n' +
    "        message: 'Missing region while accessing object.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.UrlExpirationMaxLimitExceed]: {\n' +
    "        message: 'Url Expiration can not be greater than 7 Days.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.ObjectIsTooLarge]: {\n' +
    "        message: 'Object size cannot not be greater than 5TB.',\n" +
    '    },\n' +
    '    [StorageValidationErrorCode.InvalidUploadSource]: {\n' +
    "        message: 'Upload source type can only be a `Blob`, `File`, `ArrayBuffer`, or `string`.',\n" +
    '    },\n' +
    '};\n' +
    '\n' +
    'export { StorageValidationErrorCode, validationErrorMap };\n' +
    '//# sourceMappingURL=validation.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const LOCAL_TESTING_S3_ENDPOINT = 'http://localhost:20005';\n" +
    "const DEFAULT_ACCESS_LEVEL = 'guest';\n" +
    'const DEFAULT_PRESIGN_EXPIRATION = 900;\n' +
    'const MAX_URL_EXPIRATION = 7 * 24 * 60 * 60 * 1000;\n' +
    'const MiB = 1024 * 1024;\n' +
    'const GiB = 1024 * MiB;\n' +
    'const TiB = 1024 * GiB;\n' +
    'const DEFAULT_PART_SIZE = 5 * MiB;\n' +
    'const MAX_OBJECT_SIZE = 5 * TiB;\n' +
    'const MAX_PARTS_COUNT = 10000;\n' +
    'const DEFAULT_QUEUE_SIZE = 4;\n' +
    "const UPLOADS_STORAGE_KEY = '__uploadInProgress';\n" +
    '\n' +
    'export { DEFAULT_ACCESS_LEVEL, DEFAULT_PART_SIZE, DEFAULT_PRESIGN_EXPIRATION, DEFAULT_QUEUE_SIZE, LOCAL_TESTING_S3_ENDPOINT, MAX_OBJECT_SIZE, MAX_PARTS_COUNT, MAX_URL_EXPIRATION, UPLOADS_STORAGE_KEY };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { isCancelError } from '../../../errors/CanceledError.mjs';\n" +
    "import '../../../errors/types/validation.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import { logger } from '../../../utils/logger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const createCancellableTask = ({ job, onCancel, }) => {\n' +
    "    const state = 'IN_PROGRESS';\n" +
    '    let canceledErrorMessage;\n' +
    '    const cancelableTask = {\n' +
    '        cancel: (message) => {\n' +
    '            const { state: taskState } = cancelableTask;\n' +
    "            if (taskState === 'CANCELED' ||\n" +
    "                taskState === 'ERROR' ||\n" +
    "                taskState === 'SUCCESS') {\n" +
    '                logger.debug(`This task cannot be canceled. State: ${taskState}`);\n' +
    '                return;\n' +
    '            }\n' +
    "            cancelableTask.state = 'CANCELED';\n" +
    '            canceledErrorMessage = message;\n' +
    '            onCancel(canceledErrorMessage);\n' +
    '        },\n' +
    '        state,\n' +
    '    };\n' +
    '    const wrappedJobPromise = (async () => {\n' +
    '        try {\n' +
    '            const result = await job();\n' +
    "            cancelableTask.state = 'SUCCESS';\n" +
    '            return result;\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            if (isCancelError(e)) {\n' +
    "                cancelableTask.state = 'CANCELED';\n" +
    '                e.message = canceledErrorMessage ?? e.message;\n' +
    '            }\n' +
    "            cancelableTask.state = 'ERROR';\n" +
    '            throw e;\n' +
    '        }\n' +
    '    })();\n' +
    '    return Object.assign(cancelableTask, {\n' +
    '        result: wrappedJobPromise,\n' +
    '    });\n' +
    '};\n' +
    'const createDownloadTask = createCancellableTask;\n' +
    'const createUploadTask = ({ job, onCancel, onResume, onPause, isMultipartUpload, }) => {\n' +
    '    const cancellableTask = createCancellableTask({\n' +
    '        job,\n' +
    '        onCancel,\n' +
    '    });\n' +
    '    const uploadTask = Object.assign(cancellableTask, {\n' +
    '        pause: () => {\n' +
    '            const { state } = uploadTask;\n' +
    "            if (!isMultipartUpload || state !== 'IN_PROGRESS') {\n" +
    '                logger.debug(`This task cannot be paused. State: ${state}`);\n' +
    '                return;\n' +
    '            }\n' +
    '            // TODO(eslint): remove this linter suppression.\n' +
    '            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n' +
    '            // @ts-ignore\n' +
    "            uploadTask.state = 'PAUSED';\n" +
    '            onPause?.();\n' +
    '        },\n' +
    '        resume: () => {\n' +
    '            const { state } = uploadTask;\n' +
    "            if (!isMultipartUpload || state !== 'PAUSED') {\n" +
    '                logger.debug(`This task cannot be resumed. State: ${state}`);\n' +
    '                return;\n' +
    '            }\n' +
    '            // TODO(eslint): remove this linter suppression.\n' +
    '            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n' +
    '            // @ts-ignore\n' +
    "            uploadTask.state = 'IN_PROGRESS';\n" +
    '            onResume?.();\n' +
    '        },\n' +
    '    });\n' +
    '    return uploadTask;\n' +
    '};\n' +
    '\n' +
    'export { createDownloadTask, createUploadTask };\n' +
    '//# sourceMappingURL=transferTask.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { calculateContentMd5 } from '../../utils/md5.mjs';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import '../../../../errors/types/validation.mjs';\n" +
    "import '../../../../utils/logger.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import '../../utils/client/getObject.mjs';\n" +
    "import '../../utils/client/listObjectsV2.mjs';\n" +
    "import { putObject } from '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../utils/client/copyObject.mjs';\n" +
    "import '../../utils/client/headObject.mjs';\n" +
    "import '../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Get a function the returns a promise to call putObject API to S3.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const putObjectJob = ({ options: uploadDataOptions, key, data }, abortSignal, totalLength) => async () => {\n' +
    '    const { bucket, keyPrefix, s3Config, isObjectLockEnabled } = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n' +
    '    const finalKey = keyPrefix + key;\n' +
    "    const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', metadata, onProgress, } = uploadDataOptions ?? {};\n" +
    '    const { ETag: eTag, VersionId: versionId } = await putObject({\n' +
    '        ...s3Config,\n' +
    '        abortSignal,\n' +
    '        onUploadProgress: onProgress,\n' +
    '        userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n' +
    '    }, {\n' +
    '        Bucket: bucket,\n' +
    '        Key: finalKey,\n' +
    '        Body: data,\n' +
    '        ContentType: contentType,\n' +
    '        ContentDisposition: contentDisposition,\n' +
    '        ContentEncoding: contentEncoding,\n' +
    '        Metadata: metadata,\n' +
    '        ContentMD5: isObjectLockEnabled\n' +
    '            ? await calculateContentMd5(data)\n' +
    '            : undefined,\n' +
    '    });\n' +
    '    return {\n' +
    '        key,\n' +
    '        eTag,\n' +
    '        versionId,\n' +
    '        contentType,\n' +
    '        metadata,\n' +
    '        size: totalLength,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { putObjectJob };\n' +
    '//# sourceMappingURL=putObjectJob.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Calculate the total size of the data to be uploaded. The total size is not required for multipart upload, as it's\n" +
    ' * only used in progress report.\n' +
    ' */\n' +
    'const byteLength = (input) => {\n' +
    '    if (input === null || input === undefined)\n' +
    '        return 0;\n' +
    "    if (typeof input === 'string') {\n" +
    '        let len = input.length;\n' +
    '        for (let i = len - 1; i >= 0; i--) {\n' +
    '            const code = input.charCodeAt(i);\n' +
    '            if (code > 0x7f && code <= 0x7ff)\n' +
    '                len++;\n' +
    '            else if (code > 0x7ff && code <= 0xffff)\n' +
    '                len += 2;\n' +
    '            if (code >= 0xdc00 && code <= 0xdfff)\n' +
    '                i--; // trail surrogate\n' +
    '        }\n' +
    '        return len;\n' +
    '    }\n' +
    "    else if (typeof input.byteLength === 'number') {\n" +
    '        // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n' +
    '        return input.byteLength;\n' +
    '    }\n' +
    "    else if (typeof input.size === 'number') {\n" +
    '        // handles browser File object\n' +
    '        return input.size;\n' +
    '    }\n' +
    '    // TODO: support Node.js stream size when Node.js runtime is supported out-of-box.\n' +
    '    return undefined;\n' +
    '};\n' +
    '\n' +
    'export { byteLength };\n' +
    '//# sourceMappingURL=byteLength.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Amplify } from '@aws-amplify/core';\n" +
    "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { StorageError } from '../../../../../errors/StorageError.mjs';\n" +
    "import { resolveS3ConfigAndInput } from '../../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import { CanceledError } from '../../../../../errors/CanceledError.mjs';\n" +
    "import '../../../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../../../utils/logger.mjs';\n" +
    "import { DEFAULT_QUEUE_SIZE, DEFAULT_ACCESS_LEVEL } from '../../../utils/constants.mjs';\n" +
    "import '../../../utils/client/base.mjs';\n" +
    "import '../../../utils/client/getObject.mjs';\n" +
    "import '../../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../../utils/client/putObject.mjs';\n" +
    "import '../../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../../utils/client/uploadPart.mjs';\n" +
    "import { completeMultipartUpload } from '../../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../../utils/client/listParts.mjs';\n" +
    "import { abortMultipartUpload } from '../../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../../utils/client/copyObject.mjs';\n" +
    "import { headObject } from '../../../utils/client/headObject.mjs';\n" +
    "import '../../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../../utils/userAgent.mjs';\n" +
    "import { uploadPartExecutor } from './uploadPartExecutor.mjs';\n" +
    "import { getUploadsCacheKey, removeCachedUpload } from './uploadCache.mjs';\n" +
    "import { getConcurrentUploadsProgressTracker } from './progressTracker.mjs';\n" +
    "import { loadOrCreateMultipartUpload } from './initialUpload.mjs';\n" +
    "import { getDataChunker } from './getDataChunker.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Create closure hiding the multipart upload implementation details and expose the upload job and control functions(\n' +
    ' * onPause, onResume, onCancel).\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getMultipartUploadHandlers = ({ options: uploadDataOptions, key, data }, size) => {\n' +
    '    let resolveCallback;\n' +
    '    let rejectCallback;\n' +
    '    let inProgressUpload;\n' +
    '    let resolvedS3Config;\n' +
    '    let abortController;\n' +
    '    let resolvedBucket;\n' +
    '    let resolvedKeyPrefix;\n' +
    '    let uploadCacheKey;\n' +
    '    // Special flag that differentiates HTTP requests abort error caused by pause() from ones caused by cancel().\n' +
    '    // The former one should NOT cause the upload job to throw, but cancels any pending HTTP requests.\n' +
    '    // This should be replaced by a special abort reason. However,the support of this API is lagged behind.\n' +
    '    let isAbortSignalFromPause = false;\n' +
    '    const startUpload = async () => {\n' +
    '        const resolvedS3Options = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n' +
    '        resolvedS3Config = resolvedS3Options.s3Config;\n' +
    '        resolvedBucket = resolvedS3Options.bucket;\n' +
    '        resolvedKeyPrefix = resolvedS3Options.keyPrefix;\n' +
    '        abortController = new AbortController();\n' +
    '        isAbortSignalFromPause = false;\n' +
    "        const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', metadata, accessLevel, onProgress, } = uploadDataOptions ?? {};\n" +
    '        if (!inProgressUpload) {\n' +
    '            const { uploadId, cachedParts } = await loadOrCreateMultipartUpload({\n' +
    '                s3Config: resolvedS3Config,\n' +
    '                accessLevel: resolveAccessLevel(accessLevel),\n' +
    '                bucket: resolvedBucket,\n' +
    '                keyPrefix: resolvedKeyPrefix,\n' +
    '                key,\n' +
    '                contentType,\n' +
    '                contentDisposition,\n' +
    '                contentEncoding,\n' +
    '                metadata,\n' +
    '                data,\n' +
    '                size,\n' +
    '                abortSignal: abortController.signal,\n' +
    '            });\n' +
    '            inProgressUpload = {\n' +
    '                uploadId,\n' +
    '                completedParts: cachedParts,\n' +
    '            };\n' +
    '        }\n' +
    '        const finalKey = resolvedKeyPrefix + key;\n' +
    '        uploadCacheKey = size\n' +
    '            ? getUploadsCacheKey({\n' +
    '                file: data instanceof File ? data : undefined,\n' +
    '                accessLevel: resolveAccessLevel(uploadDataOptions?.accessLevel),\n' +
    '                contentType: uploadDataOptions?.contentType,\n' +
    '                bucket: resolvedBucket,\n' +
    '                size,\n' +
    '                key,\n' +
    '            })\n' +
    '            : undefined;\n' +
    '        const dataChunker = getDataChunker(data, size);\n' +
    '        const completedPartNumberSet = new Set(inProgressUpload.completedParts.map(({ PartNumber }) => PartNumber));\n' +
    '        const onPartUploadCompletion = (partNumber, eTag) => {\n' +
    '            inProgressUpload?.completedParts.push({\n' +
    '                PartNumber: partNumber,\n' +
    '                ETag: eTag,\n' +
    '            });\n' +
    '        };\n' +
    '        const concurrentUploadsProgressTracker = getConcurrentUploadsProgressTracker({\n' +
    '            size,\n' +
    '            onProgress,\n' +
    '        });\n' +
    '        const concurrentUploadPartExecutors = [];\n' +
    '        for (let index = 0; index < DEFAULT_QUEUE_SIZE; index++) {\n' +
    '            concurrentUploadPartExecutors.push(uploadPartExecutor({\n' +
    '                dataChunkerGenerator: dataChunker,\n' +
    '                completedPartNumberSet,\n' +
    '                s3Config: resolvedS3Config,\n' +
    '                abortSignal: abortController.signal,\n' +
    '                bucket: resolvedBucket,\n' +
    '                finalKey,\n' +
    '                uploadId: inProgressUpload.uploadId,\n' +
    '                onPartUploadCompletion,\n' +
    '                onProgress: concurrentUploadsProgressTracker.getOnProgressListener(),\n' +
    '                isObjectLockEnabled: resolvedS3Options.isObjectLockEnabled,\n' +
    '            }));\n' +
    '        }\n' +
    '        await Promise.all(concurrentUploadPartExecutors);\n' +
    '        const { ETag: eTag } = await completeMultipartUpload({\n' +
    '            ...resolvedS3Config,\n' +
    '            abortSignal: abortController.signal,\n' +
    '            userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n' +
    '        }, {\n' +
    '            Bucket: resolvedBucket,\n' +
    '            Key: finalKey,\n' +
    '            UploadId: inProgressUpload.uploadId,\n' +
    '            MultipartUpload: {\n' +
    '                Parts: inProgressUpload.completedParts.sort((partA, partB) => partA.PartNumber - partB.PartNumber),\n' +
    '            },\n' +
    '        });\n' +
    '        if (size) {\n' +
    '            const { ContentLength: uploadedObjectSize } = await headObject(resolvedS3Config, {\n' +
    '                Bucket: resolvedBucket,\n' +
    '                Key: finalKey,\n' +
    '            });\n' +
    '            if (uploadedObjectSize && uploadedObjectSize !== size) {\n' +
    '                throw new StorageError({\n' +
    "                    name: 'Error',\n" +
    '                    message: `Upload failed. Expected object size ${size}, but got ${uploadedObjectSize}.`,\n' +
    '                });\n' +
    '            }\n' +
    '        }\n' +
    '        if (uploadCacheKey) {\n' +
    '            await removeCachedUpload(uploadCacheKey);\n' +
    '        }\n' +
    '        return {\n' +
    '            key,\n' +
    '            eTag,\n' +
    '            contentType,\n' +
    '            metadata,\n' +
    '        };\n' +
    '    };\n' +
    '    const startUploadWithResumability = () => startUpload()\n' +
    '        .then(resolveCallback)\n' +
    '        .catch(error => {\n' +
    '        const abortSignal = abortController?.signal;\n' +
    '        if (abortSignal?.aborted && isAbortSignalFromPause) {\n' +
    "            logger.debug('upload paused.');\n" +
    '        }\n' +
    '        else {\n' +
    '            // Uncaught errors should be exposed to the users.\n' +
    '            rejectCallback(error);\n' +
    '        }\n' +
    '    });\n' +
    '    const multipartUploadJob = () => new Promise((resolve, reject) => {\n' +
    '        resolveCallback = resolve;\n' +
    '        rejectCallback = reject;\n' +
    '        startUploadWithResumability();\n' +
    '    });\n' +
    '    const onPause = () => {\n' +
    '        isAbortSignalFromPause = true;\n' +
    '        abortController?.abort();\n' +
    '    };\n' +
    '    const onResume = () => {\n' +
    '        startUploadWithResumability();\n' +
    '    };\n' +
    '    const onCancel = (message) => {\n' +
    '        // 1. abort in-flight API requests\n' +
    '        abortController?.abort(message);\n' +
    '        const cancelUpload = async () => {\n' +
    '            // 2. clear upload cache.\n' +
    '            if (uploadCacheKey) {\n' +
    '                await removeCachedUpload(uploadCacheKey);\n' +
    '            }\n' +
    '            // 3. clear multipart upload on server side.\n' +
    '            await abortMultipartUpload(resolvedS3Config, {\n' +
    '                Bucket: resolvedBucket,\n' +
    '                Key: resolvedKeyPrefix + key,\n' +
    '                UploadId: inProgressUpload?.uploadId,\n' +
    '            });\n' +
    '        };\n' +
    '        cancelUpload().catch(e => {\n' +
    "            logger.debug('error when cancelling upload task.', e);\n" +
    '        });\n' +
    '        rejectCallback(\n' +
    '        // Internal error that should not be exposed to the users. They should use isCancelError() to check if\n' +
    '        // the error is caused by cancel().\n' +
    '        new CanceledError(message ? { message } : undefined));\n' +
    '    };\n' +
    '    return {\n' +
    '        multipartUploadJob,\n' +
    '        onPause,\n' +
    '        onResume,\n' +
    '        onCancel,\n' +
    '    };\n' +
    '};\n' +
    'const resolveAccessLevel = (accessLevel) => accessLevel ??\n' +
    '    Amplify.libraryOptions.Storage?.S3?.defaultAccessLevel ??\n' +
    '    DEFAULT_ACCESS_LEVEL;\n' +
    '\n' +
    'export { getMultipartUploadHandlers };\n' +
    '//# sourceMappingURL=uploadHandlers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n" +
    "import { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\n" +
    "import { resolvePrefix } from '../../../utils/resolvePrefix.mjs';\n" +
    "import { DEFAULT_ACCESS_LEVEL, LOCAL_TESTING_S3_ENDPOINT } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * resolve the common input options for S3 API handlers from Amplify configuration and library options.\n' +
    ' *\n' +
    ' * @param {AmplifyClassV6} amplify The Amplify instance.\n' +
    ' * @param {S3ApiOptions} apiOptions The input options for S3 provider.\n' +
    ' * @returns {Promise<ResolvedS3ConfigAndInput>} The resolved common input options for S3 API handlers.\n' +
    ' * @throws A {@link StorageError} with `error.name` from {@link StorageValidationErrorCode} indicating invalid\n' +
    ' *   configurations or Amplify library options.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const resolveS3ConfigAndInput = async (amplify, apiOptions) => {\n' +
    '    // identityId is always cached in memory if forceRefresh is not set. So we can safely make calls here.\n' +
    '    const { credentials, identityId } = await amplify.Auth.fetchAuthSession({\n' +
    '        forceRefresh: false,\n' +
    '    });\n' +
    '    assertValidationError(!!credentials, StorageValidationErrorCode.NoCredentials);\n' +
    '    assertValidationError(!!identityId, StorageValidationErrorCode.NoIdentityId);\n' +
    '    const { bucket, region, dangerouslyConnectToHttpEndpointForTesting } = amplify.getConfig()?.Storage?.S3 ?? {};\n' +
    '    assertValidationError(!!bucket, StorageValidationErrorCode.NoBucket);\n' +
    '    assertValidationError(!!region, StorageValidationErrorCode.NoRegion);\n' +
    '    const { defaultAccessLevel, prefixResolver = resolvePrefix, isObjectLockEnabled, } = amplify.libraryOptions?.Storage?.S3 ?? {};\n' +
    '    const keyPrefix = await prefixResolver({\n' +
    '        accessLevel: apiOptions?.accessLevel ?? defaultAccessLevel ?? DEFAULT_ACCESS_LEVEL,\n' +
    '        // use conditional assign to make tsc happy because StorageOptions is a union type that may not have targetIdentityId\n' +
    "        targetIdentityId: apiOptions?.accessLevel === 'protected'\n" +
    '            ? apiOptions?.targetIdentityId ?? identityId\n' +
    '            : identityId,\n' +
    '    });\n' +
    '    return {\n' +
    '        s3Config: {\n' +
    '            credentials,\n' +
    '            region,\n' +
    '            useAccelerateEndpoint: apiOptions?.useAccelerateEndpoint,\n' +
    '            ...(dangerouslyConnectToHttpEndpointForTesting\n' +
    '                ? {\n' +
    '                    customEndpoint: LOCAL_TESTING_S3_ENDPOINT,\n' +
    '                    forcePathStyle: true,\n' +
    '                }\n' +
    '                : {}),\n' +
    '        },\n' +
    '        bucket,\n' +
    '        keyPrefix,\n' +
    '        isObjectLockEnabled,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { resolveS3ConfigAndInput };\n' +
    '//# sourceMappingURL=resolveS3ConfigAndInput.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/style-dictionary/lib/utils/es6_.js";'
} [Function: logger]
____9999999____ {
  code: "import { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { getRetryDecider, jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\n' +
    'const IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\n' +
    'const DOTS_PATTERN = /\\.\\./;\n' +
    '/**\n' +
    ' * The service name used to sign requests if the API requires authentication.\n' +
    ' */\n' +
    "const SERVICE_NAME = 's3';\n" +
    '/**\n' +
    ' * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n' +
    ' */\n' +
    'const endpointResolver = (options, apiInput) => {\n' +
    '    const { region, useAccelerateEndpoint, customEndpoint, forcePathStyle } = options;\n' +
    '    let endpoint;\n' +
    '    // 1. get base endpoint\n' +
    '    if (customEndpoint) {\n' +
    '        endpoint = new AmplifyUrl(customEndpoint);\n' +
    '    }\n' +
    '    else if (useAccelerateEndpoint) {\n' +
    '        if (forcePathStyle) {\n' +
    "            throw new Error('Path style URLs are not supported with S3 Transfer Acceleration.');\n" +
    '        }\n' +
    '        endpoint = new AmplifyUrl(`https://s3-accelerate.${getDnsSuffix(region)}`);\n' +
    '    }\n' +
    '    else {\n' +
    '        endpoint = new AmplifyUrl(`https://s3.${region}.${getDnsSuffix(region)}`);\n' +
    '    }\n' +
    '    // 2. inject bucket name\n' +
    '    if (apiInput?.Bucket) {\n' +
    '        if (!isDnsCompatibleBucketName(apiInput.Bucket)) {\n' +
    '            throw new Error(`Invalid bucket name: "${apiInput.Bucket}".`);\n' +
    '        }\n' +
    "        if (forcePathStyle || apiInput.Bucket.includes('.')) {\n" +
    '            endpoint.pathname = `/${apiInput.Bucket}`;\n' +
    '        }\n' +
    '        else {\n' +
    '            endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;\n' +
    '        }\n' +
    '    }\n' +
    '    return { url: endpoint };\n' +
    '};\n' +
    '/**\n' +
    ' * Determines whether a given string is DNS compliant per the rules outlined by\n' +
    ' * S3. Length, capitaization, and leading dot restrictions are enforced by the\n' +
    ' * DOMAIN_PATTERN regular expression.\n' +
    ' * @internal\n' +
    ' *\n' +
    ' * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n' +
    ' * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n' +
    ' */\n' +
    'const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) &&\n' +
    '    !IP_ADDRESS_PATTERN.test(bucketName) &&\n' +
    '    !DOTS_PATTERN.test(bucketName);\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const defaultConfig = {\n' +
    '    service: SERVICE_NAME,\n' +
    '    endpointResolver,\n' +
    '    retryDecider: getRetryDecider(parseXmlError),\n' +
    '    computeDelay: jitteredBackoff,\n' +
    '    userAgentValue: getAmplifyUserAgent(),\n' +
    '    useAccelerateEndpoint: false,\n' +
    '    uriEscapePath: false, // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n' +
    '};\n' +
    '\n' +
    'export { SERVICE_NAME, defaultConfig, isDnsCompatibleBucketName };\n' +
    '//# sourceMappingURL=base.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata, EMPTY_SHA256_HASH, presignUrl } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { CONTENT_SHA256_HEADER } from './runtime/constants.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map, deserializeBoolean, deserializeTimestamp, deserializeNumber, deserializeMetadata } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const USER_AGENT_HEADER = 'x-amz-user-agent';\n" +
    'const getObjectSerializer = async (input, endpoint) => {\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    '    return {\n' +
    "        method: 'GET',\n" +
    '        headers: {\n' +
    '            ...(input.Range && { Range: input.Range }),\n' +
    '        },\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const getObjectDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        return {\n' +
    '            ...map(response.headers, {\n' +
    "                DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n" +
    "                AcceptRanges: 'accept-ranges',\n" +
    "                Expiration: 'x-amz-expiration',\n" +
    "                Restore: 'x-amz-restore',\n" +
    "                LastModified: ['last-modified', deserializeTimestamp],\n" +
    "                ContentLength: ['content-length', deserializeNumber],\n" +
    "                ETag: 'etag',\n" +
    "                ChecksumCRC32: 'x-amz-checksum-crc32',\n" +
    "                ChecksumCRC32C: 'x-amz-checksum-crc32c',\n" +
    "                ChecksumSHA1: 'x-amz-checksum-sha1',\n" +
    "                ChecksumSHA256: 'x-amz-checksum-sha256',\n" +
    "                MissingMeta: ['x-amz-missing-meta', deserializeNumber],\n" +
    "                VersionId: 'x-amz-version-id',\n" +
    "                CacheControl: 'cache-control',\n" +
    "                ContentDisposition: 'content-disposition',\n" +
    "                ContentEncoding: 'content-encoding',\n" +
    "                ContentLanguage: 'content-language',\n" +
    "                ContentRange: 'content-range',\n" +
    "                ContentType: 'content-type',\n" +
    "                Expires: ['expires', deserializeTimestamp],\n" +
    "                WebsiteRedirectLocation: 'x-amz-website-redirect-location',\n" +
    "                ServerSideEncryption: 'x-amz-server-side-encryption',\n" +
    "                SSECustomerAlgorithm: 'x-amz-server-side-encryption-customer-algorithm',\n" +
    "                SSECustomerKeyMD5: 'x-amz-server-side-encryption-customer-key-md5',\n" +
    "                SSEKMSKeyId: 'x-amz-server-side-encryption-aws-kms-key-id',\n" +
    '                BucketKeyEnabled: [\n' +
    "                    'x-amz-server-side-encryption-bucket-key-enabled',\n" +
    '                    deserializeBoolean,\n' +
    '                ],\n' +
    "                StorageClass: 'x-amz-storage-class',\n" +
    "                RequestCharged: 'x-amz-request-charged',\n" +
    "                ReplicationStatus: 'x-amz-replication-status',\n" +
    "                PartsCount: ['x-amz-mp-parts-count', deserializeNumber],\n" +
    "                TagCount: ['x-amz-tagging-count', deserializeNumber],\n" +
    "                ObjectLockMode: 'x-amz-object-lock-mode',\n" +
    '                ObjectLockRetainUntilDate: [\n' +
    "                    'x-amz-object-lock-retain-until-date',\n" +
    '                    deserializeTimestamp,\n' +
    '                ],\n' +
    "                ObjectLockLegalHoldStatus: 'x-amz-object-lock-legal-hold',\n" +
    '            }),\n' +
    '            Metadata: deserializeMetadata(response.headers),\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            // @ts-expect-error The body is a CompatibleHttpResponse type because the lower-level handler is XHR instead of\n' +
    '            // fetch, which represents payload in Blob instread of ReadableStream.\n' +
    '            Body: response.body,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const getObject = composeServiceApi(s3TransferHandler, getObjectSerializer, getObjectDeserializer, { ...defaultConfig, responseType: 'blob' });\n" +
    '/**\n' +
    ' * Get a presigned URL for the `getObject` API.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getPresignedGetObjectUrl = async (config, input) => {\n' +
    '    const endpoint = defaultConfig.endpointResolver(config, input);\n' +
    '    const { url, headers, method } = await getObjectSerializer(input, endpoint);\n' +
    '    // TODO: set content sha256 query parameter with value of UNSIGNED-PAYLOAD instead of empty hash.\n' +
    '    // It requires changes in presignUrl. Without this change, the generated url still works,\n' +
    '    // but not the same as other tools like AWS SDK and CLI.\n' +
    '    url.searchParams.append(CONTENT_SHA256_HEADER, EMPTY_SHA256_HASH);\n' +
    '    if (config.userAgentValue) {\n' +
    '        url.searchParams.append(config.userAgentHeader ?? USER_AGENT_HEADER, config.userAgentValue);\n' +
    '    }\n' +
    '    for (const [headerName, value] of Object.entries(headers).sort(([key1], [key2]) => key1.localeCompare(key2))) {\n' +
    '        url.searchParams.append(headerName, value);\n' +
    '    }\n' +
    '    return presignUrl({ method, url, body: undefined }, {\n' +
    '        signingService: defaultConfig.service,\n' +
    '        signingRegion: config.region,\n' +
    '        ...defaultConfig,\n' +
    '        ...config,\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { getObject, getPresignedGetObjectUrl };\n' +
    '//# sourceMappingURL=getObject.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError, parseXmlBody } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map, emptyArrayGuard, deserializeBoolean, deserializeNumber, deserializeTimestamp } from './utils/deserializeHelpers.mjs';\n" +
    "import { assignStringVariables } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const listObjectsV2Serializer = (input, endpoint) => {\n' +
    '    const headers = assignStringVariables({\n' +
    "        'x-amz-request-payer': input.RequestPayer,\n" +
    "        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n" +
    '    });\n' +
    '    const query = assignStringVariables({\n' +
    "        'list-type': '2',\n" +
    "        'continuation-token': input.ContinuationToken,\n" +
    '        delimiter: input.Delimiter,\n' +
    "        'encoding-type': input.EncodingType,\n" +
    "        'fetch-owner': input.FetchOwner,\n" +
    "        'max-keys': input.MaxKeys,\n" +
    '        prefix: input.Prefix,\n' +
    "        'start-after': input.StartAfter,\n" +
    '    });\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    '    url.search = new AmplifyUrlSearchParams(query).toString();\n' +
    '    return {\n' +
    "        method: 'GET',\n" +
    '        headers,\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const listObjectsV2Deserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        // error is always set when statusCode >= 300\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const parsed = await parseXmlBody(response);\n' +
    '        const contents = map(parsed, {\n' +
    '            CommonPrefixes: [\n' +
    "                'CommonPrefixes',\n" +
    '                value => emptyArrayGuard(value, deserializeCommonPrefixList),\n' +
    '            ],\n' +
    '            Contents: [\n' +
    "                'Contents',\n" +
    '                value => emptyArrayGuard(value, deserializeObjectList),\n' +
    '            ],\n' +
    "            ContinuationToken: 'ContinuationToken',\n" +
    "            Delimiter: 'Delimiter',\n" +
    "            EncodingType: 'EncodingType',\n" +
    "            IsTruncated: ['IsTruncated', deserializeBoolean],\n" +
    "            KeyCount: ['KeyCount', deserializeNumber],\n" +
    "            MaxKeys: ['MaxKeys', deserializeNumber],\n" +
    "            Name: 'Name',\n" +
    "            NextContinuationToken: 'NextContinuationToken',\n" +
    "            Prefix: 'Prefix',\n" +
    "            StartAfter: 'StartAfter',\n" +
    '        });\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            ...contents,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    'const deserializeCommonPrefixList = (output) => output.map(deserializeCommonPrefix);\n' +
    'const deserializeCommonPrefix = (output) => map(output, {\n' +
    "    Prefix: 'Prefix',\n" +
    '});\n' +
    'const deserializeObjectList = (output) => output.map(deserializeObject);\n' +
    'const deserializeObject = (output) => map(output, {\n' +
    "    Key: 'Key',\n" +
    "    LastModified: ['LastModified', deserializeTimestamp],\n" +
    "    ETag: 'ETag',\n" +
    '    ChecksumAlgorithm: [\n' +
    "        'ChecksumAlgorithm',\n" +
    '        value => emptyArrayGuard(value, deserializeChecksumAlgorithmList),\n' +
    '    ],\n' +
    "    Size: ['Size', deserializeNumber],\n" +
    "    StorageClass: 'StorageClass',\n" +
    "    Owner: ['Owner', deserializeOwner],\n" +
    '});\n' +
    'const deserializeChecksumAlgorithmList = (output) => output.map(entry => String(entry));\n' +
    "const deserializeOwner = (output) => map(output, { DisplayName: 'DisplayName', ID: 'ID' });\n" +
    "const listObjectsV2 = composeServiceApi(s3TransferHandler, listObjectsV2Serializer, listObjectsV2Deserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { listObjectsV2 };\n' +
    '//# sourceMappingURL=listObjectsV2.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map } from './utils/deserializeHelpers.mjs';\n" +
    "import { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const putObjectSerializer = async (input, endpoint) => {\n' +
    '    const headers = {\n' +
    '        ...(await serializeObjectConfigsToHeaders({\n' +
    '            ...input,\n' +
    "            ContentType: input.ContentType ?? 'application/octet-stream',\n" +
    '        })),\n' +
    "        ...assignStringVariables({ 'content-md5': input.ContentMD5 }),\n" +
    '    };\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    '    return {\n' +
    "        method: 'PUT',\n" +
    '        headers,\n' +
    '        url,\n' +
    '        body: input.Body,\n' +
    '    };\n' +
    '};\n' +
    'const putObjectDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        return {\n' +
    '            ...map(response.headers, {\n' +
    "                ETag: 'etag',\n" +
    "                VersionId: 'x-amz-version-id',\n" +
    '            }),\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const putObject = composeServiceApi(s3TransferHandler, putObjectSerializer, putObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { putObject };\n' +
    '//# sourceMappingURL=putObject.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError, parseXmlBody } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map } from './utils/deserializeHelpers.mjs';\n" +
    "import { serializeObjectConfigsToHeaders, validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const createMultipartUploadSerializer = async (input, endpoint) => {\n' +
    '    const headers = await serializeObjectConfigsToHeaders(input);\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    "    url.search = 'uploads';\n" +
    '    return {\n' +
    "        method: 'POST',\n" +
    '        headers,\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const createMultipartUploadDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const parsed = await parseXmlBody(response);\n' +
    '        const contents = map(parsed, {\n' +
    "            UploadId: 'UploadId',\n" +
    '        });\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            ...contents,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const createMultipartUpload = composeServiceApi(s3TransferHandler, createMultipartUploadSerializer, createMultipartUploadDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { createMultipartUpload };\n' +
    '//# sourceMappingURL=createMultipartUpload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map } from './utils/deserializeHelpers.mjs';\n" +
    "import { assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const uploadPartSerializer = async (input, endpoint) => {\n' +
    '    const headers = {\n' +
    "        ...assignStringVariables({ 'content-md5': input.ContentMD5 }),\n" +
    '    };\n' +
    "    headers['content-type'] = 'application/octet-stream';\n" +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    "    validateS3RequiredParameter(!!input.PartNumber, 'PartNumber');\n" +
    "    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n" +
    '    url.search = new AmplifyUrlSearchParams({\n' +
    "        partNumber: input.PartNumber + '',\n" +
    '        uploadId: input.UploadId,\n' +
    '    }).toString();\n' +
    '    return {\n' +
    "        method: 'PUT',\n" +
    '        headers,\n' +
    '        url,\n' +
    '        body: input.Body,\n' +
    '    };\n' +
    '};\n' +
    'const uploadPartDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        return {\n' +
    '            ...map(response.headers, {\n' +
    "                ETag: 'etag',\n" +
    '            }),\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const uploadPart = composeServiceApi(s3TransferHandler, uploadPartSerializer, uploadPartDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { uploadPart };\n' +
    '//# sourceMappingURL=uploadPart.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError, parseXmlBody } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const INVALID_PARAMETER_ERROR_MSG = 'Invalid parameter for ComplteMultipartUpload API';\n" +
    'const completeMultipartUploadSerializer = async (input, endpoint) => {\n' +
    '    const headers = {\n' +
    "        'content-type': 'application/xml',\n" +
    '    };\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    "    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n" +
    '    url.search = new AmplifyUrlSearchParams({\n' +
    '        uploadId: input.UploadId,\n' +
    '    }).toString();\n' +
    "    validateS3RequiredParameter(!!input.MultipartUpload, 'MultipartUpload');\n" +
    '    return {\n' +
    "        method: 'POST',\n" +
    '        headers,\n' +
    '        url,\n' +
    `        body: '<?xml version="1.0" encoding="UTF-8"?>' +\n` +
    '            serializeCompletedMultipartUpload(input.MultipartUpload),\n' +
    '    };\n' +
    '};\n' +
    'const serializeCompletedMultipartUpload = (input) => {\n' +
    '    if (!input.Parts?.length) {\n' +
    '        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);\n' +
    '    }\n' +
    '    return `<CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/">${input.Parts.map(serializeCompletedPartList).join(\'\')}</CompleteMultipartUpload>`;\n' +
    '};\n' +
    'const serializeCompletedPartList = (input) => {\n' +
    '    if (!input.ETag || input.PartNumber == null) {\n' +
    '        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);\n' +
    '    }\n' +
    '    return `<Part><ETag>${input.ETag}</ETag><PartNumber>${input.PartNumber}</PartNumber></Part>`;\n' +
    '};\n' +
    '/**\n' +
    ' * Parse CompleteMultipartUpload API response payload, which may be empty or error indicating internal\n' +
    ' * server error, even when the status code is 200.\n' +
    ' *\n' +
    ' * Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\n' +
    ' */\n' +
    'const parseXmlBodyOrThrow = async (response) => {\n' +
    '    const parsed = await parseXmlBody(response); // Handles empty body case\n' +
    '    if (parsed.Code !== undefined && parsed.Message !== undefined) {\n' +
    '        const error = (await parseXmlError({\n' +
    '            ...response,\n' +
    '            statusCode: 500, // To workaround the >=300 status code check common to other APIs.\n' +
    '        }));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    return parsed;\n' +
    '};\n' +
    'const completeMultipartUploadDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const parsed = await parseXmlBodyOrThrow(response);\n' +
    '        const contents = map(parsed, {\n' +
    "            ETag: 'ETag',\n" +
    "            Key: 'Key',\n" +
    "            Location: 'Location',\n" +
    '        });\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            ...contents,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    '// CompleteMultiPartUpload API returns 200 status code with empty body or error message.\n' +
    '// This indicates internal server error after the response has been sent to the client.\n' +
    '// Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\n' +
    'const retryWhenErrorWith200StatusCode = async (response, error) => {\n' +
    '    if (!response) {\n' +
    '        return false;\n' +
    '    }\n' +
    '    if (response.statusCode === 200) {\n' +
    '        if (!response.body) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        const parsed = await parseXmlBody(response);\n' +
    '        if (parsed.Code !== undefined && parsed.Message !== undefined) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        return false;\n' +
    '    }\n' +
    '    const defaultRetryDecider = defaultConfig.retryDecider;\n' +
    '    return defaultRetryDecider(response, error);\n' +
    '};\n' +
    'const completeMultipartUpload = composeServiceApi(s3TransferHandler, completeMultipartUploadSerializer, completeMultipartUploadDeserializer, {\n' +
    '    ...defaultConfig,\n' +
    "    responseType: 'text',\n" +
    '    retryDecider: retryWhenErrorWith200StatusCode,\n' +
    '});\n' +
    '\n' +
    'export { completeMultipartUpload };\n' +
    '//# sourceMappingURL=completeMultipartUpload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError, parseXmlBody } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map, emptyArrayGuard, deserializeNumber } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const listPartsSerializer = async (input, endpoint) => {\n' +
    '    const headers = {};\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    "    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n" +
    '    url.search = new AmplifyUrlSearchParams({\n' +
    '        uploadId: input.UploadId,\n' +
    '    }).toString();\n' +
    '    return {\n' +
    "        method: 'GET',\n" +
    '        headers,\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const listPartsDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const parsed = await parseXmlBody(response);\n' +
    '        const contents = map(parsed, {\n' +
    "            UploadId: 'UploadId',\n" +
    '            Parts: [\n' +
    "                'Part',\n" +
    '                value => emptyArrayGuard(value, deserializeCompletedPartList),\n' +
    '            ],\n' +
    '        });\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            ...contents,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    'const deserializeCompletedPartList = (input) => input.map(item => map(item, {\n' +
    "    PartNumber: ['PartNumber', deserializeNumber],\n" +
    "    ETag: 'ETag',\n" +
    "    Size: ['Size', deserializeNumber],\n" +
    '}));\n' +
    "const listParts = composeServiceApi(s3TransferHandler, listPartsSerializer, listPartsDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { listParts };\n' +
    '//# sourceMappingURL=listParts.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const abortMultipartUploadSerializer = (input, endpoint) => {\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    "    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n" +
    '    url.search = new AmplifyUrlSearchParams({\n' +
    '        uploadId: input.UploadId,\n' +
    '    }).toString();\n' +
    '    return {\n' +
    "        method: 'DELETE',\n" +
    '        headers: {},\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const abortMultipartUploadDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const abortMultipartUpload = composeServiceApi(s3TransferHandler, abortMultipartUploadSerializer, abortMultipartUploadDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { abortMultipartUpload };\n' +
    '//# sourceMappingURL=abortMultipartUpload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError, parseXmlBody } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError } from './utils/deserializeHelpers.mjs';\n" +
    "import { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const copyObjectSerializer = async (input, endpoint) => {\n' +
    '    const headers = {\n' +
    '        ...(await serializeObjectConfigsToHeaders(input)),\n' +
    '        ...assignStringVariables({\n' +
    "            'x-amz-copy-source': input.CopySource,\n" +
    "            'x-amz-metadata-directive': input.MetadataDirective,\n" +
    '        }),\n' +
    '    };\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    '    return {\n' +
    "        method: 'PUT',\n" +
    '        headers,\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const copyObjectDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        await parseXmlBody(response);\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const copyObject = composeServiceApi(s3TransferHandler, copyObjectSerializer, copyObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { copyObject };\n' +
    '//# sourceMappingURL=copyObject.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map, deserializeNumber, deserializeTimestamp, deserializeMetadata } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const headObjectSerializer = async (input, endpoint) => {\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    '    return {\n' +
    "        method: 'HEAD',\n" +
    '        headers: {},\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const headObjectDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        // error is always set when statusCode >= 300\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const contents = {\n' +
    '            ...map(response.headers, {\n' +
    "                ContentLength: ['content-length', deserializeNumber],\n" +
    "                ContentType: 'content-type',\n" +
    "                ETag: 'etag',\n" +
    "                LastModified: ['last-modified', deserializeTimestamp],\n" +
    "                VersionId: 'x-amz-version-id',\n" +
    '            }),\n' +
    '            Metadata: deserializeMetadata(response.headers),\n' +
    '        };\n' +
    '        return {\n' +
    '            $metadata: parseMetadata(response),\n' +
    '            ...contents,\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const headObject = composeServiceApi(s3TransferHandler, headObjectSerializer, headObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { headObject };\n' +
    '//# sourceMappingURL=headObject.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'var scheduler = {exports: {}}; export {scheduler as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/scheduler/cjs/scheduler.production.min.js";'
} [Function: logger]
____9999999____ {
  code: "import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function getStorageUserAgentValue(action) {\n' +
    '    return getAmplifyUserAgent({\n' +
    '        category: Category.Storage,\n' +
    '        action,\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'export { getStorageUserAgentValue };\n' +
    '//# sourceMappingURL=userAgent.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { ConsoleLogger } from '@aws-amplify/core';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('Storage');\n" +
    '\n' +
    'export { logger };\n' +
    '//# sourceMappingURL=logger.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n" +
    "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\n" +
    "import { defaultConfig } from './base.mjs';\n" +
    "import { parseXmlError } from './utils/parsePayload.mjs';\n" +
    "import { s3TransferHandler } from './runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { buildStorageServiceError, map, deserializeBoolean } from './utils/deserializeHelpers.mjs';\n" +
    "import { validateS3RequiredParameter, serializePathnameObjectKey } from './utils/serializeHelpers.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const deleteObjectSerializer = (input, endpoint) => {\n' +
    '    const url = new AmplifyUrl(endpoint.url.toString());\n' +
    "    validateS3RequiredParameter(!!input.Key, 'Key');\n" +
    '    url.pathname = serializePathnameObjectKey(url, input.Key);\n' +
    '    return {\n' +
    "        method: 'DELETE',\n" +
    '        headers: {},\n' +
    '        url,\n' +
    '    };\n' +
    '};\n' +
    'const deleteObjectDeserializer = async (response) => {\n' +
    '    if (response.statusCode >= 300) {\n' +
    '        // error is always set when statusCode >= 300\n' +
    '        const error = (await parseXmlError(response));\n' +
    '        throw buildStorageServiceError(error, response.statusCode);\n' +
    '    }\n' +
    '    else {\n' +
    '        const content = map(response.headers, {\n' +
    "            DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n" +
    "            VersionId: 'x-amz-version-id',\n" +
    "            RequestCharged: 'x-amz-request-charged',\n" +
    '        });\n' +
    '        return {\n' +
    '            ...content,\n' +
    '            $metadata: parseMetadata(response),\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    "const deleteObject = composeServiceApi(s3TransferHandler, deleteObjectSerializer, deleteObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n" +
    '\n' +
    'export { deleteObject };\n' +
    '//# sourceMappingURL=deleteObject.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import '../../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../../utils/logger.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import '../../utils/client/getObject.mjs';\n" +
    "import '../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../utils/client/copyObject.mjs';\n" +
    "import '../../utils/client/headObject.mjs';\n" +
    "import { deleteObject } from '../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const remove = async (amplify, input) => {\n' +
    '    const { key, options = {} } = input;\n' +
    '    const { s3Config, keyPrefix, bucket } = await resolveS3ConfigAndInput(amplify, options);\n' +
    '    const finalKey = `${keyPrefix}${key}`;\n' +
    '    logger.debug(`remove "${key}" from "${finalKey}".`);\n' +
    '    await deleteObject({\n' +
    '        ...s3Config,\n' +
    '        userAgentValue: getStorageUserAgentValue(StorageAction.Remove),\n' +
    '    }, {\n' +
    '        Bucket: bucket,\n' +
    '        Key: finalKey,\n' +
    '    });\n' +
    '    return {\n' +
    '        key,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { remove };\n' +
    '//# sourceMappingURL=remove.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import '../../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../../utils/logger.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import '../../utils/client/getObject.mjs';\n" +
    "import { listObjectsV2 } from '../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../utils/client/copyObject.mjs';\n" +
    "import '../../utils/client/headObject.mjs';\n" +
    "import '../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const MAX_PAGE_SIZE = 1000;\n' +
    'const list = async (amplify, input) => {\n' +
    "    const { options = {}, prefix: path = '' } = input ?? {};\n" +
    '    const { s3Config, bucket, keyPrefix: prefix, } = await resolveS3ConfigAndInput(amplify, options);\n' +
    '    // @ts-expect-error pageSize and nextToken should not coexist with listAll\n' +
    '    if (options?.listAll && (options?.pageSize || options?.nextToken)) {\n' +
    '        const anyOptions = options;\n' +
    "        logger.debug(`listAll is set to true, ignoring ${anyOptions?.pageSize ? `pageSize: ${anyOptions?.pageSize}` : ''} ${anyOptions?.nextToken ? `nextToken: ${anyOptions?.nextToken}` : ''}.`);\n" +
    '    }\n' +
    '    const listParams = {\n' +
    '        Bucket: bucket,\n' +
    '        Prefix: `${prefix}${path}`,\n' +
    '        MaxKeys: options?.listAll ? undefined : options?.pageSize,\n' +
    '        ContinuationToken: options?.listAll ? undefined : options?.nextToken,\n' +
    '    };\n' +
    '    logger.debug(`listing items from "${listParams.Prefix}"`);\n' +
    '    return options.listAll\n' +
    '        ? _listAll({ s3Config, listParams, prefix })\n' +
    '        : _list({ s3Config, listParams, prefix });\n' +
    '};\n' +
    'const _listAll = async ({ s3Config, listParams, prefix, }) => {\n' +
    '    const listResult = [];\n' +
    '    let continuationToken = listParams.ContinuationToken;\n' +
    '    do {\n' +
    '        const { items: pageResults, nextToken: pageNextToken } = await _list({\n' +
    '            prefix,\n' +
    '            s3Config,\n' +
    '            listParams: {\n' +
    '                ...listParams,\n' +
    '                ContinuationToken: continuationToken,\n' +
    '                MaxKeys: MAX_PAGE_SIZE,\n' +
    '            },\n' +
    '        });\n' +
    '        listResult.push(...pageResults);\n' +
    '        continuationToken = pageNextToken;\n' +
    '    } while (continuationToken);\n' +
    '    return {\n' +
    '        items: listResult,\n' +
    '    };\n' +
    '};\n' +
    'const _list = async ({ s3Config, listParams, prefix, }) => {\n' +
    '    const listParamsClone = { ...listParams };\n' +
    '    if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n' +
    '        logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n' +
    '        listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n' +
    '    }\n' +
    '    const response = await listObjectsV2({\n' +
    '        ...s3Config,\n' +
    '        userAgentValue: getStorageUserAgentValue(StorageAction.List),\n' +
    '    }, listParamsClone);\n' +
    '    if (!response?.Contents) {\n' +
    '        return {\n' +
    '            items: [],\n' +
    '        };\n' +
    '    }\n' +
    '    const listResult = response.Contents.map(item => ({\n' +
    '        key: item.Key.substring(prefix.length),\n' +
    '        eTag: item.ETag,\n' +
    '        lastModified: item.LastModified,\n' +
    '        size: item.Size,\n' +
    '    }));\n' +
    '    return {\n' +
    '        items: listResult,\n' +
    '        nextToken: response.NextContinuationToken,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { list };\n' +
    '//# sourceMappingURL=list.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import { assertValidationError } from '../../../../errors/utils/assertValidationError.mjs';\n" +
    "import { StorageValidationErrorCode } from '../../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../../utils/logger.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import '../../utils/client/getObject.mjs';\n" +
    "import '../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import { copyObject } from '../../utils/client/copyObject.mjs';\n" +
    "import '../../utils/client/headObject.mjs';\n" +
    "import '../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const copy = async (amplify, input) => {\n' +
    '    const { source: { key: sourceKey }, destination: { key: destinationKey }, } = input;\n' +
    '    assertValidationError(!!sourceKey, StorageValidationErrorCode.NoSourceKey);\n' +
    '    assertValidationError(!!destinationKey, StorageValidationErrorCode.NoDestinationKey);\n' +
    '    const { s3Config, bucket, keyPrefix: sourceKeyPrefix, } = await resolveS3ConfigAndInput(amplify, input.source);\n' +
    '    const { keyPrefix: destinationKeyPrefix } = await resolveS3ConfigAndInput(amplify, input.destination); // resolveS3ConfigAndInput does not make extra API calls or storage access if called repeatedly.\n' +
    '    // TODO(ashwinkumar6) V6-logger: warn `You may copy files from another user if the source level is "protected", currently it\'s ${srcLevel}`\n' +
    '    const finalCopySource = `${bucket}/${sourceKeyPrefix}${sourceKey}`;\n' +
    '    const finalCopyDestination = `${destinationKeyPrefix}${destinationKey}`;\n' +
    '    logger.debug(`copying "${finalCopySource}" to "${finalCopyDestination}".`);\n' +
    '    await copyObject({\n' +
    '        ...s3Config,\n' +
    '        userAgentValue: getStorageUserAgentValue(StorageAction.Copy),\n' +
    '    }, {\n' +
    '        Bucket: bucket,\n' +
    '        CopySource: finalCopySource,\n' +
    '        Key: finalCopyDestination,\n' +
    "        MetadataDirective: 'COPY', // Copies over metadata like contentType as well\n" +
    '    });\n' +
    '    return {\n' +
    '        key: destinationKey,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { copy };\n' +
    '//# sourceMappingURL=copy.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import '../../../../errors/types/validation.mjs';\n" +
    "import { logger } from '../../../../utils/logger.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import '../../utils/client/getObject.mjs';\n" +
    "import '../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../utils/client/copyObject.mjs';\n" +
    "import { headObject } from '../../utils/client/headObject.mjs';\n" +
    "import '../../utils/client/deleteObject.mjs';\n" +
    "import { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getProperties = async (amplify, input, action) => {\n' +
    '    const { key, options } = input;\n' +
    '    const { s3Config, bucket, keyPrefix } = await resolveS3ConfigAndInput(amplify, options);\n' +
    '    const finalKey = `${keyPrefix}${key}`;\n' +
    '    logger.debug(`get properties of ${key} from ${finalKey}`);\n' +
    '    const response = await headObject({\n' +
    '        ...s3Config,\n' +
    '        userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties),\n' +
    '    }, {\n' +
    '        Bucket: bucket,\n' +
    '        Key: finalKey,\n' +
    '    });\n' +
    '    return {\n' +
    '        key,\n' +
    '        contentType: response.ContentType,\n' +
    '        size: response.ContentLength,\n' +
    '        eTag: response.ETag,\n' +
    '        lastModified: response.LastModified,\n' +
    '        metadata: response.Metadata,\n' +
    '        versionId: response.VersionId,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getProperties };\n' +
    '//# sourceMappingURL=getProperties.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageAction } from '@aws-amplify/core/internals/utils';\n" +
    "import { StorageValidationErrorCode } from '../../../../errors/types/validation.mjs';\n" +
    "import '../../utils/client/base.mjs';\n" +
    "import { getPresignedGetObjectUrl } from '../../utils/client/getObject.mjs';\n" +
    "import '../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../utils/client/putObject.mjs';\n" +
    "import '../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../utils/client/uploadPart.mjs';\n" +
    "import '../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../utils/client/listParts.mjs';\n" +
    "import '../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../utils/client/copyObject.mjs';\n" +
    "import '../../utils/client/headObject.mjs';\n" +
    "import '../../utils/client/deleteObject.mjs';\n" +
    "import '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    "import { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\n" +
    "import { assertValidationError } from '../../../../errors/utils/assertValidationError.mjs';\n" +
    "import '../../../../utils/logger.mjs';\n" +
    "import { DEFAULT_PRESIGN_EXPIRATION, MAX_URL_EXPIRATION } from '../../utils/constants.mjs';\n" +
    "import { getProperties } from './getProperties.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getUrl = async (amplify, input) => {\n' +
    '    const { key, options } = input;\n' +
    '    if (options?.validateObjectExistence) {\n' +
    '        await getProperties(amplify, { key, options }, StorageAction.GetUrl);\n' +
    '    }\n' +
    '    const { s3Config, keyPrefix, bucket } = await resolveS3ConfigAndInput(amplify, options);\n' +
    '    let urlExpirationInSec = options?.expiresIn ?? DEFAULT_PRESIGN_EXPIRATION;\n' +
    '    const awsCredExpiration = s3Config.credentials?.expiration;\n' +
    '    if (awsCredExpiration) {\n' +
    '        const awsCredExpirationInSec = Math.floor((awsCredExpiration.getTime() - Date.now()) / 1000);\n' +
    '        urlExpirationInSec = Math.min(awsCredExpirationInSec, urlExpirationInSec);\n' +
    '    }\n' +
    '    const maxUrlExpirationInSec = MAX_URL_EXPIRATION / 1000;\n' +
    '    assertValidationError(urlExpirationInSec <= maxUrlExpirationInSec, StorageValidationErrorCode.UrlExpirationMaxLimitExceed);\n' +
    '    // expiresAt is the minimum of credential expiration and url expiration\n' +
    '    return {\n' +
    '        url: await getPresignedGetObjectUrl({\n' +
    '            ...s3Config,\n' +
    '            expiration: urlExpirationInSec,\n' +
    '        }, {\n' +
    '            Bucket: bucket,\n' +
    '            Key: `${keyPrefix}${key}`,\n' +
    '        }),\n' +
    '        expiresAt: new Date(Date.now() + urlExpirationInSec * 1000),\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getUrl };\n' +
    '//# sourceMappingURL=getUrl.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/style-dictionary/lib/utils/references/createReferenceRegex.js";'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A specialized version of `_.map` for arrays without support for iteratee\n' +
    ' * shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} [array] The array to iterate over.\n' +
    ' * @param {Function} iteratee The function invoked per iteration.\n' +
    ' * @returns {Array} Returns the new mapped array.\n' +
    ' */\n' +
    'function arrayMap(array, iteratee) {\n' +
    '  var index = -1,\n' +
    '      length = array == null ? 0 : array.length,\n' +
    '      result = Array(length);\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    result[index] = iteratee(array[index], index, array);\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = arrayMap;\n'
} [Function: logger]
____9999999____ {
  code: "var baseMatches = require('./_baseMatches'),\n" +
    "    baseMatchesProperty = require('./_baseMatchesProperty'),\n" +
    "    identity = require('./identity'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    property = require('./property');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.iteratee`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} [value=_.identity] The value to convert to an iteratee.\n' +
    ' * @returns {Function} Returns the iteratee.\n' +
    ' */\n' +
    'function baseIteratee(value) {\n' +
    "  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n" +
    '  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n' +
    "  if (typeof value == 'function') {\n" +
    '    return value;\n' +
    '  }\n' +
    '  if (value == null) {\n' +
    '    return identity;\n' +
    '  }\n' +
    "  if (typeof value == 'object') {\n" +
    '    return isArray(value)\n' +
    '      ? baseMatchesProperty(value[0], value[1])\n' +
    '      : baseMatches(value);\n' +
    '  }\n' +
    '  return property(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIteratee;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGet = require('./_baseGet'),\n" +
    "    baseSet = require('./_baseSet'),\n" +
    "    castPath = require('./_castPath');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The source object.\n' +
    ' * @param {string[]} paths The property paths to pick.\n' +
    ' * @param {Function} predicate The function invoked per property.\n' +
    ' * @returns {Object} Returns the new object.\n' +
    ' */\n' +
    'function basePickBy(object, paths, predicate) {\n' +
    '  var index = -1,\n' +
    '      length = paths.length,\n' +
    '      result = {};\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    var path = paths[index],\n' +
    '        value = baseGet(object, path);\n' +
    '\n' +
    '    if (predicate(value, path)) {\n' +
    '      baseSet(result, castPath(path, object), value);\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = basePickBy;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetAllKeys = require('./_baseGetAllKeys'),\n" +
    "    getSymbolsIn = require('./_getSymbolsIn'),\n" +
    "    keysIn = require('./keysIn');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an array of own and inherited enumerable property names and\n' +
    ' * symbols of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names and symbols.\n' +
    ' */\n' +
    'function getAllKeysIn(object) {\n' +
    '  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n' +
    '}\n' +
    '\n' +
    'module.exports = getAllKeysIn;\n'
} [Function: logger]
____9999999____ {
  code: "var Stack = require('./_Stack'),\n" +
    "    assignMergeValue = require('./_assignMergeValue'),\n" +
    "    baseFor = require('./_baseFor'),\n" +
    "    baseMergeDeep = require('./_baseMergeDeep'),\n" +
    "    isObject = require('./isObject'),\n" +
    "    keysIn = require('./keysIn'),\n" +
    "    safeGet = require('./_safeGet');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.merge` without support for multiple sources.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The destination object.\n' +
    ' * @param {Object} source The source object.\n' +
    ' * @param {number} srcIndex The index of `source`.\n' +
    ' * @param {Function} [customizer] The function to customize merged values.\n' +
    ' * @param {Object} [stack] Tracks traversed source values and their merged\n' +
    ' *  counterparts.\n' +
    ' */\n' +
    'function baseMerge(object, source, srcIndex, customizer, stack) {\n' +
    '  if (object === source) {\n' +
    '    return;\n' +
    '  }\n' +
    '  baseFor(source, function(srcValue, key) {\n' +
    '    stack || (stack = new Stack);\n' +
    '    if (isObject(srcValue)) {\n' +
    '      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n' +
    '    }\n' +
    '    else {\n' +
    '      var newValue = customizer\n' +
    "        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n" +
    '        : undefined;\n' +
    '\n' +
    '      if (newValue === undefined) {\n' +
    '        newValue = srcValue;\n' +
    '      }\n' +
    '      assignMergeValue(object, key, newValue);\n' +
    '    }\n' +
    '  }, keysIn);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseMerge;\n'
} [Function: logger]
____9999999____ {
  code: "var baseRest = require('./_baseRest'),\n" +
    "    isIterateeCall = require('./_isIterateeCall');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a function like `_.assign`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} assigner The function to assign values.\n' +
    ' * @returns {Function} Returns the new assigner function.\n' +
    ' */\n' +
    'function createAssigner(assigner) {\n' +
    '  return baseRest(function(object, sources) {\n' +
    '    var index = -1,\n' +
    '        length = sources.length,\n' +
    '        customizer = length > 1 ? sources[length - 1] : undefined,\n' +
    '        guard = length > 2 ? sources[2] : undefined;\n' +
    '\n' +
    "    customizer = (assigner.length > 3 && typeof customizer == 'function')\n" +
    '      ? (length--, customizer)\n' +
    '      : undefined;\n' +
    '\n' +
    '    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n' +
    '      customizer = length < 3 ? undefined : customizer;\n' +
    '      length = 1;\n' +
    '    }\n' +
    '    object = Object(object);\n' +
    '    while (++index < length) {\n' +
    '      var source = sources[index];\n' +
    '      if (source) {\n' +
    '        assigner(object, source, index, customizer);\n' +
    '      }\n' +
    '    }\n' +
    '    return object;\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'module.exports = createAssigner;\n'
} [Function: logger]
____9999999____ {
  code: "var basePropertyOf = require('./_basePropertyOf');\n" +
    '\n' +
    '/** Used to map Latin Unicode letters to basic Latin letters. */\n' +
    'var deburredLetters = {\n' +
    '  // Latin-1 Supplement block.\n' +
    "  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n" +
    "  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n" +
    "  '\\xc7': 'C',  '\\xe7': 'c',\n" +
    "  '\\xd0': 'D',  '\\xf0': 'd',\n" +
    "  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n" +
    "  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n" +
    "  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n" +
    "  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n" +
    "  '\\xd1': 'N',  '\\xf1': 'n',\n" +
    "  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n" +
    "  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n" +
    "  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n" +
    "  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n" +
    "  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n" +
    "  '\\xc6': 'Ae', '\\xe6': 'ae',\n" +
    "  '\\xde': 'Th', '\\xfe': 'th',\n" +
    "  '\\xdf': 'ss',\n" +
    '  // Latin Extended-A block.\n' +
    "  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n" +
    "  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n" +
    "  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n" +
    "  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n" +
    "  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n" +
    "  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n" +
    "  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n" +
    "  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n" +
    "  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n" +
    "  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n" +
    "  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n" +
    "  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n" +
    "  '\\u0134': 'J',  '\\u0135': 'j',\n" +
    "  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n" +
    "  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n" +
    "  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n" +
    "  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n" +
    "  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n" +
    "  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n" +
    "  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n" +
    "  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n" +
    "  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n" +
    "  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n" +
    "  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n" +
    "  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n" +
    "  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n" +
    "  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n" +
    "  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n" +
    "  '\\u0174': 'W',  '\\u0175': 'w',\n" +
    "  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n" +
    "  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n" +
    "  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n" +
    "  '\\u0132': 'IJ', '\\u0133': 'ij',\n" +
    "  '\\u0152': 'Oe', '\\u0153': 'oe',\n" +
    `  '\\u0149': "'n", '\\u017f': 's'\n` +
    '};\n' +
    '\n' +
    '/**\n' +
    ' * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n' +
    ' * letters to basic Latin letters.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} letter The matched letter to deburr.\n' +
    ' * @returns {string} Returns the deburred letter.\n' +
    ' */\n' +
    'var deburrLetter = basePropertyOf(deburredLetters);\n' +
    '\n' +
    'module.exports = deburrLetter;\n'
} [Function: logger]
____9999999____ {
  code: "var baseToString = require('./_baseToString');\n" +
    '\n' +
    '/**\n' +
    ' * Converts `value` to a string. An empty string is returned for `null`\n' +
    ' * and `undefined` values. The sign of `-0` is preserved.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to convert.\n' +
    ' * @returns {string} Returns the converted string.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.toString(null);\n' +
    " * // => ''\n" +
    ' *\n' +
    ' * _.toString(-0);\n' +
    " * // => '-0'\n" +
    ' *\n' +
    ' * _.toString([1, 2, 3]);\n' +
    " * // => '1,2,3'\n" +
    ' */\n' +
    'function toString(value) {\n' +
    "  return value == null ? '' : baseToString(value);\n" +
    '}\n' +
    '\n' +
    'module.exports = toString;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to detect strings that need a more robust regexp to match words. */\n' +
    'var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `string` contains a word composed of Unicode symbols.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} string The string to inspect.\n' +
    ' * @returns {boolean} Returns `true` if a word is found, else `false`.\n' +
    ' */\n' +
    'function hasUnicodeWord(string) {\n' +
    '  return reHasUnicodeWord.test(string);\n' +
    '}\n' +
    '\n' +
    'module.exports = hasUnicodeWord;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Check if QR Code version is valid\n' +
    ' *\n' +
    ' * @param  {Number}  version QR Code version\n' +
    ' * @return {Boolean}         true if valid version, false otherwise\n' +
    ' */\n' +
    'exports.isValid = function isValid (version) {\n' +
    '  return !isNaN(version) && version >= 1 && version <= 40\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to match words composed of alphanumeric characters. */\n' +
    'var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n' +
    '\n' +
    '/**\n' +
    ' * Splits an ASCII `string` into an array of its words.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} The string to inspect.\n' +
    ' * @returns {Array} Returns the words of `string`.\n' +
    ' */\n' +
    'function asciiWords(string) {\n' +
    '  return string.match(reAsciiWord) || [];\n' +
    '}\n' +
    '\n' +
    'module.exports = asciiWords;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to compose unicode character classes. */\n' +
    "var rsAstralRange = '\\\\ud800-\\\\udfff',\n" +
    "    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n" +
    "    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n" +
    "    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n" +
    '    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n' +
    "    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n" +
    "    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n" +
    "    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n" +
    "    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n" +
    "    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n" +
    "    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n" +
    "    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n" +
    "    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n" +
    '    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n' +
    '\n' +
    '/** Used to compose unicode capture groups. */\n' +
    `var rsApos = "['\\u2019]",\n` +
    "    rsBreak = '[' + rsBreakRange + ']',\n" +
    "    rsCombo = '[' + rsComboRange + ']',\n" +
    "    rsDigits = '\\\\d+',\n" +
    "    rsDingbat = '[' + rsDingbatRange + ']',\n" +
    "    rsLower = '[' + rsLowerRange + ']',\n" +
    "    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n" +
    "    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n" +
    "    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n" +
    "    rsNonAstral = '[^' + rsAstralRange + ']',\n" +
    "    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n" +
    "    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n" +
    "    rsUpper = '[' + rsUpperRange + ']',\n" +
    "    rsZWJ = '\\\\u200d';\n" +
    '\n' +
    '/** Used to compose unicode regexes. */\n' +
    "var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n" +
    "    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n" +
    "    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n" +
    "    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n" +
    "    reOptMod = rsModifier + '?',\n" +
    "    rsOptVar = '[' + rsVarRange + ']?',\n" +
    "    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n" +
    "    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n" +
    "    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n" +
    '    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n' +
    "    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n" +
    '\n' +
    '/** Used to match complex or compound words. */\n' +
    'var reUnicodeWord = RegExp([\n' +
    "  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n" +
    "  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n" +
    "  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n" +
    "  rsUpper + '+' + rsOptContrUpper,\n" +
    '  rsOrdUpper,\n' +
    '  rsOrdLower,\n' +
    '  rsDigits,\n' +
    '  rsEmoji\n' +
    "].join('|'), 'g');\n" +
    '\n' +
    '/**\n' +
    ' * Splits a Unicode `string` into an array of its words.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} The string to inspect.\n' +
    ' * @returns {Array} Returns the words of `string`.\n' +
    ' */\n' +
    'function unicodeWords(string) {\n' +
    '  return string.match(reUnicodeWord) || [];\n' +
    '}\n' +
    '\n' +
    'module.exports = unicodeWords;\n'
} [Function: logger]
____9999999____ {
  code: "const GF = require('./galois-field')\n" +
    '\n' +
    '/**\n' +
    ' * Multiplies two polynomials inside Galois Field\n' +
    ' *\n' +
    ' * @param  {Uint8Array} p1 Polynomial\n' +
    ' * @param  {Uint8Array} p2 Polynomial\n' +
    ' * @return {Uint8Array}    Product of p1 and p2\n' +
    ' */\n' +
    'exports.mul = function mul (p1, p2) {\n' +
    '  const coeff = new Uint8Array(p1.length + p2.length - 1)\n' +
    '\n' +
    '  for (let i = 0; i < p1.length; i++) {\n' +
    '    for (let j = 0; j < p2.length; j++) {\n' +
    '      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return coeff\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Calculate the remainder of polynomials division\n' +
    ' *\n' +
    ' * @param  {Uint8Array} divident Polynomial\n' +
    ' * @param  {Uint8Array} divisor  Polynomial\n' +
    ' * @return {Uint8Array}          Remainder\n' +
    ' */\n' +
    'exports.mod = function mod (divident, divisor) {\n' +
    '  let result = new Uint8Array(divident)\n' +
    '\n' +
    '  while ((result.length - divisor.length) >= 0) {\n' +
    '    const coeff = result[0]\n' +
    '\n' +
    '    for (let i = 0; i < divisor.length; i++) {\n' +
    '      result[i] ^= GF.mul(divisor[i], coeff)\n' +
    '    }\n' +
    '\n' +
    '    // remove all zeros from buffer head\n' +
    '    let offset = 0\n' +
    '    while (offset < result.length && result[offset] === 0) offset++\n' +
    '    result = result.slice(offset)\n' +
    '  }\n' +
    '\n' +
    '  return result\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Generate an irreducible generator polynomial of specified degree\n' +
    ' * (used by Reed-Solomon encoder)\n' +
    ' *\n' +
    ' * @param  {Number} degree Degree of the generator polynomial\n' +
    ' * @return {Uint8Array}    Buffer containing polynomial coefficients\n' +
    ' */\n' +
    'exports.generateECPolynomial = function generateECPolynomial (degree) {\n' +
    '  let poly = new Uint8Array([1])\n' +
    '  for (let i = 0; i < degree; i++) {\n' +
    '    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n' +
    '  }\n' +
    '\n' +
    '  return poly\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const numeric = '[0-9]+'\n" +
    "const alphanumeric = '[A-Z $%*+\\\\-./:]+'\n" +
    "let kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n" +
    "  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n" +
    "  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n" +
    "  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\n" +
    "kanji = kanji.replace(/u/g, '\\\\u')\n" +
    '\n' +
    "const byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n" +
    '\n' +
    "exports.KANJI = new RegExp(kanji, 'g')\n" +
    "exports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\n" +
    "exports.BYTE = new RegExp(byte, 'g')\n" +
    "exports.NUMERIC = new RegExp(numeric, 'g')\n" +
    "exports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n" +
    '\n' +
    "const TEST_KANJI = new RegExp('^' + kanji + '$')\n" +
    "const TEST_NUMERIC = new RegExp('^' + numeric + '$')\n" +
    "const TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n" +
    '\n' +
    'exports.testKanji = function testKanji (str) {\n' +
    '  return TEST_KANJI.test(str)\n' +
    '}\n' +
    '\n' +
    'exports.testNumeric = function testNumeric (str) {\n' +
    '  return TEST_NUMERIC.test(str)\n' +
    '}\n' +
    '\n' +
    'exports.testAlphanumeric = function testAlphanumeric (str) {\n' +
    '  return TEST_ALPHANUMERIC.test(str)\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "const Mode = require('./mode')\n" +
    '\n' +
    'function NumericData (data) {\n' +
    '  this.mode = Mode.NUMERIC\n' +
    '  this.data = data.toString()\n' +
    '}\n' +
    '\n' +
    'NumericData.getBitsLength = function getBitsLength (length) {\n' +
    '  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n' +
    '}\n' +
    '\n' +
    'NumericData.prototype.getLength = function getLength () {\n' +
    '  return this.data.length\n' +
    '}\n' +
    '\n' +
    'NumericData.prototype.getBitsLength = function getBitsLength () {\n' +
    '  return NumericData.getBitsLength(this.data.length)\n' +
    '}\n' +
    '\n' +
    'NumericData.prototype.write = function write (bitBuffer) {\n' +
    '  let i, group, value\n' +
    '\n' +
    '  // The input data string is divided into groups of three digits,\n' +
    '  // and each group is converted to its 10-bit binary equivalent.\n' +
    '  for (i = 0; i + 3 <= this.data.length; i += 3) {\n' +
    '    group = this.data.substr(i, 3)\n' +
    '    value = parseInt(group, 10)\n' +
    '\n' +
    '    bitBuffer.put(value, 10)\n' +
    '  }\n' +
    '\n' +
    '  // If the number of input digits is not an exact multiple of three,\n' +
    '  // the final one or two digits are converted to 4 or 7 bits respectively.\n' +
    '  const remainingNum = this.data.length - i\n' +
    '  if (remainingNum > 0) {\n' +
    '    group = this.data.substr(i)\n' +
    '    value = parseInt(group, 10)\n' +
    '\n' +
    '    bitBuffer.put(value, remainingNum * 3 + 1)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = NumericData\n'
} [Function: logger]
____9999999____ {
  code: "const Mode = require('./mode')\n" +
    '\n' +
    '/**\n' +
    ' * Array of characters available in alphanumeric mode\n' +
    ' *\n' +
    ' * As per QR Code specification, to each character\n' +
    ' * is assigned a value from 0 to 44 which in this case coincides\n' +
    ' * with the array index\n' +
    ' *\n' +
    ' * @type {Array}\n' +
    ' */\n' +
    'const ALPHA_NUM_CHARS = [\n' +
    "  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n" +
    "  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n" +
    "  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n" +
    "  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n" +
    ']\n' +
    '\n' +
    'function AlphanumericData (data) {\n' +
    '  this.mode = Mode.ALPHANUMERIC\n' +
    '  this.data = data\n' +
    '}\n' +
    '\n' +
    'AlphanumericData.getBitsLength = function getBitsLength (length) {\n' +
    '  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n' +
    '}\n' +
    '\n' +
    'AlphanumericData.prototype.getLength = function getLength () {\n' +
    '  return this.data.length\n' +
    '}\n' +
    '\n' +
    'AlphanumericData.prototype.getBitsLength = function getBitsLength () {\n' +
    '  return AlphanumericData.getBitsLength(this.data.length)\n' +
    '}\n' +
    '\n' +
    'AlphanumericData.prototype.write = function write (bitBuffer) {\n' +
    '  let i\n' +
    '\n' +
    '  // Input data characters are divided into groups of two characters\n' +
    '  // and encoded as 11-bit binary codes.\n' +
    '  for (i = 0; i + 2 <= this.data.length; i += 2) {\n' +
    '    // The character value of the first character is multiplied by 45\n' +
    '    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n' +
    '\n' +
    '    // The character value of the second digit is added to the product\n' +
    '    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n' +
    '\n' +
    '    // The sum is then stored as 11-bit binary number\n' +
    '    bitBuffer.put(value, 11)\n' +
    '  }\n' +
    '\n' +
    '  // If the number of input data characters is not a multiple of two,\n' +
    '  // the character value of the final character is encoded as a 6-bit binary number.\n' +
    '  if (this.data.length % 2) {\n' +
    '    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = AlphanumericData\n'
} [Function: logger]
____9999999____ {
  code: "const encodeUtf8 = require('encode-utf8')\n" +
    "const Mode = require('./mode')\n" +
    '\n' +
    'function ByteData (data) {\n' +
    '  this.mode = Mode.BYTE\n' +
    '  this.data = new Uint8Array(encodeUtf8(data))\n' +
    '}\n' +
    '\n' +
    'ByteData.getBitsLength = function getBitsLength (length) {\n' +
    '  return length * 8\n' +
    '}\n' +
    '\n' +
    'ByteData.prototype.getLength = function getLength () {\n' +
    '  return this.data.length\n' +
    '}\n' +
    '\n' +
    'ByteData.prototype.getBitsLength = function getBitsLength () {\n' +
    '  return ByteData.getBitsLength(this.data.length)\n' +
    '}\n' +
    '\n' +
    'ByteData.prototype.write = function (bitBuffer) {\n' +
    '  for (let i = 0, l = this.data.length; i < l; i++) {\n' +
    '    bitBuffer.put(this.data[i], 8)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = ByteData\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root');\n" +
    '\n' +
    '/** Built-in value references. */\n' +
    'var Symbol = root.Symbol;\n' +
    '\n' +
    'module.exports = Symbol;\n'
} [Function: logger]
____9999999____ {
  code: "const Mode = require('./mode')\n" +
    "const Utils = require('./utils')\n" +
    '\n' +
    'function KanjiData (data) {\n' +
    '  this.mode = Mode.KANJI\n' +
    '  this.data = data\n' +
    '}\n' +
    '\n' +
    'KanjiData.getBitsLength = function getBitsLength (length) {\n' +
    '  return length * 13\n' +
    '}\n' +
    '\n' +
    'KanjiData.prototype.getLength = function getLength () {\n' +
    '  return this.data.length\n' +
    '}\n' +
    '\n' +
    'KanjiData.prototype.getBitsLength = function getBitsLength () {\n' +
    '  return KanjiData.getBitsLength(this.data.length)\n' +
    '}\n' +
    '\n' +
    'KanjiData.prototype.write = function (bitBuffer) {\n' +
    '  let i\n' +
    '\n' +
    '  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n' +
    '  // These byte values are shifted from the JIS X 0208 values.\n' +
    '  // JIS X 0208 gives details of the shift coded representation.\n' +
    '  for (i = 0; i < this.data.length; i++) {\n' +
    '    let value = Utils.toSJIS(this.data[i])\n' +
    '\n' +
    '    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n' +
    '    if (value >= 0x8140 && value <= 0x9FFC) {\n' +
    '      // Subtract 0x8140 from Shift JIS value\n' +
    '      value -= 0x8140\n' +
    '\n' +
    '    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n' +
    '    } else if (value >= 0xE040 && value <= 0xEBBF) {\n' +
    '      // Subtract 0xC140 from Shift JIS value\n' +
    '      value -= 0xC140\n' +
    '    } else {\n' +
    '      throw new Error(\n' +
    "        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n" +
    "        'Make sure your charset is UTF-8')\n" +
    '    }\n' +
    '\n' +
    '    // Multiply most significant byte of result by 0xC0\n' +
    '    // and add least significant byte to product\n' +
    '    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n' +
    '\n' +
    '    // Convert result to a 13-bit binary string\n' +
    '    bitBuffer.put(value, 13)\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = KanjiData\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    '/******************************************************************************\n' +
    ' * Created 2008-08-19.\n' +
    ' *\n' +
    ' * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n' +
    ' *\n' +
    ' * Copyright (C) 2008\n' +
    ' *   Wyatt Baldwin <self@wyattbaldwin.com>\n' +
    ' *   All rights reserved\n' +
    ' *\n' +
    ' * Licensed under the MIT license.\n' +
    ' *\n' +
    ' *   http://www.opensource.org/licenses/mit-license.php\n' +
    ' *\n' +
    ' * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n' +
    ' * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n' +
    ' * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n' +
    ' * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n' +
    ' * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n' +
    ' * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n' +
    ' * THE SOFTWARE.\n' +
    ' *****************************************************************************/\n' +
    'var dijkstra = {\n' +
    '  single_source_shortest_paths: function(graph, s, d) {\n' +
    '    // Predecessor map for each node that has been encountered.\n' +
    '    // node ID => predecessor node ID\n' +
    '    var predecessors = {};\n' +
    '\n' +
    '    // Costs of shortest paths from s to all nodes encountered.\n' +
    '    // node ID => cost\n' +
    '    var costs = {};\n' +
    '    costs[s] = 0;\n' +
    '\n' +
    '    // Costs of shortest paths from s to all nodes encountered; differs from\n' +
    '    // `costs` in that it provides easy access to the node that currently has\n' +
    '    // the known shortest path from s.\n' +
    '    // XXX: Do we actually need both `costs` and `open`?\n' +
    '    var open = dijkstra.PriorityQueue.make();\n' +
    '    open.push(s, 0);\n' +
    '\n' +
    '    var closest,\n' +
    '        u, v,\n' +
    '        cost_of_s_to_u,\n' +
    '        adjacent_nodes,\n' +
    '        cost_of_e,\n' +
    '        cost_of_s_to_u_plus_cost_of_e,\n' +
    '        cost_of_s_to_v,\n' +
    '        first_visit;\n' +
    '    while (!open.empty()) {\n' +
    '      // In the nodes remaining in graph that have a known cost from s,\n' +
    '      // find the node, u, that currently has the shortest path from s.\n' +
    '      closest = open.pop();\n' +
    '      u = closest.value;\n' +
    '      cost_of_s_to_u = closest.cost;\n' +
    '\n' +
    '      // Get nodes adjacent to u...\n' +
    '      adjacent_nodes = graph[u] || {};\n' +
    '\n' +
    '      // ...and explore the edges that connect u to those nodes, updating\n' +
    '      // the cost of the shortest paths to any or all of those nodes as\n' +
    '      // necessary. v is the node across the current edge from u.\n' +
    '      for (v in adjacent_nodes) {\n' +
    '        if (adjacent_nodes.hasOwnProperty(v)) {\n' +
    '          // Get the cost of the edge running from u to v.\n' +
    '          cost_of_e = adjacent_nodes[v];\n' +
    '\n' +
    '          // Cost of s to u plus the cost of u to v across e--this is *a*\n' +
    '          // cost from s to v that may or may not be less than the current\n' +
    '          // known cost to v.\n' +
    '          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n' +
    '\n' +
    "          // If we haven't visited v yet OR if the current known cost from s to\n" +
    '          // v is greater than the new cost we just found (cost of s to u plus\n' +
    "          // cost of u to v across e), update v's cost in the cost list and\n" +
    "          // update v's predecessor in the predecessor list (it's now u).\n" +
    '          cost_of_s_to_v = costs[v];\n' +
    "          first_visit = (typeof costs[v] === 'undefined');\n" +
    '          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n' +
    '            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n' +
    '            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n' +
    '            predecessors[v] = u;\n' +
    '          }\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    "    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n" +
    "      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n" +
    '      throw new Error(msg);\n' +
    '    }\n' +
    '\n' +
    '    return predecessors;\n' +
    '  },\n' +
    '\n' +
    '  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n' +
    '    var nodes = [];\n' +
    '    var u = d;\n' +
    '    var predecessor;\n' +
    '    while (u) {\n' +
    '      nodes.push(u);\n' +
    '      predecessor = predecessors[u];\n' +
    '      u = predecessors[u];\n' +
    '    }\n' +
    '    nodes.reverse();\n' +
    '    return nodes;\n' +
    '  },\n' +
    '\n' +
    '  find_path: function(graph, s, d) {\n' +
    '    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n' +
    '    return dijkstra.extract_shortest_path_from_predecessor_list(\n' +
    '      predecessors, d);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * A very naive priority queue implementation.\n' +
    '   */\n' +
    '  PriorityQueue: {\n' +
    '    make: function (opts) {\n' +
    '      var T = dijkstra.PriorityQueue,\n' +
    '          t = {},\n' +
    '          key;\n' +
    '      opts = opts || {};\n' +
    '      for (key in T) {\n' +
    '        if (T.hasOwnProperty(key)) {\n' +
    '          t[key] = T[key];\n' +
    '        }\n' +
    '      }\n' +
    '      t.queue = [];\n' +
    '      t.sorter = opts.sorter || T.default_sorter;\n' +
    '      return t;\n' +
    '    },\n' +
    '\n' +
    '    default_sorter: function (a, b) {\n' +
    '      return a.cost - b.cost;\n' +
    '    },\n' +
    '\n' +
    '    /**\n' +
    '     * Add a new item to the queue and ensure the highest priority element\n' +
    '     * is at the front of the queue.\n' +
    '     */\n' +
    '    push: function (value, cost) {\n' +
    '      var item = {value: value, cost: cost};\n' +
    '      this.queue.push(item);\n' +
    '      this.queue.sort(this.sorter);\n' +
    '    },\n' +
    '\n' +
    '    /**\n' +
    '     * Return the highest priority element in the queue.\n' +
    '     */\n' +
    '    pop: function () {\n' +
    '      return this.queue.shift();\n' +
    '    },\n' +
    '\n' +
    '    empty: function () {\n' +
    '      return this.queue.length === 0;\n' +
    '    }\n' +
    '  }\n' +
    '};\n' +
    '\n' +
    '\n' +
    '// node.js module exports\n' +
    "if (typeof module !== 'undefined') {\n" +
    '  module.exports = dijkstra;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/**\n' +
    ' * Used to resolve the\n' +
    ' * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n' +
    ' * of values.\n' +
    ' */\n' +
    'var nativeObjectToString = objectProto.toString;\n' +
    '\n' +
    '/**\n' +
    ' * Converts `value` to a string using `Object.prototype.toString`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to convert.\n' +
    ' * @returns {string} Returns the converted string.\n' +
    ' */\n' +
    'function objectToString(value) {\n' +
    '  return nativeObjectToString.call(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = objectToString;\n'
} [Function: logger]
____9999999____ {
  code: "var Symbol = require('./_Symbol');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * Used to resolve the\n' +
    ' * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n' +
    ' * of values.\n' +
    ' */\n' +
    'var nativeObjectToString = objectProto.toString;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to query.\n' +
    ' * @returns {string} Returns the raw `toStringTag`.\n' +
    ' */\n' +
    'function getRawTag(value) {\n' +
    '  var isOwn = hasOwnProperty.call(value, symToStringTag),\n' +
    '      tag = value[symToStringTag];\n' +
    '\n' +
    '  try {\n' +
    '    value[symToStringTag] = undefined;\n' +
    '    var unmasked = true;\n' +
    '  } catch (e) {}\n' +
    '\n' +
    '  var result = nativeObjectToString.call(value);\n' +
    '  if (unmasked) {\n' +
    '    if (isOwn) {\n' +
    '      value[symToStringTag] = tag;\n' +
    '    } else {\n' +
    '      delete value[symToStringTag];\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = getRawTag;\n'
} [Function: logger]
____9999999____ {
  code: 'import{rectToClientRect as t,computePosition as e}from"@floating-ui/core";export{arrow,autoPlacement,detectOverflow,flip,hide,inline,limitShift,offset,shift,size}from"@floating-ui/core";function n(t){return t&&t.document&&t.location&&t.alert&&t.setInterval}function o(t){if(null==t)return window;if(!n(t)){const e=t.ownerDocument;return e&&e.defaultView||window}return t}function i(t){return o(t).getComputedStyle(t)}function r(t){return n(t)?"":t?(t.nodeName||"").toLowerCase():""}function l(){const t=navigator.userAgentData;return null!=t&&t.brands?t.brands.map((t=>t.brand+"/"+t.version)).join(" "):navigator.userAgent}function c(t){return t instanceof o(t).HTMLElement}function f(t){return t instanceof o(t).Element}function s(t){if("undefined"==typeof ShadowRoot)return!1;return t instanceof o(t).ShadowRoot||t instanceof ShadowRoot}function u(t){const{overflow:e,overflowX:n,overflowY:o}=i(t);return/auto|scroll|overlay|hidden/.test(e+o+n)}function d(t){return["table","td","th"].includes(r(t))}function h(t){const e=/firefox/i.test(l()),n=i(t);return"none"!==n.transform||"none"!==n.perspective||"paint"===n.contain||["transform","perspective"].includes(n.willChange)||e&&"filter"===n.willChange||e&&!!n.filter&&"none"!==n.filter}function a(){return!/^((?!chrome|android).)*safari/i.test(l())}const g=Math.min,p=Math.max,m=Math.round;function w(t,e,n){var i,r,l,s;void 0===e&&(e=!1),void 0===n&&(n=!1);const u=t.getBoundingClientRect();let d=1,h=1;e&&c(t)&&(d=t.offsetWidth>0&&m(u.width)/t.offsetWidth||1,h=t.offsetHeight>0&&m(u.height)/t.offsetHeight||1);const g=f(t)?o(t):window,p=!a()&&n,w=(u.left+(p&&null!=(i=null==(r=g.visualViewport)?void 0:r.offsetLeft)?i:0))/d,v=(u.top+(p&&null!=(l=null==(s=g.visualViewport)?void 0:s.offsetTop)?l:0))/h,y=u.width/d,x=u.height/h;return{width:y,height:x,top:v,right:w+y,bottom:v+x,left:w,x:w,y:v}}function v(t){return(e=t,(e instanceof o(e).Node?t.ownerDocument:t.document)||window.document).documentElement;var e}function y(t){return f(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function x(t){return w(v(t)).left+y(t).scrollLeft}function b(t,e,n){const o=c(e),i=v(e),l=w(t,o&&function(t){const e=w(t);return m(e.width)!==t.offsetWidth||m(e.height)!==t.offsetHeight}(e),"fixed"===n);let f={scrollLeft:0,scrollTop:0};const s={x:0,y:0};if(o||!o&&"fixed"!==n)if(("body"!==r(e)||u(i))&&(f=y(e)),c(e)){const t=w(e,!0);s.x=t.x+e.clientLeft,s.y=t.y+e.clientTop}else i&&(s.x=x(i));return{x:l.left+f.scrollLeft-s.x,y:l.top+f.scrollTop-s.y,width:l.width,height:l.height}}function L(t){return"html"===r(t)?t:t.assignedSlot||t.parentNode||(s(t)?t.host:null)||v(t)}function R(t){return c(t)&&"fixed"!==getComputedStyle(t).position?t.offsetParent:null}function T(t){const e=o(t);let n=R(t);for(;n&&d(n)&&"static"===getComputedStyle(n).position;)n=R(n);return n&&("html"===r(n)||"body"===r(n)&&"static"===getComputedStyle(n).position&&!h(n))?e:n||function(t){let e=L(t);for(s(e)&&(e=e.host);c(e)&&!["html","body"].includes(r(e));){if(h(e))return e;e=e.parentNode}return null}(t)||e}function W(t){if(c(t))return{width:t.offsetWidth,height:t.offsetHeight};const e=w(t);return{width:e.width,height:e.height}}function E(t){const e=L(t);return["html","body","#document"].includes(r(e))?t.ownerDocument.body:c(e)&&u(e)?e:E(e)}function H(t,e){var n;void 0===e&&(e=[]);const i=E(t),r=i===(null==(n=t.ownerDocument)?void 0:n.body),l=o(i),c=r?[l].concat(l.visualViewport||[],u(i)?i:[]):i,f=e.concat(c);return r?f:f.concat(H(c))}function C(e,n,r){return"viewport"===n?t(function(t,e){const n=o(t),i=v(t),r=n.visualViewport;let l=i.clientWidth,c=i.clientHeight,f=0,s=0;if(r){l=r.width,c=r.height;const t=a();(t||!t&&"fixed"===e)&&(f=r.offsetLeft,s=r.offsetTop)}return{width:l,height:c,x:f,y:s}}(e,r)):f(n)?function(t,e){const n=w(t,!1,"fixed"===e),o=n.top+t.clientTop,i=n.left+t.clientLeft;return{top:o,left:i,x:i,y:o,right:i+t.clientWidth,bottom:o+t.clientHeight,width:t.clientWidth,height:t.clientHeight}}(n,r):t(function(t){var e;const n=v(t),o=y(t),r=null==(e=t.ownerDocument)?void 0:e.body,l=p(n.scrollWidth,n.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),c=p(n.scrollHeight,n.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0);let f=-o.scrollLeft+x(t);const s=-o.scrollTop;return"rtl"===i(r||n).direction&&(f+=p(n.clientWidth,r?r.clientWidth:0)-l),{width:l,height:c,x:f,y:s}}(v(e)))}function S(t){const e=H(t),n=["absolute","fixed"].includes(i(t).position)&&c(t)?T(t):t;return f(n)?e.filter((t=>f(t)&&function(t,e){const n=null==e.getRootNode?void 0:e.getRootNode();if(t.contains(e))return!0;if(n&&s(n)){let n=e;do{if(n&&t===n)return!0;n=n.parentNode||n.host}while(n)}return!1}(t,n)&&"body"!==r(t))):[]}const D={getClippingRect:function(t){let{element:e,boundary:n,rootBoundary:o,strategy:i}=t;const r=[..."clippingAncestors"===n?S(e):[].concat(n),o],l=r[0],c=r.reduce(((t,n)=>{const o=C(e,n,i);return t.top=p(o.top,t.top),t.right=g(o.right,t.right),t.bottom=g(o.bottom,t.bottom),t.left=p(o.left,t.left),t}),C(e,l,i));return{width:c.right-c.left,height:c.bottom-c.top,x:c.left,y:c.top}},convertOffsetParentRelativeRectToViewportRelativeRect:function(t){let{rect:e,offsetParent:n,strategy:o}=t;const i=c(n),l=v(n);if(n===l)return e;let f={scrollLeft:0,scrollTop:0};const s={x:0,y:0};if((i||!i&&"fixed"!==o)&&(("body"!==r(n)||u(l))&&(f=y(n)),c(n))){const t=w(n,!0);s.x=t.x+n.clientLeft,s.y=t.y+n.clientTop}return{...e,x:e.x-f.scrollLeft+s.x,y:e.y-f.scrollTop+s.y}},isElement:f,getDimensions:W,getOffsetParent:T,getDocumentElement:v,getElementRects:t=>{let{reference:e,floating:n,strategy:o}=t;return{reference:b(e,T(n),o),floating:{...W(n),x:0,y:0}}},getClientRects:t=>Array.from(t.getClientRects()),isRTL:t=>"rtl"===i(t).direction};function N(t,e,n,o){void 0===o&&(o={});const{ancestorScroll:i=!0,ancestorResize:r=!0,elementResize:l=!0,animationFrame:c=!1}=o,s=i&&!c,u=r&&!c,d=s||u?[...f(t)?H(t):[],...H(e)]:[];d.forEach((t=>{s&&t.addEventListener("scroll",n,{passive:!0}),u&&t.addEventListener("resize",n)}));let h,a=null;if(l){let o=!0;a=new ResizeObserver((()=>{o||n(),o=!1})),f(t)&&!c&&a.observe(t),a.observe(e)}let g=c?w(t):null;return c&&function e(){const o=w(t);!g||o.x===g.x&&o.y===g.y&&o.width===g.width&&o.height===g.height||n();g=o,h=requestAnimationFrame(e)}(),n(),()=>{var t;d.forEach((t=>{s&&t.removeEventListener("scroll",n),u&&t.removeEventListener("resize",n)})),null==(t=a)||t.disconnect(),a=null,c&&cancelAnimationFrame(h)}}const z=(t,n,o)=>e(t,n,{platform:D,...o});export{N as autoUpdate,z as computePosition,H as getOverflowAncestors};\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign, __rest } from "tslib";\n' +
    "import * as React from 'react';\n" +
    "import { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\n" +
    "import { useMergeRefs } from 'use-callback-ref';\n" +
    "import { effectCar } from './medium';\n" +
    'var nothing = function () {\n' +
    '    return;\n' +
    '};\n' +
    '/**\n' +
    ' * Removes scrollbar from the page and contain the scroll within the Lock\n' +
    ' */\n' +
    'var RemoveScroll = React.forwardRef(function (props, parentRef) {\n' +
    '    var ref = React.useRef(null);\n' +
    '    var _a = React.useState({\n' +
    '        onScrollCapture: nothing,\n' +
    '        onWheelCapture: nothing,\n' +
    '        onTouchMoveCapture: nothing,\n' +
    '    }), callbacks = _a[0], setCallbacks = _a[1];\n' +
    `    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);\n` +
    '    var SideCar = sideCar;\n' +
    '    var containerRef = useMergeRefs([ref, parentRef]);\n' +
    '    var containerProps = __assign(__assign({}, rest), callbacks);\n' +
    '    return (React.createElement(React.Fragment, null,\n' +
    '        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),\n' +
    '        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n' +
    '});\n' +
    'RemoveScroll.defaultProps = {\n' +
    '    enabled: true,\n' +
    '    removeScrollBar: true,\n' +
    '    inert: false,\n' +
    '};\n' +
    'RemoveScroll.classNames = {\n' +
    '    fullWidth: fullWidthClassName,\n' +
    '    zeroRight: zeroRightClassName,\n' +
    '};\n' +
    'export { RemoveScroll };\n'
} [Function: logger]
____9999999____ {
  code: "import { exportSidecar } from 'use-sidecar';\n" +
    "import { RemoveScrollSideCar } from './SideEffect';\n" +
    "import { effectCar } from './medium';\n" +
    'export default exportSidecar(effectCar, RemoveScrollSideCar);\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * use-sync-external-store-shim/with-selector.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    `'use strict';var h=require("react"),n=require("use-sync-external-store/shim");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q="function"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\n` +
    'exports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\n' +
    'u(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n'
} [Function: logger]
____9999999____ {
  code: 'export const fromUtf8 = (input) => new TextEncoder().encode(input);\n'
} [Function: logger]
____9999999____ {
  code: 'import { fromUtf8 } from "./fromUtf8";\n' +
    'export const toUint8Array = (data) => {\n' +
    '    if (typeof data === "string") {\n' +
    '        return fromUtf8(data);\n' +
    '    }\n' +
    '    if (ArrayBuffer.isView(data)) {\n' +
    '        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n' +
    '    }\n' +
    '    return new Uint8Array(data);\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'export const toUtf8 = (input) => new TextDecoder("utf-8").decode(input);\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    'export default function bind(fn, thisArg) {\n' +
    '  return function wrap() {\n' +
    '    return fn.apply(thisArg, arguments);\n' +
    '  };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import bind from './helpers/bind.js';\n" +
    '\n' +
    '// utils is a library of generic helper functions non-specific to axios\n' +
    '\n' +
    'const {toString} = Object.prototype;\n' +
    'const {getPrototypeOf} = Object;\n' +
    '\n' +
    'const kindOf = (cache => thing => {\n' +
    '    const str = toString.call(thing);\n' +
    '    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n' +
    '})(Object.create(null));\n' +
    '\n' +
    'const kindOfTest = (type) => {\n' +
    '  type = type.toLowerCase();\n' +
    '  return (thing) => kindOf(thing) === type\n' +
    '}\n' +
    '\n' +
    'const typeOfTest = type => thing => typeof thing === type;\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is an Array\n' +
    ' *\n' +
    ' * @param {Object} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is an Array, otherwise false\n' +
    ' */\n' +
    'const {isArray} = Array;\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is undefined\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if the value is undefined, otherwise false\n' +
    ' */\n' +
    "const isUndefined = typeOfTest('undefined');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Buffer\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a Buffer, otherwise false\n' +
    ' */\n' +
    'function isBuffer(val) {\n' +
    '  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n' +
    '    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is an ArrayBuffer\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n' +
    ' */\n' +
    "const isArrayBuffer = kindOfTest('ArrayBuffer');\n" +
    '\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a view on an ArrayBuffer\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n' +
    ' */\n' +
    'function isArrayBufferView(val) {\n' +
    '  let result;\n' +
    "  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n" +
    '    result = ArrayBuffer.isView(val);\n' +
    '  } else {\n' +
    '    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a String\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a String, otherwise false\n' +
    ' */\n' +
    "const isString = typeOfTest('string');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Function\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' * @returns {boolean} True if value is a Function, otherwise false\n' +
    ' */\n' +
    "const isFunction = typeOfTest('function');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Number\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a Number, otherwise false\n' +
    ' */\n' +
    "const isNumber = typeOfTest('number');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is an Object\n' +
    ' *\n' +
    ' * @param {*} thing The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is an Object, otherwise false\n' +
    ' */\n' +
    "const isObject = (thing) => thing !== null && typeof thing === 'object';\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Boolean\n' +
    ' *\n' +
    ' * @param {*} thing The value to test\n' +
    ' * @returns {boolean} True if value is a Boolean, otherwise false\n' +
    ' */\n' +
    'const isBoolean = thing => thing === true || thing === false;\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a plain Object\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a plain Object, otherwise false\n' +
    ' */\n' +
    'const isPlainObject = (val) => {\n' +
    "  if (kindOf(val) !== 'object') {\n" +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    '  const prototype = getPrototypeOf(val);\n' +
    '  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Date\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a Date, otherwise false\n' +
    ' */\n' +
    "const isDate = kindOfTest('Date');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a File\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a File, otherwise false\n' +
    ' */\n' +
    "const isFile = kindOfTest('File');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Blob\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a Blob, otherwise false\n' +
    ' */\n' +
    "const isBlob = kindOfTest('Blob');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a FileList\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a File, otherwise false\n' +
    ' */\n' +
    "const isFileList = kindOfTest('FileList');\n" +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a Stream\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a Stream, otherwise false\n' +
    ' */\n' +
    'const isStream = (val) => isObject(val) && isFunction(val.pipe);\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a FormData\n' +
    ' *\n' +
    ' * @param {*} thing The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is an FormData, otherwise false\n' +
    ' */\n' +
    'const isFormData = (thing) => {\n' +
    '  let kind;\n' +
    '  return thing && (\n' +
    "    (typeof FormData === 'function' && thing instanceof FormData) || (\n" +
    '      isFunction(thing.append) && (\n' +
    "        (kind = kindOf(thing)) === 'formdata' ||\n" +
    '        // detect form-data instance\n' +
    "        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n" +
    '      )\n' +
    '    )\n' +
    '  )\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Determine if a value is a URLSearchParams object\n' +
    ' *\n' +
    ' * @param {*} val The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n' +
    ' */\n' +
    "const isURLSearchParams = kindOfTest('URLSearchParams');\n" +
    '\n' +
    '/**\n' +
    ' * Trim excess whitespace off the beginning and end of a string\n' +
    ' *\n' +
    ' * @param {String} str The String to trim\n' +
    ' *\n' +
    ' * @returns {String} The String freed of excess whitespace\n' +
    ' */\n' +
    'const trim = (str) => str.trim ?\n' +
    "  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n" +
    '\n' +
    '/**\n' +
    ' * Iterate over an Array or an Object invoking a function for each item.\n' +
    ' *\n' +
    ' * If `obj` is an Array callback will be called passing\n' +
    ' * the value, index, and complete array for each item.\n' +
    ' *\n' +
    " * If 'obj' is an Object callback will be called passing\n" +
    ' * the value, key, and complete object for each property.\n' +
    ' *\n' +
    ' * @param {Object|Array} obj The object to iterate\n' +
    ' * @param {Function} fn The callback to invoke for each item\n' +
    ' *\n' +
    ' * @param {Boolean} [allOwnKeys = false]\n' +
    ' * @returns {any}\n' +
    ' */\n' +
    'function forEach(obj, fn, {allOwnKeys = false} = {}) {\n' +
    "  // Don't bother if no value provided\n" +
    "  if (obj === null || typeof obj === 'undefined') {\n" +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  let i;\n' +
    '  let l;\n' +
    '\n' +
    '  // Force an array if not already something iterable\n' +
    "  if (typeof obj !== 'object') {\n" +
    '    /*eslint no-param-reassign:0*/\n' +
    '    obj = [obj];\n' +
    '  }\n' +
    '\n' +
    '  if (isArray(obj)) {\n' +
    '    // Iterate over array values\n' +
    '    for (i = 0, l = obj.length; i < l; i++) {\n' +
    '      fn.call(null, obj[i], i, obj);\n' +
    '    }\n' +
    '  } else {\n' +
    '    // Iterate over object keys\n' +
    '    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n' +
    '    const len = keys.length;\n' +
    '    let key;\n' +
    '\n' +
    '    for (i = 0; i < len; i++) {\n' +
    '      key = keys[i];\n' +
    '      fn.call(null, obj[key], key, obj);\n' +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function findKey(obj, key) {\n' +
    '  key = key.toLowerCase();\n' +
    '  const keys = Object.keys(obj);\n' +
    '  let i = keys.length;\n' +
    '  let _key;\n' +
    '  while (i-- > 0) {\n' +
    '    _key = keys[i];\n' +
    '    if (key === _key.toLowerCase()) {\n' +
    '      return _key;\n' +
    '    }\n' +
    '  }\n' +
    '  return null;\n' +
    '}\n' +
    '\n' +
    'const _global = (() => {\n' +
    '  /*eslint no-undef:0*/\n' +
    '  if (typeof globalThis !== "undefined") return globalThis;\n' +
    `  return typeof self !== "undefined" ? self : (typeof window !== 'undefined' ? window : global)\n` +
    '})();\n' +
    '\n' +
    'const isContextDefined = (context) => !isUndefined(context) && context !== _global;\n' +
    '\n' +
    '/**\n' +
    ' * Accepts varargs expecting each argument to be an object, then\n' +
    ' * immutably merges the properties of each object and returns result.\n' +
    ' *\n' +
    ' * When multiple objects contain the same key the later object in\n' +
    ' * the arguments list will take precedence.\n' +
    ' *\n' +
    ' * Example:\n' +
    ' *\n' +
    ' * ```js\n' +
    ' * var result = merge({foo: 123}, {foo: 456});\n' +
    ' * console.log(result.foo); // outputs 456\n' +
    ' * ```\n' +
    ' *\n' +
    ' * @param {Object} obj1 Object to merge\n' +
    ' *\n' +
    ' * @returns {Object} Result of all merge properties\n' +
    ' */\n' +
    'function merge(/* obj1, obj2, obj3, ... */) {\n' +
    '  const {caseless} = isContextDefined(this) && this || {};\n' +
    '  const result = {};\n' +
    '  const assignValue = (val, key) => {\n' +
    '    const targetKey = caseless && findKey(result, key) || key;\n' +
    '    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n' +
    '      result[targetKey] = merge(result[targetKey], val);\n' +
    '    } else if (isPlainObject(val)) {\n' +
    '      result[targetKey] = merge({}, val);\n' +
    '    } else if (isArray(val)) {\n' +
    '      result[targetKey] = val.slice();\n' +
    '    } else {\n' +
    '      result[targetKey] = val;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  for (let i = 0, l = arguments.length; i < l; i++) {\n' +
    '    arguments[i] && forEach(arguments[i], assignValue);\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Extends object a by mutably adding to it the properties of object b.\n' +
    ' *\n' +
    ' * @param {Object} a The object to be extended\n' +
    ' * @param {Object} b The object to copy properties from\n' +
    ' * @param {Object} thisArg The object to bind function to\n' +
    ' *\n' +
    ' * @param {Boolean} [allOwnKeys]\n' +
    ' * @returns {Object} The resulting value of object a\n' +
    ' */\n' +
    'const extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n' +
    '  forEach(b, (val, key) => {\n' +
    '    if (thisArg && isFunction(val)) {\n' +
    '      a[key] = bind(val, thisArg);\n' +
    '    } else {\n' +
    '      a[key] = val;\n' +
    '    }\n' +
    '  }, {allOwnKeys});\n' +
    '  return a;\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n' +
    ' *\n' +
    ' * @param {string} content with BOM\n' +
    ' *\n' +
    ' * @returns {string} content value without BOM\n' +
    ' */\n' +
    'const stripBOM = (content) => {\n' +
    '  if (content.charCodeAt(0) === 0xFEFF) {\n' +
    '    content = content.slice(1);\n' +
    '  }\n' +
    '  return content;\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Inherit the prototype methods from one constructor into another\n' +
    ' * @param {function} constructor\n' +
    ' * @param {function} superConstructor\n' +
    ' * @param {object} [props]\n' +
    ' * @param {object} [descriptors]\n' +
    ' *\n' +
    ' * @returns {void}\n' +
    ' */\n' +
    'const inherits = (constructor, superConstructor, props, descriptors) => {\n' +
    '  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n' +
    '  constructor.prototype.constructor = constructor;\n' +
    "  Object.defineProperty(constructor, 'super', {\n" +
    '    value: superConstructor.prototype\n' +
    '  });\n' +
    '  props && Object.assign(constructor.prototype, props);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Resolve object with deep prototype chain to a flat object\n' +
    ' * @param {Object} sourceObj source object\n' +
    ' * @param {Object} [destObj]\n' +
    ' * @param {Function|Bo'... 7495 more characters
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    "import buildURL from '../helpers/buildURL.js';\n" +
    "import InterceptorManager from './InterceptorManager.js';\n" +
    "import dispatchRequest from './dispatchRequest.js';\n" +
    "import mergeConfig from './mergeConfig.js';\n" +
    "import buildFullPath from './buildFullPath.js';\n" +
    "import validator from '../helpers/validator.js';\n" +
    "import AxiosHeaders from './AxiosHeaders.js';\n" +
    '\n' +
    'const validators = validator.validators;\n' +
    '\n' +
    '/**\n' +
    ' * Create a new instance of Axios\n' +
    ' *\n' +
    ' * @param {Object} instanceConfig The default config for the instance\n' +
    ' *\n' +
    ' * @return {Axios} A new instance of Axios\n' +
    ' */\n' +
    'class Axios {\n' +
    '  constructor(instanceConfig) {\n' +
    '    this.defaults = instanceConfig;\n' +
    '    this.interceptors = {\n' +
    '      request: new InterceptorManager(),\n' +
    '      response: new InterceptorManager()\n' +
    '    };\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Dispatch a request\n' +
    '   *\n' +
    '   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n' +
    '   * @param {?Object} config\n' +
    '   *\n' +
    '   * @returns {Promise} The Promise to be fulfilled\n' +
    '   */\n' +
    '  async request(configOrUrl, config) {\n' +
    '    try {\n' +
    '      return await this._request(configOrUrl, config);\n' +
    '    } catch (err) {\n' +
    '      if (err instanceof Error) {\n' +
    '        let dummy;\n' +
    '\n' +
    '        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n' +
    '\n' +
    '        // slice off the Error: ... line\n' +
    "        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n" +
    '\n' +
    '        if (!err.stack) {\n' +
    '          err.stack = stack;\n' +
    '          // match without the 2 top stack lines\n' +
    "        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n" +
    "          err.stack += '\\n' + stack\n" +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      throw err;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  _request(configOrUrl, config) {\n' +
    '    /*eslint no-param-reassign:0*/\n' +
    "    // Allow for axios('example/url'[, config]) a la fetch API\n" +
    "    if (typeof configOrUrl === 'string') {\n" +
    '      config = config || {};\n' +
    '      config.url = configOrUrl;\n' +
    '    } else {\n' +
    '      config = configOrUrl || {};\n' +
    '    }\n' +
    '\n' +
    '    config = mergeConfig(this.defaults, config);\n' +
    '\n' +
    '    const {transitional, paramsSerializer, headers} = config;\n' +
    '\n' +
    '    if (transitional !== undefined) {\n' +
    '      validator.assertOptions(transitional, {\n' +
    '        silentJSONParsing: validators.transitional(validators.boolean),\n' +
    '        forcedJSONParsing: validators.transitional(validators.boolean),\n' +
    '        clarifyTimeoutError: validators.transitional(validators.boolean)\n' +
    '      }, false);\n' +
    '    }\n' +
    '\n' +
    '    if (paramsSerializer != null) {\n' +
    '      if (utils.isFunction(paramsSerializer)) {\n' +
    '        config.paramsSerializer = {\n' +
    '          serialize: paramsSerializer\n' +
    '        }\n' +
    '      } else {\n' +
    '        validator.assertOptions(paramsSerializer, {\n' +
    '          encode: validators.function,\n' +
    '          serialize: validators.function\n' +
    '        }, true);\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    // Set config.method\n' +
    "    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n" +
    '\n' +
    '    // Flatten headers\n' +
    '    let contextHeaders = headers && utils.merge(\n' +
    '      headers.common,\n' +
    '      headers[config.method]\n' +
    '    );\n' +
    '\n' +
    '    headers && utils.forEach(\n' +
    "      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n" +
    '      (method) => {\n' +
    '        delete headers[method];\n' +
    '      }\n' +
    '    );\n' +
    '\n' +
    '    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n' +
    '\n' +
    '    // filter out skipped interceptors\n' +
    '    const requestInterceptorChain = [];\n' +
    '    let synchronousRequestInterceptors = true;\n' +
    '    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n' +
    "      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n" +
    '        return;\n' +
    '      }\n' +
    '\n' +
    '      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n' +
    '\n' +
    '      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n' +
    '    });\n' +
    '\n' +
    '    const responseInterceptorChain = [];\n' +
    '    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n' +
    '      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n' +
    '    });\n' +
    '\n' +
    '    let promise;\n' +
    '    let i = 0;\n' +
    '    let len;\n' +
    '\n' +
    '    if (!synchronousRequestInterceptors) {\n' +
    '      const chain = [dispatchRequest.bind(this), undefined];\n' +
    '      chain.unshift.apply(chain, requestInterceptorChain);\n' +
    '      chain.push.apply(chain, responseInterceptorChain);\n' +
    '      len = chain.length;\n' +
    '\n' +
    '      promise = Promise.resolve(config);\n' +
    '\n' +
    '      while (i < len) {\n' +
    '        promise = promise.then(chain[i++], chain[i++]);\n' +
    '      }\n' +
    '\n' +
    '      return promise;\n' +
    '    }\n' +
    '\n' +
    '    len = requestInterceptorChain.length;\n' +
    '\n' +
    '    let newConfig = config;\n' +
    '\n' +
    '    i = 0;\n' +
    '\n' +
    '    while (i < len) {\n' +
    '      const onFulfilled = requestInterceptorChain[i++];\n' +
    '      const onRejected = requestInterceptorChain[i++];\n' +
    '      try {\n' +
    '        newConfig = onFulfilled(newConfig);\n' +
    '      } catch (error) {\n' +
    '        onRejected.call(this, error);\n' +
    '        break;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    try {\n' +
    '      promise = dispatchRequest.call(this, newConfig);\n' +
    '    } catch (error) {\n' +
    '      return Promise.reject(error);\n' +
    '    }\n' +
    '\n' +
    '    i = 0;\n' +
    '    len = responseInterceptorChain.length;\n' +
    '\n' +
    '    while (i < len) {\n' +
    '      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n' +
    '    }\n' +
    '\n' +
    '    return promise;\n' +
    '  }\n' +
    '\n' +
    '  getUri(config) {\n' +
    '    config = mergeConfig(this.defaults, config);\n' +
    '    const fullPath = buildFullPath(config.baseURL, config.url);\n' +
    '    return buildURL(fullPath, config.params, config.paramsSerializer);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '// Provide aliases for supported request methods\n' +
    "utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n" +
    '  /*eslint func-names:0*/\n' +
    '  Axios.prototype[method] = function(url, config) {\n' +
    '    return this.request(mergeConfig(config || {}, {\n' +
    '      method,\n' +
    '      url,\n' +
    '      data: (config || {}).data\n' +
    '    }));\n' +
    '  };\n' +
    '});\n' +
    '\n' +
    "utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n" +
    '  /*eslint func-names:0*/\n' +
    '\n' +
    '  function generateHTTPMethod(isForm) {\n' +
    '    return function httpMethod(url, data, config) {\n' +
    '      return this.request(mergeConfig(config || {}, {\n' +
    '        method,\n' +
    '        headers: isForm ? {\n' +
    "          'Content-Type': 'multipart/form-data'\n" +
    '        } : {},\n' +
    '        url,\n' +
    '        data\n' +
    '      }));\n' +
    '    };\n' +
    '  }\n' +
    '\n' +
    '  Axios.prototype[method] = generateHTTPMethod();\n' +
    '\n' +
    "  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n" +
    '});\n' +
    '\n' +
    'export default Axios;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    'import AxiosHeaders from "./AxiosHeaders.js";\n' +
    '\n' +
    'const headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n' +
    '\n' +
    '/**\n' +
    ' * Config-specific merge-function which creates a new config-object\n' +
    ' * by merging two configuration objects together.\n' +
    ' *\n' +
    ' * @param {Object} config1\n' +
    ' * @param {Object} config2\n' +
    ' *\n' +
    ' * @returns {Object} New object resulting from merging config2 to config1\n' +
    ' */\n' +
    'export default function mergeConfig(config1, config2) {\n' +
    '  // eslint-disable-next-line no-param-reassign\n' +
    '  config2 = config2 || {};\n' +
    '  const config = {};\n' +
    '\n' +
    '  function getMergedValue(target, source, caseless) {\n' +
    '    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n' +
    '      return utils.merge.call({caseless}, target, source);\n' +
    '    } else if (utils.isPlainObject(source)) {\n' +
    '      return utils.merge({}, source);\n' +
    '    } else if (utils.isArray(source)) {\n' +
    '      return source.slice();\n' +
    '    }\n' +
    '    return source;\n' +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line consistent-return\n' +
    '  function mergeDeepProperties(a, b, caseless) {\n' +
    '    if (!utils.isUndefined(b)) {\n' +
    '      return getMergedValue(a, b, caseless);\n' +
    '    } else if (!utils.isUndefined(a)) {\n' +
    '      return getMergedValue(undefined, a, caseless);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line consistent-return\n' +
    '  function valueFromConfig2(a, b) {\n' +
    '    if (!utils.isUndefined(b)) {\n' +
    '      return getMergedValue(undefined, b);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line consistent-return\n' +
    '  function defaultToConfig2(a, b) {\n' +
    '    if (!utils.isUndefined(b)) {\n' +
    '      return getMergedValue(undefined, b);\n' +
    '    } else if (!utils.isUndefined(a)) {\n' +
    '      return getMergedValue(undefined, a);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line consistent-return\n' +
    '  function mergeDirectKeys(a, b, prop) {\n' +
    '    if (prop in config2) {\n' +
    '      return getMergedValue(a, b);\n' +
    '    } else if (prop in config1) {\n' +
    '      return getMergedValue(undefined, a);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  const mergeMap = {\n' +
    '    url: valueFromConfig2,\n' +
    '    method: valueFromConfig2,\n' +
    '    data: valueFromConfig2,\n' +
    '    baseURL: defaultToConfig2,\n' +
    '    transformRequest: defaultToConfig2,\n' +
    '    transformResponse: defaultToConfig2,\n' +
    '    paramsSerializer: defaultToConfig2,\n' +
    '    timeout: defaultToConfig2,\n' +
    '    timeoutMessage: defaultToConfig2,\n' +
    '    withCredentials: defaultToConfig2,\n' +
    '    withXSRFToken: defaultToConfig2,\n' +
    '    adapter: defaultToConfig2,\n' +
    '    responseType: defaultToConfig2,\n' +
    '    xsrfCookieName: defaultToConfig2,\n' +
    '    xsrfHeaderName: defaultToConfig2,\n' +
    '    onUploadProgress: defaultToConfig2,\n' +
    '    onDownloadProgress: defaultToConfig2,\n' +
    '    decompress: defaultToConfig2,\n' +
    '    maxContentLength: defaultToConfig2,\n' +
    '    maxBodyLength: defaultToConfig2,\n' +
    '    beforeRedirect: defaultToConfig2,\n' +
    '    transport: defaultToConfig2,\n' +
    '    httpAgent: defaultToConfig2,\n' +
    '    httpsAgent: defaultToConfig2,\n' +
    '    cancelToken: defaultToConfig2,\n' +
    '    socketPath: defaultToConfig2,\n' +
    '    responseEncoding: defaultToConfig2,\n' +
    '    validateStatus: mergeDirectKeys,\n' +
    '    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n' +
    '  };\n' +
    '\n' +
    '  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n' +
    '    const merge = mergeMap[prop] || mergeDeepProperties;\n' +
    '    const configValue = merge(config1[prop], config2[prop], prop);\n' +
    '    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n' +
    '  });\n' +
    '\n' +
    '  return config;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    "import AxiosError from '../core/AxiosError.js';\n" +
    "import transitionalDefaults from './transitional.js';\n" +
    "import toFormData from '../helpers/toFormData.js';\n" +
    "import toURLEncodedForm from '../helpers/toURLEncodedForm.js';\n" +
    "import platform from '../platform/index.js';\n" +
    "import formDataToJSON from '../helpers/formDataToJSON.js';\n" +
    '\n' +
    '/**\n' +
    ' * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n' +
    ' * of the input\n' +
    ' *\n' +
    ' * @param {any} rawValue - The value to be stringified.\n' +
    ' * @param {Function} parser - A function that parses a string into a JavaScript object.\n' +
    ' * @param {Function} encoder - A function that takes a value and returns a string.\n' +
    ' *\n' +
    ' * @returns {string} A stringified version of the rawValue.\n' +
    ' */\n' +
    'function stringifySafely(rawValue, parser, encoder) {\n' +
    '  if (utils.isString(rawValue)) {\n' +
    '    try {\n' +
    '      (parser || JSON.parse)(rawValue);\n' +
    '      return utils.trim(rawValue);\n' +
    '    } catch (e) {\n' +
    "      if (e.name !== 'SyntaxError') {\n" +
    '        throw e;\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return (encoder || JSON.stringify)(rawValue);\n' +
    '}\n' +
    '\n' +
    'const defaults = {\n' +
    '\n' +
    '  transitional: transitionalDefaults,\n' +
    '\n' +
    "  adapter: ['xhr', 'http'],\n" +
    '\n' +
    '  transformRequest: [function transformRequest(data, headers) {\n' +
    "    const contentType = headers.getContentType() || '';\n" +
    "    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n" +
    '    const isObjectPayload = utils.isObject(data);\n' +
    '\n' +
    '    if (isObjectPayload && utils.isHTMLForm(data)) {\n' +
    '      data = new FormData(data);\n' +
    '    }\n' +
    '\n' +
    '    const isFormData = utils.isFormData(data);\n' +
    '\n' +
    '    if (isFormData) {\n' +
    '      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n' +
    '    }\n' +
    '\n' +
    '    if (utils.isArrayBuffer(data) ||\n' +
    '      utils.isBuffer(data) ||\n' +
    '      utils.isStream(data) ||\n' +
    '      utils.isFile(data) ||\n' +
    '      utils.isBlob(data)\n' +
    '    ) {\n' +
    '      return data;\n' +
    '    }\n' +
    '    if (utils.isArrayBufferView(data)) {\n' +
    '      return data.buffer;\n' +
    '    }\n' +
    '    if (utils.isURLSearchParams(data)) {\n' +
    "      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n" +
    '      return data.toString();\n' +
    '    }\n' +
    '\n' +
    '    let isFileList;\n' +
    '\n' +
    '    if (isObjectPayload) {\n' +
    "      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n" +
    '        return toURLEncodedForm(data, this.formSerializer).toString();\n' +
    '      }\n' +
    '\n' +
    "      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n" +
    '        const _FormData = this.env && this.env.FormData;\n' +
    '\n' +
    '        return toFormData(\n' +
    "          isFileList ? {'files[]': data} : data,\n" +
    '          _FormData && new _FormData(),\n' +
    '          this.formSerializer\n' +
    '        );\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    if (isObjectPayload || hasJSONContentType ) {\n' +
    "      headers.setContentType('application/json', false);\n" +
    '      return stringifySafely(data);\n' +
    '    }\n' +
    '\n' +
    '    return data;\n' +
    '  }],\n' +
    '\n' +
    '  transformResponse: [function transformResponse(data) {\n' +
    '    const transitional = this.transitional || defaults.transitional;\n' +
    '    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n' +
    "    const JSONRequested = this.responseType === 'json';\n" +
    '\n' +
    '    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n' +
    '      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n' +
    '      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n' +
    '\n' +
    '      try {\n' +
    '        return JSON.parse(data);\n' +
    '      } catch (e) {\n' +
    '        if (strictJSONParsing) {\n' +
    "          if (e.name === 'SyntaxError') {\n" +
    '            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n' +
    '          }\n' +
    '          throw e;\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return data;\n' +
    '  }],\n' +
    '\n' +
    '  /**\n' +
    '   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n' +
    '   * timeout is not created.\n' +
    '   */\n' +
    '  timeout: 0,\n' +
    '\n' +
    "  xsrfCookieName: 'XSRF-TOKEN',\n" +
    "  xsrfHeaderName: 'X-XSRF-TOKEN',\n" +
    '\n' +
    '  maxContentLength: -1,\n' +
    '  maxBodyLength: -1,\n' +
    '\n' +
    '  env: {\n' +
    '    FormData: platform.classes.FormData,\n' +
    '    Blob: platform.classes.Blob\n' +
    '  },\n' +
    '\n' +
    '  validateStatus: function validateStatus(status) {\n' +
    '    return status >= 200 && status < 300;\n' +
    '  },\n' +
    '\n' +
    '  headers: {\n' +
    '    common: {\n' +
    "      'Accept': 'application/json, text/plain, */*',\n" +
    "      'Content-Type': undefined\n" +
    '    }\n' +
    '  }\n' +
    '};\n' +
    '\n' +
    "utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n" +
    '  defaults.headers[method] = {};\n' +
    '});\n' +
    '\n' +
    'export default defaults;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    '\n' +
    '/**\n' +
    " * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n" +
    ' *\n' +
    ' * @param {string} name - The name of the property to get.\n' +
    ' *\n' +
    ' * @returns An array of strings.\n' +
    ' */\n' +
    'function parsePropPath(name) {\n' +
    '  // foo[x][y][z]\n' +
    '  // foo.x.y.z\n' +
    '  // foo-x-y-z\n' +
    '  // foo x y z\n' +
    '  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n' +
    "    return match[0] === '[]' ? '' : match[1] || match[0];\n" +
    '  });\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Convert an array to an object.\n' +
    ' *\n' +
    ' * @param {Array<any>} arr - The array to convert to an object.\n' +
    ' *\n' +
    ' * @returns An object with the same keys and values as the array.\n' +
    ' */\n' +
    'function arrayToObject(arr) {\n' +
    '  const obj = {};\n' +
    '  const keys = Object.keys(arr);\n' +
    '  let i;\n' +
    '  const len = keys.length;\n' +
    '  let key;\n' +
    '  for (i = 0; i < len; i++) {\n' +
    '    key = keys[i];\n' +
    '    obj[key] = arr[key];\n' +
    '  }\n' +
    '  return obj;\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * It takes a FormData object and returns a JavaScript object\n' +
    ' *\n' +
    ' * @param {string} formData The FormData object to convert to JSON.\n' +
    ' *\n' +
    ' * @returns {Object<string, any> | null} The converted object.\n' +
    ' */\n' +
    'function formDataToJSON(formData) {\n' +
    '  function buildPath(path, value, target, index) {\n' +
    '    let name = path[index++];\n' +
    '\n' +
    "    if (name === '__proto__') return true;\n" +
    '\n' +
    '    const isNumericKey = Number.isFinite(+name);\n' +
    '    const isLast = index >= path.length;\n' +
    '    name = !name && utils.isArray(target) ? target.length : name;\n' +
    '\n' +
    '    if (isLast) {\n' +
    '      if (utils.hasOwnProp(target, name)) {\n' +
    '        target[name] = [target[name], value];\n' +
    '      } else {\n' +
    '        target[name] = value;\n' +
    '      }\n' +
    '\n' +
    '      return !isNumericKey;\n' +
    '    }\n' +
    '\n' +
    '    if (!target[name] || !utils.isObject(target[name])) {\n' +
    '      target[name] = [];\n' +
    '    }\n' +
    '\n' +
    '    const result = buildPath(path, value, target[name], index);\n' +
    '\n' +
    '    if (result && utils.isArray(target[name])) {\n' +
    '      target[name] = arrayToObject(target[name]);\n' +
    '    }\n' +
    '\n' +
    '    return !isNumericKey;\n' +
    '  }\n' +
    '\n' +
    '  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n' +
    '    const obj = {};\n' +
    '\n' +
    '    utils.forEachEntry(formData, (name, value) => {\n' +
    '      buildPath(parsePropPath(name), value, obj, 0);\n' +
    '    });\n' +
    '\n' +
    '    return obj;\n' +
    '  }\n' +
    '\n' +
    '  return null;\n' +
    '}\n' +
    '\n' +
    'export default formDataToJSON;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import AxiosError from '../core/AxiosError.js';\n" +
    "import utils from '../utils.js';\n" +
    '\n' +
    '/**\n' +
    ' * A `CanceledError` is an object that is thrown when an operation is canceled.\n' +
    ' *\n' +
    ' * @param {string=} message The message.\n' +
    ' * @param {Object=} config The config.\n' +
    ' * @param {Object=} request The request.\n' +
    ' *\n' +
    ' * @returns {CanceledError} The created error.\n' +
    ' */\n' +
    'function CanceledError(message, config, request) {\n' +
    '  // eslint-disable-next-line no-eq-null,eqeqeq\n' +
    "  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n" +
    "  this.name = 'CanceledError';\n" +
    '}\n' +
    '\n' +
    'utils.inherits(CanceledError, AxiosError, {\n' +
    '  __CANCEL__: true\n' +
    '});\n' +
    '\n' +
    'export default CanceledError;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import CanceledError from './CanceledError.js';\n" +
    '\n' +
    '/**\n' +
    ' * A `CancelToken` is an object that can be used to request cancellation of an operation.\n' +
    ' *\n' +
    ' * @param {Function} executor The executor function.\n' +
    ' *\n' +
    ' * @returns {CancelToken}\n' +
    ' */\n' +
    'class CancelToken {\n' +
    '  constructor(executor) {\n' +
    "    if (typeof executor !== 'function') {\n" +
    "      throw new TypeError('executor must be a function.');\n" +
    '    }\n' +
    '\n' +
    '    let resolvePromise;\n' +
    '\n' +
    '    this.promise = new Promise(function promiseExecutor(resolve) {\n' +
    '      resolvePromise = resolve;\n' +
    '    });\n' +
    '\n' +
    '    const token = this;\n' +
    '\n' +
    '    // eslint-disable-next-line func-names\n' +
    '    this.promise.then(cancel => {\n' +
    '      if (!token._listeners) return;\n' +
    '\n' +
    '      let i = token._listeners.length;\n' +
    '\n' +
    '      while (i-- > 0) {\n' +
    '        token._listeners[i](cancel);\n' +
    '      }\n' +
    '      token._listeners = null;\n' +
    '    });\n' +
    '\n' +
    '    // eslint-disable-next-line func-names\n' +
    '    this.promise.then = onfulfilled => {\n' +
    '      let _resolve;\n' +
    '      // eslint-disable-next-line func-names\n' +
    '      const promise = new Promise(resolve => {\n' +
    '        token.subscribe(resolve);\n' +
    '        _resolve = resolve;\n' +
    '      }).then(onfulfilled);\n' +
    '\n' +
    '      promise.cancel = function reject() {\n' +
    '        token.unsubscribe(_resolve);\n' +
    '      };\n' +
    '\n' +
    '      return promise;\n' +
    '    };\n' +
    '\n' +
    '    executor(function cancel(message, config, request) {\n' +
    '      if (token.reason) {\n' +
    '        // Cancellation has already been requested\n' +
    '        return;\n' +
    '      }\n' +
    '\n' +
    '      token.reason = new CanceledError(message, config, request);\n' +
    '      resolvePromise(token.reason);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Throws a `CanceledError` if cancellation has been requested.\n' +
    '   */\n' +
    '  throwIfRequested() {\n' +
    '    if (this.reason) {\n' +
    '      throw this.reason;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Subscribe to the cancel signal\n' +
    '   */\n' +
    '\n' +
    '  subscribe(listener) {\n' +
    '    if (this.reason) {\n' +
    '      listener(this.reason);\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    if (this._listeners) {\n' +
    '      this._listeners.push(listener);\n' +
    '    } else {\n' +
    '      this._listeners = [listener];\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Unsubscribe from the cancel signal\n' +
    '   */\n' +
    '\n' +
    '  unsubscribe(listener) {\n' +
    '    if (!this._listeners) {\n' +
    '      return;\n' +
    '    }\n' +
    '    const index = this._listeners.indexOf(listener);\n' +
    '    if (index !== -1) {\n' +
    '      this._listeners.splice(index, 1);\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Returns an object that contains a new `CancelToken` and a function that, when called,\n' +
    '   * cancels the `CancelToken`.\n' +
    '   */\n' +
    '  static source() {\n' +
    '    let cancel;\n' +
    '    const token = new CancelToken(function executor(c) {\n' +
    '      cancel = c;\n' +
    '    });\n' +
    '    return {\n' +
    '      token,\n' +
    '      cancel\n' +
    '    };\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export default CancelToken;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    'export default function isCancel(value) {\n' +
    '  return !!(value && value.__CANCEL__);\n' +
    '}\n'
} [Function: logger]
____9999999____ { code: 'export const VERSION = "1.6.7";' } [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    "import AxiosError from '../core/AxiosError.js';\n" +
    '// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n' +
    "import PlatformFormData from '../platform/node/classes/FormData.js';\n" +
    '\n' +
    '/**\n' +
    ' * Determines if the given thing is a array or js object.\n' +
    ' *\n' +
    ' * @param {string} thing - The object or array to be visited.\n' +
    ' *\n' +
    ' * @returns {boolean}\n' +
    ' */\n' +
    'function isVisitable(thing) {\n' +
    '  return utils.isPlainObject(thing) || utils.isArray(thing);\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * It removes the brackets from the end of a string\n' +
    ' *\n' +
    ' * @param {string} key - The key of the parameter.\n' +
    ' *\n' +
    ' * @returns {string} the key without the brackets.\n' +
    ' */\n' +
    'function removeBrackets(key) {\n' +
    "  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n" +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * It takes a path, a key, and a boolean, and returns a string\n' +
    ' *\n' +
    ' * @param {string} path - The path to the current key.\n' +
    ' * @param {string} key - The key of the current object being iterated over.\n' +
    ' * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n' +
    ' *\n' +
    ' * @returns {string} The path to the current key.\n' +
    ' */\n' +
    'function renderKey(path, key, dots) {\n' +
    '  if (!path) return key;\n' +
    '  return path.concat(key).map(function each(token, i) {\n' +
    '    // eslint-disable-next-line no-param-reassign\n' +
    '    token = removeBrackets(token);\n' +
    "    return !dots && i ? '[' + token + ']' : token;\n" +
    "  }).join(dots ? '.' : '');\n" +
    '}\n' +
    '\n' +
    '/**\n' +
    " * If the array is an array and none of its elements are visitable, then it's a flat array.\n" +
    ' *\n' +
    ' * @param {Array<any>} arr - The array to check\n' +
    ' *\n' +
    ' * @returns {boolean}\n' +
    ' */\n' +
    'function isFlatArray(arr) {\n' +
    '  return utils.isArray(arr) && !arr.some(isVisitable);\n' +
    '}\n' +
    '\n' +
    'const predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n' +
    '  return /^is[A-Z]/.test(prop);\n' +
    '});\n' +
    '\n' +
    '/**\n' +
    ' * Convert a data object to FormData\n' +
    ' *\n' +
    ' * @param {Object} obj\n' +
    ' * @param {?Object} [formData]\n' +
    ' * @param {?Object} [options]\n' +
    ' * @param {Function} [options.visitor]\n' +
    ' * @param {Boolean} [options.metaTokens = true]\n' +
    ' * @param {Boolean} [options.dots = false]\n' +
    ' * @param {?Boolean} [options.indexes = false]\n' +
    ' *\n' +
    ' * @returns {Object}\n' +
    ' **/\n' +
    '\n' +
    '/**\n' +
    ' * It converts an object into a FormData object\n' +
    ' *\n' +
    ' * @param {Object<any, any>} obj - The object to convert to form data.\n' +
    ' * @param {string} formData - The FormData object to append to.\n' +
    ' * @param {Object<string, any>} options\n' +
    ' *\n' +
    ' * @returns\n' +
    ' */\n' +
    'function toFormData(obj, formData, options) {\n' +
    '  if (!utils.isObject(obj)) {\n' +
    "    throw new TypeError('target must be an object');\n" +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line no-param-reassign\n' +
    '  formData = formData || new (PlatformFormData || FormData)();\n' +
    '\n' +
    '  // eslint-disable-next-line no-param-reassign\n' +
    '  options = utils.toFlatObject(options, {\n' +
    '    metaTokens: true,\n' +
    '    dots: false,\n' +
    '    indexes: false\n' +
    '  }, false, function defined(option, source) {\n' +
    '    // eslint-disable-next-line no-eq-null,eqeqeq\n' +
    '    return !utils.isUndefined(source[option]);\n' +
    '  });\n' +
    '\n' +
    '  const metaTokens = options.metaTokens;\n' +
    '  // eslint-disable-next-line no-use-before-define\n' +
    '  const visitor = options.visitor || defaultVisitor;\n' +
    '  const dots = options.dots;\n' +
    '  const indexes = options.indexes;\n' +
    "  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n" +
    '  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n' +
    '\n' +
    '  if (!utils.isFunction(visitor)) {\n' +
    "    throw new TypeError('visitor must be a function');\n" +
    '  }\n' +
    '\n' +
    '  function convertValue(value) {\n' +
    "    if (value === null) return '';\n" +
    '\n' +
    '    if (utils.isDate(value)) {\n' +
    '      return value.toISOString();\n' +
    '    }\n' +
    '\n' +
    '    if (!useBlob && utils.isBlob(value)) {\n' +
    "      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n" +
    '    }\n' +
    '\n' +
    '    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n' +
    "      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n" +
    '    }\n' +
    '\n' +
    '    return value;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Default visitor.\n' +
    '   *\n' +
    '   * @param {*} value\n' +
    '   * @param {String|Number} key\n' +
    '   * @param {Array<String|Number>} path\n' +
    '   * @this {FormData}\n' +
    '   *\n' +
    '   * @returns {boolean} return true to visit the each prop of the value recursively\n' +
    '   */\n' +
    '  function defaultVisitor(value, key, path) {\n' +
    '    let arr = value;\n' +
    '\n' +
    "    if (value && !path && typeof value === 'object') {\n" +
    "      if (utils.endsWith(key, '{}')) {\n" +
    '        // eslint-disable-next-line no-param-reassign\n' +
    '        key = metaTokens ? key : key.slice(0, -2);\n' +
    '        // eslint-disable-next-line no-param-reassign\n' +
    '        value = JSON.stringify(value);\n' +
    '      } else if (\n' +
    '        (utils.isArray(value) && isFlatArray(value)) ||\n' +
    "        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n" +
    '        )) {\n' +
    '        // eslint-disable-next-line no-param-reassign\n' +
    '        key = removeBrackets(key);\n' +
    '\n' +
    '        arr.forEach(function each(el, index) {\n' +
    '          !(utils.isUndefined(el) || el === null) && formData.append(\n' +
    '            // eslint-disable-next-line no-nested-ternary\n' +
    "            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n" +
    '            convertValue(el)\n' +
    '          );\n' +
    '        });\n' +
    '        return false;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    if (isVisitable(value)) {\n' +
    '      return true;\n' +
    '    }\n' +
    '\n' +
    '    formData.append(renderKey(path, key, dots), convertValue(value));\n' +
    '\n' +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    '  const stack = [];\n' +
    '\n' +
    '  const exposedHelpers = Object.assign(predicates, {\n' +
    '    defaultVisitor,\n' +
    '    convertValue,\n' +
    '    isVisitable\n' +
    '  });\n' +
    '\n' +
    '  function build(value, path) {\n' +
    '    if (utils.isUndefined(value)) return;\n' +
    '\n' +
    '    if (stack.indexOf(value) !== -1) {\n' +
    "      throw Error('Circular reference detected in ' + path.join('.'));\n" +
    '    }\n' +
    '\n' +
    '    stack.push(value);\n' +
    '\n' +
    '    utils.forEach(value, function each(el, key) {\n' +
    '      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n' +
    '        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n' +
    '      );\n' +
    '\n' +
    '      if (result === true) {\n' +
    '        build(el, path ? path.concat(key) : [key]);\n' +
    '      }\n' +
    '    });\n' +
    '\n' +
    '    stack.pop();\n' +
    '  }\n' +
    '\n' +
    '  if (!utils.isObject(obj)) {\n' +
    "    throw new TypeError('data must be an object');\n" +
    '  }\n' +
    '\n' +
    '  build(obj);\n' +
    '\n' +
    '  return formData;\n' +
    '}\n' +
    '\n' +
    'export default toFormData;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    '/**\n' +
    ' * Syntactic sugar for invoking a function and expanding an array for arguments.\n' +
    ' *\n' +
    ' * Common use case would be to use `Function.prototype.apply`.\n' +
    ' *\n' +
    ' *  ```js\n' +
    ' *  function f(x, y, z) {}\n' +
    ' *  var args = [1, 2, 3];\n' +
    ' *  f.apply(null, args);\n' +
    ' *  ```\n' +
    ' *\n' +
    ' * With `spread` this example can be re-written.\n' +
    ' *\n' +
    ' *  ```js\n' +
    ' *  spread(function(x, y, z) {})([1, 2, 3]);\n' +
    ' *  ```\n' +
    ' *\n' +
    ' * @param {Function} callback\n' +
    ' *\n' +
    ' * @returns {Function}\n' +
    ' */\n' +
    'export default function spread(callback) {\n' +
    '  return function wrap(arr) {\n' +
    '    return callback.apply(null, arr);\n' +
    '  };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    '\n' +
    '/**\n' +
    ' * Determines whether the payload is an error thrown by Axios\n' +
    ' *\n' +
    ' * @param {*} payload The value to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n' +
    ' */\n' +
    'export default function isAxiosError(payload) {\n' +
    '  return utils.isObject(payload) && (payload.isAxiosError === true);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    '\n' +
    '/**\n' +
    ' * Create an Error with the specified message, config, error code, request and response.\n' +
    ' *\n' +
    ' * @param {string} message The error message.\n' +
    " * @param {string} [code] The error code (for example, 'ECONNABORTED').\n" +
    ' * @param {Object} [config] The config.\n' +
    ' * @param {Object} [request] The request.\n' +
    ' * @param {Object} [response] The response.\n' +
    ' *\n' +
    ' * @returns {Error} The created error.\n' +
    ' */\n' +
    'function AxiosError(message, code, config, request, response) {\n' +
    '  Error.call(this);\n' +
    '\n' +
    '  if (Error.captureStackTrace) {\n' +
    '    Error.captureStackTrace(this, this.constructor);\n' +
    '  } else {\n' +
    '    this.stack = (new Error()).stack;\n' +
    '  }\n' +
    '\n' +
    '  this.message = message;\n' +
    "  this.name = 'AxiosError';\n" +
    '  code && (this.code = code);\n' +
    '  config && (this.config = config);\n' +
    '  request && (this.request = request);\n' +
    '  response && (this.response = response);\n' +
    '}\n' +
    '\n' +
    'utils.inherits(AxiosError, Error, {\n' +
    '  toJSON: function toJSON() {\n' +
    '    return {\n' +
    '      // Standard\n' +
    '      message: this.message,\n' +
    '      name: this.name,\n' +
    '      // Microsoft\n' +
    '      description: this.description,\n' +
    '      number: this.number,\n' +
    '      // Mozilla\n' +
    '      fileName: this.fileName,\n' +
    '      lineNumber: this.lineNumber,\n' +
    '      columnNumber: this.columnNumber,\n' +
    '      stack: this.stack,\n' +
    '      // Axios\n' +
    '      config: utils.toJSONObject(this.config),\n' +
    '      code: this.code,\n' +
    '      status: this.response && this.response.status ? this.response.status : null\n' +
    '    };\n' +
    '  }\n' +
    '});\n' +
    '\n' +
    'const prototype = AxiosError.prototype;\n' +
    'const descriptors = {};\n' +
    '\n' +
    '[\n' +
    "  'ERR_BAD_OPTION_VALUE',\n" +
    "  'ERR_BAD_OPTION',\n" +
    "  'ECONNABORTED',\n" +
    "  'ETIMEDOUT',\n" +
    "  'ERR_NETWORK',\n" +
    "  'ERR_FR_TOO_MANY_REDIRECTS',\n" +
    "  'ERR_DEPRECATED',\n" +
    "  'ERR_BAD_RESPONSE',\n" +
    "  'ERR_BAD_REQUEST',\n" +
    "  'ERR_CANCELED',\n" +
    "  'ERR_NOT_SUPPORT',\n" +
    "  'ERR_INVALID_URL'\n" +
    '// eslint-disable-next-line func-names\n' +
    '].forEach(code => {\n' +
    '  descriptors[code] = {value: code};\n' +
    '});\n' +
    '\n' +
    'Object.defineProperties(AxiosError, descriptors);\n' +
    "Object.defineProperty(prototype, 'isAxiosError', {value: true});\n" +
    '\n' +
    '// eslint-disable-next-line func-names\n' +
    'AxiosError.from = (error, code, config, request, response, customProps) => {\n' +
    '  const axiosError = Object.create(prototype);\n' +
    '\n' +
    '  utils.toFlatObject(error, axiosError, function filter(obj) {\n' +
    '    return obj !== Error.prototype;\n' +
    '  }, prop => {\n' +
    "    return prop !== 'isAxiosError';\n" +
    '  });\n' +
    '\n' +
    '  AxiosError.call(axiosError, error.message, code, config, request, response);\n' +
    '\n' +
    '  axiosError.cause = error;\n' +
    '\n' +
    '  axiosError.name = error.name;\n' +
    '\n' +
    '  customProps && Object.assign(axiosError, customProps);\n' +
    '\n' +
    '  return axiosError;\n' +
    '};\n' +
    '\n' +
    'export default AxiosError;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    "import parseHeaders from '../helpers/parseHeaders.js';\n" +
    '\n' +
    "const $internals = Symbol('internals');\n" +
    '\n' +
    'function normalizeHeader(header) {\n' +
    '  return header && String(header).trim().toLowerCase();\n' +
    '}\n' +
    '\n' +
    'function normalizeValue(value) {\n' +
    '  if (value === false || value == null) {\n' +
    '    return value;\n' +
    '  }\n' +
    '\n' +
    '  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n' +
    '}\n' +
    '\n' +
    'function parseTokens(str) {\n' +
    '  const tokens = Object.create(null);\n' +
    '  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n' +
    '  let match;\n' +
    '\n' +
    '  while ((match = tokensRE.exec(str))) {\n' +
    '    tokens[match[1]] = match[2];\n' +
    '  }\n' +
    '\n' +
    '  return tokens;\n' +
    '}\n' +
    '\n' +
    "const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n" +
    '\n' +
    'function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n' +
    '  if (utils.isFunction(filter)) {\n' +
    '    return filter.call(this, value, header);\n' +
    '  }\n' +
    '\n' +
    '  if (isHeaderNameFilter) {\n' +
    '    value = header;\n' +
    '  }\n' +
    '\n' +
    '  if (!utils.isString(value)) return;\n' +
    '\n' +
    '  if (utils.isString(filter)) {\n' +
    '    return value.indexOf(filter) !== -1;\n' +
    '  }\n' +
    '\n' +
    '  if (utils.isRegExp(filter)) {\n' +
    '    return filter.test(value);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function formatHeader(header) {\n' +
    '  return header.trim()\n' +
    '    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n' +
    '      return char.toUpperCase() + str;\n' +
    '    });\n' +
    '}\n' +
    '\n' +
    'function buildAccessors(obj, header) {\n' +
    "  const accessorName = utils.toCamelCase(' ' + header);\n" +
    '\n' +
    "  ['get', 'set', 'has'].forEach(methodName => {\n" +
    '    Object.defineProperty(obj, methodName + accessorName, {\n' +
    '      value: function(arg1, arg2, arg3) {\n' +
    '        return this[methodName].call(this, header, arg1, arg2, arg3);\n' +
    '      },\n' +
    '      configurable: true\n' +
    '    });\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'class AxiosHeaders {\n' +
    '  constructor(headers) {\n' +
    '    headers && this.set(headers);\n' +
    '  }\n' +
    '\n' +
    '  set(header, valueOrRewrite, rewrite) {\n' +
    '    const self = this;\n' +
    '\n' +
    '    function setHeader(_value, _header, _rewrite) {\n' +
    '      const lHeader = normalizeHeader(_header);\n' +
    '\n' +
    '      if (!lHeader) {\n' +
    "        throw new Error('header name must be a non-empty string');\n" +
    '      }\n' +
    '\n' +
    '      const key = utils.findKey(self, lHeader);\n' +
    '\n' +
    '      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n' +
    '        self[key || _header] = normalizeValue(_value);\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    const setHeaders = (headers, _rewrite) =>\n' +
    '      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n' +
    '\n' +
    '    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n' +
    '      setHeaders(header, valueOrRewrite)\n' +
    '    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n' +
    '      setHeaders(parseHeaders(header), valueOrRewrite);\n' +
    '    } else {\n' +
    '      header != null && setHeader(valueOrRewrite, header, rewrite);\n' +
    '    }\n' +
    '\n' +
    '    return this;\n' +
    '  }\n' +
    '\n' +
    '  get(header, parser) {\n' +
    '    header = normalizeHeader(header);\n' +
    '\n' +
    '    if (header) {\n' +
    '      const key = utils.findKey(this, header);\n' +
    '\n' +
    '      if (key) {\n' +
    '        const value = this[key];\n' +
    '\n' +
    '        if (!parser) {\n' +
    '          return value;\n' +
    '        }\n' +
    '\n' +
    '        if (parser === true) {\n' +
    '          return parseTokens(value);\n' +
    '        }\n' +
    '\n' +
    '        if (utils.isFunction(parser)) {\n' +
    '          return parser.call(this, value, key);\n' +
    '        }\n' +
    '\n' +
    '        if (utils.isRegExp(parser)) {\n' +
    '          return parser.exec(value);\n' +
    '        }\n' +
    '\n' +
    "        throw new TypeError('parser must be boolean|regexp|function');\n" +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  has(header, matcher) {\n' +
    '    header = normalizeHeader(header);\n' +
    '\n' +
    '    if (header) {\n' +
    '      const key = utils.findKey(this, header);\n' +
    '\n' +
    '      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n' +
    '    }\n' +
    '\n' +
    '    return false;\n' +
    '  }\n' +
    '\n' +
    '  delete(header, matcher) {\n' +
    '    const self = this;\n' +
    '    let deleted = false;\n' +
    '\n' +
    '    function deleteHeader(_header) {\n' +
    '      _header = normalizeHeader(_header);\n' +
    '\n' +
    '      if (_header) {\n' +
    '        const key = utils.findKey(self, _header);\n' +
    '\n' +
    '        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n' +
    '          delete self[key];\n' +
    '\n' +
    '          deleted = true;\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    if (utils.isArray(header)) {\n' +
    '      header.forEach(deleteHeader);\n' +
    '    } else {\n' +
    '      deleteHeader(header);\n' +
    '    }\n' +
    '\n' +
    '    return deleted;\n' +
    '  }\n' +
    '\n' +
    '  clear(matcher) {\n' +
    '    const keys = Object.keys(this);\n' +
    '    let i = keys.length;\n' +
    '    let deleted = false;\n' +
    '\n' +
    '    while (i--) {\n' +
    '      const key = keys[i];\n' +
    '      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n' +
    '        delete this[key];\n' +
    '        deleted = true;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return deleted;\n' +
    '  }\n' +
    '\n' +
    '  normalize(format) {\n' +
    '    const self = this;\n' +
    '    const headers = {};\n' +
    '\n' +
    '    utils.forEach(this, (value, header) => {\n' +
    '      const key = utils.findKey(headers, header);\n' +
    '\n' +
    '      if (key) {\n' +
    '        self[key] = normalizeValue(value);\n' +
    '        delete self[header];\n' +
    '        return;\n' +
    '      }\n' +
    '\n' +
    '      const normalized = format ? formatHeader(header) : String(header).trim();\n' +
    '\n' +
    '      if (normalized !== header) {\n' +
    '        delete self[header];\n' +
    '      }\n' +
    '\n' +
    '      self[normalized] = normalizeValue(value);\n' +
    '\n' +
    '      headers[normalized] = true;\n' +
    '    });\n' +
    '\n' +
    '    return this;\n' +
    '  }\n' +
    '\n' +
    '  concat(...targets) {\n' +
    '    return this.constructor.concat(this, ...targets);\n' +
    '  }\n' +
    '\n' +
    '  toJSON(asStrings) {\n' +
    '    const obj = Object.create(null);\n' +
    '\n' +
    '    utils.forEach(this, (value, header) => {\n' +
    "      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n" +
    '    });\n' +
    '\n' +
    '    return obj;\n' +
    '  }\n' +
    '\n' +
    '  [Symbol.iterator]() {\n' +
    '    return Object.entries(this.toJSON())[Symbol.iterator]();\n' +
    '  }\n' +
    '\n' +
    '  toString() {\n' +
    "    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n" +
    '  }\n' +
    '\n' +
    '  get [Symbol.toStringTag]() {\n' +
    "    return 'AxiosHeaders';\n" +
    '  }\n' +
    '\n' +
    '  static from(thing) {\n' +
    '    return thing instanceof this ? thing : new this(thing);\n' +
    '  }\n' +
    '\n' +
    '  static concat(first, ...targets) {\n' +
    '    const computed = new this(first);\n' +
    '\n' +
    '    targets.forEach((target) => computed.set(target));\n' +
    '\n' +
    '    return computed;\n' +
    '  }\n' +
    '\n' +
    '  static accessor(header) {\n' +
    '    const internals = this[$internals] = (this[$internals] = {\n' +
    '      accessors: {}\n' +
    '    });\n' +
    '\n' +
    '    const accessors = internals.accessors;\n' +
    '    const prototype = this.prototype;\n' +
    '\n' +
    '    function defineAccessor(_header) {\n' +
    '      const lHeader = normalizeHeader(_header);\n' +
    '\n' +
    '      if (!accessors[lHeader]) {\n' +
    '        buildAccessors(prototype, _header);\n' +
    '        accessors[lHeader] = true;\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n' +
    '\n' +
    '    return this;\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    "AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n" +
    '\n' +
    '// reserved names hotfix\n' +
    'utils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n' +
    '  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n' +
    '  return {\n' +
    '    get: () => value,\n' +
    '    set(headerValue) {\n' +
    '      this[mapped] = headerValue;\n' +
    '    }\n' +
    '  }\n' +
    '});\n' +
    '\n' +
    'utils.freezeMethods(AxiosHeaders);\n' +
    '\n' +
    'export default AxiosHeaders;\n'
} [Function: logger]
____9999999____ {
  code: "import utils from '../utils.js';\n" +
    "import httpAdapter from './http.js';\n" +
    "import xhrAdapter from './xhr.js';\n" +
    'import AxiosError from "../core/AxiosError.js";\n' +
    '\n' +
    'const knownAdapters = {\n' +
    '  http: httpAdapter,\n' +
    '  xhr: xhrAdapter\n' +
    '}\n' +
    '\n' +
    'utils.forEach(knownAdapters, (fn, value) => {\n' +
    '  if (fn) {\n' +
    '    try {\n' +
    "      Object.defineProperty(fn, 'name', {value});\n" +
    '    } catch (e) {\n' +
    '      // eslint-disable-next-line no-empty\n' +
    '    }\n' +
    "    Object.defineProperty(fn, 'adapterName', {value});\n" +
    '  }\n' +
    '});\n' +
    '\n' +
    'const renderReason = (reason) => `- ${reason}`;\n' +
    '\n' +
    'const isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n' +
    '\n' +
    'export default {\n' +
    '  getAdapter: (adapters) => {\n' +
    '    adapters = utils.isArray(adapters) ? adapters : [adapters];\n' +
    '\n' +
    '    const {length} = adapters;\n' +
    '    let nameOrAdapter;\n' +
    '    let adapter;\n' +
    '\n' +
    '    const rejectedReasons = {};\n' +
    '\n' +
    '    for (let i = 0; i < length; i++) {\n' +
    '      nameOrAdapter = adapters[i];\n' +
    '      let id;\n' +
    '\n' +
    '      adapter = nameOrAdapter;\n' +
    '\n' +
    '      if (!isResolvedHandle(nameOrAdapter)) {\n' +
    '        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n' +
    '\n' +
    '        if (adapter === undefined) {\n' +
    "          throw new AxiosError(`Unknown adapter '${id}'`);\n" +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      if (adapter) {\n' +
    '        break;\n' +
    '      }\n' +
    '\n' +
    "      rejectedReasons[id || '#' + i] = adapter;\n" +
    '    }\n' +
    '\n' +
    '    if (!adapter) {\n' +
    '\n' +
    '      const reasons = Object.entries(rejectedReasons)\n' +
    '        .map(([id, state]) => `adapter ${id} ` +\n' +
    "          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n" +
    '        );\n' +
    '\n' +
    '      let s = length ?\n' +
    "        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n" +
    "        'as no adapter specified';\n" +
    '\n' +
    '      throw new AxiosError(\n' +
    '        `There is no suitable adapter to dispatch the request ` + s,\n' +
    "        'ERR_NOT_SUPPORT'\n" +
    '      );\n' +
    '    }\n' +
    '\n' +
    '    return adapter;\n' +
    '  },\n' +
    '  adapters: knownAdapters\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'const HttpStatusCode = {\n' +
    '  Continue: 100,\n' +
    '  SwitchingProtocols: 101,\n' +
    '  Processing: 102,\n' +
    '  EarlyHints: 103,\n' +
    '  Ok: 200,\n' +
    '  Created: 201,\n' +
    '  Accepted: 202,\n' +
    '  NonAuthoritativeInformation: 203,\n' +
    '  NoContent: 204,\n' +
    '  ResetContent: 205,\n' +
    '  PartialContent: 206,\n' +
    '  MultiStatus: 207,\n' +
    '  AlreadyReported: 208,\n' +
    '  ImUsed: 226,\n' +
    '  MultipleChoices: 300,\n' +
    '  MovedPermanently: 301,\n' +
    '  Found: 302,\n' +
    '  SeeOther: 303,\n' +
    '  NotModified: 304,\n' +
    '  UseProxy: 305,\n' +
    '  Unused: 306,\n' +
    '  TemporaryRedirect: 307,\n' +
    '  PermanentRedirect: 308,\n' +
    '  BadRequest: 400,\n' +
    '  Unauthorized: 401,\n' +
    '  PaymentRequired: 402,\n' +
    '  Forbidden: 403,\n' +
    '  NotFound: 404,\n' +
    '  MethodNotAllowed: 405,\n' +
    '  NotAcceptable: 406,\n' +
    '  ProxyAuthenticationRequired: 407,\n' +
    '  RequestTimeout: 408,\n' +
    '  Conflict: 409,\n' +
    '  Gone: 410,\n' +
    '  LengthRequired: 411,\n' +
    '  PreconditionFailed: 412,\n' +
    '  PayloadTooLarge: 413,\n' +
    '  UriTooLong: 414,\n' +
    '  UnsupportedMediaType: 415,\n' +
    '  RangeNotSatisfiable: 416,\n' +
    '  ExpectationFailed: 417,\n' +
    '  ImATeapot: 418,\n' +
    '  MisdirectedRequest: 421,\n' +
    '  UnprocessableEntity: 422,\n' +
    '  Locked: 423,\n' +
    '  FailedDependency: 424,\n' +
    '  TooEarly: 425,\n' +
    '  UpgradeRequired: 426,\n' +
    '  PreconditionRequired: 428,\n' +
    '  TooManyRequests: 429,\n' +
    '  RequestHeaderFieldsTooLarge: 431,\n' +
    '  UnavailableForLegalReasons: 451,\n' +
    '  InternalServerError: 500,\n' +
    '  NotImplemented: 501,\n' +
    '  BadGateway: 502,\n' +
    '  ServiceUnavailable: 503,\n' +
    '  GatewayTimeout: 504,\n' +
    '  HttpVersionNotSupported: 505,\n' +
    '  VariantAlsoNegotiates: 506,\n' +
    '  InsufficientStorage: 507,\n' +
    '  LoopDetected: 508,\n' +
    '  NotExtended: 510,\n' +
    '  NetworkAuthenticationRequired: 511,\n' +
    '};\n' +
    '\n' +
    'Object.entries(HttpStatusCode).forEach(([key, value]) => {\n' +
    '  HttpStatusCode[value] = key;\n' +
    '});\n' +
    '\n' +
    'export default HttpStatusCode;\n'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * The buffer module from node.js, for the browser.\n' +
    ' *\n' +
    ' * @author   Feross Aboukhadijeh <http://feross.org>\n' +
    ' * @license  MIT\n' +
    ' */\n' +
    '/* eslint-disable no-proto */\n' +
    '\n' +
    "'use strict'\n" +
    '\n' +
    "var base64 = require('base64-js')\n" +
    "var ieee754 = require('ieee754')\n" +
    "var isArray = require('isarray')\n" +
    '\n' +
    'exports.Buffer = Buffer\n' +
    'exports.SlowBuffer = SlowBuffer\n' +
    'exports.INSPECT_MAX_BYTES = 50\n' +
    '\n' +
    '/**\n' +
    ' * If `Buffer.TYPED_ARRAY_SUPPORT`:\n' +
    ' *   === true    Use Uint8Array implementation (fastest)\n' +
    ' *   === false   Use Object implementation (most compatible, even IE6)\n' +
    ' *\n' +
    ' * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n' +
    ' * Opera 11.6+, iOS 4.2+.\n' +
    ' *\n' +
    ' * Due to various browser bugs, sometimes the Object implementation will be used even\n' +
    ' * when the browser supports typed arrays.\n' +
    ' *\n' +
    ' * Note:\n' +
    ' *\n' +
    ' *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n' +
    ' *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n' +
    ' *\n' +
    ' *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n' +
    ' *\n' +
    ' *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n' +
    ' *     incorrect length in some situations.\n' +
    '\n' +
    ' * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n' +
    ' * get the Object implementation, which is slower but behaves correctly.\n' +
    ' */\n' +
    'Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n' +
    '  ? global.TYPED_ARRAY_SUPPORT\n' +
    '  : typedArraySupport()\n' +
    '\n' +
    '/*\n' +
    ' * Export kMaxLength after typed array support is determined.\n' +
    ' */\n' +
    'exports.kMaxLength = kMaxLength()\n' +
    '\n' +
    'function typedArraySupport () {\n' +
    '  try {\n' +
    '    var arr = new Uint8Array(1)\n' +
    '    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n' +
    '    return arr.foo() === 42 && // typed array instances can be augmented\n' +
    "        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n" +
    '        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n' +
    '  } catch (e) {\n' +
    '    return false\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function kMaxLength () {\n' +
    '  return Buffer.TYPED_ARRAY_SUPPORT\n' +
    '    ? 0x7fffffff\n' +
    '    : 0x3fffffff\n' +
    '}\n' +
    '\n' +
    'function createBuffer (that, length) {\n' +
    '  if (kMaxLength() < length) {\n' +
    "    throw new RangeError('Invalid typed array length')\n" +
    '  }\n' +
    '  if (Buffer.TYPED_ARRAY_SUPPORT) {\n' +
    '    // Return an augmented `Uint8Array` instance, for best performance\n' +
    '    that = new Uint8Array(length)\n' +
    '    that.__proto__ = Buffer.prototype\n' +
    '  } else {\n' +
    '    // Fallback: Return an object instance of the Buffer class\n' +
    '    if (that === null) {\n' +
    '      that = new Buffer(length)\n' +
    '    }\n' +
    '    that.length = length\n' +
    '  }\n' +
    '\n' +
    '  return that\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * The Buffer constructor returns instances of `Uint8Array` that have their\n' +
    ' * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n' +
    ' * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n' +
    ' * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n' +
    ' * returns a single octet.\n' +
    ' *\n' +
    ' * The `Uint8Array` prototype remains unmodified.\n' +
    ' */\n' +
    '\n' +
    'function Buffer (arg, encodingOrOffset, length) {\n' +
    '  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n' +
    '    return new Buffer(arg, encodingOrOffset, length)\n' +
    '  }\n' +
    '\n' +
    '  // Common case.\n' +
    "  if (typeof arg === 'number') {\n" +
    "    if (typeof encodingOrOffset === 'string') {\n" +
    '      throw new Error(\n' +
    "        'If encoding is specified then the first argument must be a string'\n" +
    '      )\n' +
    '    }\n' +
    '    return allocUnsafe(this, arg)\n' +
    '  }\n' +
    '  return from(this, arg, encodingOrOffset, length)\n' +
    '}\n' +
    '\n' +
    'Buffer.poolSize = 8192 // not used by this implementation\n' +
    '\n' +
    '// TODO: Legacy, not needed anymore. Remove in next major version.\n' +
    'Buffer._augment = function (arr) {\n' +
    '  arr.__proto__ = Buffer.prototype\n' +
    '  return arr\n' +
    '}\n' +
    '\n' +
    'function from (that, value, encodingOrOffset, length) {\n' +
    "  if (typeof value === 'number') {\n" +
    `    throw new TypeError('"value" argument must not be a number')\n` +
    '  }\n' +
    '\n' +
    "  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n" +
    '    return fromArrayBuffer(that, value, encodingOrOffset, length)\n' +
    '  }\n' +
    '\n' +
    "  if (typeof value === 'string') {\n" +
    '    return fromString(that, value, encodingOrOffset)\n' +
    '  }\n' +
    '\n' +
    '  return fromObject(that, value)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n' +
    ' * if value is a number.\n' +
    ' * Buffer.from(str[, encoding])\n' +
    ' * Buffer.from(array)\n' +
    ' * Buffer.from(buffer)\n' +
    ' * Buffer.from(arrayBuffer[, byteOffset[, length]])\n' +
    ' **/\n' +
    'Buffer.from = function (value, encodingOrOffset, length) {\n' +
    '  return from(null, value, encodingOrOffset, length)\n' +
    '}\n' +
    '\n' +
    'if (Buffer.TYPED_ARRAY_SUPPORT) {\n' +
    '  Buffer.prototype.__proto__ = Uint8Array.prototype\n' +
    '  Buffer.__proto__ = Uint8Array\n' +
    "  if (typeof Symbol !== 'undefined' && Symbol.species &&\n" +
    '      Buffer[Symbol.species] === Buffer) {\n' +
    '    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n' +
    '    Object.defineProperty(Buffer, Symbol.species, {\n' +
    '      value: null,\n' +
    '      configurable: true\n' +
    '    })\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function assertSize (size) {\n' +
    "  if (typeof size !== 'number') {\n" +
    `    throw new TypeError('"size" argument must be a number')\n` +
    '  } else if (size < 0) {\n' +
    `    throw new RangeError('"size" argument must not be negative')\n` +
    '  }\n' +
    '}\n' +
    '\n' +
    'function alloc (that, size, fill, encoding) {\n' +
    '  assertSize(size)\n' +
    '  if (size <= 0) {\n' +
    '    return createBuffer(that, size)\n' +
    '  }\n' +
    '  if (fill !== undefined) {\n' +
    "    // Only pay attention to encoding if it's a string. This\n" +
    '    // prevents accidentally sending in a number that would\n' +
    '    // be interpretted as a start offset.\n' +
    "    return typeof encoding === 'string'\n" +
    '      ? createBuffer(that, size).fill(fill, encoding)\n' +
    '      : createBuffer(that, size).fill(fill)\n' +
    '  }\n' +
    '  return createBuffer(that, size)\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Creates a new filled Buffer instance.\n' +
    ' * alloc(size[, fill[, encoding]])\n' +
    ' **/\n' +
    'Buffer.alloc = function (size, fill, encoding) {\n' +
    '  return alloc(null, size, fill, encoding)\n' +
    '}\n' +
    '\n' +
    'function allocUnsafe (that, size) {\n' +
    '  assertSize(size)\n' +
    '  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n' +
    '  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n' +
    '    for (var i = 0; i < size; ++i) {\n' +
    '      that[i] = 0\n' +
    '    }\n' +
    '  }\n' +
    '  return that\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n' +
    ' * */\n' +
    'Buffer.allocUnsafe = function (size) {\n' +
    '  return allocUnsafe(null, size)\n' +
    '}\n' +
    '/**\n' +
    ' * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n' +
    ' */\n' +
    'Buffer.allocUnsafeSlow = function (size) {\n' +
    '  return allocUnsafe(null, size)\n' +
    '}\n' +
    '\n' +
    'function fromString (that, string, encoding) {\n' +
    "  if (typeof encoding !== 'string' || encoding === '') {\n" +
    "    encoding = 'utf8'\n" +
    '  }\n' +
    '\n' +
    '  if (!Buffer.isEncoding(encoding)) {\n' +
    `    throw new TypeError('"encoding" must be a valid string encoding')\n` +
    '  }\n' +
    '\n' +
    '  var length = byteLength(string, encoding) | 0\n' +
    '  that = createBuffer(that, length)\n' +
    '\n' +
    '  var actual = that.write(string, encoding)\n' +
    '\n' +
    '  if (actual !== length) {\n' +
    '    // Writing a hex string, for example, that contains invalid characters will\n' +
    '    // cause everything after the first invalid character to be ignored. (e.g.\n' +
    "    // 'abxxcd' will be treated as 'ab')\n" +
    '    that = that.slice(0, actual)\n' +
    '  }\n' +
    '\n' +
    '  return that\n' +
    '}\n' +
    '\n' +
    'function fromArrayLike (that, array) {\n' +
    '  var length = array.length < 0 ? 0 : checked(array.length) | 0\n' +
    '  that = createBuffer(that, length)\n' +
    '  for (var i = 0; i < length; i += 1) {\n' +
    '    that[i] = array[i] & 255\n' +
    '  }\n' +
    '  return that\n' +
    '}\n' +
    '\n' +
    'function fromArrayBuffer (that, array, byteOffset, length) {\n' +
    '  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n' +
    '\n' +
    '  if (byteOffset < 0 || array.byteLength < byteOffset) {\n' +
    "    throw new RangeError('\\'offset\\' is out of bounds')\n" +
    '  }\n' +
    '\n' +
    '  if (array.byteLength < byteOffset + (length || 0)) {\n' +
    "    throw new RangeError('\\'length\\' is out of bounds')\n" +
    '  }\n' +
    '\n' +
    '  if (byteOffset === undefined && length === undefined) {\n' +
    '    array = new Uint8Array(array)\n' +
    '  } else if (length === undefined) {\n' +
    '    array = new Uint8Array(array, byteOffset)\n' +
    '  } else {\n' +
    '    array = new Uint8Array(array, byteOffset, length)\n' +
    '  }\n' +
    '\n' +
    '  if (Buffer.TYPED_ARRAY_SUPPORT) {\n' +
    '    // Return an augmented `Uint8Array` instance, for best performance\n' +
    '    that = array\n' +
    '    that.__proto__ = Buffer.prototype\n' +
    '  } else {\n' +
    '    // Fallback: Return an object instance of the Buffer class\n' +
    '    that = fromArrayLike(that, array)\n' +
    '  }\n' +
    '  return that\n' +
    '}\n' +
    '\n' +
    'function fromObject (that, obj) {\n' +
    '  if (Buffer.isBuffer(obj)) {\n' +
    '    var len = checked(obj.length) | 0\n' +
    '    that = createBuffer(that, len)\n' +
    '\n' +
    '    if (that.length === 0) {\n' +
    '      return that\n' +
    '    }\n' +
    '\n' +
    '    obj.copy(that, 0, 0, len)\n' +
    '    return that\n' +
    '  }\n' +
    '\n' +
    '  if (obj) {\n' +
    "    if ((typeof ArrayBuffer !== 'undefined' &&\n" +
    "        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n" +
    "      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n" +
    '        return createBuffer(that, 0)\n' +
    '      }\n' +
    '      return fromArrayLike(that, obj)\n' +
    '    }\n' +
    '\n' +
    "    if (obj.type === 'Buffer' && isArray(obj.data)) {\n" +
    '      return fromArrayLike(that, obj.data)\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    "  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n" +
    '}\n' +
    '\n' +
    'function checked (length) {\n' +
    '  // Note: cannot use `length < kMaxLength()` here because that fails when\n' +
    '  // length is NaN (which is otherwise coerced to zero.)\n' +
    '  if (length >= kMaxLength()) {\n' +
    "    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n" +
    "                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n" +
    '  }\n' +
    '  return length | 0\n' +
    '}\n' +
    '\n' +
    'function SlowBuffer (length) {\n' +
    '  if (+length != length) { // eslint-disable-line eqeqeq\n' +
    '    length = 0\n' +
    '  }\n' +
    '  return Buffer.alloc(+length)\n' +
    '}\n' +
    '\n' +
    'Buffer.isBuffer = function isBuffer (b) {\n' +
    '  return !!(b != null && b._isBuffer)\n' +
    '}\n' +
    '\n' +
    'Buffer.compare = function compare (a, b) {\n' +
    '  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n' +
    "    throw new TypeError('Arguments must be Buffers')\n" +
    '  }\n' +
    '\n' +
    '  if (a === b) return 0\n' +
    '\n' +
    '  var x = a.length\n' +
    '  var y = b.length\n' +
    '\n' +
    '  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n' +
    '    if (a[i] !== b[i]) {\n' +
    '      x = a[i]\n' +
    '      y = b[i]\n' +
    '      break\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  if (x < y) return -1\n' +
    '  if (y < x) return 1\n' +
    '  return 0\n' +
    '}\n' +
    '\n' +
    'Buffer.isEncoding = function isEncoding (encoding) {\n' +
    '  switch (String(encoding).toLowerCase()) {\n' +
    "    case 'hex':"... 38590 more characters
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'var tslib_1 = require("tslib");\n' +
    '(0, tslib_1.__exportStar)(require("./jsSha256"), exports);\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vanNTaGEyNTZcIjtcbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    "import { Buffer } from 'buffer';\n" +
    '\n' +
    '/** @class */\n' +
    'var CognitoJwtToken = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new CognitoJwtToken object\n' +
    '   * @param {string=} token The JWT token.\n' +
    '   */\n' +
    '  function CognitoJwtToken(token) {\n' +
    '    // Assign object\n' +
    "    this.jwtToken = token || '';\n" +
    '    this.payload = this.decodePayload();\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {string} the record's token.\n" +
    '   */\n' +
    '  var _proto = CognitoJwtToken.prototype;\n' +
    '  _proto.getJwtToken = function getJwtToken() {\n' +
    '    return this.jwtToken;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {int} the token's expiration (exp member).\n" +
    '   */;\n' +
    '  _proto.getExpiration = function getExpiration() {\n' +
    '    return this.payload.exp;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    `   * @returns {int} the token's "issued at" (iat member).\n` +
    '   */;\n' +
    '  _proto.getIssuedAt = function getIssuedAt() {\n' +
    '    return this.payload.iat;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    "   * @returns {object} the token's payload.\n" +
    '   */;\n' +
    '  _proto.decodePayload = function decodePayload() {\n' +
    "    var payload = this.jwtToken.split('.')[1];\n" +
    '    try {\n' +
    "      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n" +
    '    } catch (err) {\n' +
    '      return {};\n' +
    '    }\n' +
    '  };\n' +
    '  return CognitoJwtToken;\n' +
    '}();\n' +
    'export { CognitoJwtToken as default };'
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    "import { version } from './version';\n" +
    'var BASE_USER_AGENT = "aws-amplify/" + version;\n' +
    'export var Platform = {\n' +
    '  userAgent: BASE_USER_AGENT,\n' +
    "  isReactNative: typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n" +
    '};\n' +
    'export var getUserAgent = function getUserAgent() {\n' +
    '  return Platform.userAgent;\n' +
    '};\n' +
    '\n' +
    '/**\n' +
    ' * @deprecated use named import\n' +
    ' */\n' +
    'export default Platform;'
} [Function: logger]
____9999999____ {
  code: '// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n' +
    '//\n' +
    '// All public methods have been removed except the following:\n' +
    '//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n' +
    '//   toString (only radix 2, 4, 8, 16 and 32 supported)\n' +
    '//   negate\n' +
    '//   abs\n' +
    '//   compareTo\n' +
    '//   bitLength\n' +
    '//   mod\n' +
    '//   equals\n' +
    '//   add\n' +
    '//   subtract\n' +
    '//   multiply\n' +
    '//   divide\n' +
    '//   modPow\n' +
    '\n' +
    'export default BigInteger;\n' +
    '\n' +
    '/*\n' +
    ' * Copyright (c) 2003-2005  Tom Wu\n' +
    ' * All Rights Reserved.\n' +
    ' *\n' +
    ' * Permission is hereby granted, free of charge, to any person obtaining\n' +
    ' * a copy of this software and associated documentation files (the\n' +
    ' * "Software"), to deal in the Software without restriction, including\n' +
    ' * without limitation the rights to use, copy, modify, merge, publish,\n' +
    ' * distribute, sublicense, and/or sell copies of the Software, and to\n' +
    ' * permit persons to whom the Software is furnished to do so, subject to\n' +
    ' * the following conditions:\n' +
    ' *\n' +
    ' * The above copyright notice and this permission notice shall be\n' +
    ' * included in all copies or substantial portions of the Software.\n' +
    ' *\n' +
    ' * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND,\n' +
    ' * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n' +
    ' * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n' +
    ' *\n' +
    ' * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n' +
    ' * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n' +
    ' * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n' +
    ' * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n' +
    ' * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n' +
    ' *\n' +
    ' * In addition, the following condition applies:\n' +
    ' *\n' +
    ' * All redistributions must retain an intact copy of this copyright notice\n' +
    ' * and disclaimer.\n' +
    ' */\n' +
    '\n' +
    '// (public) Constructor\n' +
    'function BigInteger(a, b) {\n' +
    '  if (a != null) this.fromString(a, b);\n' +
    '}\n' +
    '\n' +
    '// return new, unset BigInteger\n' +
    'function nbi() {\n' +
    '  return new BigInteger(null);\n' +
    '}\n' +
    '\n' +
    '// Bits per digit\n' +
    'var dbits;\n' +
    '\n' +
    '// JavaScript engine analysis\n' +
    'var canary = 0xdeadbeefcafe;\n' +
    'var j_lm = (canary & 0xffffff) == 0xefcafe;\n' +
    '\n' +
    '// am: Compute w_j += (x*this_i), propagate carries,\n' +
    '// c is initial carry, returns final carry.\n' +
    '// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n' +
    '// We need to select the fastest one that works in this environment.\n' +
    '\n' +
    '// am1: use a single mult and divide to get the high bits,\n' +
    '// max digit bits should be 26 because\n' +
    '// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n' +
    'function am1(i, x, w, j, c, n) {\n' +
    '  while (--n >= 0) {\n' +
    '    var v = x * this[i++] + w[j] + c;\n' +
    '    c = Math.floor(v / 0x4000000);\n' +
    '    w[j++] = v & 0x3ffffff;\n' +
    '  }\n' +
    '  return c;\n' +
    '}\n' +
    '// am2 avoids a big mult-and-extract completely.\n' +
    '// Max digit bits should be <= 30 because we do bitwise ops\n' +
    '// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n' +
    'function am2(i, x, w, j, c, n) {\n' +
    '  var xl = x & 0x7fff,\n' +
    '    xh = x >> 15;\n' +
    '  while (--n >= 0) {\n' +
    '    var l = this[i] & 0x7fff;\n' +
    '    var h = this[i++] >> 15;\n' +
    '    var m = xh * l + h * xl;\n' +
    '    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n' +
    '    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n' +
    '    w[j++] = l & 0x3fffffff;\n' +
    '  }\n' +
    '  return c;\n' +
    '}\n' +
    '// Alternately, set max digit bits to 28 since some\n' +
    '// browsers slow down when dealing with 32-bit numbers.\n' +
    'function am3(i, x, w, j, c, n) {\n' +
    '  var xl = x & 0x3fff,\n' +
    '    xh = x >> 14;\n' +
    '  while (--n >= 0) {\n' +
    '    var l = this[i] & 0x3fff;\n' +
    '    var h = this[i++] >> 14;\n' +
    '    var m = xh * l + h * xl;\n' +
    '    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n' +
    '    c = (l >> 28) + (m >> 14) + xh * h;\n' +
    '    w[j++] = l & 0xfffffff;\n' +
    '  }\n' +
    '  return c;\n' +
    '}\n' +
    "var inBrowser = typeof navigator !== 'undefined';\n" +
    "if (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\n" +
    '  BigInteger.prototype.am = am2;\n' +
    '  dbits = 30;\n' +
    "} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\n" +
    '  BigInteger.prototype.am = am1;\n' +
    '  dbits = 26;\n' +
    '} else {\n' +
    '  // Mozilla/Netscape seems to prefer am3\n' +
    '  BigInteger.prototype.am = am3;\n' +
    '  dbits = 28;\n' +
    '}\n' +
    'BigInteger.prototype.DB = dbits;\n' +
    'BigInteger.prototype.DM = (1 << dbits) - 1;\n' +
    'BigInteger.prototype.DV = 1 << dbits;\n' +
    'var BI_FP = 52;\n' +
    'BigInteger.prototype.FV = Math.pow(2, BI_FP);\n' +
    'BigInteger.prototype.F1 = BI_FP - dbits;\n' +
    'BigInteger.prototype.F2 = 2 * dbits - BI_FP;\n' +
    '\n' +
    '// Digit conversions\n' +
    "var BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\n" +
    'var BI_RC = new Array();\n' +
    'var rr, vv;\n' +
    "rr = '0'.charCodeAt(0);\n" +
    'for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n' +
    "rr = 'a'.charCodeAt(0);\n" +
    'for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n' +
    "rr = 'A'.charCodeAt(0);\n" +
    'for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n' +
    'function int2char(n) {\n' +
    '  return BI_RM.charAt(n);\n' +
    '}\n' +
    'function intAt(s, i) {\n' +
    '  var c = BI_RC[s.charCodeAt(i)];\n' +
    '  return c == null ? -1 : c;\n' +
    '}\n' +
    '\n' +
    '// (protected) copy this to r\n' +
    'function bnpCopyTo(r) {\n' +
    '  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n' +
    '  r.t = this.t;\n' +
    '  r.s = this.s;\n' +
    '}\n' +
    '\n' +
    '// (protected) set from integer value x, -DV <= x < DV\n' +
    'function bnpFromInt(x) {\n' +
    '  this.t = 1;\n' +
    '  this.s = x < 0 ? -1 : 0;\n' +
    '  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n' +
    '}\n' +
    '\n' +
    '// return bigint initialized to value\n' +
    'function nbv(i) {\n' +
    '  var r = nbi();\n' +
    '  r.fromInt(i);\n' +
    '  return r;\n' +
    '}\n' +
    '\n' +
    '// (protected) set from string and radix\n' +
    'function bnpFromString(s, b) {\n' +
    '  var k;\n' +
    "  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n" +
    '  this.t = 0;\n' +
    '  this.s = 0;\n' +
    '  var i = s.length,\n' +
    '    mi = false,\n' +
    '    sh = 0;\n' +
    '  while (--i >= 0) {\n' +
    '    var x = intAt(s, i);\n' +
    '    if (x < 0) {\n' +
    "      if (s.charAt(i) == '-') mi = true;\n" +
    '      continue;\n' +
    '    }\n' +
    '    mi = false;\n' +
    '    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n' +
    '      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n' +
    '      this[this.t++] = x >> this.DB - sh;\n' +
    '    } else this[this.t - 1] |= x << sh;\n' +
    '    sh += k;\n' +
    '    if (sh >= this.DB) sh -= this.DB;\n' +
    '  }\n' +
    '  this.clamp();\n' +
    '  if (mi) BigInteger.ZERO.subTo(this, this);\n' +
    '}\n' +
    '\n' +
    '// (protected) clamp off excess high words\n' +
    'function bnpClamp() {\n' +
    '  var c = this.s & this.DM;\n' +
    '  while (this.t > 0 && this[this.t - 1] == c) --this.t;\n' +
    '}\n' +
    '\n' +
    '// (public) return string representation in given radix\n' +
    'function bnToString(b) {\n' +
    "  if (this.s < 0) return '-' + this.negate().toString(b);\n" +
    '  var k;\n' +
    "  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n" +
    '  var km = (1 << k) - 1,\n' +
    '    d,\n' +
    '    m = false,\n' +
    "    r = '',\n" +
    '    i = this.t;\n' +
    '  var p = this.DB - i * this.DB % k;\n' +
    '  if (i-- > 0) {\n' +
    '    if (p < this.DB && (d = this[i] >> p) > 0) {\n' +
    '      m = true;\n' +
    '      r = int2char(d);\n' +
    '    }\n' +
    '    while (i >= 0) {\n' +
    '      if (p < k) {\n' +
    '        d = (this[i] & (1 << p) - 1) << k - p;\n' +
    '        d |= this[--i] >> (p += this.DB - k);\n' +
    '      } else {\n' +
    '        d = this[i] >> (p -= k) & km;\n' +
    '        if (p <= 0) {\n' +
    '          p += this.DB;\n' +
    '          --i;\n' +
    '        }\n' +
    '      }\n' +
    '      if (d > 0) m = true;\n' +
    '      if (m) r += int2char(d);\n' +
    '    }\n' +
    '  }\n' +
    "  return m ? r : '0';\n" +
    '}\n' +
    '\n' +
    '// (public) -this\n' +
    'function bnNegate() {\n' +
    '  var r = nbi();\n' +
    '  BigInteger.ZERO.subTo(this, r);\n' +
    '  return r;\n' +
    '}\n' +
    '\n' +
    '// (public) |this|\n' +
    'function bnAbs() {\n' +
    '  return this.s < 0 ? this.negate() : this;\n' +
    '}\n' +
    '\n' +
    '// (public) return + if this > a, - if this < a, 0 if equal\n' +
    'function bnCompareTo(a) {\n' +
    '  var r = this.s - a.s;\n' +
    '  if (r != 0) return r;\n' +
    '  var i = this.t;\n' +
    '  r = i - a.t;\n' +
    '  if (r != 0) return this.s < 0 ? -r : r;\n' +
    '  while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;\n' +
    '  return 0;\n' +
    '}\n' +
    '\n' +
    '// returns bit length of the integer x\n' +
    'function nbits(x) {\n' +
    '  var r = 1,\n' +
    '    t;\n' +
    '  if ((t = x >>> 16) != 0) {\n' +
    '    x = t;\n' +
    '    r += 16;\n' +
    '  }\n' +
    '  if ((t = x >> 8) != 0) {\n' +
    '    x = t;\n' +
    '    r += 8;\n' +
    '  }\n' +
    '  if ((t = x >> 4) != 0) {\n' +
    '    x = t;\n' +
    '    r += 4;\n' +
    '  }\n' +
    '  if ((t = x >> 2) != 0) {\n' +
    '    x = t;\n' +
    '    r += 2;\n' +
    '  }\n' +
    '  if ((t = x >> 1) != 0) {\n' +
    '    x = t;\n' +
    '    r += 1;\n' +
    '  }\n' +
    '  return r;\n' +
    '}\n' +
    '\n' +
    '// (public) return the number of bits in "this"\n' +
    'function bnBitLength() {\n' +
    '  if (this.t <= 0) return 0;\n' +
    '  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this << n*DB\n' +
    'function bnpDLShiftTo(n, r) {\n' +
    '  var i;\n' +
    '  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n' +
    '  for (i = n - 1; i >= 0; --i) r[i] = 0;\n' +
    '  r.t = this.t + n;\n' +
    '  r.s = this.s;\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this >> n*DB\n' +
    'function bnpDRShiftTo(n, r) {\n' +
    '  for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n' +
    '  r.t = Math.max(this.t - n, 0);\n' +
    '  r.s = this.s;\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this << n\n' +
    'function bnpLShiftTo(n, r) {\n' +
    '  var bs = n % this.DB;\n' +
    '  var cbs = this.DB - bs;\n' +
    '  var bm = (1 << cbs) - 1;\n' +
    '  var ds = Math.floor(n / this.DB),\n' +
    '    c = this.s << bs & this.DM,\n' +
    '    i;\n' +
    '  for (i = this.t - 1; i >= 0; --i) {\n' +
    '    r[i + ds + 1] = this[i] >> cbs | c;\n' +
    '    c = (this[i] & bm) << bs;\n' +
    '  }\n' +
    '  for (i = ds - 1; i >= 0; --i) r[i] = 0;\n' +
    '  r[ds] = c;\n' +
    '  r.t = this.t + ds + 1;\n' +
    '  r.s = this.s;\n' +
    '  r.clamp();\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this >> n\n' +
    'function bnpRShiftTo(n, r) {\n' +
    '  r.s = this.s;\n' +
    '  var ds = Math.floor(n / this.DB);\n' +
    '  if (ds >= this.t) {\n' +
    '    r.t = 0;\n' +
    '    return;\n' +
    '  }\n' +
    '  var bs = n % this.DB;\n' +
    '  var cbs = this.DB - bs;\n' +
    '  var bm = (1 << bs) - 1;\n' +
    '  r[0] = this[ds] >> bs;\n' +
    '  for (var i = ds + 1; i < this.t; ++i) {\n' +
    '    r[i - ds - 1] |= (this[i] & bm) << cbs;\n' +
    '    r[i - ds] = this[i] >> bs;\n' +
    '  }\n' +
    '  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n' +
    '  r.t = this.t - ds;\n' +
    '  r.clamp();\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this - a\n' +
    'function bnpSubTo(a, r) {\n' +
    '  var i = 0,\n' +
    '    c = 0,\n' +
    '    m = Math.min(a.t, this.t);\n' +
    '  while (i < m) {\n' +
    '    c += this[i] - a[i];\n' +
    '    r[i++] = c & this.DM;\n' +
    '    c >>= this.DB;\n' +
    '  }\n' +
    '  if (a.t < this.t) {\n' +
    '    c -= a.s;\n' +
    '    while (i < this.t) {\n' +
    '      c += this[i];\n' +
    '      r[i++] = c & this.DM;\n' +
    '      c >>= this.DB;\n' +
    '    }\n' +
    '    c += this.s;\n' +
    '  } else {\n' +
    '    c += this.s;\n' +
    '    while (i < a.t) {\n' +
    '      c -= a[i];\n' +
    '      r[i++] = c & this.DM;\n' +
    '      c >>= this.DB;\n' +
    '    }\n' +
    '    c -= a.s;\n' +
    '  }\n' +
    '  r.s = c < 0 ? -1 : 0;\n' +
    '  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n' +
    '  r.t = i;\n' +
    '  r.clamp();\n' +
    '}\n' +
    '\n' +
    '// (protected) r = this * '... 9061 more characters
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    ' * SPDX-License-Identifier: Apache-2.0\n' +
    ' */\n' +
    '\n' +
    'var dataMemory = {};\n' +
    '\n' +
    '/** @class */\n' +
    'export var MemoryStorage = /*#__PURE__*/function () {\n' +
    '  function MemoryStorage() {}\n' +
    '  /**\n' +
    '   * This is used to set a specific item in storage\n' +
    '   * @param {string} key - the key for the item\n' +
    '   * @param {object} value - the value\n' +
    '   * @returns {string} value that was set\n' +
    '   */\n' +
    '  MemoryStorage.setItem = function setItem(key, value) {\n' +
    '    dataMemory[key] = value;\n' +
    '    return dataMemory[key];\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to get a specific key from storage\n' +
    '   * @param {string} key - the key for the item\n' +
    '   * This is used to clear the storage\n' +
    '   * @returns {string} the data item\n' +
    '   */;\n' +
    '  MemoryStorage.getItem = function getItem(key) {\n' +
    '    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to remove an item from storage\n' +
    '   * @param {string} key - the key being set\n' +
    '   * @returns {boolean} return true\n' +
    '   */;\n' +
    '  MemoryStorage.removeItem = function removeItem(key) {\n' +
    '    return delete dataMemory[key];\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to clear the storage\n' +
    '   * @returns {string} nothing\n' +
    '   */;\n' +
    '  MemoryStorage.clear = function clear() {\n' +
    '    dataMemory = {};\n' +
    '    return dataMemory;\n' +
    '  };\n' +
    '  return MemoryStorage;\n' +
    '}();\n' +
    '\n' +
    '/** @class */\n' +
    'var StorageHelper = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * This is used to get a storage object\n' +
    '   * @returns {object} the storage\n' +
    '   */\n' +
    '  function StorageHelper() {\n' +
    '    try {\n' +
    '      this.storageWindow = window.localStorage;\n' +
    "      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n" +
    "      this.storageWindow.removeItem('aws.cognito.test-ls');\n" +
    '    } catch (exception) {\n' +
    '      this.storageWindow = MemoryStorage;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * This is used to return the storage\n' +
    '   * @returns {object} the storage\n' +
    '   */\n' +
    '  var _proto = StorageHelper.prototype;\n' +
    '  _proto.getStorage = function getStorage() {\n' +
    '    return this.storageWindow;\n' +
    '  };\n' +
    '  return StorageHelper;\n' +
    '}();\n' +
    'export { StorageHelper as default };'
} [Function: logger]
____9999999____ {
  code: "var ListCache = require('./_ListCache');\n" +
    '\n' +
    '/**\n' +
    ' * Removes all key-value entries from the stack.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name clear\n' +
    ' * @memberOf Stack\n' +
    ' */\n' +
    'function stackClear() {\n' +
    '  this.__data__ = new ListCache;\n' +
    '  this.size = 0;\n' +
    '}\n' +
    '\n' +
    'module.exports = stackClear;\n'
} [Function: logger]
____9999999____ {
  code: "var listCacheClear = require('./_listCacheClear'),\n" +
    "    listCacheDelete = require('./_listCacheDelete'),\n" +
    "    listCacheGet = require('./_listCacheGet'),\n" +
    "    listCacheHas = require('./_listCacheHas'),\n" +
    "    listCacheSet = require('./_listCacheSet');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an list cache object.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @constructor\n' +
    ' * @param {Array} [entries] The key-value pairs to cache.\n' +
    ' */\n' +
    'function ListCache(entries) {\n' +
    '  var index = -1,\n' +
    '      length = entries == null ? 0 : entries.length;\n' +
    '\n' +
    '  this.clear();\n' +
    '  while (++index < length) {\n' +
    '    var entry = entries[index];\n' +
    '    this.set(entry[0], entry[1]);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '// Add methods to `ListCache`.\n' +
    'ListCache.prototype.clear = listCacheClear;\n' +
    "ListCache.prototype['delete'] = listCacheDelete;\n" +
    'ListCache.prototype.get = listCacheGet;\n' +
    'ListCache.prototype.has = listCacheHas;\n' +
    'ListCache.prototype.set = listCacheSet;\n' +
    '\n' +
    'module.exports = ListCache;\n'
} [Function: logger]
____9999999____ {
  code: 'function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n' +
    'function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n' +
    'function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n' +
    'function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n' +
    'function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\n' +
    'function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n' +
    'function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n' +
    "import 'isomorphic-unfetch';\n" +
    "import { getAmplifyUserAgent } from './UserAgent';\n" +
    'var CognitoError = /*#__PURE__*/function (_Error) {\n' +
    '  _inheritsLoose(CognitoError, _Error);\n' +
    '  function CognitoError(message, code, name, statusCode) {\n' +
    '    var _this;\n' +
    '    _this = _Error.call(this, message) || this;\n' +
    '    _this.code = code;\n' +
    '    _this.name = name;\n' +
    '    _this.statusCode = statusCode;\n' +
    '    return _this;\n' +
    '  }\n' +
    '  return CognitoError;\n' +
    '}( /*#__PURE__*/_wrapNativeSuper(Error));\n' +
    '/** @class */\n' +
    'var Client = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * Constructs a new AWS Cognito Identity Provider client object\n' +
    '   * @param {string} region AWS region\n' +
    '   * @param {string} endpoint endpoint\n' +
    '   * @param {object} fetchOptions options for fetch API (only credentials is supported)\n' +
    '   */\n' +
    '  function Client(region, endpoint, fetchOptions) {\n' +
    '    this.endpoint = endpoint || "https://cognito-idp." + region + ".amazonaws.com/";\n' +
    '    var _ref = fetchOptions || {},\n' +
    '      credentials = _ref.credentials;\n' +
    '    this.fetchOptions = credentials ? {\n' +
    '      credentials: credentials\n' +
    '    } : {};\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n' +
    '   * using fetch\n' +
    '   * @param {string} operation API operation\n' +
    '   * @param {object} params Input parameters\n' +
    '   * @returns Promise<object>\n' +
    '   */\n' +
    '  var _proto = Client.prototype;\n' +
    '  _proto.promisifyRequest = function promisifyRequest(operation, params) {\n' +
    '    var _this2 = this;\n' +
    '    return new Promise(function (resolve, reject) {\n' +
    '      _this2.request(operation, params, function (err, data) {\n' +
    '        if (err) {\n' +
    '          reject(new CognitoError(err.message, err.code, err.name, err.statusCode));\n' +
    '        } else {\n' +
    '          resolve(data);\n' +
    '        }\n' +
    '      });\n' +
    '    });\n' +
    '  };\n' +
    '  _proto.requestWithRetry = function requestWithRetry(operation, params, callback) {\n' +
    '    var _this3 = this;\n' +
    '    var MAX_DELAY_IN_MILLIS = 5 * 1000;\n' +
    '    jitteredExponentialRetry(function (p) {\n' +
    '      return new Promise(function (res, rej) {\n' +
    '        _this3.request(operation, p, function (error, result) {\n' +
    '          if (error) {\n' +
    '            rej(error);\n' +
    '          } else {\n' +
    '            res(result);\n' +
    '          }\n' +
    '        });\n' +
    '      });\n' +
    '    }, [params], MAX_DELAY_IN_MILLIS).then(function (result) {\n' +
    '      return callback(null, result);\n' +
    '    })["catch"](function (error) {\n' +
    '      return callback(error);\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n' +
    '   * using fetch\n' +
    '   * @param {string} operation API operation\n' +
    '   * @param {object} params Input parameters\n' +
    '   * @param {function} callback Callback called when a response is returned\n' +
    '   * @returns {void}\n' +
    '   */;\n' +
    '  _proto.request = function request(operation, params, callback) {\n' +
    '    var headers = {\n' +
    "      'Content-Type': 'application/x-amz-json-1.1',\n" +
    `      'X-Amz-Target': "AWSCognitoIdentityProviderService." + operation,\n` +
    "      'X-Amz-User-Agent': getAmplifyUserAgent(),\n" +
    "      'Cache-Control': 'no-store'\n" +
    '    };\n' +
    '    var options = Object.assign({}, this.fetchOptions, {\n' +
    '      headers: headers,\n' +
    "      method: 'POST',\n" +
    "      mode: 'cors',\n" +
    '      body: JSON.stringify(params)\n' +
    '    });\n' +
    '    var response;\n' +
    '    var responseJsonData;\n' +
    '    fetch(this.endpoint, options).then(function (resp) {\n' +
    '      response = resp;\n' +
    '      return resp;\n' +
    '    }, function (err) {\n' +
    '      // If error happens here, the request failed\n' +
    '      // if it is TypeError throw network error\n' +
    '      if (err instanceof TypeError) {\n' +
    "        throw new Error('Network error');\n" +
    '      }\n' +
    '      throw err;\n' +
    '    }).then(function (resp) {\n' +
    '      return resp.json()["catch"](function () {\n' +
    '        return {};\n' +
    '      });\n' +
    '    }).then(function (data) {\n' +
    '      // return parsed body stream\n' +
    '      if (response.ok) return callback(null, data);\n' +
    '      responseJsonData = data;\n' +
    '\n' +
    '      // Taken from aws-sdk-js/lib/protocol/json.js\n' +
    '      // eslint-disable-next-line no-underscore-dangle\n' +
    "      var code = (data.__type || data.code).split('#').pop();\n" +
    '      var error = new Error(data.message || data.Message || null);\n' +
    '      error.name = code;\n' +
    '      error.code = code;\n' +
    '      return callback(error);\n' +
    '    })["catch"](function (err) {\n' +
    '      // first check if we have a service error\n' +
    "      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n" +
    '        try {\n' +
    "          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n" +
    '          var error = new Error(response.status ? response.status.toString() : null);\n' +
    '          error.code = code;\n' +
    '          error.name = code;\n' +
    '          error.statusCode = response.status;\n' +
    '          return callback(error);\n' +
    '        } catch (ex) {\n' +
    '          return callback(err);\n' +
    '        }\n' +
    '        // otherwise check if error is Network error\n' +
    "      } else if (err instanceof Error && err.message === 'Network error') {\n" +
    "        err.code = 'NetworkError';\n" +
    '      }\n' +
    '      return callback(err);\n' +
    '    });\n' +
    '  };\n' +
    '  return Client;\n' +
    '}();\n' +
    'export { Client as default };\n' +
    'var logger = {\n' +
    '  debug: function debug() {\n' +
    "    // Intentionally blank. This package doesn't have logging\n" +
    '  }\n' +
    '};\n' +
    '\n' +
    '/**\n' +
    ' * For now, all errors are retryable.\n' +
    ' */\n' +
    'var NonRetryableError = /*#__PURE__*/function (_Error2) {\n' +
    '  _inheritsLoose(NonRetryableError, _Error2);\n' +
    '  function NonRetryableError(message) {\n' +
    '    var _this4;\n' +
    '    _this4 = _Error2.call(this, message) || this;\n' +
    '    _this4.nonRetryable = true;\n' +
    '    return _this4;\n' +
    '  }\n' +
    '  return NonRetryableError;\n' +
    '}( /*#__PURE__*/_wrapNativeSuper(Error));\n' +
    'var isNonRetryableError = function isNonRetryableError(obj) {\n' +
    "  var key = 'nonRetryable';\n" +
    '  return obj && obj[key];\n' +
    '};\n' +
    'function retry(functionToRetry, args, delayFn, attempt) {\n' +
    '  if (attempt === void 0) {\n' +
    '    attempt = 1;\n' +
    '  }\n' +
    "  if (typeof functionToRetry !== 'function') {\n" +
    "    throw Error('functionToRetry must be a function');\n" +
    '  }\n' +
    '  logger.debug(functionToRetry.name + " attempt #" + attempt + " with args: " + JSON.stringify(args));\n' +
    '  return functionToRetry.apply(void 0, args)["catch"](function (err) {\n' +
    '    logger.debug("error on " + functionToRetry.name, err);\n' +
    '    if (isNonRetryableError(err)) {\n' +
    '      logger.debug(functionToRetry.name + " non retryable error", err);\n' +
    '      throw err;\n' +
    '    }\n' +
    '    var retryIn = delayFn(attempt, args, err);\n' +
    '    logger.debug(functionToRetry.name + " retrying in " + retryIn + " ms");\n' +
    '    if (retryIn !== false) {\n' +
    '      return new Promise(function (res) {\n' +
    '        return setTimeout(res, retryIn);\n' +
    '      }).then(function () {\n' +
    '        return retry(functionToRetry, args, delayFn, attempt + 1);\n' +
    '      });\n' +
    '    } else {\n' +
    '      throw err;\n' +
    '    }\n' +
    '  });\n' +
    '}\n' +
    'function jitteredBackoff(maxDelayMs) {\n' +
    '  var BASE_TIME_MS = 100;\n' +
    '  var JITTER_FACTOR = 100;\n' +
    '  return function (attempt) {\n' +
    '    var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n' +
    '    return delay > maxDelayMs ? false : delay;\n' +
    '  };\n' +
    '}\n' +
    'var MAX_DELAY_MS = 5 * 60 * 1000;\n' +
    'function jitteredExponentialRetry(functionToRetry, args, maxDelayMs) {\n' +
    '  if (maxDelayMs === void 0) {\n' +
    '    maxDelayMs = MAX_DELAY_MS;\n' +
    '  }\n' +
    '  return retry(functionToRetry, args, jitteredBackoff(maxDelayMs));\n' +
    '}'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Removes `key` and its value from the stack.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name delete\n' +
    ' * @memberOf Stack\n' +
    ' * @param {string} key The key of the value to remove.\n' +
    ' * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n' +
    ' */\n' +
    'function stackDelete(key) {\n' +
    '  var data = this.__data__,\n' +
    "      result = data['delete'](key);\n" +
    '\n' +
    '  this.size = data.size;\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = stackDelete;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Gets the stack value for `key`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name get\n' +
    ' * @memberOf Stack\n' +
    ' * @param {string} key The key of the value to get.\n' +
    ' * @returns {*} Returns the entry value.\n' +
    ' */\n' +
    'function stackGet(key) {\n' +
    '  return this.__data__.get(key);\n' +
    '}\n' +
    '\n' +
    'module.exports = stackGet;\n'
} [Function: logger]
____9999999____ {
  code: "var MapCache = require('./_MapCache'),\n" +
    "    setCacheAdd = require('./_setCacheAdd'),\n" +
    "    setCacheHas = require('./_setCacheHas');\n" +
    '\n' +
    '/**\n' +
    ' *\n' +
    ' * Creates an array cache object to store unique values.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @constructor\n' +
    ' * @param {Array} [values] The values to cache.\n' +
    ' */\n' +
    'function SetCache(values) {\n' +
    '  var index = -1,\n' +
    '      length = values == null ? 0 : values.length;\n' +
    '\n' +
    '  this.__data__ = new MapCache;\n' +
    '  while (++index < length) {\n' +
    '    this.add(values[index]);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '// Add methods to `SetCache`.\n' +
    'SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n' +
    'SetCache.prototype.has = setCacheHas;\n' +
    '\n' +
    'module.exports = SetCache;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if a stack value for `key` exists.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name has\n' +
    ' * @memberOf Stack\n' +
    ' * @param {string} key The key of the entry to check.\n' +
    ' * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n' +
    ' */\n' +
    'function stackHas(key) {\n' +
    '  return this.__data__.has(key);\n' +
    '}\n' +
    '\n' +
    'module.exports = stackHas;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A specialized version of `_.some` for arrays without support for iteratee\n' +
    ' * shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} [array] The array to iterate over.\n' +
    ' * @param {Function} predicate The function invoked per iteration.\n' +
    ' * @returns {boolean} Returns `true` if any element passes the predicate check,\n' +
    ' *  else `false`.\n' +
    ' */\n' +
    'function arraySome(array, predicate) {\n' +
    '  var index = -1,\n' +
    '      length = array == null ? 0 : array.length;\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    if (predicate(array[index], index, array)) {\n' +
    '      return true;\n' +
    '    }\n' +
    '  }\n' +
    '  return false;\n' +
    '}\n' +
    '\n' +
    'module.exports = arraySome;\n'
} [Function: logger]
____9999999____ {
  code: "var ListCache = require('./_ListCache'),\n" +
    "    Map = require('./_Map'),\n" +
    "    MapCache = require('./_MapCache');\n" +
    '\n' +
    '/** Used as the size to enable large array optimizations. */\n' +
    'var LARGE_ARRAY_SIZE = 200;\n' +
    '\n' +
    '/**\n' +
    ' * Sets the stack `key` to `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name set\n' +
    ' * @memberOf Stack\n' +
    ' * @param {string} key The key of the value to set.\n' +
    ' * @param {*} value The value to set.\n' +
    ' * @returns {Object} Returns the stack cache instance.\n' +
    ' */\n' +
    'function stackSet(key, value) {\n' +
    '  var data = this.__data__;\n' +
    '  if (data instanceof ListCache) {\n' +
    '    var pairs = data.__data__;\n' +
    '    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n' +
    '      pairs.push([key, value]);\n' +
    '      this.size = ++data.size;\n' +
    '      return this;\n' +
    '    }\n' +
    '    data = this.__data__ = new MapCache(pairs);\n' +
    '  }\n' +
    '  data.set(key, value);\n' +
    '  this.size = data.size;\n' +
    '  return this;\n' +
    '}\n' +
    '\n' +
    'module.exports = stackSet;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if a `cache` value for `key` exists.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} cache The cache to query.\n' +
    ' * @param {string} key The key of the entry to check.\n' +
    ' * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n' +
    ' */\n' +
    'function cacheHas(cache, key) {\n' +
    '  return cache.has(key);\n' +
    '}\n' +
    '\n' +
    'module.exports = cacheHas;\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root');\n" +
    '\n' +
    '/** Built-in value references. */\n' +
    'var Uint8Array = root.Uint8Array;\n' +
    '\n' +
    'module.exports = Uint8Array;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Performs a\n' +
    ' * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n' +
    ' * comparison between two values to determine if they are equivalent.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to compare.\n' +
    ' * @param {*} other The other value to compare.\n' +
    ' * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': 1 };\n" +
    " * var other = { 'a': 1 };\n" +
    ' *\n' +
    ' * _.eq(object, object);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.eq(object, other);\n' +
    ' * // => false\n' +
    ' *\n' +
    " * _.eq('a', 'a');\n" +
    ' * // => true\n' +
    ' *\n' +
    " * _.eq('a', Object('a'));\n" +
    ' * // => false\n' +
    ' *\n' +
    ' * _.eq(NaN, NaN);\n' +
    ' * // => true\n' +
    ' */\n' +
    'function eq(value, other) {\n' +
    '  return value === other || (value !== value && other !== other);\n' +
    '}\n' +
    '\n' +
    'module.exports = eq;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Converts `map` to its key-value pairs.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} map The map to convert.\n' +
    ' * @returns {Array} Returns the key-value pairs.\n' +
    ' */\n' +
    'function mapToArray(map) {\n' +
    '  var index = -1,\n' +
    '      result = Array(map.size);\n' +
    '\n' +
    '  map.forEach(function(value, key) {\n' +
    '    result[++index] = [key, value];\n' +
    '  });\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = mapToArray;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Converts `set` to an array of its values.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} set The set to convert.\n' +
    ' * @returns {Array} Returns the values.\n' +
    ' */\n' +
    'function setToArray(set) {\n' +
    '  var index = -1,\n' +
    '      result = Array(set.size);\n' +
    '\n' +
    '  set.forEach(function(value) {\n' +
    '    result[++index] = value;\n' +
    '  });\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = setToArray;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetAllKeys = require('./_baseGetAllKeys'),\n" +
    "    getSymbols = require('./_getSymbols'),\n" +
    "    keys = require('./keys');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an array of own enumerable property names and symbols of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names and symbols.\n' +
    ' */\n' +
    'function getAllKeys(object) {\n' +
    '  return baseGetAllKeys(object, keys, getSymbols);\n' +
    '}\n' +
    '\n' +
    'module.exports = getAllKeys;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative'),\n" +
    "    root = require('./_root');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var DataView = getNative(root, 'DataView');\n" +
    '\n' +
    'module.exports = DataView;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative'),\n" +
    "    root = require('./_root');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var Map = getNative(root, 'Map');\n" +
    '\n' +
    'module.exports = Map;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative'),\n" +
    "    root = require('./_root');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var Promise = getNative(root, 'Promise');\n" +
    '\n' +
    'module.exports = Promise;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative'),\n" +
    "    root = require('./_root');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var Set = getNative(root, 'Set');\n" +
    '\n' +
    'module.exports = Set;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative'),\n" +
    "    root = require('./_root');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var WeakMap = getNative(root, 'WeakMap');\n" +
    '\n' +
    'module.exports = WeakMap;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used for built-in method references. */\n' +
    'var funcProto = Function.prototype;\n' +
    '\n' +
    '/** Used to resolve the decompiled source of functions. */\n' +
    'var funcToString = funcProto.toString;\n' +
    '\n' +
    '/**\n' +
    ' * Converts `func` to its source code.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to convert.\n' +
    ' * @returns {string} Returns the source code.\n' +
    ' */\n' +
    'function toSource(func) {\n' +
    '  if (func != null) {\n' +
    '    try {\n' +
    '      return funcToString.call(func);\n' +
    '    } catch (e) {}\n' +
    '    try {\n' +
    "      return (func + '');\n" +
    '    } catch (e) {}\n' +
    '  }\n' +
    "  return '';\n" +
    '}\n' +
    '\n' +
    'module.exports = toSource;\n'
} [Function: logger]
____9999999____ {
  code: 'export var FRAMEWORK = {\n' +
    "  None: '0',\n" +
    "  ReactNative: '1'\n" +
    '};\n' +
    "export var AUTH_CATEGORY = 'auth';"
} [Function: logger]
____9999999____ {
  code: '/*!\n' +
    ' * JavaScript Cookie v2.2.1\n' +
    ' * https://github.com/js-cookie/js-cookie\n' +
    ' *\n' +
    ' * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n' +
    ' * Released under the MIT license\n' +
    ' */\n' +
    ';(function (factory) {\n' +
    '\tvar registeredInModuleLoader;\n' +
    "\tif (typeof define === 'function' && define.amd) {\n" +
    '\t\tdefine(factory);\n' +
    '\t\tregisteredInModuleLoader = true;\n' +
    '\t}\n' +
    "\tif (typeof exports === 'object') {\n" +
    '\t\tmodule.exports = factory();\n' +
    '\t\tregisteredInModuleLoader = true;\n' +
    '\t}\n' +
    '\tif (!registeredInModuleLoader) {\n' +
    '\t\tvar OldCookies = window.Cookies;\n' +
    '\t\tvar api = window.Cookies = factory();\n' +
    '\t\tapi.noConflict = function () {\n' +
    '\t\t\twindow.Cookies = OldCookies;\n' +
    '\t\t\treturn api;\n' +
    '\t\t};\n' +
    '\t}\n' +
    '}(function () {\n' +
    '\tfunction extend () {\n' +
    '\t\tvar i = 0;\n' +
    '\t\tvar result = {};\n' +
    '\t\tfor (; i < arguments.length; i++) {\n' +
    '\t\t\tvar attributes = arguments[ i ];\n' +
    '\t\t\tfor (var key in attributes) {\n' +
    '\t\t\t\tresult[key] = attributes[key];\n' +
    '\t\t\t}\n' +
    '\t\t}\n' +
    '\t\treturn result;\n' +
    '\t}\n' +
    '\n' +
    '\tfunction decode (s) {\n' +
    '\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n' +
    '\t}\n' +
    '\n' +
    '\tfunction init (converter) {\n' +
    '\t\tfunction api() {}\n' +
    '\n' +
    '\t\tfunction set (key, value, attributes) {\n' +
    "\t\t\tif (typeof document === 'undefined') {\n" +
    '\t\t\t\treturn;\n' +
    '\t\t\t}\n' +
    '\n' +
    '\t\t\tattributes = extend({\n' +
    "\t\t\t\tpath: '/'\n" +
    '\t\t\t}, api.defaults, attributes);\n' +
    '\n' +
    "\t\t\tif (typeof attributes.expires === 'number') {\n" +
    '\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n' +
    '\t\t\t}\n' +
    '\n' +
    `\t\t\t// We're using "expires" because "max-age" is not supported by IE\n` +
    "\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n" +
    '\n' +
    '\t\t\ttry {\n' +
    '\t\t\t\tvar result = JSON.stringify(value);\n' +
    '\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n' +
    '\t\t\t\t\tvalue = result;\n' +
    '\t\t\t\t}\n' +
    '\t\t\t} catch (e) {}\n' +
    '\n' +
    '\t\t\tvalue = converter.write ?\n' +
    '\t\t\t\tconverter.write(value, key) :\n' +
    '\t\t\t\tencodeURIComponent(String(value))\n' +
    '\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n' +
    '\n' +
    '\t\t\tkey = encodeURIComponent(String(key))\n' +
    '\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n' +
    '\t\t\t\t.replace(/[\\(\\)]/g, escape);\n' +
    '\n' +
    "\t\t\tvar stringifiedAttributes = '';\n" +
    '\t\t\tfor (var attributeName in attributes) {\n' +
    '\t\t\t\tif (!attributes[attributeName]) {\n' +
    '\t\t\t\t\tcontinue;\n' +
    '\t\t\t\t}\n' +
    "\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n" +
    '\t\t\t\tif (attributes[attributeName] === true) {\n' +
    '\t\t\t\t\tcontinue;\n' +
    '\t\t\t\t}\n' +
    '\n' +
    '\t\t\t\t// Considers RFC 6265 section 5.2:\n' +
    '\t\t\t\t// ...\n' +
    '\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (";")\n' +
    '\t\t\t\t//     character:\n' +
    '\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n' +
    '\t\t\t\t// not including, the first %x3B (";") character.\n' +
    '\t\t\t\t// ...\n' +
    "\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n" +
    '\t\t\t}\n' +
    '\n' +
    "\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n" +
    '\t\t}\n' +
    '\n' +
    '\t\tfunction get (key, json) {\n' +
    "\t\t\tif (typeof document === 'undefined') {\n" +
    '\t\t\t\treturn;\n' +
    '\t\t\t}\n' +
    '\n' +
    '\t\t\tvar jar = {};\n' +
    '\t\t\t// To prevent the for loop in the first place assign an empty array\n' +
    '\t\t\t// in case there are no cookies at all.\n' +
    "\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n" +
    '\t\t\tvar i = 0;\n' +
    '\n' +
    '\t\t\tfor (; i < cookies.length; i++) {\n' +
    "\t\t\t\tvar parts = cookies[i].split('=');\n" +
    "\t\t\t\tvar cookie = parts.slice(1).join('=');\n" +
    '\n' +
    `\t\t\t\tif (!json && cookie.charAt(0) === '"') {\n` +
    '\t\t\t\t\tcookie = cookie.slice(1, -1);\n' +
    '\t\t\t\t}\n' +
    '\n' +
    '\t\t\t\ttry {\n' +
    '\t\t\t\t\tvar name = decode(parts[0]);\n' +
    '\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n' +
    '\t\t\t\t\t\tdecode(cookie);\n' +
    '\n' +
    '\t\t\t\t\tif (json) {\n' +
    '\t\t\t\t\t\ttry {\n' +
    '\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n' +
    '\t\t\t\t\t\t} catch (e) {}\n' +
    '\t\t\t\t\t}\n' +
    '\n' +
    '\t\t\t\t\tjar[name] = cookie;\n' +
    '\n' +
    '\t\t\t\t\tif (key === name) {\n' +
    '\t\t\t\t\t\tbreak;\n' +
    '\t\t\t\t\t}\n' +
    '\t\t\t\t} catch (e) {}\n' +
    '\t\t\t}\n' +
    '\n' +
    '\t\t\treturn key ? jar[key] : jar;\n' +
    '\t\t}\n' +
    '\n' +
    '\t\tapi.set = set;\n' +
    '\t\tapi.get = function (key) {\n' +
    '\t\t\treturn get(key, false /* read as raw */);\n' +
    '\t\t};\n' +
    '\t\tapi.getJSON = function (key) {\n' +
    '\t\t\treturn get(key, true /* read as json */);\n' +
    '\t\t};\n' +
    '\t\tapi.remove = function (key, attributes) {\n' +
    "\t\t\tset(key, '', extend(attributes, {\n" +
    '\t\t\t\texpires: -1\n' +
    '\t\t\t}));\n' +
    '\t\t};\n' +
    '\n' +
    '\t\tapi.defaults = {};\n' +
    '\n' +
    '\t\tapi.withConverter = init;\n' +
    '\n' +
    '\t\treturn api;\n' +
    '\t}\n' +
    '\n' +
    '\treturn init(function () {});\n' +
    '}));\n'
} [Function: logger]
____9999999____ {
  code: 'var crypto;\n' +
    '\n' +
    '// Native crypto from window (Browser)\n' +
    "if (typeof window !== 'undefined' && window.crypto) {\n" +
    '  crypto = window.crypto;\n' +
    '}\n' +
    '\n' +
    '// Native (experimental IE 11) crypto from window (Browser)\n' +
    "if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n" +
    '  crypto = window.msCrypto;\n' +
    '}\n' +
    '\n' +
    '// Native crypto from global (NodeJS)\n' +
    "if (!crypto && typeof global !== 'undefined' && global.crypto) {\n" +
    '  crypto = global.crypto;\n' +
    '}\n' +
    '\n' +
    '// Native crypto import via require (NodeJS)\n' +
    "if (!crypto && typeof require === 'function') {\n" +
    '  try {\n' +
    "    crypto = require('crypto');\n" +
    '  } catch (err) {}\n' +
    '}\n' +
    '\n' +
    '/*\n' +
    ' * Cryptographically secure pseudorandom number generator\n' +
    ' * As Math.random() is cryptographically not safe to use\n' +
    ' */\n' +
    'export default function cryptoSecureRandomInt() {\n' +
    '  if (crypto) {\n' +
    '    // Use getRandomValues method (Browser)\n' +
    "    if (typeof crypto.getRandomValues === 'function') {\n" +
    '      try {\n' +
    '        return crypto.getRandomValues(new Uint32Array(1))[0];\n' +
    '      } catch (err) {}\n' +
    '    }\n' +
    '\n' +
    '    // Use randomBytes method (NodeJS)\n' +
    "    if (typeof crypto.randomBytes === 'function') {\n" +
    '      try {\n' +
    '        return crypto.randomBytes(4).readInt32LE();\n' +
    '      } catch (err) {}\n' +
    '    }\n' +
    '  }\n' +
    "  throw new Error('Native crypto module could not be used to get secure random number.');\n" +
    '}'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * The base implementation of `_.unary` without support for storing metadata.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to cap arguments for.\n' +
    ' * @returns {Function} Returns the new capped function.\n' +
    ' */\n' +
    'function baseUnary(func) {\n' +
    '  return function(value) {\n' +
    '    return func(value);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = baseUnary;\n'
} [Function: logger]
____9999999____ {
  code: 'import { getAugmentedNamespace } from "\x00commonjsHelpers.js"; import * as dist_es2015 from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/style-dictionary/node_modules/change-case/dist.es2015/index.js"; export default /*@__PURE__*/getAugmentedNamespace(dist_es2015);'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * This method returns `false`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.13.0\n' +
    ' * @category Util\n' +
    ' * @returns {boolean} Returns `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.times(2, _.stubFalse);\n' +
    ' * // => [false, false]\n' +
    ' */\n' +
    'function stubFalse() {\n' +
    '  return false;\n' +
    '}\n' +
    '\n' +
    'module.exports = stubFalse;\n'
} [Function: logger]
____9999999____ {
  code: "var freeGlobal = require('./_freeGlobal');\n" +
    '\n' +
    '/** Detect free variable `exports`. */\n' +
    "var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n" +
    '\n' +
    '/** Detect free variable `module`. */\n' +
    "var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n" +
    '\n' +
    '/** Detect the popular CommonJS extension `module.exports`. */\n' +
    'var moduleExports = freeModule && freeModule.exports === freeExports;\n' +
    '\n' +
    '/** Detect free variable `process` from Node.js. */\n' +
    'var freeProcess = moduleExports && freeGlobal.process;\n' +
    '\n' +
    '/** Used to access faster Node.js helpers. */\n' +
    'var nodeUtil = (function() {\n' +
    '  try {\n' +
    '    // Use `util.types` for Node.js 10+.\n' +
    "    var types = freeModule && freeModule.require && freeModule.require('util').types;\n" +
    '\n' +
    '    if (types) {\n' +
    '      return types;\n' +
    '    }\n' +
    '\n' +
    "    // Legacy `process.binding('util')` for Node.js < 10.\n" +
    "    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n" +
    '  } catch (e) {}\n' +
    '}());\n' +
    '\n' +
    'module.exports = nodeUtil;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetTag = require('./_baseGetTag'),\n" +
    "    isLength = require('./isLength'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var argsTag = '[object Arguments]',\n" +
    "    arrayTag = '[object Array]',\n" +
    "    boolTag = '[object Boolean]',\n" +
    "    dateTag = '[object Date]',\n" +
    "    errorTag = '[object Error]',\n" +
    "    funcTag = '[object Function]',\n" +
    "    mapTag = '[object Map]',\n" +
    "    numberTag = '[object Number]',\n" +
    "    objectTag = '[object Object]',\n" +
    "    regexpTag = '[object RegExp]',\n" +
    "    setTag = '[object Set]',\n" +
    "    stringTag = '[object String]',\n" +
    "    weakMapTag = '[object WeakMap]';\n" +
    '\n' +
    "var arrayBufferTag = '[object ArrayBuffer]',\n" +
    "    dataViewTag = '[object DataView]',\n" +
    "    float32Tag = '[object Float32Array]',\n" +
    "    float64Tag = '[object Float64Array]',\n" +
    "    int8Tag = '[object Int8Array]',\n" +
    "    int16Tag = '[object Int16Array]',\n" +
    "    int32Tag = '[object Int32Array]',\n" +
    "    uint8Tag = '[object Uint8Array]',\n" +
    "    uint8ClampedTag = '[object Uint8ClampedArray]',\n" +
    "    uint16Tag = '[object Uint16Array]',\n" +
    "    uint32Tag = '[object Uint32Array]';\n" +
    '\n' +
    '/** Used to identify `toStringTag` values of typed arrays. */\n' +
    'var typedArrayTags = {};\n' +
    'typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n' +
    'typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n' +
    'typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n' +
    'typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n' +
    'typedArrayTags[uint32Tag] = true;\n' +
    'typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n' +
    'typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n' +
    'typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n' +
    'typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n' +
    'typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n' +
    'typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n' +
    'typedArrayTags[setTag] = typedArrayTags[stringTag] =\n' +
    'typedArrayTags[weakMapTag] = false;\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.isTypedArray` without Node.js optimizations.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n' +
    ' */\n' +
    'function baseIsTypedArray(value) {\n' +
    '  return isObjectLike(value) &&\n' +
    '    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsTypedArray;\n'
} [Function: logger]
____9999999____ {
  code: 'import { lowerCase } from "lower-case";\n' +
    '// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").\n' +
    'var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n' +
    '// Remove all non-word characters.\n' +
    'var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n' +
    '/**\n' +
    ' * Normalize the string into something other libraries can manipulate easier.\n' +
    ' */\n' +
    'export function noCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;\n' +
    '    var result = replace(replace(input, splitRegexp, "$1\\0$2"), stripRegexp, "\\0");\n' +
    '    var start = 0;\n' +
    '    var end = result.length;\n' +
    '    // Trim the delimiter from around the output string.\n' +
    '    while (result.charAt(start) === "\\0")\n' +
    '        start++;\n' +
    '    while (result.charAt(end - 1) === "\\0")\n' +
    '        end--;\n' +
    '    // Transform each token independently.\n' +
    '    return result.slice(start, end).split("\\0").map(transform).join(delimiter);\n' +
    '}\n' +
    '/**\n' +
    ' * Replace `re` in the input string with the replacement value.\n' +
    ' */\n' +
    'function replace(input, re, value) {\n' +
    '    if (re instanceof RegExp)\n' +
    '        return input.replace(re, value);\n' +
    '    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Upper case the first character of an input string.\n' +
    ' */\n' +
    'export function upperCaseFirst(input) {\n' +
    '    return input.charAt(0).toUpperCase() + input.substr(1);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'var scheduler_production_min = {}; export {scheduler_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n' +
    ' */\n' +
    'var SUPPORTED_LOCALE = {\n' +
    '    tr: {\n' +
    '        regexp: /[\\u0069]/g,\n' +
    '        map: {\n' +
    '            i: "\\u0130",\n' +
    '        },\n' +
    '    },\n' +
    '    az: {\n' +
    '        regexp: /[\\u0069]/g,\n' +
    '        map: {\n' +
    '            i: "\\u0130",\n' +
    '        },\n' +
    '    },\n' +
    '    lt: {\n' +
    '        regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n' +
    '        map: {\n' +
    '            i̇: "\\u0049",\n' +
    '            j̇: "\\u004A",\n' +
    '            į̇: "\\u012E",\n' +
    '            i̇̀: "\\u00CC",\n' +
    '            i̇́: "\\u00CD",\n' +
    '            i̇̃: "\\u0128",\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '/**\n' +
    ' * Localized upper case.\n' +
    ' */\n' +
    'export function localeUpperCase(str, locale) {\n' +
    '    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n' +
    '    if (lang)\n' +
    '        return upperCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n' +
    '    return upperCase(str);\n' +
    '}\n' +
    '/**\n' +
    ' * Upper case as a function.\n' +
    ' */\n' +
    'export function upperCase(str) {\n' +
    '    return str.toUpperCase();\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { lowerCase } from "lower-case";\n' +
    '// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").\n' +
    'var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n' +
    '// Remove all non-word characters.\n' +
    'var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n' +
    '/**\n' +
    ' * Normalize the string into something other libraries can manipulate easier.\n' +
    ' */\n' +
    'export function noCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;\n' +
    '    var result = replace(replace(input, splitRegexp, "$1\\0$2"), stripRegexp, "\\0");\n' +
    '    var start = 0;\n' +
    '    var end = result.length;\n' +
    '    // Trim the delimiter from around the output string.\n' +
    '    while (result.charAt(start) === "\\0")\n' +
    '        start++;\n' +
    '    while (result.charAt(end - 1) === "\\0")\n' +
    '        end--;\n' +
    '    // Transform each token independently.\n' +
    '    return result.slice(start, end).split("\\0").map(transform).join(delimiter);\n' +
    '}\n' +
    '/**\n' +
    ' * Replace `re` in the input string with the replacement value.\n' +
    ' */\n' +
    'function replace(input, re, value) {\n' +
    '    if (re instanceof RegExp)\n' +
    '        return input.replace(re, value);\n' +
    '    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n' +
    ' */\n' +
    'var SUPPORTED_LOCALE = {\n' +
    '    tr: {\n' +
    '        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n' +
    '        map: {\n' +
    '            İ: "\\u0069",\n' +
    '            I: "\\u0131",\n' +
    '            İ: "\\u0069",\n' +
    '        },\n' +
    '    },\n' +
    '    az: {\n' +
    '        regexp: /\\u0130/g,\n' +
    '        map: {\n' +
    '            İ: "\\u0069",\n' +
    '            I: "\\u0131",\n' +
    '            İ: "\\u0069",\n' +
    '        },\n' +
    '    },\n' +
    '    lt: {\n' +
    '        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n' +
    '        map: {\n' +
    '            I: "\\u0069\\u0307",\n' +
    '            J: "\\u006A\\u0307",\n' +
    '            Į: "\\u012F\\u0307",\n' +
    '            Ì: "\\u0069\\u0307\\u0300",\n' +
    '            Í: "\\u0069\\u0307\\u0301",\n' +
    '            Ĩ: "\\u0069\\u0307\\u0303",\n' +
    '        },\n' +
    '    },\n' +
    '};\n' +
    '/**\n' +
    ' * Localized lower case.\n' +
    ' */\n' +
    'export function localeLowerCase(str, locale) {\n' +
    '    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n' +
    '    if (lang)\n' +
    '        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n' +
    '    return lowerCase(str);\n' +
    '}\n' +
    '/**\n' +
    ' * Lower case as a function.\n' +
    ' */\n' +
    'export function lowerCase(str) {\n' +
    '    return str.toLowerCase();\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { lowerCase } from "lower-case";\n' +
    '// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").\n' +
    'var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n' +
    '// Remove all non-word characters.\n' +
    'var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n' +
    '/**\n' +
    ' * Normalize the string into something other libraries can manipulate easier.\n' +
    ' */\n' +
    'export function noCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;\n' +
    '    var result = replace(replace(input, splitRegexp, "$1\\0$2"), stripRegexp, "\\0");\n' +
    '    var start = 0;\n' +
    '    var end = result.length;\n' +
    '    // Trim the delimiter from around the output string.\n' +
    '    while (result.charAt(start) === "\\0")\n' +
    '        start++;\n' +
    '    while (result.charAt(end - 1) === "\\0")\n' +
    '        end--;\n' +
    '    // Transform each token independently.\n' +
    '    return result.slice(start, end).split("\\0").map(transform).join(delimiter);\n' +
    '}\n' +
    '/**\n' +
    ' * Replace `re` in the input string with the replacement value.\n' +
    ' */\n' +
    'function replace(input, re, value) {\n' +
    '    if (re instanceof RegExp)\n' +
    '        return input.replace(re, value);\n' +
    '    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'import { lowerCase } from "lower-case";\n' +
    '// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").\n' +
    'var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n' +
    '// Remove all non-word characters.\n' +
    'var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n' +
    '/**\n' +
    ' * Normalize the string into something other libraries can manipulate easier.\n' +
    ' */\n' +
    'export function noCase(input, options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;\n' +
    '    var result = replace(replace(input, splitRegexp, "$1\\0$2"), stripRegexp, "\\0");\n' +
    '    var start = 0;\n' +
    '    var end = result.length;\n' +
    '    // Trim the delimiter from around the output string.\n' +
    '    while (result.charAt(start) === "\\0")\n' +
    '        start++;\n' +
    '    while (result.charAt(end - 1) === "\\0")\n' +
    '        end--;\n' +
    '    // Transform each token independently.\n' +
    '    return result.slice(start, end).split("\\0").map(transform).join(delimiter);\n' +
    '}\n' +
    '/**\n' +
    ' * Replace `re` in the input string with the replacement value.\n' +
    ' */\n' +
    'function replace(input, re, value) {\n' +
    '    if (re instanceof RegExp)\n' +
    '        return input.replace(re, value);\n' +
    '    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n' +
    '}\n' +
    '//# sourceMappingURL=index.js.map'
} [Function: logger]
____9999999____ {
  code: 'export const BLOCK_SIZE = 64;\n' +
    'export const DIGEST_LENGTH = 16;\n' +
    'export const INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\n'
} [Function: logger]
____9999999____ {
  code: "import { getHashedPayload } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { CONTENT_SHA256_HEADER } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * A middleware that adds the x-amz-content-sha256 header to the request if it is not already present.\n' +
    " * It's required for S3 requests in browsers where the request body is sent in 1 chunk.\n" +
    ' * @see https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-header-based-auth.html\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const contentSha256MiddlewareFactory = () => (next) => async function contentSha256Middleware(request) {\n' +
    '    if (request.headers[CONTENT_SHA256_HEADER]) {\n' +
    '        return next(request);\n' +
    '    }\n' +
    '    else {\n' +
    '        const hash = await getHashedPayload(request.body);\n' +
    '        request.headers[CONTENT_SHA256_HEADER] = hash;\n' +
    '        return next(request);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { contentSha256MiddlewareFactory };\n' +
    '//# sourceMappingURL=contentSha256middleware.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { Md5 } from '@smithy/md5-js';\n" +
    "import '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import './client/runtime/s3TransferHandler/fetch.mjs';\n" +
    "import 'fast-xml-parser';\n" +
    "import './client/runtime/s3TransferHandler/xhr.mjs';\n" +
    "import { utf8Encode, toBase64 } from './client/runtime/base64/index.native.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const calculateContentMd5 = async (content) => {\n' +
    '    const hasher = new Md5();\n' +
    "    if (typeof content === 'string') {\n" +
    '        hasher.update(content);\n' +
    '    }\n' +
    '    else if (ArrayBuffer.isView(content) || content instanceof ArrayBuffer) {\n' +
    '        const blob = new Blob([content]);\n' +
    '        const buffer = await readFileToBase64(blob);\n' +
    '        hasher.update(buffer);\n' +
    '    }\n' +
    '    else {\n' +
    '        const buffer = await readFileToBase64(content);\n' +
    '        hasher.update(utf8Encode(buffer));\n' +
    '    }\n' +
    '    const digest = await hasher.digest();\n' +
    '    return toBase64(digest);\n' +
    '};\n' +
    'const readFileToBase64 = (blob) => {\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        const reader = new FileReader();\n' +
    '        reader.onloadend = () => {\n' +
    '            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n' +
    '            // response from readAsDataURL is always prepended with "data:*/*;base64,"\n' +
    '            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState\n' +
    '            if (reader.readyState !== 2) {\n' +
    "                reject(new Error('Reader aborted too early'));\n" +
    '                return;\n' +
    '            }\n' +
    "            resolve(reader.result.split(',')[1]);\n" +
    '        };\n' +
    '        reader.onabort = () => {\n' +
    "            reject(new Error('Read aborted'));\n" +
    '        };\n' +
    '        reader.onerror = () => {\n' +
    '            reject(reader.error);\n' +
    '        };\n' +
    '        // reader.readAsArrayBuffer is not available in RN\n' +
    '        reader.readAsDataURL(blob);\n' +
    '    });\n' +
    '};\n' +
    '\n' +
    'export { calculateContentMd5 };\n' +
    '//# sourceMappingURL=md5.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { withMemoization } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { ConsoleLogger } from '@aws-amplify/core';\n" +
    "import { CanceledError } from '../../../../../errors/CanceledError.mjs';\n" +
    "import { NETWORK_ERROR_MESSAGE, ABORT_ERROR_MESSAGE, NETWORK_ERROR_CODE, ABORT_ERROR_CODE, CANCELED_ERROR_CODE, CANCELED_ERROR_MESSAGE } from './constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const logger = new ConsoleLogger('xhr-http-handler');\n" +
    '/**\n' +
    ' * Base transfer handler implementation using XMLHttpRequest to support upload and download progress events.\n' +
    ' *\n' +
    ' * @param request - The request object.\n' +
    ' * @param options - The request options.\n' +
    ' * @returns A promise that will be resolved with the response object.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const xhrTransferHandler = (request, options) => {\n' +
    '    const { url, method, headers, body } = request;\n' +
    '    const { onDownloadProgress, onUploadProgress, responseType, abortSignal } = options;\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        let xhr = new XMLHttpRequest();\n' +
    '        xhr.open(method.toUpperCase(), url.toString());\n' +
    '        Object.entries(headers)\n' +
    '            .filter(([header]) => !FORBIDDEN_HEADERS.includes(header))\n' +
    '            .forEach(([header, value]) => {\n' +
    '            xhr.setRequestHeader(header, value);\n' +
    '        });\n' +
    '        xhr.responseType = responseType;\n' +
    '        if (onDownloadProgress) {\n' +
    "            xhr.addEventListener('progress', event => {\n" +
    '                onDownloadProgress(convertToTransferProgressEvent(event));\n' +
    '                logger.debug(event);\n' +
    '            });\n' +
    '        }\n' +
    '        if (onUploadProgress) {\n' +
    "            xhr.upload.addEventListener('progress', event => {\n" +
    '                onUploadProgress(convertToTransferProgressEvent(event));\n' +
    '                logger.debug(event);\n' +
    '            });\n' +
    '        }\n' +
    "        xhr.addEventListener('error', () => {\n" +
    '            const networkError = buildHandlerError(NETWORK_ERROR_MESSAGE, NETWORK_ERROR_CODE);\n' +
    '            logger.error(NETWORK_ERROR_MESSAGE);\n' +
    '            reject(networkError);\n' +
    '            xhr = null; // clean up request\n' +
    '        });\n' +
    '        // Handle browser request cancellation (as opposed to a manual cancellation)\n' +
    "        xhr.addEventListener('abort', () => {\n" +
    '            // The abort event can be triggered after the error or load event. So we need to check if the xhr is null.\n' +
    "            // When request is aborted by AbortSignal, the promise is rejected in the abortSignal's 'abort' event listener.\n" +
    '            if (!xhr || abortSignal?.aborted)\n' +
    '                return;\n' +
    '            // Handle abort request caused by browser instead of AbortController\n' +
    '            // see: https://github.com/axios/axios/issues/537\n' +
    '            const error = buildHandlerError(ABORT_ERROR_MESSAGE, ABORT_ERROR_CODE);\n' +
    '            logger.error(ABORT_ERROR_MESSAGE);\n' +
    '            reject(error);\n' +
    '            xhr = null; // clean up request\n' +
    '        });\n' +
    "        // Skip handling timeout error since we don't have a timeout\n" +
    "        xhr.addEventListener('readystatechange', () => {\n" +
    '            if (!xhr || xhr.readyState !== xhr.DONE) {\n' +
    '                return;\n' +
    '            }\n' +
    '            const onloadend = () => {\n' +
    '                // The load event is triggered after the error/abort/load event. So we need to check if the xhr is null.\n' +
    '                if (!xhr)\n' +
    '                    return;\n' +
    '                const responseHeaders = convertResponseHeaders(xhr.getAllResponseHeaders());\n' +
    '                const { responseType: loadEndResponseType } = xhr;\n' +
    '                const responseBlob = xhr.response;\n' +
    "                const responseText = loadEndResponseType === 'text' ? xhr.responseText : '';\n" +
    '                const bodyMixIn = {\n' +
    '                    blob: () => Promise.resolve(responseBlob),\n' +
    "                    text: withMemoization(() => loadEndResponseType === 'blob'\n" +
    '                        ? readBlobAsText(responseBlob)\n' +
    '                        : Promise.resolve(responseText)),\n' +
    '                    json: () => Promise.reject(\n' +
    '                    // S3 does not support JSON response. So fail-fast here with nicer error message.\n' +
    "                    new Error('Parsing response to JSON is not implemented. Please use response.text() instead.')),\n" +
    '                };\n' +
    '                const response = {\n' +
    '                    statusCode: xhr.status,\n' +
    '                    headers: responseHeaders,\n' +
    "                    // The xhr.responseType is only set to 'blob' for streaming binary S3 object data. The streaming data is\n" +
    '                    // exposed via public interface of Storage.get(). So we need to return the response as a Blob object for\n' +
    '                    // backward compatibility. In other cases, the response payload is only used internally, we return it is\n' +
    '                    // {@link ResponseBodyMixin}\n' +
    "                    body: (xhr.responseType === 'blob'\n" +
    '                        ? Object.assign(responseBlob, bodyMixIn)\n' +
    '                        : bodyMixIn),\n' +
    '                };\n' +
    '                resolve(response);\n' +
    '                xhr = null; // clean up request\n' +
    '            };\n' +
    '            // readystate handler is calling before onerror or ontimeout handlers,\n' +
    "            // so we should call onloadend on the next 'tick'\n" +
    '            // @see https://github.com/axios/axios/blob/9588fcdec8aca45c3ba2f7968988a5d03f23168c/lib/adapters/xhr.js#L98-L99\n' +
    '            setTimeout(onloadend);\n' +
    '        });\n' +
    '        if (abortSignal) {\n' +
    '            const onCanceled = () => {\n' +
    '                // The abort event is triggered after the error or load event. So we need to check if the xhr is null.\n' +
    '                if (!xhr) {\n' +
    '                    return;\n' +
    '                }\n' +
    '                const canceledError = new CanceledError({\n' +
    '                    name: CANCELED_ERROR_CODE,\n' +
    '                    message: CANCELED_ERROR_MESSAGE,\n' +
    '                });\n' +
    '                reject(canceledError);\n' +
    '                xhr.abort();\n' +
    '                xhr = null;\n' +
    '            };\n' +
    '            abortSignal.aborted\n' +
    '                ? onCanceled()\n' +
    "                : abortSignal.addEventListener('abort', onCanceled);\n" +
    '        }\n' +
    "        if (typeof ReadableStream === 'function' &&\n" +
    '            body instanceof ReadableStream) {\n' +
    '            // This does not matter as previous implementation uses Axios which does not support ReadableStream anyway.\n' +
    "            throw new Error('ReadableStream request payload is not supported.');\n" +
    '        }\n' +
    '        xhr.send(body ?? null);\n' +
    '    });\n' +
    '};\n' +
    'const convertToTransferProgressEvent = (event) => ({\n' +
    '    transferredBytes: event.loaded,\n' +
    '    totalBytes: event.lengthComputable ? event.total : undefined,\n' +
    '});\n' +
    'const buildHandlerError = (message, name) => {\n' +
    '    const error = new Error(message);\n' +
    '    error.name = name;\n' +
    '    return error;\n' +
    '};\n' +
    '/**\n' +
    ' * Convert xhr.getAllResponseHeaders() string to a Record<string, string>. Note that modern browser already returns\n' +
    ' * header names in lowercase.\n' +
    ' * @param xhrHeaders - string of headers returned from xhr.getAllResponseHeaders()\n' +
    ' */\n' +
    'const convertResponseHeaders = (xhrHeaders) => {\n' +
    '    if (!xhrHeaders) {\n' +
    '        return {};\n' +
    '    }\n' +
    '    return xhrHeaders\n' +
    "        .split('\\r\\n')\n" +
    '        .reduce((headerMap, line) => {\n' +
    "        const parts = line.split(': ');\n" +
    '        const header = parts.shift();\n' +
    "        const value = parts.join(': ');\n" +
    '        headerMap[header.toLowerCase()] = value;\n' +
    '        return headerMap;\n' +
    '    }, {});\n' +
    '};\n' +
    'const readBlobAsText = (blob) => {\n' +
    '    const reader = new FileReader();\n' +
    '    return new Promise((resolve, reject) => {\n' +
    '        reader.onloadend = () => {\n' +
    '            if (reader.readyState !== FileReader.DONE) {\n' +
    '                return;\n' +
    '            }\n' +
    '            resolve(reader.result);\n' +
    '        };\n' +
    '        reader.onerror = () => {\n' +
    '            reject(reader.error);\n' +
    '        };\n' +
    '        reader.readAsText(blob);\n' +
    '    });\n' +
    '};\n' +
    '// To add more forbidden headers as found set by S3. Intentionally NOT list all of them here to save bundle size.\n' +
    '// https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name\n' +
    "const FORBIDDEN_HEADERS = ['host'];\n" +
    '\n' +
    'export { xhrTransferHandler };\n' +
    '//# sourceMappingURL=xhrTransferHandler.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { calculateContentMd5 } from '../../../utils/md5.mjs';\n" +
    "import '../../../../../errors/types/validation.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import { logger } from '../../../../../utils/logger.mjs';\n" +
    "import '../../../utils/client/base.mjs';\n" +
    "import '../../../utils/client/getObject.mjs';\n" +
    "import '../../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../../utils/client/putObject.mjs';\n" +
    "import '../../../utils/client/createMultipartUpload.mjs';\n" +
    "import { uploadPart } from '../../../utils/client/uploadPart.mjs';\n" +
    "import '../../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../../utils/client/listParts.mjs';\n" +
    "import '../../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../../utils/client/copyObject.mjs';\n" +
    "import '../../../utils/client/headObject.mjs';\n" +
    "import '../../../utils/client/deleteObject.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const uploadPartExecutor = async ({ dataChunkerGenerator, completedPartNumberSet, s3Config, abortSignal, bucket, finalKey, uploadId, onPartUploadCompletion, onProgress, isObjectLockEnabled, }) => {\n' +
    '    let transferredBytes = 0;\n' +
    '    for (const { data, partNumber, size } of dataChunkerGenerator) {\n' +
    '        if (abortSignal.aborted) {\n' +
    "            logger.debug('upload executor aborted.');\n" +
    '            break;\n' +
    '        }\n' +
    '        if (completedPartNumberSet.has(partNumber)) {\n' +
    '            logger.debug(`part ${partNumber} already uploaded.`);\n' +
    '            transferredBytes += size;\n' +
    '            onProgress?.({\n' +
    '                transferredBytes,\n' +
    '            });\n' +
    '        }\n' +
    '        else {\n' +
    '            // handle cancel error\n' +
    '            const { ETag: eTag } = await uploadPart({\n' +
    '                ...s3Config,\n' +
    '                abortSignal,\n' +
    '                onUploadProgress: (event) => {\n' +
    '                    const { transferredBytes: currentPartTransferredBytes } = event;\n' +
    '                    onProgress?.({\n' +
    '                        transferredBytes: transferredBytes + currentPartTransferredBytes,\n' +
    '                    });\n' +
    '                },\n' +
    '            }, {\n' +
    '                Bucket: bucket,\n' +
    '                Key: finalKey,\n' +
    '                UploadId: uploadId,\n' +
    '                Body: data,\n' +
    '                PartNumber: partNumber,\n' +
    '                ContentMD5: isObjectLockEnabled\n' +
    '                    ? await calculateContentMd5(data)\n' +
    '                    : undefined,\n' +
    '            });\n' +
    '            transferredBytes += size;\n' +
    '            // eTag will always be set even the S3 model interface marks it as optional.\n' +
    '            onPartUploadCompletion(partNumber, eTag);\n' +
    '        }\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { uploadPartExecutor };\n' +
    '//# sourceMappingURL=uploadPartExecutor.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { defaultStorage } from '@aws-amplify/core';\n" +
    "import { UPLOADS_STORAGE_KEY } from '../../../utils/constants.mjs';\n" +
    "import '../../../utils/client/base.mjs';\n" +
    "import '../../../utils/client/getObject.mjs';\n" +
    "import '../../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../../utils/client/putObject.mjs';\n" +
    "import '../../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../../utils/client/uploadPart.mjs';\n" +
    "import '../../../utils/client/completeMultipartUpload.mjs';\n" +
    "import { listParts } from '../../../utils/client/listParts.mjs';\n" +
    "import '../../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../../utils/client/copyObject.mjs';\n" +
    "import '../../../utils/client/headObject.mjs';\n" +
    "import '../../../utils/client/deleteObject.mjs';\n" +
    "import '../../../../../errors/types/validation.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import { logger } from '../../../../../utils/logger.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const ONE_HOUR = 1000 * 60 * 60;\n' +
    '/**\n' +
    ' * Find the cached multipart upload id and get the parts that have been uploaded\n' +
    ' * with ListParts API. If the cached upload is expired(1 hour), return null.\n' +
    ' */\n' +
    'const findCachedUploadParts = async ({ cacheKey, s3Config, bucket, finalKey, }) => {\n' +
    '    const cachedUploads = await listCachedUploadTasks(defaultStorage);\n' +
    '    if (!cachedUploads[cacheKey] ||\n' +
    '        cachedUploads[cacheKey].lastTouched < Date.now() - ONE_HOUR // Uploads are cached for 1 hour\n' +
    '    ) {\n' +
    '        return null;\n' +
    '    }\n' +
    '    const cachedUpload = cachedUploads[cacheKey];\n' +
    '    cachedUpload.lastTouched = Date.now();\n' +
    '    await defaultStorage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n' +
    '    try {\n' +
    '        const { Parts = [] } = await listParts(s3Config, {\n' +
    '            Bucket: bucket,\n' +
    '            Key: finalKey,\n' +
    '            UploadId: cachedUpload.uploadId,\n' +
    '        });\n' +
    '        return {\n' +
    '            parts: Parts,\n' +
    '            uploadId: cachedUpload.uploadId,\n' +
    '        };\n' +
    '    }\n' +
    '    catch (e) {\n' +
    "        logger.debug('failed to list cached parts, removing cached upload.');\n" +
    '        await removeCachedUpload(cacheKey);\n' +
    '        return null;\n' +
    '    }\n' +
    '};\n' +
    'const listCachedUploadTasks = async (kvStorage) => {\n' +
    '    try {\n' +
    "        return JSON.parse((await kvStorage.getItem(UPLOADS_STORAGE_KEY)) ?? '{}');\n" +
    '    }\n' +
    '    catch (e) {\n' +
    "        logger.debug('failed to parse cached uploads record.');\n" +
    '        return {};\n' +
    '    }\n' +
    '};\n' +
    '/**\n' +
    ' * Get the cache key of a multipart upload. Data source cached by different: size, content type, bucket, access level,\n' +
    ' * key. If the data source is a File instance, the upload is additionally indexed by file name and last modified time.\n' +
    ' * So the library always created a new multipart upload if the file is modified.\n' +
    ' */\n' +
    'const getUploadsCacheKey = ({ file, size, contentType, bucket, accessLevel, key, }) => {\n' +
    "    const resolvedContentType = contentType ?? file?.type ?? 'application/octet-stream';\n" +
    "    const levelStr = accessLevel === 'guest' ? 'public' : accessLevel;\n" +
    '    const baseId = `${size}_${resolvedContentType}_${bucket}_${levelStr}_${key}`;\n' +
    '    if (file) {\n' +
    '        return `${file.name}_${file.lastModified}_${baseId}`;\n' +
    '    }\n' +
    '    else {\n' +
    '        return baseId;\n' +
    '    }\n' +
    '};\n' +
    'const cacheMultipartUpload = async (cacheKey, fileMetadata) => {\n' +
    '    const cachedUploads = await listCachedUploadTasks(defaultStorage);\n' +
    '    cachedUploads[cacheKey] = {\n' +
    '        ...fileMetadata,\n' +
    '        lastTouched: Date.now(),\n' +
    '    };\n' +
    '    await defaultStorage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n' +
    '};\n' +
    'const removeCachedUpload = async (cacheKey) => {\n' +
    '    const cachedUploads = await listCachedUploadTasks(defaultStorage);\n' +
    '    delete cachedUploads[cacheKey];\n' +
    '    await defaultStorage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n' +
    '};\n' +
    '\n' +
    'export { cacheMultipartUpload, findCachedUploadParts, getUploadsCacheKey, removeCachedUpload };\n' +
    '//# sourceMappingURL=uploadCache.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Track the progress from multiple concurrent uploads, and invoke the onProgress callback.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const getConcurrentUploadsProgressTracker = ({ size, onProgress, }) => {\n' +
    '    const transferredBytesPerListener = [];\n' +
    '    const getTransferredBytes = () => transferredBytesPerListener.reduce((acc, transferredBytes) => acc + transferredBytes, 0);\n' +
    '    return {\n' +
    '        getOnProgressListener: () => {\n' +
    '            transferredBytesPerListener.push(0);\n' +
    '            const listenerIndex = transferredBytesPerListener.length - 1;\n' +
    '            return (event) => {\n' +
    '                const { transferredBytes } = event;\n' +
    '                transferredBytesPerListener[listenerIndex] = transferredBytes;\n' +
    '                onProgress?.({\n' +
    '                    transferredBytes: getTransferredBytes(),\n' +
    '                    totalBytes: size,\n' +
    '                });\n' +
    '            };\n' +
    '        },\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getConcurrentUploadsProgressTracker };\n' +
    '//# sourceMappingURL=progressTracker.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import '../../../utils/client/base.mjs';\n" +
    "import '../../../utils/client/getObject.mjs';\n" +
    "import '../../../utils/client/listObjectsV2.mjs';\n" +
    "import '../../../utils/client/putObject.mjs';\n" +
    "import { createMultipartUpload } from '../../../utils/client/createMultipartUpload.mjs';\n" +
    "import '../../../utils/client/uploadPart.mjs';\n" +
    "import '../../../utils/client/completeMultipartUpload.mjs';\n" +
    "import '../../../utils/client/listParts.mjs';\n" +
    "import '../../../utils/client/abortMultipartUpload.mjs';\n" +
    "import '../../../utils/client/copyObject.mjs';\n" +
    "import '../../../utils/client/headObject.mjs';\n" +
    "import '../../../utils/client/deleteObject.mjs';\n" +
    "import '../../../../../errors/types/validation.mjs';\n" +
    "import '@aws-amplify/core/internals/utils';\n" +
    "import { logger } from '../../../../../utils/logger.mjs';\n" +
    "import { getUploadsCacheKey, findCachedUploadParts, cacheMultipartUpload } from './uploadCache.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Load the in-progress multipart upload from local storage or async storage(RN) if it exists, or create a new multipart\n' +
    ' * upload.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const loadOrCreateMultipartUpload = async ({ s3Config, data, size, contentType, bucket, accessLevel, keyPrefix, key, contentDisposition, contentEncoding, metadata, abortSignal, }) => {\n' +
    '    const finalKey = keyPrefix + key;\n' +
    '    let cachedUpload;\n' +
    '    if (size === undefined) {\n' +
    "        logger.debug('uploaded data size cannot be determined, skipping cache.');\n" +
    '        cachedUpload = undefined;\n' +
    '    }\n' +
    '    else {\n' +
    '        const uploadCacheKey = getUploadsCacheKey({\n' +
    '            size,\n' +
    '            contentType,\n' +
    '            file: data instanceof File ? data : undefined,\n' +
    '            bucket,\n' +
    '            accessLevel,\n' +
    '            key,\n' +
    '        });\n' +
    '        const cachedUploadParts = await findCachedUploadParts({\n' +
    '            s3Config,\n' +
    '            cacheKey: uploadCacheKey,\n' +
    '            bucket,\n' +
    '            finalKey,\n' +
    '        });\n' +
    '        cachedUpload = cachedUploadParts\n' +
    '            ? { ...cachedUploadParts, uploadCacheKey }\n' +
    '            : undefined;\n' +
    '    }\n' +
    '    if (cachedUpload) {\n' +
    '        return {\n' +
    '            uploadId: cachedUpload.uploadId,\n' +
    '            cachedParts: cachedUpload.parts,\n' +
    '        };\n' +
    '    }\n' +
    '    else {\n' +
    '        const { UploadId } = await createMultipartUpload({\n' +
    '            ...s3Config,\n' +
    '            abortSignal,\n' +
    '        }, {\n' +
    '            Bucket: bucket,\n' +
    '            Key: finalKey,\n' +
    '            ContentType: contentType,\n' +
    '            ContentDisposition: contentDisposition,\n' +
    '            ContentEncoding: contentEncoding,\n' +
    '            Metadata: metadata,\n' +
    '        });\n' +
    '        if (size === undefined) {\n' +
    "            logger.debug('uploaded data size cannot be determined, skipping cache.');\n" +
    '            return {\n' +
    '                uploadId: UploadId,\n' +
    '                cachedParts: [],\n' +
    '            };\n' +
    '        }\n' +
    '        const uploadCacheKey = getUploadsCacheKey({\n' +
    '            size,\n' +
    '            contentType,\n' +
    '            file: data instanceof File ? data : undefined,\n' +
    '            bucket,\n' +
    '            accessLevel,\n' +
    '            key,\n' +
    '        });\n' +
    '        await cacheMultipartUpload(uploadCacheKey, {\n' +
    '            uploadId: UploadId,\n' +
    '            bucket,\n' +
    '            key,\n' +
    "            fileName: data instanceof File ? data.name : '',\n" +
    '        });\n' +
    '        return {\n' +
    '            uploadId: UploadId,\n' +
    '            cachedParts: [],\n' +
    '        };\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { loadOrCreateMultipartUpload };\n' +
    '//# sourceMappingURL=initialUpload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageValidationErrorCode, validationErrorMap } from '../../../../../errors/types/validation.mjs';\n" +
    "import { StorageError } from '../../../../../errors/StorageError.mjs';\n" +
    "import { calculatePartSize } from './calculatePartSize.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const getDataChunker = (data, totalSize) => {\n' +
    '    const partSize = calculatePartSize(totalSize);\n' +
    '    if (data instanceof Blob) {\n' +
    '        return helper(data, 0, data.size, partSize);\n' +
    '    }\n' +
    '    else if (ArrayBuffer.isView(data)) {\n' +
    '        return helper(data.buffer, data.byteOffset, data.byteLength, partSize);\n' +
    '    }\n' +
    '    else if (data instanceof ArrayBuffer) {\n' +
    '        return helper(data, 0, data.byteLength, partSize);\n' +
    '    }\n' +
    "    else if (typeof data === 'string') {\n" +
    '        const blob = new Blob([data]);\n' +
    '        return getDataChunker(blob, blob.size);\n' +
    '    }\n' +
    '    else {\n' +
    '        throw new StorageError({\n' +
    '            name: StorageValidationErrorCode.InvalidUploadSource,\n' +
    '            ...validationErrorMap[StorageValidationErrorCode.InvalidUploadSource],\n' +
    '        });\n' +
    '    }\n' +
    '};\n' +
    'const helper = function* (buffer, byteOffset, byteLength, partSize) {\n' +
    '    let partNumber = 1;\n' +
    '    let startByte = byteOffset;\n' +
    '    let endByte = byteOffset + Math.min(partSize, byteLength);\n' +
    '    while (endByte < byteLength + byteOffset) {\n' +
    '        yield {\n' +
    '            partNumber,\n' +
    '            data: buffer.slice(startByte, endByte),\n' +
    '            size: partSize,\n' +
    '        };\n' +
    '        partNumber += 1;\n' +
    '        startByte = endByte;\n' +
    '        endByte = startByte + partSize;\n' +
    '    }\n' +
    '    yield {\n' +
    '        partNumber,\n' +
    '        data: buffer.slice(startByte, byteLength + byteOffset),\n' +
    '        size: byteLength + byteOffset - startByte,\n' +
    '    };\n' +
    '};\n' +
    '\n' +
    'export { getDataChunker };\n' +
    '//# sourceMappingURL=getDataChunker.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/style-dictionary/lib/utils/references/defaults.js";'
} [Function: logger]
____9999999____ {
  code: "import { assertValidationError } from '../errors/utils/assertValidationError.mjs';\n" +
    "import { StorageValidationErrorCode } from '../errors/types/validation.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const resolvePrefix = ({ accessLevel, targetIdentityId, }) => {\n' +
    "    if (accessLevel === 'private') {\n" +
    '        assertValidationError(!!targetIdentityId, StorageValidationErrorCode.NoIdentityId);\n' +
    '        return `private/${targetIdentityId}/`;\n' +
    '    }\n' +
    "    else if (accessLevel === 'protected') {\n" +
    '        assertValidationError(!!targetIdentityId, StorageValidationErrorCode.NoIdentityId);\n' +
    '        return `protected/${targetIdentityId}/`;\n' +
    '    }\n' +
    '    else {\n' +
    "        return 'public/';\n" +
    '    }\n' +
    '};\n' +
    '\n' +
    'export { resolvePrefix };\n' +
    '//# sourceMappingURL=resolvePrefix.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import '../runtime/s3TransferHandler/fetch.mjs';\n" +
    "import { parser } from '../runtime/xmlParser/pureJs.mjs';\n" +
    "import '../runtime/s3TransferHandler/xhr.mjs';\n" +
    "import 'buffer';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const parseXmlError = async (response) => {\n' +
    '    if (!response || response.statusCode < 300) {\n' +
    '        return;\n' +
    '    }\n' +
    '    const { statusCode } = response;\n' +
    '    const body = await parseXmlBody(response);\n' +
    '    const code = body?.Code\n' +
    '        ? body.Code\n' +
    '        : statusCode === 404\n' +
    "            ? 'NotFound'\n" +
    '            : statusCode.toString();\n' +
    '    const message = body?.message ?? body?.Message ?? code;\n' +
    '    const error = new Error(message);\n' +
    '    return Object.assign(error, {\n' +
    '        name: code,\n' +
    '        $metadata: parseMetadata(response),\n' +
    '    });\n' +
    '};\n' +
    'const parseXmlBody = async (response) => {\n' +
    '    if (!response.body) {\n' +
    '        // S3 can return 200 without a body indicating failure.\n' +
    "        throw new Error('S3 aborted request.');\n" +
    '    }\n' +
    '    const data = await response.body.text();\n' +
    '    if (data?.length > 0) {\n' +
    '        try {\n' +
    '            return parser.parse(data);\n' +
    '        }\n' +
    '        catch (error) {\n' +
    "            throw new Error('Failed to parse XML response.');\n" +
    '        }\n' +
    '    }\n' +
    '    return {};\n' +
    '};\n' +
    '\n' +
    'export { parseXmlBody, parseXmlError };\n' +
    '//# sourceMappingURL=parsePayload.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    "const SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';\n" +
    "const SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';\n" +
    "const NETWORK_ERROR_MESSAGE = 'Network Error';\n" +
    "const NETWORK_ERROR_CODE = 'ECONNABORTED';\n" +
    "const ABORT_ERROR_MESSAGE = 'Request aborted';\n" +
    "const ABORT_ERROR_CODE = 'ERR_ABORTED';\n" +
    "const CANCELED_ERROR_MESSAGE = 'canceled';\n" +
    "const CANCELED_ERROR_CODE = 'ERR_CANCELED';\n" +
    "const CONTENT_SHA256_HEADER = 'x-amz-content-sha256';\n" +
    '\n' +
    'export { ABORT_ERROR_CODE, ABORT_ERROR_MESSAGE, CANCELED_ERROR_CODE, CANCELED_ERROR_MESSAGE, CONTENT_SHA256_HEADER, NETWORK_ERROR_CODE, NETWORK_ERROR_MESSAGE, SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT };\n' +
    '//# sourceMappingURL=constants.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { StorageError } from '../../../../../errors/StorageError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * Maps an object to a new object using the provided instructions.\n' +
    " * The instructions are a map of the returning mapped object's property names to a single instruction of how to map the\n" +
    ' * value from the original object to the new object. There are two types of instructions:\n' +
    ' *\n' +
    ' * 1. A string representing the property name of the original object to map to the new object. The value mapped from\n' +
    ' * the original object will be the same as the value in the new object, and it can ONLY be string.\n' +
    ' *\n' +
    ' * 2. An array of two elements. The first element is the property name of the original object to map to the new object.\n' +
    ' * The second element is a function that takes the value from the original object and returns the value to be mapped to\n' +
    ' * the new object. The function can return any type.\n' +
    ' *\n' +
    ' * Example:\n' +
    ' * ```typescript\n' +
    ' * const input = {\n' +
    " *   Foo: 'foo',\n" +
    " *   BarList: [{value: 'bar1'}, {value: 'bar2'}]\n" +
    ' * }\n' +
    ' * const output = map(input, {\n' +
    " *   someFoo: 'Foo',\n" +
    " *   bar: ['BarList', (barList) => barList.map(bar => bar.value)]\n" +
    " *   baz: 'Baz' // Baz does not exist in input, so it will not be in the output.\n" +
    ' * });\n' +
    " * // output = { someFoo: 'foo', bar: ['bar1', 'bar2'] }\n" +
    ' * ```\n' +
    ' *\n' +
    ' * @param obj The object containing the data to compose mapped object.\n' +
    ' * @param instructions The instructions mapping the object values to the new object.\n' +
    ' * @returns A new object with the mapped values.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const map = (obj, instructions) => {\n' +
    '    const result = {};\n' +
    '    for (const [key, instruction] of Object.entries(instructions)) {\n' +
    '        const [accessor, deserializer] = Array.isArray(instruction)\n' +
    '            ? instruction\n' +
    '            : [instruction];\n' +
    '        if (Object.prototype.hasOwnProperty.call(obj, accessor)) {\n' +
    '            result[key] = deserializer\n' +
    '                ? deserializer(obj[accessor])\n' +
    '                : String(obj[accessor]);\n' +
    '        }\n' +
    '    }\n' +
    '    return result;\n' +
    '};\n' +
    '/**\n' +
    ' * Deserializes a string to a number. Returns undefined if input is undefined.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const deserializeNumber = (value) => value ? Number(value) : undefined;\n' +
    '/**\n' +
    " * Deserializes a string to a boolean. Returns undefined if input is undefined. Returns true if input is 'true',\n" +
    ' * otherwise false.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const deserializeBoolean = (value) => {\n' +
    "    return value ? value === 'true' : undefined;\n" +
    '};\n' +
    '/**\n' +
    ' * Deserializes a string to a Date. Returns undefined if input is undefined.\n' +
    ' * It supports epoch timestamp; rfc3339(cannot have a UTC, fractional precision supported); rfc7231(section 7.1.1.1)\n' +
    ' *\n' +
    ' * @see https://www.epoch101.com/\n' +
    ' * @see https://datatracker.ietf.org/doc/html/rfc3339.html#section-5.6\n' +
    ' * @see https://datatracker.ietf.org/doc/html/rfc7231.html#section-7.1.1.1\n' +
    ' *\n' +
    ' * @note For bundle size consideration, we use Date constructor to parse the timestamp string. There might be slight\n' +
    ' * difference among browsers.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const deserializeTimestamp = (value) => {\n' +
    '    return value ? new Date(value) : undefined;\n' +
    '};\n' +
    '/**\n' +
    ' * Function that makes sure the deserializer receives non-empty array.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const emptyArrayGuard = (value, deserializer) => {\n' +
    "    if (value === '') {\n" +
    '        return [];\n' +
    '    }\n' +
    '    const valueArray = (Array.isArray(value) ? value : [value]).filter(e => e != null);\n' +
    '    return deserializer(valueArray);\n' +
    '};\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const deserializeMetadata = (headers) => {\n' +
    "    const objectMetadataHeaderPrefix = 'x-amz-meta-';\n" +
    '    const deserialized = Object.keys(headers)\n' +
    '        .filter(header => header.startsWith(objectMetadataHeaderPrefix))\n' +
    '        .reduce((acc, header) => {\n' +
    "        acc[header.replace(objectMetadataHeaderPrefix, '')] = headers[header];\n" +
    '        return acc;\n' +
    '    }, {});\n' +
    '    return Object.keys(deserialized).length > 0 ? deserialized : undefined;\n' +
    '};\n' +
    '/**\n' +
    ' * Internal-only method to create a new StorageError from a service error.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const buildStorageServiceError = (error, statusCode) => {\n' +
    '    const storageError = new StorageError({\n' +
    '        name: error.name,\n' +
    '        message: error.message,\n' +
    '    });\n' +
    '    if (statusCode === 404) {\n' +
    '        storageError.recoverySuggestion =\n' +
    "            'Please add the object with this key to the bucket as the key is not found.';\n" +
    '    }\n' +
    '    return storageError;\n' +
    '};\n' +
    '\n' +
    'export { buildStorageServiceError, deserializeBoolean, deserializeMetadata, deserializeNumber, deserializeTimestamp, emptyArrayGuard, map };\n' +
    '//# sourceMappingURL=deserializeHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "import { extendedEncodeURIComponent } from '@aws-amplify/core/internals/aws-client-utils';\n" +
    "import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\n" +
    "import { StorageError } from '../../../../../errors/StorageError.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'const assignStringVariables = (values) => {\n' +
    '    const queryParams = {};\n' +
    '    for (const [key, value] of Object.entries(values)) {\n' +
    '        if (value != null) {\n' +
    '            queryParams[key] = value.toString();\n' +
    '        }\n' +
    '    }\n' +
    '    return queryParams;\n' +
    '};\n' +
    '/**\n' +
    ' * Serailize the parameters for configuring the S3 object. Currently used by\n' +
    ' * `putObject` and `createMultipartUpload` API.\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const serializeObjectConfigsToHeaders = async (input) => ({\n' +
    '    ...assignStringVariables({\n' +
    "        'x-amz-acl': input.ACL,\n" +
    "        'cache-control': input.CacheControl,\n" +
    "        'content-disposition': input.ContentDisposition,\n" +
    "        'content-language': input.ContentLanguage,\n" +
    "        'content-encoding': input.ContentEncoding,\n" +
    "        'content-type': input.ContentType,\n" +
    '        expires: input.Expires?.toUTCString(),\n' +
    "        'x-amz-tagging': input.Tagging,\n" +
    '        ...serializeMetadata(input.Metadata),\n' +
    '    }),\n' +
    '});\n' +
    'const serializeMetadata = (metadata = {}) => Object.keys(metadata).reduce((acc, suffix) => {\n' +
    '    acc[`x-amz-meta-${suffix.toLowerCase()}`] = metadata[suffix];\n' +
    '    return acc;\n' +
    '}, {});\n' +
    '/**\n' +
    ' * Serialize the object key to a URL pathname.\n' +
    ' * @see https://github.com/aws/aws-sdk-js-v3/blob/7ed7101dcc4e81038b6c7f581162b959e6b33a04/clients/client-s3/src/protocols/Aws_restXml.ts#L1108\n' +
    ' *\n' +
    ' * @internal\n' +
    ' */\n' +
    'const serializePathnameObjectKey = (url, key) => {\n' +
    "    return (url.pathname.replace(/\\/$/, '') +\n" +
    "        `/${key.split('/').map(extendedEncodeURIComponent).join('/')}`);\n" +
    '};\n' +
    'function validateS3RequiredParameter(assertion, paramName) {\n' +
    '    if (!assertion) {\n' +
    '        throw new StorageError({\n' +
    '            name: AmplifyErrorCode.Unknown,\n' +
    "            message: 'An unknown error has occurred.',\n" +
    '            underlyingError: new TypeError(`Expected a non-null value for S3 parameter ${paramName}`),\n' +
    "            recoverySuggestion: 'This is likely to be a bug. Please reach out to library authors.',\n" +
    '        });\n' +
    '    }\n' +
    '}\n' +
    '\n' +
    'export { assignStringVariables, serializeObjectConfigsToHeaders, serializePathnameObjectKey, validateS3RequiredParameter };\n' +
    '//# sourceMappingURL=serializeHelpers.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsMatch = require('./_baseIsMatch'),\n" +
    "    getMatchData = require('./_getMatchData'),\n" +
    "    matchesStrictComparable = require('./_matchesStrictComparable');\n" +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.matches` which doesn't clone `source`.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} source The object of property values to match.\n' +
    ' * @returns {Function} Returns the new spec function.\n' +
    ' */\n' +
    'function baseMatches(source) {\n' +
    '  var matchData = getMatchData(source);\n' +
    '  if (matchData.length == 1 && matchData[0][2]) {\n' +
    '    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n' +
    '  }\n' +
    '  return function(object) {\n' +
    '    return object === source || baseIsMatch(object, source, matchData);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = baseMatches;\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsEqual = require('./_baseIsEqual'),\n" +
    "    get = require('./get'),\n" +
    "    hasIn = require('./hasIn'),\n" +
    "    isKey = require('./_isKey'),\n" +
    "    isStrictComparable = require('./_isStrictComparable'),\n" +
    "    matchesStrictComparable = require('./_matchesStrictComparable'),\n" +
    "    toKey = require('./_toKey');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1,\n' +
    '    COMPARE_UNORDERED_FLAG = 2;\n' +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} path The path of the property to get.\n' +
    ' * @param {*} srcValue The value to match.\n' +
    ' * @returns {Function} Returns the new spec function.\n' +
    ' */\n' +
    'function baseMatchesProperty(path, srcValue) {\n' +
    '  if (isKey(path) && isStrictComparable(srcValue)) {\n' +
    '    return matchesStrictComparable(toKey(path), srcValue);\n' +
    '  }\n' +
    '  return function(object) {\n' +
    '    var objValue = get(object, path);\n' +
    '    return (objValue === undefined && objValue === srcValue)\n' +
    '      ? hasIn(object, path)\n' +
    '      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = baseMatchesProperty;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * This method returns the first argument it receives.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @since 0.1.0\n' +
    ' * @memberOf _\n' +
    ' * @category Util\n' +
    ' * @param {*} value Any value.\n' +
    ' * @returns {*} Returns `value`.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': 1 };\n" +
    ' *\n' +
    ' * console.log(_.identity(object) === object);\n' +
    ' * // => true\n' +
    ' */\n' +
    'function identity(value) {\n' +
    '  return value;\n' +
    '}\n' +
    '\n' +
    'module.exports = identity;\n'
} [Function: logger]
____9999999____ {
  code: "var baseProperty = require('./_baseProperty'),\n" +
    "    basePropertyDeep = require('./_basePropertyDeep'),\n" +
    "    isKey = require('./_isKey'),\n" +
    "    toKey = require('./_toKey');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a function that returns the value at `path` of a given object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 2.4.0\n' +
    ' * @category Util\n' +
    ' * @param {Array|string} path The path of the property to get.\n' +
    ' * @returns {Function} Returns the new accessor function.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * var objects = [\n' +
    " *   { 'a': { 'b': 2 } },\n" +
    " *   { 'a': { 'b': 1 } }\n" +
    ' * ];\n' +
    ' *\n' +
    " * _.map(objects, _.property('a.b'));\n" +
    ' * // => [2, 1]\n' +
    ' *\n' +
    " * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n" +
    ' * // => [1, 2]\n' +
    ' */\n' +
    'function property(path) {\n' +
    '  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n' +
    '}\n' +
    '\n' +
    'module.exports = property;\n'
} [Function: logger]
____9999999____ {
  code: "var castPath = require('./_castPath'),\n" +
    "    toKey = require('./_toKey');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.get` without support for default values.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {Array|string} path The path of the property to get.\n' +
    ' * @returns {*} Returns the resolved value.\n' +
    ' */\n' +
    'function baseGet(object, path) {\n' +
    '  path = castPath(path, object);\n' +
    '\n' +
    '  var index = 0,\n' +
    '      length = path.length;\n' +
    '\n' +
    '  while (object != null && index < length) {\n' +
    '    object = object[toKey(path[index++])];\n' +
    '  }\n' +
    '  return (index && index == length) ? object : undefined;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseGet;\n'
} [Function: logger]
____9999999____ {
  code: "var assignValue = require('./_assignValue'),\n" +
    "    castPath = require('./_castPath'),\n" +
    "    isIndex = require('./_isIndex'),\n" +
    "    isObject = require('./isObject'),\n" +
    "    toKey = require('./_toKey');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.set`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to modify.\n' +
    ' * @param {Array|string} path The path of the property to set.\n' +
    ' * @param {*} value The value to set.\n' +
    ' * @param {Function} [customizer] The function to customize path creation.\n' +
    ' * @returns {Object} Returns `object`.\n' +
    ' */\n' +
    'function baseSet(object, path, value, customizer) {\n' +
    '  if (!isObject(object)) {\n' +
    '    return object;\n' +
    '  }\n' +
    '  path = castPath(path, object);\n' +
    '\n' +
    '  var index = -1,\n' +
    '      length = path.length,\n' +
    '      lastIndex = length - 1,\n' +
    '      nested = object;\n' +
    '\n' +
    '  while (nested != null && ++index < length) {\n' +
    '    var key = toKey(path[index]),\n' +
    '        newValue = value;\n' +
    '\n' +
    "    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n" +
    '      return object;\n' +
    '    }\n' +
    '\n' +
    '    if (index != lastIndex) {\n' +
    '      var objValue = nested[key];\n' +
    '      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n' +
    '      if (newValue === undefined) {\n' +
    '        newValue = isObject(objValue)\n' +
    '          ? objValue\n' +
    '          : (isIndex(path[index + 1]) ? [] : {});\n' +
    '      }\n' +
    '    }\n' +
    '    assignValue(nested, key, newValue);\n' +
    '    nested = nested[key];\n' +
    '  }\n' +
    '  return object;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseSet;\n'
} [Function: logger]
____9999999____ {
  code: "var isArray = require('./isArray'),\n" +
    "    isKey = require('./_isKey'),\n" +
    "    stringToPath = require('./_stringToPath'),\n" +
    "    toString = require('./toString');\n" +
    '\n' +
    '/**\n' +
    " * Casts `value` to a path array if it's not one.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to inspect.\n' +
    ' * @param {Object} [object] The object to query keys on.\n' +
    ' * @returns {Array} Returns the cast property path array.\n' +
    ' */\n' +
    'function castPath(value, object) {\n' +
    '  if (isArray(value)) {\n' +
    '    return value;\n' +
    '  }\n' +
    '  return isKey(value, object) ? [value] : stringToPath(toString(value));\n' +
    '}\n' +
    '\n' +
    'module.exports = castPath;\n'
} [Function: logger]
____9999999____ {
  code: "var arrayPush = require('./_arrayPush'),\n" +
    "    isArray = require('./isArray');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n' +
    ' * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n' +
    ' * symbols of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {Function} keysFunc The function to get the keys of `object`.\n' +
    ' * @param {Function} symbolsFunc The function to get the symbols of `object`.\n' +
    ' * @returns {Array} Returns the array of property names and symbols.\n' +
    ' */\n' +
    'function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n' +
    '  var result = keysFunc(object);\n' +
    '  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n' +
    '}\n' +
    '\n' +
    'module.exports = baseGetAllKeys;\n'
} [Function: logger]
____9999999____ {
  code: "var arrayPush = require('./_arrayPush'),\n" +
    "    getPrototype = require('./_getPrototype'),\n" +
    "    getSymbols = require('./_getSymbols'),\n" +
    "    stubArray = require('./stubArray');\n" +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeGetSymbols = Object.getOwnPropertySymbols;\n' +
    '\n' +
    '/**\n' +
    ' * Creates an array of the own and inherited enumerable symbols of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of symbols.\n' +
    ' */\n' +
    'var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n' +
    '  var result = [];\n' +
    '  while (object) {\n' +
    '    arrayPush(result, getSymbols(object));\n' +
    '    object = getPrototype(object);\n' +
    '  }\n' +
    '  return result;\n' +
    '};\n' +
    '\n' +
    'module.exports = getSymbolsIn;\n'
} [Function: logger]
____9999999____ {
  code: "var arrayLikeKeys = require('./_arrayLikeKeys'),\n" +
    "    baseKeysIn = require('./_baseKeysIn'),\n" +
    "    isArrayLike = require('./isArrayLike');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an array of the own and inherited enumerable property names of `object`.\n' +
    ' *\n' +
    ' * **Note:** Non-object values are coerced to objects.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * function Foo() {\n' +
    ' *   this.a = 1;\n' +
    ' *   this.b = 2;\n' +
    ' * }\n' +
    ' *\n' +
    ' * Foo.prototype.c = 3;\n' +
    ' *\n' +
    ' * _.keysIn(new Foo);\n' +
    " * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n" +
    ' */\n' +
    'function keysIn(object) {\n' +
    '  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n' +
    '}\n' +
    '\n' +
    'module.exports = keysIn;\n'
} [Function: logger]
____9999999____ {
  code: "var baseAssignValue = require('./_baseAssignValue'),\n" +
    "    eq = require('./eq');\n" +
    '\n' +
    '/**\n' +
    " * This function is like `assignValue` except that it doesn't assign\n" +
    ' * `undefined` values.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to modify.\n' +
    ' * @param {string} key The key of the property to assign.\n' +
    ' * @param {*} value The value to assign.\n' +
    ' */\n' +
    'function assignMergeValue(object, key, value) {\n' +
    '  if ((value !== undefined && !eq(object[key], value)) ||\n' +
    '      (value === undefined && !(key in object))) {\n' +
    '    baseAssignValue(object, key, value);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = assignMergeValue;\n'
} [Function: logger]
____9999999____ {
  code: "var createBaseFor = require('./_createBaseFor');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `baseForOwn` which iterates over `object`\n' +
    ' * properties returned by `keysFunc` and invokes `iteratee` for each property.\n' +
    ' * Iteratee functions may exit iteration early by explicitly returning `false`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to iterate over.\n' +
    ' * @param {Function} iteratee The function invoked per iteration.\n' +
    ' * @param {Function} keysFunc The function to get the keys of `object`.\n' +
    ' * @returns {Object} Returns `object`.\n' +
    ' */\n' +
    'var baseFor = createBaseFor();\n' +
    '\n' +
    'module.exports = baseFor;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Gets the value at `key`, unless `key` is "__proto__" or "constructor".\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {string} key The key of the property to get.\n' +
    ' * @returns {*} Returns the property value.\n' +
    ' */\n' +
    'function safeGet(object, key) {\n' +
    "  if (key === 'constructor' && typeof object[key] === 'function') {\n" +
    '    return;\n' +
    '  }\n' +
    '\n' +
    "  if (key == '__proto__') {\n" +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  return object[key];\n' +
    '}\n' +
    '\n' +
    'module.exports = safeGet;\n'
} [Function: logger]
____9999999____ {
  code: "var assignMergeValue = require('./_assignMergeValue'),\n" +
    "    cloneBuffer = require('./_cloneBuffer'),\n" +
    "    cloneTypedArray = require('./_cloneTypedArray'),\n" +
    "    copyArray = require('./_copyArray'),\n" +
    "    initCloneObject = require('./_initCloneObject'),\n" +
    "    isArguments = require('./isArguments'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    isArrayLikeObject = require('./isArrayLikeObject'),\n" +
    "    isBuffer = require('./isBuffer'),\n" +
    "    isFunction = require('./isFunction'),\n" +
    "    isObject = require('./isObject'),\n" +
    "    isPlainObject = require('./isPlainObject'),\n" +
    "    isTypedArray = require('./isTypedArray'),\n" +
    "    safeGet = require('./_safeGet'),\n" +
    "    toPlainObject = require('./toPlainObject');\n" +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseMerge` for arrays and objects which performs\n' +
    ' * deep merges and tracks traversed objects enabling objects with circular\n' +
    ' * references to be merged.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The destination object.\n' +
    ' * @param {Object} source The source object.\n' +
    ' * @param {string} key The key of the value to merge.\n' +
    ' * @param {number} srcIndex The index of `source`.\n' +
    ' * @param {Function} mergeFunc The function to merge values.\n' +
    ' * @param {Function} [customizer] The function to customize assigned values.\n' +
    ' * @param {Object} [stack] Tracks traversed source values and their merged\n' +
    ' *  counterparts.\n' +
    ' */\n' +
    'function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n' +
    '  var objValue = safeGet(object, key),\n' +
    '      srcValue = safeGet(source, key),\n' +
    '      stacked = stack.get(srcValue);\n' +
    '\n' +
    '  if (stacked) {\n' +
    '    assignMergeValue(object, key, stacked);\n' +
    '    return;\n' +
    '  }\n' +
    '  var newValue = customizer\n' +
    "    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n" +
    '    : undefined;\n' +
    '\n' +
    '  var isCommon = newValue === undefined;\n' +
    '\n' +
    '  if (isCommon) {\n' +
    '    var isArr = isArray(srcValue),\n' +
    '        isBuff = !isArr && isBuffer(srcValue),\n' +
    '        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n' +
    '\n' +
    '    newValue = srcValue;\n' +
    '    if (isArr || isBuff || isTyped) {\n' +
    '      if (isArray(objValue)) {\n' +
    '        newValue = objValue;\n' +
    '      }\n' +
    '      else if (isArrayLikeObject(objValue)) {\n' +
    '        newValue = copyArray(objValue);\n' +
    '      }\n' +
    '      else if (isBuff) {\n' +
    '        isCommon = false;\n' +
    '        newValue = cloneBuffer(srcValue, true);\n' +
    '      }\n' +
    '      else if (isTyped) {\n' +
    '        isCommon = false;\n' +
    '        newValue = cloneTypedArray(srcValue, true);\n' +
    '      }\n' +
    '      else {\n' +
    '        newValue = [];\n' +
    '      }\n' +
    '    }\n' +
    '    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n' +
    '      newValue = objValue;\n' +
    '      if (isArguments(objValue)) {\n' +
    '        newValue = toPlainObject(objValue);\n' +
    '      }\n' +
    '      else if (!isObject(objValue) || isFunction(objValue)) {\n' +
    '        newValue = initCloneObject(srcValue);\n' +
    '      }\n' +
    '    }\n' +
    '    else {\n' +
    '      isCommon = false;\n' +
    '    }\n' +
    '  }\n' +
    '  if (isCommon) {\n' +
    '    // Recursively merge objects and arrays (susceptible to call stack limits).\n' +
    '    stack.set(srcValue, newValue);\n' +
    '    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n' +
    "    stack['delete'](srcValue);\n" +
    '  }\n' +
    '  assignMergeValue(object, key, newValue);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseMergeDeep;\n'
} [Function: logger]
____9999999____ {
  code: "var identity = require('./identity'),\n" +
    "    overRest = require('./_overRest'),\n" +
    "    setToString = require('./_setToString');\n" +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to apply a rest parameter to.\n' +
    ' * @param {number} [start=func.length-1] The start position of the rest parameter.\n' +
    ' * @returns {Function} Returns the new function.\n' +
    ' */\n' +
    'function baseRest(func, start) {\n' +
    "  return setToString(overRest(func, start, identity), func + '');\n" +
    '}\n' +
    '\n' +
    'module.exports = baseRest;\n'
} [Function: logger]
____9999999____ {
  code: "var eq = require('./eq'),\n" +
    "    isArrayLike = require('./isArrayLike'),\n" +
    "    isIndex = require('./_isIndex'),\n" +
    "    isObject = require('./isObject');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if the given arguments are from an iteratee call.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The potential iteratee value argument.\n' +
    ' * @param {*} index The potential iteratee index or key argument.\n' +
    ' * @param {*} object The potential iteratee object argument.\n' +
    ' * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n' +
    ' *  else `false`.\n' +
    ' */\n' +
    'function isIterateeCall(value, index, object) {\n' +
    '  if (!isObject(object)) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var type = typeof index;\n' +
    "  if (type == 'number'\n" +
    '        ? (isArrayLike(object) && isIndex(index, object.length))\n' +
    "        : (type == 'string' && index in object)\n" +
    '      ) {\n' +
    '    return eq(object[index], value);\n' +
    '  }\n' +
    '  return false;\n' +
    '}\n' +
    '\n' +
    'module.exports = isIterateeCall;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * The base implementation of `_.propertyOf` without support for deep paths.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Function} Returns the new accessor function.\n' +
    ' */\n' +
    'function basePropertyOf(object) {\n' +
    '  return function(key) {\n' +
    '    return object == null ? undefined : object[key];\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = basePropertyOf;\n'
} [Function: logger]
____9999999____ {
  code: 'const EXP_TABLE = new Uint8Array(512)\n' +
    'const LOG_TABLE = new Uint8Array(256)\n' +
    '/**\n' +
    ' * Precompute the log and anti-log tables for faster computation later\n' +
    ' *\n' +
    ' * For each possible value in the galois field 2^8, we will pre-compute\n' +
    ' * the logarithm and anti-logarithm (exponential) of this value\n' +
    ' *\n' +
    ' * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n' +
    ' */\n' +
    ';(function initTables () {\n' +
    '  let x = 1\n' +
    '  for (let i = 0; i < 255; i++) {\n' +
    '    EXP_TABLE[i] = x\n' +
    '    LOG_TABLE[x] = i\n' +
    '\n' +
    '    x <<= 1 // multiply by 2\n' +
    '\n' +
    '    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n' +
    '    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n' +
    '    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n' +
    '      x ^= 0x11D\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    "  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n" +
    '  // stay inside the bounds (because we will mainly use this table for the multiplication of\n' +
    '  // two GF numbers, no more).\n' +
    '  // @see {@link mul}\n' +
    '  for (let i = 255; i < 512; i++) {\n' +
    '    EXP_TABLE[i] = EXP_TABLE[i - 255]\n' +
    '  }\n' +
    '}())\n' +
    '\n' +
    '/**\n' +
    ' * Returns log value of n inside Galois Field\n' +
    ' *\n' +
    ' * @param  {Number} n\n' +
    ' * @return {Number}\n' +
    ' */\n' +
    'exports.log = function log (n) {\n' +
    "  if (n < 1) throw new Error('log(' + n + ')')\n" +
    '  return LOG_TABLE[n]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Returns anti-log value of n inside Galois Field\n' +
    ' *\n' +
    ' * @param  {Number} n\n' +
    ' * @return {Number}\n' +
    ' */\n' +
    'exports.exp = function exp (n) {\n' +
    '  return EXP_TABLE[n]\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Multiplies two number inside Galois Field\n' +
    ' *\n' +
    ' * @param  {Number} x\n' +
    ' * @param  {Number} y\n' +
    ' * @return {Number}\n' +
    ' */\n' +
    'exports.mul = function mul (x, y) {\n' +
    '  if (x === 0 || y === 0) return 0\n' +
    '\n' +
    "  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n" +
    '  // @see {@link initTables}\n' +
    '  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "var Symbol = require('./_Symbol'),\n" +
    "    arrayMap = require('./_arrayMap'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    isSymbol = require('./isSymbol');\n" +
    '\n' +
    '/** Used as references for various `Number` constants. */\n' +
    'var INFINITY = 1 / 0;\n' +
    '\n' +
    '/** Used to convert symbols to primitives and strings. */\n' +
    'var symbolProto = Symbol ? Symbol.prototype : undefined,\n' +
    '    symbolToString = symbolProto ? symbolProto.toString : undefined;\n' +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.toString` which doesn't convert nullish\n" +
    ' * values to empty strings.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to process.\n' +
    ' * @returns {string} Returns the string.\n' +
    ' */\n' +
    'function baseToString(value) {\n' +
    '  // Exit early for strings to avoid a performance hit in some environments.\n' +
    "  if (typeof value == 'string') {\n" +
    '    return value;\n' +
    '  }\n' +
    '  if (isArray(value)) {\n' +
    '    // Recursively convert values (susceptible to call stack limits).\n' +
    "    return arrayMap(value, baseToString) + '';\n" +
    '  }\n' +
    '  if (isSymbol(value)) {\n' +
    "    return symbolToString ? symbolToString.call(value) : '';\n" +
    '  }\n' +
    "  var result = (value + '');\n" +
    "  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n" +
    '}\n' +
    '\n' +
    'module.exports = baseToString;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict'\n" +
    '\n' +
    'module.exports = function encodeUtf8 (input) {\n' +
    '  var result = []\n' +
    '  var size = input.length\n' +
    '\n' +
    '  for (var index = 0; index < size; index++) {\n' +
    '    var point = input.charCodeAt(index)\n' +
    '\n' +
    '    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n' +
    '      var second = input.charCodeAt(index + 1)\n' +
    '\n' +
    '      if (second >= 0xDC00 && second <= 0xDFFF) {\n' +
    '        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n' +
    '        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n' +
    '        index += 1\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    // US-ASCII\n' +
    '    if (point < 0x80) {\n' +
    '      result.push(point)\n' +
    '      continue\n' +
    '    }\n' +
    '\n' +
    '    // 2-byte UTF-8\n' +
    '    if (point < 0x800) {\n' +
    '      result.push((point >> 6) | 192)\n' +
    '      result.push((point & 63) | 128)\n' +
    '      continue\n' +
    '    }\n' +
    '\n' +
    '    // 3-byte UTF-8\n' +
    '    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n' +
    '      result.push((point >> 12) | 224)\n' +
    '      result.push(((point >> 6) & 63) | 128)\n' +
    '      result.push((point & 63) | 128)\n' +
    '      continue\n' +
    '    }\n' +
    '\n' +
    '    // 4-byte UTF-8\n' +
    '    if (point >= 0x10000 && point <= 0x10FFFF) {\n' +
    '      result.push((point >> 18) | 240)\n' +
    '      result.push(((point >> 12) & 63) | 128)\n' +
    '      result.push(((point >> 6) & 63) | 128)\n' +
    '      result.push((point & 63) | 128)\n' +
    '      continue\n' +
    '    }\n' +
    '\n' +
    '    // Invalid character\n' +
    '    result.push(0xEF, 0xBF, 0xBD)\n' +
    '  }\n' +
    '\n' +
    '  return new Uint8Array(result).buffer\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "if (process.env.NODE_ENV === 'production') {\n" +
    "  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n" +
    '} else {\n' +
    "  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'function t(t){return t.split("-")[0]}function e(t){return t.split("-")[1]}function n(e){return["top","bottom"].includes(t(e))?"x":"y"}function r(t){return"y"===t?"height":"width"}function i(i,o,a){let{reference:l,floating:s}=i;const c=l.x+l.width/2-s.width/2,f=l.y+l.height/2-s.height/2,u=n(o),m=r(u),g=l[m]/2-s[m]/2,d="x"===u;let p;switch(t(o)){case"top":p={x:c,y:l.y-s.height};break;case"bottom":p={x:c,y:l.y+l.height};break;case"right":p={x:l.x+l.width,y:f};break;case"left":p={x:l.x-s.width,y:f};break;default:p={x:l.x,y:l.y}}switch(e(o)){case"start":p[u]-=g*(a&&d?-1:1);break;case"end":p[u]+=g*(a&&d?-1:1)}return p}const o=async(t,e,n)=>{const{placement:r="bottom",strategy:o="absolute",middleware:a=[],platform:l}=n,s=await(null==l.isRTL?void 0:l.isRTL(e));let c=await l.getElementRects({reference:t,floating:e,strategy:o}),{x:f,y:u}=i(c,r,s),m=r,g={},d=0;for(let n=0;n<a.length;n++){const{name:p,fn:h}=a[n],{x:y,y:x,data:w,reset:v}=await h({x:f,y:u,initialPlacement:r,placement:m,strategy:o,middlewareData:g,rects:c,platform:l,elements:{reference:t,floating:e}});f=null!=y?y:f,u=null!=x?x:u,g={...g,[p]:{...g[p],...w}},v&&d<=50&&(d++,"object"==typeof v&&(v.placement&&(m=v.placement),v.rects&&(c=!0===v.rects?await l.getElementRects({reference:t,floating:e,strategy:o}):v.rects),({x:f,y:u}=i(c,m,s))),n=-1)}return{x:f,y:u,placement:m,strategy:o,middlewareData:g}};function a(t){return"number"!=typeof t?function(t){return{top:0,right:0,bottom:0,left:0,...t}}(t):{top:t,right:t,bottom:t,left:t}}function l(t){return{...t,top:t.y,left:t.x,right:t.x+t.width,bottom:t.y+t.height}}async function s(t,e){var n;void 0===e&&(e={});const{x:r,y:i,platform:o,rects:s,elements:c,strategy:f}=t,{boundary:u="clippingAncestors",rootBoundary:m="viewport",elementContext:g="floating",altBoundary:d=!1,padding:p=0}=e,h=a(p),y=c[d?"floating"===g?"reference":"floating":g],x=l(await o.getClippingRect({element:null==(n=await(null==o.isElement?void 0:o.isElement(y)))||n?y:y.contextElement||await(null==o.getDocumentElement?void 0:o.getDocumentElement(c.floating)),boundary:u,rootBoundary:m,strategy:f})),w=l(o.convertOffsetParentRelativeRectToViewportRelativeRect?await o.convertOffsetParentRelativeRectToViewportRelativeRect({rect:"floating"===g?{...s.floating,x:r,y:i}:s.reference,offsetParent:await(null==o.getOffsetParent?void 0:o.getOffsetParent(c.floating)),strategy:f}):s[g]);return{top:x.top-w.top+h.top,bottom:w.bottom-x.bottom+h.bottom,left:x.left-w.left+h.left,right:w.right-x.right+h.right}}const c=Math.min,f=Math.max;function u(t,e,n){return f(t,c(e,n))}const m=t=>({name:"arrow",options:t,async fn(i){const{element:o,padding:l=0}=null!=t?t:{},{x:s,y:c,placement:f,rects:m,platform:g}=i;if(null==o)return{};const d=a(l),p={x:s,y:c},h=n(f),y=e(f),x=r(h),w=await g.getDimensions(o),v="y"===h?"top":"left",b="y"===h?"bottom":"right",R=m.reference[x]+m.reference[h]-p[h]-m.floating[x],A=p[h]-m.reference[h],P=await(null==g.getOffsetParent?void 0:g.getOffsetParent(o));let T=P?"y"===h?P.clientHeight||0:P.clientWidth||0:0;0===T&&(T=m.floating[x]);const O=R/2-A/2,D=d[v],L=T-w[x]-d[b],k=T/2-w[x]/2+O,E=u(D,k,L),C=("start"===y?d[v]:d[b])>0&&k!==E&&m.reference[x]<=m.floating[x];return{[h]:p[h]-(C?k<D?D-k:L-k:0),data:{[h]:E,centerOffset:k-E}}}}),g={left:"right",right:"left",bottom:"top",top:"bottom"};function d(t){return t.replace(/left|right|bottom|top/g,(t=>g[t]))}function p(t,i,o){void 0===o&&(o=!1);const a=e(t),l=n(t),s=r(l);let c="x"===l?a===(o?"end":"start")?"right":"left":"start"===a?"bottom":"top";return i.reference[s]>i.floating[s]&&(c=d(c)),{main:c,cross:d(c)}}const h={start:"end",end:"start"};function y(t){return t.replace(/start|end/g,(t=>h[t]))}const x=["top","right","bottom","left"],w=x.reduce(((t,e)=>t.concat(e,e+"-start",e+"-end")),[]);const v=function(n){return void 0===n&&(n={}),{name:"autoPlacement",options:n,async fn(r){var i,o,a,l,c;const{x:f,y:u,rects:m,middlewareData:g,placement:d,platform:h,elements:x}=r,{alignment:v=null,allowedPlacements:b=w,autoAlignment:R=!0,...A}=n,P=function(n,r,i){return(n?[...i.filter((t=>e(t)===n)),...i.filter((t=>e(t)!==n))]:i.filter((e=>t(e)===e))).filter((t=>!n||e(t)===n||!!r&&y(t)!==t))}(v,R,b),T=await s(r,A),O=null!=(i=null==(o=g.autoPlacement)?void 0:o.index)?i:0,D=P[O];if(null==D)return{};const{main:L,cross:k}=p(D,m,await(null==h.isRTL?void 0:h.isRTL(x.floating)));if(d!==D)return{x:f,y:u,reset:{placement:P[0]}};const E=[T[t(D)],T[L],T[k]],C=[...null!=(a=null==(l=g.autoPlacement)?void 0:l.overflows)?a:[],{placement:D,overflows:E}],H=P[O+1];if(H)return{data:{index:O+1,overflows:C},reset:{placement:H}};const B=C.slice().sort(((t,e)=>t.overflows[0]-e.overflows[0])),V=null==(c=B.find((t=>{let{overflows:e}=t;return e.every((t=>t<=0))})))?void 0:c.placement,F=null!=V?V:B[0].placement;return F!==d?{data:{index:O+1,overflows:C},reset:{placement:F}}:{}}}};const b=function(e){return void 0===e&&(e={}),{name:"flip",options:e,async fn(n){var r;const{placement:i,middlewareData:o,rects:a,initialPlacement:l,platform:c,elements:f}=n,{mainAxis:u=!0,crossAxis:m=!0,fallbackPlacements:g,fallbackStrategy:h="bestFit",flipAlignment:x=!0,...w}=e,v=t(i),b=g||(v===l||!x?[d(l)]:function(t){const e=d(t);return[y(t),e,y(e)]}(l)),R=[l,...b],A=await s(n,w),P=[];let T=(null==(r=o.flip)?void 0:r.overflows)||[];if(u&&P.push(A[v]),m){const{main:t,cross:e}=p(i,a,await(null==c.isRTL?void 0:c.isRTL(f.floating)));P.push(A[t],A[e])}if(T=[...T,{placement:i,overflows:P}],!P.every((t=>t<=0))){var O,D;const t=(null!=(O=null==(D=o.flip)?void 0:D.index)?O:0)+1,e=R[t];if(e)return{data:{index:t,overflows:T},reset:{placement:e}};let n="bottom";switch(h){case"bestFit":{var L;const t=null==(L=T.map((t=>[t,t.overflows.filter((t=>t>0)).reduce(((t,e)=>t+e),0)])).sort(((t,e)=>t[1]-e[1]))[0])?void 0:L[0].placement;t&&(n=t);break}case"initialPlacement":n=l}if(i!==n)return{reset:{placement:n}}}return{}}}};function R(t,e){return{top:t.top-e.height,right:t.right-e.width,bottom:t.bottom-e.height,left:t.left-e.width}}function A(t){return x.some((e=>t[e]>=0))}const P=function(t){let{strategy:e="referenceHidden",...n}=void 0===t?{}:t;return{name:"hide",async fn(t){const{rects:r}=t;switch(e){case"referenceHidden":{const e=R(await s(t,{...n,elementContext:"reference"}),r.reference);return{data:{referenceHiddenOffsets:e,referenceHidden:A(e)}}}case"escaped":{const e=R(await s(t,{...n,altBoundary:!0}),r.floating);return{data:{escapedOffsets:e,escaped:A(e)}}}default:return{}}}}};const T=function(r){return void 0===r&&(r=0),{name:"offset",options:r,async fn(i){const{x:o,y:a}=i,l=await async function(r,i){const{placement:o,platform:a,elements:l}=r,s=await(null==a.isRTL?void 0:a.isRTL(l.floating)),c=t(o),f=e(o),u="x"===n(o),m=["left","top"].includes(c)?-1:1,g=s&&u?-1:1,d="function"==typeof i?i(r):i;let{mainAxis:p,crossAxis:h,alignmentAxis:y}="number"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return f&&"number"==typeof y&&(h="end"===f?-1*y:y),u?{x:h*g,y:p*m}:{x:p*m,y:h*g}}(i,r);return{x:o+l.x,y:a+l.y,data:l}}}};function O(t){return"x"===t?"y":"x"}const D=function(e){return void 0===e&&(e={}),{name:"shift",options:e,async fn(r){const{x:i,y:o,placement:a}=r,{mainAxis:l=!0,crossAxis:c=!1,limiter:f={fn:t=>{let{x:e,y:n}=t;return{x:e,y:n}}},...m}=e,g={x:i,y:o},d=await s(r,m),p=n(t(a)),h=O(p);let y=g[p],x=g[h];if(l){const t="y"===p?"bottom":"right";y=u(y+d["y"===p?"top":"left"],y,y-d[t])}if(c){const t="y"===h?"bottom":"right";x=u(x+d["y"===h?"top":"left"],x,x-d[t])}const w=f.fn({...r,[p]:y,[h]:x});return{...w,data:{x:w.x-i,y:w.y-o}}}}},L=function(e){return void 0===e&&(e={}),{options:e,fn(r){const{x:i,y:o,placement:a,rects:l,middlewareData:s}=r,{offset:c=0,mainAxis:f=!0,crossAxis:u=!0}=e,m={x:i,y:o},g=n(a),d=O(g);let p=m[g],h=m[d];const y="function"==typeof c?c({...l,placement:a}):c,x="number"==typeof y?{mainAxis:y,crossAxis:0}:{mainAxis:0,crossAxis:0,...y};if(f){const t="y"===g?"height":"width",e=l.reference[g]-l.floating[t]+x.mainAxis,n=l.reference[g]+l.reference[t]-x.mainAxis;p<e?p=e:p>n&&(p=n)}if(u){var w,v,b,R;const e="y"===g?"width":"height",n=["top","left"].includes(t(a)),r=l.reference[d]-l.floating[e]+(n&&null!=(w=null==(v=s.offset)?void 0:v[d])?w:0)+(n?0:x.crossAxis),i=l.reference[d]+l.reference[e]+(n?0:null!=(b=null==(R=s.offset)?void 0:R[d])?b:0)-(n?x.crossAxis:0);h<r?h=r:h>i&&(h=i)}return{[g]:p,[d]:h}}}},k=function(n){return void 0===n&&(n={}),{name:"size",options:n,async fn(r){const{placement:i,rects:o,platform:a,elements:l}=r,{apply:c,...u}=n,m=await s(r,u),g=t(i),d=e(i);let p,h;"top"===g||"bottom"===g?(p=g,h=d===(await(null==a.isRTL?void 0:a.isRTL(l.floating))?"start":"end")?"left":"right"):(h=g,p="end"===d?"top":"bottom");const y=f(m.left,0),x=f(m.right,0),w=f(m.top,0),v=f(m.bottom,0),b={availableHeight:o.floating.height-(["left","right"].includes(i)?2*(0!==w||0!==v?w+v:f(m.top,m.bottom)):m[p]),availableWidth:o.floating.width-(["top","bottom"].includes(i)?2*(0!==y||0!==x?y+x:f(m.left,m.right)):m[h])},R=await a.getDimensions(l.floating);null==c||c({...r,...b});const A=await a.getDimensions(l.floating);return R.width!==A.width||R.height!==A.height?{reset:{rects:!0}}:{}}}},E=function(e){return void 0===e&&(e={}),{name:"inline",options:e,async fn(r){var i;const{placement:o,elements:s,rects:u,platform:m,strategy:g}=r,{padding:d=2,x:p,y:h}=e,y=l(m.convertOffsetParentRelativeRectToViewportRelativeRect?await m.convertOffsetParentRelativeRectToViewportRelativeRect({rect:u.reference,offsetParent:await(null==m.getOffsetParent?void 0:m.getOffsetParent(s.floating)),strategy:g}):u.reference),x=null!=(i=await(null==m.getClientRects?void 0:m.getClientRects(s.reference)))?i:[],w=a(d);const v=await m.getElementRects({reference:{getBoundingClientRect:function(){var e;if(2===x.length&&x[0].left>x[1].right&&null!=p&&null!=h)return null!=(e=x.find((t=>p>t.left-w.left&&p<t.right+w.right&&h>t.top-w.top&&h<t.bottom+w.bottom)))?e:y;if(x.length>=2){if("x"===n(o)){const e=x[0],n=x[x.length-1],r="top"===t(o),i=e.top,a=n.bottom,l=r?e.left:n.left,s=r?e.'... 700 more characters
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/now.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/toNumber.js";'
} [Function: logger]
____9999999____ {
  code: "export var zeroRightClassName = 'right-scroll-bar-position';\n" +
    "export var fullWidthClassName = 'width-before-scroll-bar';\n" +
    "export var noScrollbarsClassName = 'with-scroll-bars-hidden';\n" +
    '/**\n' +
    ' * Name of a CSS variable containing the amount of "hidden" scrollbar\n' +
    ' * ! might be undefined ! use will fallback!\n' +
    ' */\n' +
    "export var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n"
} [Function: logger]
____9999999____ {
  code: "export { assignRef } from './assignRef';\n" +
    '// callback ref\n' +
    "export { useCallbackRef } from './useRef';\n" +
    "export { createCallbackRef } from './createRef';\n" +
    '// merge ref\n' +
    "export { mergeRefs } from './mergeRef';\n" +
    "export { useMergeRefs } from './useMergeRef';\n" +
    '// transform ref\n' +
    "export { useTransformRef } from './useTransformRef';\n" +
    "export { transformRef } from './transformRef';\n" +
    '// refToCallback\n' +
    "export { refToCallback, useRefToCallback } from './refToCallback';\n"
} [Function: logger]
____9999999____ {
  code: "import { createSidecarMedium } from 'use-sidecar';\n" +
    'export var effectCar = createSidecarMedium();\n'
} [Function: logger]
____9999999____ {
  code: "export { sidecar } from './hoc';\n" +
    "export { useSidecar } from './hook';\n" +
    "export { setConfig } from './config';\n" +
    "export { createMedium, createSidecarMedium } from './medium';\n" +
    "export { renderCar } from './renderProp';\n" +
    "export { exportSidecar } from './exports';\n"
} [Function: logger]
____9999999____ {
  code: 'import { __spreadArray } from "tslib";\n' +
    "import * as React from 'react';\n" +
    "import { RemoveScrollBar } from 'react-remove-scroll-bar';\n" +
    "import { styleSingleton } from 'react-style-singleton';\n" +
    "import { nonPassive } from './aggresiveCapture';\n" +
    "import { handleScroll, locationCouldBeScrolled } from './handleScroll';\n" +
    'export var getTouchXY = function (event) {\n' +
    "    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n" +
    '};\n' +
    'export var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\n' +
    'var extractRef = function (ref) {\n' +
    "    return ref && 'current' in ref ? ref.current : ref;\n" +
    '};\n' +
    'var deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\n' +
    'var generateStyle = function (id) { return "\\n  .block-interactivity-".concat(id, " {pointer-events: none;}\\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\\n"); };\n' +
    'var idCounter = 0;\n' +
    'var lockStack = [];\n' +
    'export function RemoveScrollSideCar(props) {\n' +
    '    var shouldPreventQueue = React.useRef([]);\n' +
    '    var touchStartRef = React.useRef([0, 0]);\n' +
    '    var activeAxis = React.useRef();\n' +
    '    var id = React.useState(idCounter++)[0];\n' +
    '    var Style = React.useState(function () { return styleSingleton(); })[0];\n' +
    '    var lastProps = React.useRef(props);\n' +
    '    React.useEffect(function () {\n' +
    '        lastProps.current = props;\n' +
    '    }, [props]);\n' +
    '    React.useEffect(function () {\n' +
    '        if (props.inert) {\n' +
    '            document.body.classList.add("block-interactivity-".concat(id));\n' +
    '            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n' +
    '            allow_1.forEach(function (el) { return el.classList.add("allow-interactivity-".concat(id)); });\n' +
    '            return function () {\n' +
    '                document.body.classList.remove("block-interactivity-".concat(id));\n' +
    '                allow_1.forEach(function (el) { return el.classList.remove("allow-interactivity-".concat(id)); });\n' +
    '            };\n' +
    '        }\n' +
    '        return;\n' +
    '    }, [props.inert, props.lockRef.current, props.shards]);\n' +
    '    var shouldCancelEvent = React.useCallback(function (event, parent) {\n' +
    "        if ('touches' in event && event.touches.length === 2) {\n" +
    '            return !lastProps.current.allowPinchZoom;\n' +
    '        }\n' +
    '        var touch = getTouchXY(event);\n' +
    '        var touchStart = touchStartRef.current;\n' +
    "        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n" +
    "        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n" +
    '        var currentAxis;\n' +
    '        var target = event.target;\n' +
    "        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n" +
    '        // allow horizontal touch move on Range inputs. They will not cause any scroll\n' +
    "        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n" +
    '            return false;\n' +
    '        }\n' +
    '        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n' +
    '        if (!canBeScrolledInMainDirection) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        if (canBeScrolledInMainDirection) {\n' +
    '            currentAxis = moveDirection;\n' +
    '        }\n' +
    '        else {\n' +
    "            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n" +
    '            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n' +
    '            // other axis might be not scrollable\n' +
    '        }\n' +
    '        if (!canBeScrolledInMainDirection) {\n' +
    '            return false;\n' +
    '        }\n' +
    "        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n" +
    '            activeAxis.current = currentAxis;\n' +
    '        }\n' +
    '        if (!currentAxis) {\n' +
    '            return true;\n' +
    '        }\n' +
    '        var cancelingAxis = activeAxis.current || currentAxis;\n' +
    "        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n" +
    '    }, []);\n' +
    '    var shouldPrevent = React.useCallback(function (_event) {\n' +
    '        var event = _event;\n' +
    '        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n' +
    '            // not the last active\n' +
    '            return;\n' +
    '        }\n' +
    "        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n" +
    '        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta); })[0];\n' +
    '        // self event, and should be canceled\n' +
    '        if (sourceEvent && sourceEvent.should) {\n' +
    '            event.preventDefault();\n' +
    '            return;\n' +
    '        }\n' +
    '        // outside or shard event\n' +
    '        if (!sourceEvent) {\n' +
    '            var shardNodes = (lastProps.current.shards || [])\n' +
    '                .map(extractRef)\n' +
    '                .filter(Boolean)\n' +
    '                .filter(function (node) { return node.contains(event.target); });\n' +
    '            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n' +
    '            if (shouldStop) {\n' +
    '                event.preventDefault();\n' +
    '            }\n' +
    '        }\n' +
    '    }, []);\n' +
    '    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n' +
    '        var event = { name: name, delta: delta, target: target, should: should };\n' +
    '        shouldPreventQueue.current.push(event);\n' +
    '        setTimeout(function () {\n' +
    '            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n' +
    '        }, 1);\n' +
    '    }, []);\n' +
    '    var scrollTouchStart = React.useCallback(function (event) {\n' +
    '        touchStartRef.current = getTouchXY(event);\n' +
    '        activeAxis.current = undefined;\n' +
    '    }, []);\n' +
    '    var scrollWheel = React.useCallback(function (event) {\n' +
    '        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n' +
    '    }, []);\n' +
    '    var scrollTouchMove = React.useCallback(function (event) {\n' +
    '        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n' +
    '    }, []);\n' +
    '    React.useEffect(function () {\n' +
    '        lockStack.push(Style);\n' +
    '        props.setCallbacks({\n' +
    '            onScrollCapture: scrollWheel,\n' +
    '            onWheelCapture: scrollWheel,\n' +
    '            onTouchMoveCapture: scrollTouchMove,\n' +
    '        });\n' +
    "        document.addEventListener('wheel', shouldPrevent, nonPassive);\n" +
    "        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n" +
    "        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n" +
    '        return function () {\n' +
    '            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n' +
    "            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n" +
    "            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n" +
    "            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n" +
    '        };\n' +
    '    }, []);\n' +
    '    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n' +
    '    return (React.createElement(React.Fragment, null,\n' +
    '        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n' +
    '        removeScrollBar ? React.createElement(RemoveScrollBar, { gapMode: "margin" }) : null));\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    "import AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n" +
    '\n' +
    '/**\n' +
    ' * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n' +
    ' * URI encoded counterparts\n' +
    ' *\n' +
    ' * @param {string} val The value to be encoded.\n' +
    ' *\n' +
    ' * @returns {string} The encoded value.\n' +
    ' */\n' +
    'function encode(val) {\n' +
    '  return encodeURIComponent(val).\n' +
    "    replace(/%3A/gi, ':').\n" +
    "    replace(/%24/g, '$').\n" +
    "    replace(/%2C/gi, ',').\n" +
    "    replace(/%20/g, '+').\n" +
    "    replace(/%5B/gi, '[').\n" +
    "    replace(/%5D/gi, ']');\n" +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Build a URL by appending params to the end\n' +
    ' *\n' +
    ' * @param {string} url The base of the url (e.g., http://www.google.com)\n' +
    ' * @param {object} [params] The params to be appended\n' +
    ' * @param {?object} options\n' +
    ' *\n' +
    ' * @returns {string} The formatted url\n' +
    ' */\n' +
    'export default function buildURL(url, params, options) {\n' +
    '  /*eslint no-param-reassign:0*/\n' +
    '  if (!params) {\n' +
    '    return url;\n' +
    '  }\n' +
    '  \n' +
    '  const _encode = options && options.encode || encode;\n' +
    '\n' +
    '  const serializeFn = options && options.serialize;\n' +
    '\n' +
    '  let serializedParams;\n' +
    '\n' +
    '  if (serializeFn) {\n' +
    '    serializedParams = serializeFn(params, options);\n' +
    '  } else {\n' +
    '    serializedParams = utils.isURLSearchParams(params) ?\n' +
    '      params.toString() :\n' +
    '      new AxiosURLSearchParams(params, options).toString(_encode);\n' +
    '  }\n' +
    '\n' +
    '  if (serializedParams) {\n' +
    '    const hashmarkIndex = url.indexOf("#");\n' +
    '\n' +
    '    if (hashmarkIndex !== -1) {\n' +
    '      url = url.slice(0, hashmarkIndex);\n' +
    '    }\n' +
    "    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n" +
    '  }\n' +
    '\n' +
    '  return url;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    '\n' +
    'class InterceptorManager {\n' +
    '  constructor() {\n' +
    '    this.handlers = [];\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Add a new interceptor to the stack\n' +
    '   *\n' +
    '   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n' +
    '   * @param {Function} rejected The function to handle `reject` for a `Promise`\n' +
    '   *\n' +
    '   * @return {Number} An ID used to remove interceptor later\n' +
    '   */\n' +
    '  use(fulfilled, rejected, options) {\n' +
    '    this.handlers.push({\n' +
    '      fulfilled,\n' +
    '      rejected,\n' +
    '      synchronous: options ? options.synchronous : false,\n' +
    '      runWhen: options ? options.runWhen : null\n' +
    '    });\n' +
    '    return this.handlers.length - 1;\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Remove an interceptor from the stack\n' +
    '   *\n' +
    '   * @param {Number} id The ID that was returned by `use`\n' +
    '   *\n' +
    '   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n' +
    '   */\n' +
    '  eject(id) {\n' +
    '    if (this.handlers[id]) {\n' +
    '      this.handlers[id] = null;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Clear all interceptors from the stack\n' +
    '   *\n' +
    '   * @returns {void}\n' +
    '   */\n' +
    '  clear() {\n' +
    '    if (this.handlers) {\n' +
    '      this.handlers = [];\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  /**\n' +
    '   * Iterate over all the registered interceptors\n' +
    '   *\n' +
    '   * This method is particularly useful for skipping over any\n' +
    '   * interceptors that may have become `null` calling `eject`.\n' +
    '   *\n' +
    '   * @param {Function} fn The function to call for each interceptor\n' +
    '   *\n' +
    '   * @returns {void}\n' +
    '   */\n' +
    '  forEach(fn) {\n' +
    '    utils.forEach(this.handlers, function forEachHandler(h) {\n' +
    '      if (h !== null) {\n' +
    '        fn(h);\n' +
    '      }\n' +
    '    });\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export default InterceptorManager;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import transformData from './transformData.js';\n" +
    "import isCancel from '../cancel/isCancel.js';\n" +
    "import defaults from '../defaults/index.js';\n" +
    "import CanceledError from '../cancel/CanceledError.js';\n" +
    "import AxiosHeaders from '../core/AxiosHeaders.js';\n" +
    'import adapters from "../adapters/adapters.js";\n' +
    '\n' +
    '/**\n' +
    ' * Throws a `CanceledError` if cancellation has been requested.\n' +
    ' *\n' +
    ' * @param {Object} config The config that is to be used for the request\n' +
    ' *\n' +
    ' * @returns {void}\n' +
    ' */\n' +
    'function throwIfCancellationRequested(config) {\n' +
    '  if (config.cancelToken) {\n' +
    '    config.cancelToken.throwIfRequested();\n' +
    '  }\n' +
    '\n' +
    '  if (config.signal && config.signal.aborted) {\n' +
    '    throw new CanceledError(null, config);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * Dispatch a request to the server using the configured adapter.\n' +
    ' *\n' +
    ' * @param {object} config The config that is to be used for the request\n' +
    ' *\n' +
    ' * @returns {Promise} The Promise to be fulfilled\n' +
    ' */\n' +
    'export default function dispatchRequest(config) {\n' +
    '  throwIfCancellationRequested(config);\n' +
    '\n' +
    '  config.headers = AxiosHeaders.from(config.headers);\n' +
    '\n' +
    '  // Transform request data\n' +
    '  config.data = transformData.call(\n' +
    '    config,\n' +
    '    config.transformRequest\n' +
    '  );\n' +
    '\n' +
    "  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n" +
    "    config.headers.setContentType('application/x-www-form-urlencoded', false);\n" +
    '  }\n' +
    '\n' +
    '  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n' +
    '\n' +
    '  return adapter(config).then(function onAdapterResolution(response) {\n' +
    '    throwIfCancellationRequested(config);\n' +
    '\n' +
    '    // Transform response data\n' +
    '    response.data = transformData.call(\n' +
    '      config,\n' +
    '      config.transformResponse,\n' +
    '      response\n' +
    '    );\n' +
    '\n' +
    '    response.headers = AxiosHeaders.from(response.headers);\n' +
    '\n' +
    '    return response;\n' +
    '  }, function onAdapterRejection(reason) {\n' +
    '    if (!isCancel(reason)) {\n' +
    '      throwIfCancellationRequested(config);\n' +
    '\n' +
    '      // Transform response data\n' +
    '      if (reason && reason.response) {\n' +
    '        reason.response.data = transformData.call(\n' +
    '          config,\n' +
    '          config.transformResponse,\n' +
    '          reason.response\n' +
    '        );\n' +
    '        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return Promise.reject(reason);\n' +
    '  });\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import isAbsoluteURL from '../helpers/isAbsoluteURL.js';\n" +
    "import combineURLs from '../helpers/combineURLs.js';\n" +
    '\n' +
    '/**\n' +
    ' * Creates a new URL by combining the baseURL with the requestedURL,\n' +
    ' * only when the requestedURL is not already an absolute URL.\n' +
    ' * If the requestURL is absolute, this function returns the requestedURL untouched.\n' +
    ' *\n' +
    ' * @param {string} baseURL The base URL\n' +
    ' * @param {string} requestedURL Absolute or relative URL to combine\n' +
    ' *\n' +
    ' * @returns {string} The combined full path\n' +
    ' */\n' +
    'export default function buildFullPath(baseURL, requestedURL) {\n' +
    '  if (baseURL && !isAbsoluteURL(requestedURL)) {\n' +
    '    return combineURLs(baseURL, requestedURL);\n' +
    '  }\n' +
    '  return requestedURL;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    'export default {\n' +
    '  silentJSONParsing: true,\n' +
    '  forcedJSONParsing: true,\n' +
    '  clarifyTimeoutError: false\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from '../utils.js';\n" +
    "import toFormData from './toFormData.js';\n" +
    "import platform from '../platform/index.js';\n" +
    '\n' +
    'export default function toURLEncodedForm(data, options) {\n' +
    '  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n' +
    '    visitor: function(value, key, path, helpers) {\n' +
    '      if (platform.isNode && utils.isBuffer(value)) {\n' +
    "        this.append(key, value.toString('base64'));\n" +
    '        return false;\n' +
    '      }\n' +
    '\n' +
    '      return helpers.defaultVisitor.apply(this, arguments);\n' +
    '    }\n' +
    '  }, options));\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import {VERSION} from '../env/data.js';\n" +
    "import AxiosError from '../core/AxiosError.js';\n" +
    '\n' +
    'const validators = {};\n' +
    '\n' +
    '// eslint-disable-next-line func-names\n' +
    "['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n" +
    '  validators[type] = function validator(thing) {\n' +
    "    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n" +
    '  };\n' +
    '});\n' +
    '\n' +
    'const deprecatedWarnings = {};\n' +
    '\n' +
    '/**\n' +
    ' * Transitional option validator\n' +
    ' *\n' +
    ' * @param {function|boolean?} validator - set to false if the transitional option has been removed\n' +
    ' * @param {string?} version - deprecated version / removed since version\n' +
    ' * @param {string?} message - some message with additional info\n' +
    ' *\n' +
    ' * @returns {function}\n' +
    ' */\n' +
    'validators.transitional = function transitional(validator, version, message) {\n' +
    '  function formatMessage(opt, desc) {\n' +
    "    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n" +
    '  }\n' +
    '\n' +
    '  // eslint-disable-next-line func-names\n' +
    '  return (value, opt, opts) => {\n' +
    '    if (validator === false) {\n' +
    '      throw new AxiosError(\n' +
    "        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n" +
    '        AxiosError.ERR_DEPRECATED\n' +
    '      );\n' +
    '    }\n' +
    '\n' +
    '    if (version && !deprecatedWarnings[opt]) {\n' +
    '      deprecatedWarnings[opt] = true;\n' +
    '      // eslint-disable-next-line no-console\n' +
    '      console.warn(\n' +
    '        formatMessage(\n' +
    '          opt,\n' +
    "          ' has been deprecated since v' + version + ' and will be removed in the near future'\n" +
    '        )\n' +
    '      );\n' +
    '    }\n' +
    '\n' +
    '    return validator ? validator(value, opt, opts) : true;\n' +
    '  };\n' +
    '};\n' +
    '\n' +
    '/**\n' +
    " * Assert object's properties type\n" +
    ' *\n' +
    ' * @param {object} options\n' +
    ' * @param {object} schema\n' +
    ' * @param {boolean?} allowUnknown\n' +
    ' *\n' +
    ' * @returns {object}\n' +
    ' */\n' +
    '\n' +
    'function assertOptions(options, schema, allowUnknown) {\n' +
    "  if (typeof options !== 'object') {\n" +
    "    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n" +
    '  }\n' +
    '  const keys = Object.keys(options);\n' +
    '  let i = keys.length;\n' +
    '  while (i-- > 0) {\n' +
    '    const opt = keys[i];\n' +
    '    const validator = schema[opt];\n' +
    '    if (validator) {\n' +
    '      const value = options[opt];\n' +
    '      const result = value === undefined || validator(value, opt, options);\n' +
    '      if (result !== true) {\n' +
    "        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n" +
    '      }\n' +
    '      continue;\n' +
    '    }\n' +
    '    if (allowUnknown !== true) {\n' +
    "      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n" +
    '    }\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export default {\n' +
    '  assertOptions,\n' +
    '  validators\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "import platform from './node/index.js';\n" +
    "import * as utils from './common/utils.js';\n" +
    '\n' +
    'export default {\n' +
    '  ...utils,\n' +
    '  ...platform\n' +
    '}\n'
} [Function: logger]
____9999999____ { code: '// eslint-disable-next-line strict\nexport default null;\n' } [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    '\n' +
    '// RawAxiosHeaders whose duplicates are ignored by node\n' +
    '// c.f. https://nodejs.org/api/http.html#http_message_headers\n' +
    'const ignoreDuplicateOf = utils.toObjectSet([\n' +
    "  'age', 'authorization', 'content-length', 'content-type', 'etag',\n" +
    "  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n" +
    "  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n" +
    "  'referer', 'retry-after', 'user-agent'\n" +
    ']);\n' +
    '\n' +
    '/**\n' +
    ' * Parse headers into an object\n' +
    ' *\n' +
    ' * ```\n' +
    ' * Date: Wed, 27 Aug 2014 08:58:49 GMT\n' +
    ' * Content-Type: application/json\n' +
    ' * Connection: keep-alive\n' +
    ' * Transfer-Encoding: chunked\n' +
    ' * ```\n' +
    ' *\n' +
    ' * @param {String} rawHeaders Headers needing to be parsed\n' +
    ' *\n' +
    ' * @returns {Object} Headers parsed into an object\n' +
    ' */\n' +
    'export default rawHeaders => {\n' +
    '  const parsed = {};\n' +
    '  let key;\n' +
    '  let val;\n' +
    '  let i;\n' +
    '\n' +
    "  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n" +
    "    i = line.indexOf(':');\n" +
    '    key = line.substring(0, i).trim().toLowerCase();\n' +
    '    val = line.substring(i + 1).trim();\n' +
    '\n' +
    '    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    "    if (key === 'set-cookie') {\n" +
    '      if (parsed[key]) {\n' +
    '        parsed[key].push(val);\n' +
    '      } else {\n' +
    '        parsed[key] = [val];\n' +
    '      }\n' +
    '    } else {\n' +
    "      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n" +
    '    }\n' +
    '  });\n' +
    '\n' +
    '  return parsed;\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    "import settle from './../core/settle.js';\n" +
    "import cookies from './../helpers/cookies.js';\n" +
    "import buildURL from './../helpers/buildURL.js';\n" +
    "import buildFullPath from '../core/buildFullPath.js';\n" +
    "import isURLSameOrigin from './../helpers/isURLSameOrigin.js';\n" +
    "import transitionalDefaults from '../defaults/transitional.js';\n" +
    "import AxiosError from '../core/AxiosError.js';\n" +
    "import CanceledError from '../cancel/CanceledError.js';\n" +
    "import parseProtocol from '../helpers/parseProtocol.js';\n" +
    "import platform from '../platform/index.js';\n" +
    "import AxiosHeaders from '../core/AxiosHeaders.js';\n" +
    "import speedometer from '../helpers/speedometer.js';\n" +
    '\n' +
    'function progressEventReducer(listener, isDownloadStream) {\n' +
    '  let bytesNotified = 0;\n' +
    '  const _speedometer = speedometer(50, 250);\n' +
    '\n' +
    '  return e => {\n' +
    '    const loaded = e.loaded;\n' +
    '    const total = e.lengthComputable ? e.total : undefined;\n' +
    '    const progressBytes = loaded - bytesNotified;\n' +
    '    const rate = _speedometer(progressBytes);\n' +
    '    const inRange = loaded <= total;\n' +
    '\n' +
    '    bytesNotified = loaded;\n' +
    '\n' +
    '    const data = {\n' +
    '      loaded,\n' +
    '      total,\n' +
    '      progress: total ? (loaded / total) : undefined,\n' +
    '      bytes: progressBytes,\n' +
    '      rate: rate ? rate : undefined,\n' +
    '      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n' +
    '      event: e\n' +
    '    };\n' +
    '\n' +
    "    data[isDownloadStream ? 'download' : 'upload'] = true;\n" +
    '\n' +
    '    listener(data);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    "const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n" +
    '\n' +
    'export default isXHRAdapterSupported && function (config) {\n' +
    '  return new Promise(function dispatchXhrRequest(resolve, reject) {\n' +
    '    let requestData = config.data;\n' +
    '    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n' +
    '    let {responseType, withXSRFToken} = config;\n' +
    '    let onCanceled;\n' +
    '    function done() {\n' +
    '      if (config.cancelToken) {\n' +
    '        config.cancelToken.unsubscribe(onCanceled);\n' +
    '      }\n' +
    '\n' +
    '      if (config.signal) {\n' +
    "        config.signal.removeEventListener('abort', onCanceled);\n" +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    let contentType;\n' +
    '\n' +
    '    if (utils.isFormData(requestData)) {\n' +
    '      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n' +
    '        requestHeaders.setContentType(false); // Let the browser set it\n' +
    '      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n' +
    '        // fix semicolon duplication issue for ReactNative FormData implementation\n' +
    "        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n" +
    "        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n" +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    let request = new XMLHttpRequest();\n' +
    '\n' +
    '    // HTTP basic authentication\n' +
    '    if (config.auth) {\n' +
    "      const username = config.auth.username || '';\n" +
    "      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n" +
    "      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n" +
    '    }\n' +
    '\n' +
    '    const fullPath = buildFullPath(config.baseURL, config.url);\n' +
    '\n' +
    '    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n' +
    '\n' +
    '    // Set the request timeout in MS\n' +
    '    request.timeout = config.timeout;\n' +
    '\n' +
    '    function onloadend() {\n' +
    '      if (!request) {\n' +
    '        return;\n' +
    '      }\n' +
    '      // Prepare the response\n' +
    '      const responseHeaders = AxiosHeaders.from(\n' +
    "        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n" +
    '      );\n' +
    "      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n" +
    '        request.responseText : request.response;\n' +
    '      const response = {\n' +
    '        data: responseData,\n' +
    '        status: request.status,\n' +
    '        statusText: request.statusText,\n' +
    '        headers: responseHeaders,\n' +
    '        config,\n' +
    '        request\n' +
    '      };\n' +
    '\n' +
    '      settle(function _resolve(value) {\n' +
    '        resolve(value);\n' +
    '        done();\n' +
    '      }, function _reject(err) {\n' +
    '        reject(err);\n' +
    '        done();\n' +
    '      }, response);\n' +
    '\n' +
    '      // Clean up request\n' +
    '      request = null;\n' +
    '    }\n' +
    '\n' +
    "    if ('onloadend' in request) {\n" +
    '      // Use onloadend if available\n' +
    '      request.onloadend = onloadend;\n' +
    '    } else {\n' +
    '      // Listen for ready state to emulate onloadend\n' +
    '      request.onreadystatechange = function handleLoad() {\n' +
    '        if (!request || request.readyState !== 4) {\n' +
    '          return;\n' +
    '        }\n' +
    '\n' +
    "        // The request errored out and we didn't get a response, this will be\n" +
    '        // handled by onerror instead\n' +
    '        // With one exception: request that using file: protocol, most browsers\n' +
    "        // will return status as 0 even though it's a successful request\n" +
    "        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n" +
    '          return;\n' +
    '        }\n' +
    '        // readystate handler is calling before onerror or ontimeout handlers,\n' +
    "        // so we should call onloadend on the next 'tick'\n" +
    '        setTimeout(onloadend);\n' +
    '      };\n' +
    '    }\n' +
    '\n' +
    '    // Handle browser request cancellation (as opposed to a manual cancellation)\n' +
    '    request.onabort = function handleAbort() {\n' +
    '      if (!request) {\n' +
    '        return;\n' +
    '      }\n' +
    '\n' +
    "      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n" +
    '\n' +
    '      // Clean up request\n' +
    '      request = null;\n' +
    '    };\n' +
    '\n' +
    '    // Handle low level network errors\n' +
    '    request.onerror = function handleError() {\n' +
    '      // Real errors are hidden from us by the browser\n' +
    "      // onerror should only fire if it's a network error\n" +
    "      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n" +
    '\n' +
    '      // Clean up request\n' +
    '      request = null;\n' +
    '    };\n' +
    '\n' +
    '    // Handle timeout\n' +
    '    request.ontimeout = function handleTimeout() {\n' +
    "      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n" +
    '      const transitional = config.transitional || transitionalDefaults;\n' +
    '      if (config.timeoutErrorMessage) {\n' +
    '        timeoutErrorMessage = config.timeoutErrorMessage;\n' +
    '      }\n' +
    '      reject(new AxiosError(\n' +
    '        timeoutErrorMessage,\n' +
    '        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n' +
    '        config,\n' +
    '        request));\n' +
    '\n' +
    '      // Clean up request\n' +
    '      request = null;\n' +
    '    };\n' +
    '\n' +
    '    // Add xsrf header\n' +
    '    // This is only done if running in a standard browser environment.\n' +
    "    // Specifically not if we're in a web worker, or react-native.\n" +
    '    if(platform.hasStandardBrowserEnv) {\n' +
    '      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n' +
    '\n' +
    '      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n' +
    '        // Add xsrf header\n' +
    '        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n' +
    '\n' +
    '        if (xsrfValue) {\n' +
    '          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    // Remove Content-Type if data is undefined\n' +
    '    requestData === undefined && requestHeaders.setContentType(null);\n' +
    '\n' +
    '    // Add headers to the request\n' +
    "    if ('setRequestHeader' in request) {\n" +
    '      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n' +
    '        request.setRequestHeader(key, val);\n' +
    '      });\n' +
    '    }\n' +
    '\n' +
    '    // Add withCredentials to request if needed\n' +
    '    if (!utils.isUndefined(config.withCredentials)) {\n' +
    '      request.withCredentials = !!config.withCredentials;\n' +
    '    }\n' +
    '\n' +
    '    // Add responseType to request if needed\n' +
    "    if (responseType && responseType !== 'json') {\n" +
    '      request.responseType = config.responseType;\n' +
    '    }\n' +
    '\n' +
    '    // Handle progress if needed\n' +
    "    if (typeof config.onDownloadProgress === 'function') {\n" +
    "      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n" +
    '    }\n' +
    '\n' +
    '    // Not all browsers support upload events\n' +
    "    if (typeof config.onUploadProgress === 'function' && request.upload) {\n" +
    "      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n" +
    '    }\n' +
    '\n' +
    '    if (config.cancelToken || config.signal) {\n' +
    '      // Handle cancellation\n' +
    '      // eslint-disable-next-line func-names\n' +
    '      onCanceled = cancel => {\n' +
    '        if (!request) {\n' +
    '          return;\n' +
    '        }\n' +
    '        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n' +
    '        request.abort();\n' +
    '        request = null;\n' +
    '      };\n' +
    '\n' +
    '      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n' +
    '      if (config.signal) {\n' +
    "        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n" +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    const protocol = parseProtocol(fullPath);\n' +
    '\n' +
    '    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n' +
    "      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n" +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '\n' +
    '    // Send the request\n' +
    '    request.send(requestData || null);\n' +
    '  });\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var js_cookie = {exports: {}}; export {js_cookie as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "'use strict'\n" +
    '\n' +
    'exports.byteLength = byteLength\n' +
    'exports.toByteArray = toByteArray\n' +
    'exports.fromByteArray = fromByteArray\n' +
    '\n' +
    'var lookup = []\n' +
    'var revLookup = []\n' +
    "var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n" +
    '\n' +
    "var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n" +
    'for (var i = 0, len = code.length; i < len; ++i) {\n' +
    '  lookup[i] = code[i]\n' +
    '  revLookup[code.charCodeAt(i)] = i\n' +
    '}\n' +
    '\n' +
    '// Support decoding URL-safe base64 strings, as Node.js does.\n' +
    '// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n' +
    "revLookup['-'.charCodeAt(0)] = 62\n" +
    "revLookup['_'.charCodeAt(0)] = 63\n" +
    '\n' +
    'function getLens (b64) {\n' +
    '  var len = b64.length\n' +
    '\n' +
    '  if (len % 4 > 0) {\n' +
    "    throw new Error('Invalid string. Length must be a multiple of 4')\n" +
    '  }\n' +
    '\n' +
    '  // Trim off extra bytes after placeholder bytes are found\n' +
    '  // See: https://github.com/beatgammit/base64-js/issues/42\n' +
    "  var validLen = b64.indexOf('=')\n" +
    '  if (validLen === -1) validLen = len\n' +
    '\n' +
    '  var placeHoldersLen = validLen === len\n' +
    '    ? 0\n' +
    '    : 4 - (validLen % 4)\n' +
    '\n' +
    '  return [validLen, placeHoldersLen]\n' +
    '}\n' +
    '\n' +
    '// base64 is 4/3 + up to two characters of the original data\n' +
    'function byteLength (b64) {\n' +
    '  var lens = getLens(b64)\n' +
    '  var validLen = lens[0]\n' +
    '  var placeHoldersLen = lens[1]\n' +
    '  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n' +
    '}\n' +
    '\n' +
    'function _byteLength (b64, validLen, placeHoldersLen) {\n' +
    '  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n' +
    '}\n' +
    '\n' +
    'function toByteArray (b64) {\n' +
    '  var tmp\n' +
    '  var lens = getLens(b64)\n' +
    '  var validLen = lens[0]\n' +
    '  var placeHoldersLen = lens[1]\n' +
    '\n' +
    '  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n' +
    '\n' +
    '  var curByte = 0\n' +
    '\n' +
    '  // if there are placeholders, only get up to the last complete 4 chars\n' +
    '  var len = placeHoldersLen > 0\n' +
    '    ? validLen - 4\n' +
    '    : validLen\n' +
    '\n' +
    '  var i\n' +
    '  for (i = 0; i < len; i += 4) {\n' +
    '    tmp =\n' +
    '      (revLookup[b64.charCodeAt(i)] << 18) |\n' +
    '      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n' +
    '      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n' +
    '      revLookup[b64.charCodeAt(i + 3)]\n' +
    '    arr[curByte++] = (tmp >> 16) & 0xFF\n' +
    '    arr[curByte++] = (tmp >> 8) & 0xFF\n' +
    '    arr[curByte++] = tmp & 0xFF\n' +
    '  }\n' +
    '\n' +
    '  if (placeHoldersLen === 2) {\n' +
    '    tmp =\n' +
    '      (revLookup[b64.charCodeAt(i)] << 2) |\n' +
    '      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n' +
    '    arr[curByte++] = tmp & 0xFF\n' +
    '  }\n' +
    '\n' +
    '  if (placeHoldersLen === 1) {\n' +
    '    tmp =\n' +
    '      (revLookup[b64.charCodeAt(i)] << 10) |\n' +
    '      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n' +
    '      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n' +
    '    arr[curByte++] = (tmp >> 8) & 0xFF\n' +
    '    arr[curByte++] = tmp & 0xFF\n' +
    '  }\n' +
    '\n' +
    '  return arr\n' +
    '}\n' +
    '\n' +
    'function tripletToBase64 (num) {\n' +
    '  return lookup[num >> 18 & 0x3F] +\n' +
    '    lookup[num >> 12 & 0x3F] +\n' +
    '    lookup[num >> 6 & 0x3F] +\n' +
    '    lookup[num & 0x3F]\n' +
    '}\n' +
    '\n' +
    'function encodeChunk (uint8, start, end) {\n' +
    '  var tmp\n' +
    '  var output = []\n' +
    '  for (var i = start; i < end; i += 3) {\n' +
    '    tmp =\n' +
    '      ((uint8[i] << 16) & 0xFF0000) +\n' +
    '      ((uint8[i + 1] << 8) & 0xFF00) +\n' +
    '      (uint8[i + 2] & 0xFF)\n' +
    '    output.push(tripletToBase64(tmp))\n' +
    '  }\n' +
    "  return output.join('')\n" +
    '}\n' +
    '\n' +
    'function fromByteArray (uint8) {\n' +
    '  var tmp\n' +
    '  var len = uint8.length\n' +
    '  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n' +
    '  var parts = []\n' +
    '  var maxChunkLength = 16383 // must be multiple of 3\n' +
    '\n' +
    "  // go through the array every three bytes, we'll deal with trailing stuff later\n" +
    '  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n' +
    '    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n' +
    '  }\n' +
    '\n' +
    '  // pad the end with zeros, but make sure to not forget the extra bytes\n' +
    '  if (extraBytes === 1) {\n' +
    '    tmp = uint8[len - 1]\n' +
    '    parts.push(\n' +
    '      lookup[tmp >> 2] +\n' +
    '      lookup[(tmp << 4) & 0x3F] +\n' +
    "      '=='\n" +
    '    )\n' +
    '  } else if (extraBytes === 2) {\n' +
    '    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n' +
    '    parts.push(\n' +
    '      lookup[tmp >> 10] +\n' +
    '      lookup[(tmp >> 4) & 0x3F] +\n' +
    '      lookup[(tmp << 2) & 0x3F] +\n' +
    "      '='\n" +
    '    )\n' +
    '  }\n' +
    '\n' +
    "  return parts.join('')\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n' +
    'exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n' +
    '  var e, m\n' +
    '  var eLen = (nBytes * 8) - mLen - 1\n' +
    '  var eMax = (1 << eLen) - 1\n' +
    '  var eBias = eMax >> 1\n' +
    '  var nBits = -7\n' +
    '  var i = isLE ? (nBytes - 1) : 0\n' +
    '  var d = isLE ? -1 : 1\n' +
    '  var s = buffer[offset + i]\n' +
    '\n' +
    '  i += d\n' +
    '\n' +
    '  e = s & ((1 << (-nBits)) - 1)\n' +
    '  s >>= (-nBits)\n' +
    '  nBits += eLen\n' +
    '  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n' +
    '\n' +
    '  m = e & ((1 << (-nBits)) - 1)\n' +
    '  e >>= (-nBits)\n' +
    '  nBits += mLen\n' +
    '  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n' +
    '\n' +
    '  if (e === 0) {\n' +
    '    e = 1 - eBias\n' +
    '  } else if (e === eMax) {\n' +
    '    return m ? NaN : ((s ? -1 : 1) * Infinity)\n' +
    '  } else {\n' +
    '    m = m + Math.pow(2, mLen)\n' +
    '    e = e - eBias\n' +
    '  }\n' +
    '  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n' +
    '}\n' +
    '\n' +
    'exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n' +
    '  var e, m, c\n' +
    '  var eLen = (nBytes * 8) - mLen - 1\n' +
    '  var eMax = (1 << eLen) - 1\n' +
    '  var eBias = eMax >> 1\n' +
    '  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n' +
    '  var i = isLE ? 0 : (nBytes - 1)\n' +
    '  var d = isLE ? 1 : -1\n' +
    '  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n' +
    '\n' +
    '  value = Math.abs(value)\n' +
    '\n' +
    '  if (isNaN(value) || value === Infinity) {\n' +
    '    m = isNaN(value) ? 1 : 0\n' +
    '    e = eMax\n' +
    '  } else {\n' +
    '    e = Math.floor(Math.log(value) / Math.LN2)\n' +
    '    if (value * (c = Math.pow(2, -e)) < 1) {\n' +
    '      e--\n' +
    '      c *= 2\n' +
    '    }\n' +
    '    if (e + eBias >= 1) {\n' +
    '      value += rt / c\n' +
    '    } else {\n' +
    '      value += rt * Math.pow(2, 1 - eBias)\n' +
    '    }\n' +
    '    if (value * c >= 2) {\n' +
    '      e++\n' +
    '      c /= 2\n' +
    '    }\n' +
    '\n' +
    '    if (e + eBias >= eMax) {\n' +
    '      m = 0\n' +
    '      e = eMax\n' +
    '    } else if (e + eBias >= 1) {\n' +
    '      m = ((value * c) - 1) * Math.pow(2, mLen)\n' +
    '      e = e + eBias\n' +
    '    } else {\n' +
    '      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n' +
    '      e = 0\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n' +
    '\n' +
    '  e = (e << mLen) | m\n' +
    '  eLen += mLen\n' +
    '  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n' +
    '\n' +
    '  buffer[offset + i - d] |= s * 128\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var toString = {}.toString;\n' +
    '\n' +
    'module.exports = Array.isArray || function (arr) {\n' +
    "  return toString.call(arr) == '[object Array]';\n" +
    '};\n'
} [Function: logger]
____9999999____ {
  code: '/*! *****************************************************************************\r\n' +
    'Copyright (c) Microsoft Corporation.\r\n' +
    '\r\n' +
    'Permission to use, copy, modify, and/or distribute this software for any\r\n' +
    'purpose with or without fee is hereby granted.\r\n' +
    '\r\n' +
    'THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n' +
    'REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n' +
    'AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n' +
    'INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n' +
    'LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n' +
    'OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n' +
    'PERFORMANCE OF THIS SOFTWARE.\r\n' +
    '***************************************************************************** */\r\n' +
    '/* global Reflect, Promise */\r\n' +
    '\r\n' +
    'var extendStatics = function(d, b) {\r\n' +
    '    extendStatics = Object.setPrototypeOf ||\r\n' +
    '        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n' +
    '        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n' +
    '    return extendStatics(d, b);\r\n' +
    '};\r\n' +
    '\r\n' +
    'export function __extends(d, b) {\r\n' +
    '    extendStatics(d, b);\r\n' +
    '    function __() { this.constructor = d; }\r\n' +
    '    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n' +
    '}\r\n' +
    '\r\n' +
    'export var __assign = function() {\r\n' +
    '    __assign = Object.assign || function __assign(t) {\r\n' +
    '        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n' +
    '            s = arguments[i];\r\n' +
    '            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n' +
    '        }\r\n' +
    '        return t;\r\n' +
    '    }\r\n' +
    '    return __assign.apply(this, arguments);\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __rest(s, e) {\r\n' +
    '    var t = {};\r\n' +
    '    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n' +
    '        t[p] = s[p];\r\n' +
    '    if (s != null && typeof Object.getOwnPropertySymbols === "function")\r\n' +
    '        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n' +
    '            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n' +
    '                t[p[i]] = s[p[i]];\r\n' +
    '        }\r\n' +
    '    return t;\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __decorate(decorators, target, key, desc) {\r\n' +
    '    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n' +
    '    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\r\n' +
    '    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n' +
    '    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __param(paramIndex, decorator) {\r\n' +
    '    return function (target, key) { decorator(target, key, paramIndex); }\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __metadata(metadataKey, metadataValue) {\r\n' +
    '    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __awaiter(thisArg, _arguments, P, generator) {\r\n' +
    '    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n' +
    '    return new (P || (P = Promise))(function (resolve, reject) {\r\n' +
    '        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n' +
    '        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n' +
    '        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n' +
    '        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n' +
    '    });\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __generator(thisArg, body) {\r\n' +
    '    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n' +
    '    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\r\n' +
    '    function verb(n) { return function (v) { return step([n, v]); }; }\r\n' +
    '    function step(op) {\r\n' +
    '        if (f) throw new TypeError("Generator is already executing.");\r\n' +
    '        while (_) try {\r\n' +
    '            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n' +
    '            if (y = 0, t) op = [op[0] & 2, t.value];\r\n' +
    '            switch (op[0]) {\r\n' +
    '                case 0: case 1: t = op; break;\r\n' +
    '                case 4: _.label++; return { value: op[1], done: false };\r\n' +
    '                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n' +
    '                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n' +
    '                default:\r\n' +
    '                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n' +
    '                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n' +
    '                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n' +
    '                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n' +
    '                    if (t[2]) _.ops.pop();\r\n' +
    '                    _.trys.pop(); continue;\r\n' +
    '            }\r\n' +
    '            op = body.call(thisArg, _);\r\n' +
    '        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n' +
    '        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n' +
    '    }\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __createBinding(o, m, k, k2) {\r\n' +
    '    if (k2 === undefined) k2 = k;\r\n' +
    '    o[k2] = m[k];\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __exportStar(m, exports) {\r\n' +
    '    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __values(o) {\r\n' +
    '    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\r\n' +
    '    if (m) return m.call(o);\r\n' +
    '    if (o && typeof o.length === "number") return {\r\n' +
    '        next: function () {\r\n' +
    '            if (o && i >= o.length) o = void 0;\r\n' +
    '            return { value: o && o[i++], done: !o };\r\n' +
    '        }\r\n' +
    '    };\r\n' +
    '    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __read(o, n) {\r\n' +
    '    var m = typeof Symbol === "function" && o[Symbol.iterator];\r\n' +
    '    if (!m) return o;\r\n' +
    '    var i = m.call(o), r, ar = [], e;\r\n' +
    '    try {\r\n' +
    '        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n' +
    '    }\r\n' +
    '    catch (error) { e = { error: error }; }\r\n' +
    '    finally {\r\n' +
    '        try {\r\n' +
    '            if (r && !r.done && (m = i["return"])) m.call(i);\r\n' +
    '        }\r\n' +
    '        finally { if (e) throw e.error; }\r\n' +
    '    }\r\n' +
    '    return ar;\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __spread() {\r\n' +
    '    for (var ar = [], i = 0; i < arguments.length; i++)\r\n' +
    '        ar = ar.concat(__read(arguments[i]));\r\n' +
    '    return ar;\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __spreadArrays() {\r\n' +
    '    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n' +
    '    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n' +
    '        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n' +
    '            r[k] = a[j];\r\n' +
    '    return r;\r\n' +
    '};\r\n' +
    '\r\n' +
    'export function __await(v) {\r\n' +
    '    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __asyncGenerator(thisArg, _arguments, generator) {\r\n' +
    '    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n' +
    '    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n' +
    '    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n' +
    '    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n' +
    '    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n' +
    '    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n' +
    '    function fulfill(value) { resume("next", value); }\r\n' +
    '    function reject(value) { resume("throw", value); }\r\n' +
    '    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __asyncDelegator(o) {\r\n' +
    '    var i, p;\r\n' +
    '    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;\r\n' +
    '    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __asyncValues(o) {\r\n' +
    '    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");\r\n' +
    '    var m = o[Symbol.asyncIterator], i;\r\n' +
    '    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n' +
    '    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n' +
    '    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __makeTemplateObject(cooked, raw) {\r\n' +
    '    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }\r\n' +
    '    return cooked;\r\n' +
    '};\r\n' +
    '\r\n' +
    'export function __importStar(mod) {\r\n' +
    '    if (mod && mod.__esModule) return mod;\r\n' +
    '    var result = {};\r\n' +
    '    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n' +
    '    result.default = mod;\r\n' +
    '    return result;\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __importDefault(mod) {\r\n' +
    '    return (mod && mod.__esModule) ? mod : { default: mod };\r\n' +
    '}\r\n' +
    '\r\n' +
    'export function __classPrivateFieldGet(receiver, privateMap) {\r\n' +
    '    if (!privateMap.has(receiver)) {\r\n' +
    '        throw new TypeError("attempted to get private field on non-instance");\r\n' +
    '    }\r\n' +
    '    return privateMap.get'... 274 more characters
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.Sha256 = void 0;\n' +
    'var tslib_1 = require("tslib");\n' +
    'var constants_1 = require("./constants");\n' +
    'var RawSha256_1 = require("./RawSha256");\n' +
    'var util_1 = require("@aws-crypto/util");\n' +
    'var Sha256 = /** @class */ (function () {\n' +
    '    function Sha256(secret) {\n' +
    '        this.hash = new RawSha256_1.RawSha256();\n' +
    '        if (secret) {\n' +
    '            this.outer = new RawSha256_1.RawSha256();\n' +
    '            var inner = bufferFromSecret(secret);\n' +
    '            var outer = new Uint8Array(constants_1.BLOCK_SIZE);\n' +
    '            outer.set(inner);\n' +
    '            for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n' +
    '                inner[i] ^= 0x36;\n' +
    '                outer[i] ^= 0x5c;\n' +
    '            }\n' +
    '            this.hash.update(inner);\n' +
    '            this.outer.update(outer);\n' +
    '            // overwrite the copied key in memory\n' +
    '            for (var i = 0; i < inner.byteLength; i++) {\n' +
    '                inner[i] = 0;\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '    Sha256.prototype.update = function (toHash) {\n' +
    '        if ((0, util_1.isEmptyData)(toHash) || this.error) {\n' +
    '            return;\n' +
    '        }\n' +
    '        try {\n' +
    '            this.hash.update((0, util_1.convertToBuffer)(toHash));\n' +
    '        }\n' +
    '        catch (e) {\n' +
    '            this.error = e;\n' +
    '        }\n' +
    '    };\n' +
    '    /* This synchronous method keeps compatibility\n' +
    '     * with the v2 aws-sdk.\n' +
    '     */\n' +
    '    Sha256.prototype.digestSync = function () {\n' +
    '        if (this.error) {\n' +
    '            throw this.error;\n' +
    '        }\n' +
    '        if (this.outer) {\n' +
    '            if (!this.outer.finished) {\n' +
    '                this.outer.update(this.hash.digest());\n' +
    '            }\n' +
    '            return this.outer.digest();\n' +
    '        }\n' +
    '        return this.hash.digest();\n' +
    '    };\n' +
    '    /* The underlying digest method here is synchronous.\n' +
    '     * To keep the same interface with the other hash functions\n' +
    '     * the default is to expose this as an async method.\n' +
    '     * However, it can sometimes be useful to have a sync method.\n' +
    '     */\n' +
    '    Sha256.prototype.digest = function () {\n' +
    '        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n' +
    '            return (0, tslib_1.__generator)(this, function (_a) {\n' +
    '                return [2 /*return*/, this.digestSync()];\n' +
    '            });\n' +
    '        });\n' +
    '    };\n' +
    '    return Sha256;\n' +
    '}());\n' +
    'exports.Sha256 = Sha256;\n' +
    'function bufferFromSecret(secret) {\n' +
    '    var input = (0, util_1.convertToBuffer)(secret);\n' +
    '    if (input.byteLength > constants_1.BLOCK_SIZE) {\n' +
    '        var bufferHash = new RawSha256_1.RawSha256();\n' +
    '        bufferHash.update(input);\n' +
    '        input = bufferHash.digest();\n' +
    '    }\n' +
    '    var buffer = new Uint8Array(constants_1.BLOCK_SIZE);\n' +
    '    buffer.set(input);\n' +
    '    return buffer;\n' +
    '}\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNTaGEyNTYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvanNTaGEyNTYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHlDQUF5QztBQUN6Qyx5Q0FBd0M7QUFFeEMseUNBQWdFO0FBRWhFO0lBS0UsZ0JBQVksTUFBbUI7UUFKZCxTQUFJLEdBQUcsSUFBSSxxQkFBUyxFQUFFLENBQUM7UUFLdEMsSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUkscUJBQVMsRUFBRSxDQUFDO1lBQzdCLElBQU0sS0FBSyxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3ZDLElBQU0sS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLHNCQUFVLENBQUMsQ0FBQztZQUN6QyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBRWpCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxzQkFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNuQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO2dCQUNqQixLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO2FBQ2xCO1lBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFekIscUNBQXFDO1lBQ3JDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN6QyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ2Q7U0FDRjtJQUNILENBQUM7SUFFRCx1QkFBTSxHQUFOLFVBQU8sTUFBa0I7UUFDdkIsSUFBSSxJQUFBLGtCQUFXLEVBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNyQyxPQUFPO1NBQ1I7UUFFRCxJQUFJO1lBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBQSxzQkFBZSxFQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDM0M7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsMkJBQVUsR0FBVjtRQUNFLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNsQjtRQUVELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2FBQ3ZDO1lBRUQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQzVCO1FBRUQsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0csdUJBQU0sR0FBWjs7O2dCQUNFLHNCQUFPLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBQzs7O0tBQzFCO0lBQ0gsYUFBQztBQUFELENBQUMsQUFsRUQsSUFrRUM7QUFsRVksd0JBQU07QUFvRW5CLFNBQVMsZ0JBQWdCLENBQUMsTUFBa0I7SUFDMUMsSUFBSSxLQUFLLEdBQUcsSUFBQSxzQkFBZSxFQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXBDLElBQUksS0FBSyxDQUFDLFVBQVUsR0FBRyxzQkFBVSxFQUFFO1FBQ2pDLElBQU0sVUFBVSxHQUFHLElBQUkscUJBQVMsRUFBRSxDQUFDO1FBQ25DLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekIsS0FBSyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztLQUM3QjtJQUVELElBQU0sTUFBTSxHQUFHLElBQUksVUFBVSxDQUFDLHNCQUFVLENBQUMsQ0FBQztJQUMxQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xCLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCTE9DS19TSVpFIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBSYXdTaGEyNTYgfSBmcm9tIFwiLi9SYXdTaGEyNTZcIjtcbmltcG9ydCB7IEhhc2gsIFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IGlzRW1wdHlEYXRhLCBjb252ZXJ0VG9CdWZmZXIgfSBmcm9tIFwiQGF3cy1jcnlwdG8vdXRpbFwiO1xuXG5leHBvcnQgY2xhc3MgU2hhMjU2IGltcGxlbWVudHMgSGFzaCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgaGFzaCA9IG5ldyBSYXdTaGEyNTYoKTtcbiAgcHJpdmF0ZSByZWFkb25seSBvdXRlcj86IFJhd1NoYTI1NjtcbiAgcHJpdmF0ZSBlcnJvcjogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHNlY3JldD86IFNvdXJjZURhdGEpIHtcbiAgICBpZiAoc2VjcmV0KSB7XG4gICAgICB0aGlzLm91dGVyID0gbmV3IFJhd1NoYTI1NigpO1xuICAgICAgY29uc3QgaW5uZXIgPSBidWZmZXJGcm9tU2VjcmV0KHNlY3JldCk7XG4gICAgICBjb25zdCBvdXRlciA9IG5ldyBVaW50OEFycmF5KEJMT0NLX1NJWkUpO1xuICAgICAgb3V0ZXIuc2V0KGlubmVyKTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBCTE9DS19TSVpFOyBpKyspIHtcbiAgICAgICAgaW5uZXJbaV0gXj0gMHgzNjtcbiAgICAgICAgb3V0ZXJbaV0gXj0gMHg1YztcbiAgICAgIH1cblxuICAgICAgdGhpcy5oYXNoLnVwZGF0ZShpbm5lcik7XG4gICAgICB0aGlzLm91dGVyLnVwZGF0ZShvdXRlcik7XG5cbiAgICAgIC8vIG92ZXJ3cml0ZSB0aGUgY29waWVkIGtleSBpbiBtZW1vcnlcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5uZXIuYnl0ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlubmVyW2ldID0gMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1cGRhdGUodG9IYXNoOiBTb3VyY2VEYXRhKTogdm9pZCB7XG4gICAgaWYgKGlzRW1wdHlEYXRhKHRvSGFzaCkgfHwgdGhpcy5lcnJvcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICB0aGlzLmhhc2gudXBkYXRlKGNvbnZlcnRUb0J1ZmZlcih0b0hhc2gpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmVycm9yID0gZTtcbiAgICB9XG4gIH1cblxuICAvKiBUaGlzIHN5bmNocm9ub3VzIG1ldGhvZCBrZWVwcyBjb21wYXRpYmlsaXR5XG4gICAqIHdpdGggdGhlIHYyIGF3cy1zZGsuXG4gICAqL1xuICBkaWdlc3RTeW5jKCk6IFVpbnQ4QXJyYXkge1xuICAgIGlmICh0aGlzLmVycm9yKSB7XG4gICAgICB0aHJvdyB0aGlzLmVycm9yO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm91dGVyKSB7XG4gICAgICBpZiAoIXRoaXMub3V0ZXIuZmluaXNoZWQpIHtcbiAgICAgICAgdGhpcy5vdXRlci51cGRhdGUodGhpcy5oYXNoLmRpZ2VzdCgpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMub3V0ZXIuZGlnZXN0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuaGFzaC5kaWdlc3QoKTtcbiAgfVxuXG4gIC8qIFRoZSB1bmRlcmx5aW5nIGRpZ2VzdCBtZXRob2QgaGVyZSBpcyBzeW5jaHJvbm91cy5cbiAgICogVG8ga2VlcCB0aGUgc2FtZSBpbnRlcmZhY2Ugd2l0aCB0aGUgb3RoZXIgaGFzaCBmdW5jdGlvbnNcbiAgICogdGhlIGRlZmF1bHQgaXMgdG8gZXhwb3NlIHRoaXMgYXMgYW4gYXN5bmMgbWV0aG9kLlxuICAgKiBIb3dldmVyLCBpdCBjYW4gc29tZXRpbWVzIGJlIHVzZWZ1bCB0byBoYXZlIGEgc3luYyBtZXRob2QuXG4gICAqL1xuICBhc3luYyBkaWdlc3QoKTogUHJvbWlzZTxVaW50OEFycmF5PiB7XG4gICAgcmV0dXJuIHRoaXMuZGlnZXN0U3luYygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGJ1ZmZlckZyb21TZWNyZXQoc2VjcmV0OiBTb3VyY2VEYXRhKTogVWludDhBcnJheSB7XG4gIGxldCBpbnB1dCA9IGNvbnZlcnRUb0J1ZmZlcihzZWNyZXQpO1xuXG4gIGlmIChpbnB1dC5ieXRlTGVuZ3RoID4gQkxPQ0tfU0laRSkge1xuICAgIGNvbnN0IGJ1ZmZlckhhc2ggPSBuZXcgUmF3U2hhMjU2KCk7XG4gICAgYnVmZmVySGFzaC51cGRhdGUoaW5wdXQpO1xuICAgIGlucHV0ID0gYnVmZmVySGFzaC5kaWdlc3QoKTtcbiAgfVxuXG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KEJMT0NLX1NJWkUpO1xuICBidWZmZXIuc2V0KGlucHV0KTtcbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Removes all key-value entries from the list cache.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name clear\n' +
    ' * @memberOf ListCache\n' +
    ' */\n' +
    'function listCacheClear() {\n' +
    '  this.__data__ = [];\n' +
    '  this.size = 0;\n' +
    '}\n' +
    '\n' +
    'module.exports = listCacheClear;\n'
} [Function: logger]
____9999999____ {
  code: "var assocIndexOf = require('./_assocIndexOf');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var arrayProto = Array.prototype;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var splice = arrayProto.splice;\n' +
    '\n' +
    '/**\n' +
    ' * Removes `key` and its value from the list cache.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name delete\n' +
    ' * @memberOf ListCache\n' +
    ' * @param {string} key The key of the value to remove.\n' +
    ' * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n' +
    ' */\n' +
    'function listCacheDelete(key) {\n' +
    '  var data = this.__data__,\n' +
    '      index = assocIndexOf(data, key);\n' +
    '\n' +
    '  if (index < 0) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var lastIndex = data.length - 1;\n' +
    '  if (index == lastIndex) {\n' +
    '    data.pop();\n' +
    '  } else {\n' +
    '    splice.call(data, index, 1);\n' +
    '  }\n' +
    '  --this.size;\n' +
    '  return true;\n' +
    '}\n' +
    '\n' +
    'module.exports = listCacheDelete;\n'
} [Function: logger]
____9999999____ {
  code: "var assocIndexOf = require('./_assocIndexOf');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the list cache value for `key`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name get\n' +
    ' * @memberOf ListCache\n' +
    ' * @param {string} key The key of the value to get.\n' +
    ' * @returns {*} Returns the entry value.\n' +
    ' */\n' +
    'function listCacheGet(key) {\n' +
    '  var data = this.__data__,\n' +
    '      index = assocIndexOf(data, key);\n' +
    '\n' +
    '  return index < 0 ? undefined : data[index][1];\n' +
    '}\n' +
    '\n' +
    'module.exports = listCacheGet;\n'
} [Function: logger]
____9999999____ {
  code: "var assocIndexOf = require('./_assocIndexOf');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if a list cache value for `key` exists.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name has\n' +
    ' * @memberOf ListCache\n' +
    ' * @param {string} key The key of the entry to check.\n' +
    ' * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n' +
    ' */\n' +
    'function listCacheHas(key) {\n' +
    '  return assocIndexOf(this.__data__, key) > -1;\n' +
    '}\n' +
    '\n' +
    'module.exports = listCacheHas;\n'
} [Function: logger]
____9999999____ {
  code: "var assocIndexOf = require('./_assocIndexOf');\n" +
    '\n' +
    '/**\n' +
    ' * Sets the list cache `key` to `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name set\n' +
    ' * @memberOf ListCache\n' +
    ' * @param {string} key The key of the value to set.\n' +
    ' * @param {*} value The value to set.\n' +
    ' * @returns {Object} Returns the list cache instance.\n' +
    ' */\n' +
    'function listCacheSet(key, value) {\n' +
    '  var data = this.__data__,\n' +
    '      index = assocIndexOf(data, key);\n' +
    '\n' +
    '  if (index < 0) {\n' +
    '    ++this.size;\n' +
    '    data.push([key, value]);\n' +
    '  } else {\n' +
    '    data[index][1] = value;\n' +
    '  }\n' +
    '  return this;\n' +
    '}\n' +
    '\n' +
    'module.exports = listCacheSet;\n'
} [Function: logger]
____9999999____ { code: "// generated by genversion\nexport var version = '5.0.4';" } [Function: logger]
____9999999____ {
  code: "var mapCacheClear = require('./_mapCacheClear'),\n" +
    "    mapCacheDelete = require('./_mapCacheDelete'),\n" +
    "    mapCacheGet = require('./_mapCacheGet'),\n" +
    "    mapCacheHas = require('./_mapCacheHas'),\n" +
    "    mapCacheSet = require('./_mapCacheSet');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a map cache object to store key-value pairs.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @constructor\n' +
    ' * @param {Array} [entries] The key-value pairs to cache.\n' +
    ' */\n' +
    'function MapCache(entries) {\n' +
    '  var index = -1,\n' +
    '      length = entries == null ? 0 : entries.length;\n' +
    '\n' +
    '  this.clear();\n' +
    '  while (++index < length) {\n' +
    '    var entry = entries[index];\n' +
    '    this.set(entry[0], entry[1]);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '// Add methods to `MapCache`.\n' +
    'MapCache.prototype.clear = mapCacheClear;\n' +
    "MapCache.prototype['delete'] = mapCacheDelete;\n" +
    'MapCache.prototype.get = mapCacheGet;\n' +
    'MapCache.prototype.has = mapCacheHas;\n' +
    'MapCache.prototype.set = mapCacheSet;\n' +
    '\n' +
    'module.exports = MapCache;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to stand-in for `undefined` hash values. */\n' +
    "var HASH_UNDEFINED = '__lodash_hash_undefined__';\n" +
    '\n' +
    '/**\n' +
    ' * Adds `value` to the array cache.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name add\n' +
    ' * @memberOf SetCache\n' +
    ' * @alias push\n' +
    ' * @param {*} value The value to cache.\n' +
    ' * @returns {Object} Returns the cache instance.\n' +
    ' */\n' +
    'function setCacheAdd(value) {\n' +
    '  this.__data__.set(value, HASH_UNDEFINED);\n' +
    '  return this;\n' +
    '}\n' +
    '\n' +
    'module.exports = setCacheAdd;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if `value` is in the array cache.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name has\n' +
    ' * @memberOf SetCache\n' +
    ' * @param {*} value The value to search for.\n' +
    ' * @returns {number} Returns `true` if `value` is found, else `false`.\n' +
    ' */\n' +
    'function setCacheHas(value) {\n' +
    '  return this.__data__.has(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = setCacheHas;\n'
} [Function: logger]
____9999999____ {
  code: "module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n"
} [Function: logger]
____9999999____ {
  code: "var arrayFilter = require('./_arrayFilter'),\n" +
    "    stubArray = require('./stubArray');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n' +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeGetSymbols = Object.getOwnPropertySymbols;\n' +
    '\n' +
    '/**\n' +
    ' * Creates an array of the own enumerable symbols of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of symbols.\n' +
    ' */\n' +
    'var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n' +
    '  if (object == null) {\n' +
    '    return [];\n' +
    '  }\n' +
    '  object = Object(object);\n' +
    '  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n' +
    '    return propertyIsEnumerable.call(object, symbol);\n' +
    '  });\n' +
    '};\n' +
    '\n' +
    'module.exports = getSymbols;\n'
} [Function: logger]
____9999999____ {
  code: "var arrayLikeKeys = require('./_arrayLikeKeys'),\n" +
    "    baseKeys = require('./_baseKeys'),\n" +
    "    isArrayLike = require('./isArrayLike');\n" +
    '\n' +
    '/**\n' +
    ' * Creates an array of the own enumerable property names of `object`.\n' +
    ' *\n' +
    ' * **Note:** Non-object values are coerced to objects. See the\n' +
    ' * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n' +
    ' * for more details.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @since 0.1.0\n' +
    ' * @memberOf _\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * function Foo() {\n' +
    ' *   this.a = 1;\n' +
    ' *   this.b = 2;\n' +
    ' * }\n' +
    ' *\n' +
    ' * Foo.prototype.c = 3;\n' +
    ' *\n' +
    ' * _.keys(new Foo);\n' +
    " * // => ['a', 'b'] (iteration order is not guaranteed)\n" +
    ' *\n' +
    " * _.keys('hi');\n" +
    " * // => ['0', '1']\n" +
    ' */\n' +
    'function keys(object) {\n' +
    '  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n' +
    '}\n' +
    '\n' +
    'module.exports = keys;\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsNative = require('./_baseIsNative'),\n" +
    "    getValue = require('./_getValue');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the native function at `key` of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {string} key The key of the method to get.\n' +
    " * @returns {*} Returns the function if it's native, else `undefined`.\n" +
    ' */\n' +
    'function getNative(object, key) {\n' +
    '  var value = getValue(object, key);\n' +
    '  return baseIsNative(value) ? value : undefined;\n' +
    '}\n' +
    '\n' +
    'module.exports = getNative;\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'function bytesToBase64(bytes) {\n' +
    "    const base64Str = Array.from(bytes, x => String.fromCodePoint(x)).join('');\n" +
    '    return btoa(base64Str);\n' +
    '}\n' +
    'function utf8Encode(input) {\n' +
    '    return new TextEncoder().encode(input);\n' +
    '}\n' +
    'function toBase64(input) {\n' +
    "    if (typeof input === 'string') {\n" +
    '        return bytesToBase64(utf8Encode(input));\n' +
    '    }\n' +
    '    return bytesToBase64(new Uint8Array(input.buffer, input.byteOffset, input.byteLength));\n' +
    '}\n' +
    '\n' +
    'export { toBase64, utf8Encode };\n' +
    '//# sourceMappingURL=index.browser.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '/** Used as references for various `Number` constants. */\n' +
    'var MAX_SAFE_INTEGER = 9007199254740991;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is a valid array-like length.\n' +
    ' *\n' +
    ' * **Note:** This method is loosely based on\n' +
    ' * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isLength(3);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isLength(Number.MIN_VALUE);\n' +
    ' * // => false\n' +
    ' *\n' +
    ' * _.isLength(Infinity);\n' +
    ' * // => false\n' +
    ' *\n' +
    " * _.isLength('3');\n" +
    ' * // => false\n' +
    ' */\n' +
    'function isLength(value) {\n' +
    "  return typeof value == 'number' &&\n" +
    '    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n' +
    '}\n' +
    '\n' +
    'module.exports = isLength;\n'
} [Function: logger]
____9999999____ {
  code: "var isStrictComparable = require('./_isStrictComparable'),\n" +
    "    keys = require('./keys');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the property names, values, and compare flags of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the match data of `object`.\n' +
    ' */\n' +
    'function getMatchData(object) {\n' +
    '  var result = keys(object),\n' +
    '      length = result.length;\n' +
    '\n' +
    '  while (length--) {\n' +
    '    var key = result[length],\n' +
    '        value = object[key];\n' +
    '\n' +
    '    result[length] = [key, value, isStrictComparable(value)];\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = getMatchData;\n'
} [Function: logger]
____9999999____ {
  code: "var Stack = require('./_Stack'),\n" +
    "    baseIsEqual = require('./_baseIsEqual');\n" +
    '\n' +
    '/** Used to compose bitmasks for value comparisons. */\n' +
    'var COMPARE_PARTIAL_FLAG = 1,\n' +
    '    COMPARE_UNORDERED_FLAG = 2;\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.isMatch` without support for iteratee shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to inspect.\n' +
    ' * @param {Object} source The object of property values to match.\n' +
    ' * @param {Array} matchData The property names, values, and compare flags to match.\n' +
    ' * @param {Function} [customizer] The function to customize comparisons.\n' +
    ' * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n' +
    ' */\n' +
    'function baseIsMatch(object, source, matchData, customizer) {\n' +
    '  var index = matchData.length,\n' +
    '      length = index,\n' +
    '      noCustomizer = !customizer;\n' +
    '\n' +
    '  if (object == null) {\n' +
    '    return !length;\n' +
    '  }\n' +
    '  object = Object(object);\n' +
    '  while (index--) {\n' +
    '    var data = matchData[index];\n' +
    '    if ((noCustomizer && data[2])\n' +
    '          ? data[1] !== object[data[0]]\n' +
    '          : !(data[0] in object)\n' +
    '        ) {\n' +
    '      return false;\n' +
    '    }\n' +
    '  }\n' +
    '  while (++index < length) {\n' +
    '    data = matchData[index];\n' +
    '    var key = data[0],\n' +
    '        objValue = object[key],\n' +
    '        srcValue = data[1];\n' +
    '\n' +
    '    if (noCustomizer && data[2]) {\n' +
    '      if (objValue === undefined && !(key in object)) {\n' +
    '        return false;\n' +
    '      }\n' +
    '    } else {\n' +
    '      var stack = new Stack;\n' +
    '      if (customizer) {\n' +
    '        var result = customizer(objValue, srcValue, key, object, source, stack);\n' +
    '      }\n' +
    '      if (!(result === undefined\n' +
    '            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n' +
    '            : result\n' +
    '          )) {\n' +
    '        return false;\n' +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '  return true;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsMatch;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A specialized version of `matchesProperty` for source values suitable\n' +
    ' * for strict equality comparisons, i.e. `===`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} key The key of the property to get.\n' +
    ' * @param {*} srcValue The value to match.\n' +
    ' * @returns {Function} Returns the new spec function.\n' +
    ' */\n' +
    'function matchesStrictComparable(key, srcValue) {\n' +
    '  return function(object) {\n' +
    '    if (object == null) {\n' +
    '      return false;\n' +
    '    }\n' +
    '    return object[key] === srcValue &&\n' +
    '      (srcValue !== undefined || (key in Object(object)));\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = matchesStrictComparable;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGet = require('./_baseGet');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the value at `path` of `object`. If the resolved value is\n' +
    ' * `undefined`, the `defaultValue` is returned in its place.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.7.0\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {Array|string} path The path of the property to get.\n' +
    ' * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n' +
    ' * @returns {*} Returns the resolved value.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n" +
    ' *\n' +
    " * _.get(object, 'a[0].b.c');\n" +
    ' * // => 3\n' +
    ' *\n' +
    " * _.get(object, ['a', '0', 'b', 'c']);\n" +
    ' * // => 3\n' +
    ' *\n' +
    " * _.get(object, 'a.b.c', 'default');\n" +
    " * // => 'default'\n" +
    ' */\n' +
    'function get(object, path, defaultValue) {\n' +
    '  var result = object == null ? undefined : baseGet(object, path);\n' +
    '  return result === undefined ? defaultValue : result;\n' +
    '}\n' +
    '\n' +
    'module.exports = get;\n'
} [Function: logger]
____9999999____ {
  code: "var baseHasIn = require('./_baseHasIn'),\n" +
    "    hasPath = require('./_hasPath');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if `path` is a direct or inherited property of `object`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Object\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {Array|string} path The path to check.\n' +
    ' * @returns {boolean} Returns `true` if `path` exists, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n" +
    ' *\n' +
    " * _.hasIn(object, 'a');\n" +
    ' * // => true\n' +
    ' *\n' +
    " * _.hasIn(object, 'a.b');\n" +
    ' * // => true\n' +
    ' *\n' +
    " * _.hasIn(object, ['a', 'b']);\n" +
    ' * // => true\n' +
    ' *\n' +
    " * _.hasIn(object, 'b');\n" +
    ' * // => false\n' +
    ' */\n' +
    'function hasIn(object, path) {\n' +
    '  return object != null && hasPath(object, path, baseHasIn);\n' +
    '}\n' +
    '\n' +
    'module.exports = hasIn;\n'
} [Function: logger]
____9999999____ {
  code: "var isArray = require('./isArray'),\n" +
    "    isSymbol = require('./isSymbol');\n" +
    '\n' +
    '/** Used to match property names within property paths. */\n' +
    `var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|(["'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n` +
    '    reIsPlainProp = /^\\w*$/;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is a property name and not a property path.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @param {Object} [object] The object to query keys on.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n' +
    ' */\n' +
    'function isKey(value, object) {\n' +
    '  if (isArray(value)) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var type = typeof value;\n' +
    "  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n" +
    '      value == null || isSymbol(value)) {\n' +
    '    return true;\n' +
    '  }\n' +
    '  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n' +
    '    (object != null && value in Object(object));\n' +
    '}\n' +
    '\n' +
    'module.exports = isKey;\n'
} [Function: logger]
____9999999____ {
  code: "var isObject = require('./isObject');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` if suitable for strict\n' +
    ' *  equality comparisons, else `false`.\n' +
    ' */\n' +
    'function isStrictComparable(value) {\n' +
    '  return value === value && !isObject(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = isStrictComparable;\n'
} [Function: logger]
____9999999____ {
  code: "var isSymbol = require('./isSymbol');\n" +
    '\n' +
    '/** Used as references for various `Number` constants. */\n' +
    'var INFINITY = 1 / 0;\n' +
    '\n' +
    '/**\n' +
    " * Converts `value` to a string key if it's not a string or symbol.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to inspect.\n' +
    ' * @returns {string|symbol} Returns the key.\n' +
    ' */\n' +
    'function toKey(value) {\n' +
    "  if (typeof value == 'string' || isSymbol(value)) {\n" +
    '    return value;\n' +
    '  }\n' +
    "  var result = (value + '');\n" +
    "  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n" +
    '}\n' +
    '\n' +
    'module.exports = toKey;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGet = require('./_baseGet');\n" +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseProperty` which supports deep paths.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array|string} path The path of the property to get.\n' +
    ' * @returns {Function} Returns the new accessor function.\n' +
    ' */\n' +
    'function basePropertyDeep(path) {\n' +
    '  return function(object) {\n' +
    '    return baseGet(object, path);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = basePropertyDeep;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * The base implementation of `_.property` without support for deep paths.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} key The key of the property to get.\n' +
    ' * @returns {Function} Returns the new accessor function.\n' +
    ' */\n' +
    'function baseProperty(key) {\n' +
    '  return function(object) {\n' +
    '    return object == null ? undefined : object[key];\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = baseProperty;\n'
} [Function: logger]
____9999999____ {
  code: "import { DEFAULT_PART_SIZE, MAX_PARTS_COUNT } from '../../../utils/constants.mjs';\n" +
    '\n' +
    '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'const calculatePartSize = (totalSize) => {\n' +
    '    if (!totalSize) {\n' +
    '        return DEFAULT_PART_SIZE;\n' +
    '    }\n' +
    '    let partSize = DEFAULT_PART_SIZE;\n' +
    '    let partsCount = Math.ceil(totalSize / partSize);\n' +
    '    while (partsCount > MAX_PARTS_COUNT) {\n' +
    '        partSize *= 2;\n' +
    '        partsCount = Math.ceil(totalSize / partSize);\n' +
    '    }\n' +
    '    return partSize;\n' +
    '};\n' +
    '\n' +
    'export { calculatePartSize };\n' +
    '//# sourceMappingURL=calculatePartSize.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: '// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    '/**\n' +
    " * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n" +
    ' * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n' +
    ' * from S3. This implementation requires the `DOMParser` class in the runtime.\n' +
    ' */\n' +
    'const parser = {\n' +
    '    parse: (xmlStr) => {\n' +
    '        const domParser = new DOMParser();\n' +
    "        const xml = domParser.parseFromString(xmlStr, 'text/xml');\n" +
    '        const parsedObj = parseXmlNode(xml);\n' +
    '        const rootKey = Object.keys(parsedObj)[0];\n' +
    '        return parsedObj[rootKey];\n' +
    '    },\n' +
    '};\n' +
    'const parseXmlNode = (node) => {\n' +
    '    if (isDocumentNode(node)) {\n' +
    '        return {\n' +
    '            [node.documentElement.nodeName]: parseXmlNode(node.documentElement),\n' +
    '        };\n' +
    '    }\n' +
    '    if (node.nodeType === Node.TEXT_NODE) {\n' +
    '        return node.nodeValue?.trim();\n' +
    '    }\n' +
    '    if (isElementNode(node)) {\n' +
    "        // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n" +
    "        // instead of { Location: { '#text': 'foo' } }.\n" +
    '        if (isTextOnlyElementNode(node)) {\n' +
    '            return node.childNodes[0].nodeValue;\n' +
    '        }\n' +
    '        const nodeValue = {};\n' +
    '        // convert attributes\n' +
    '        for (const attr of node.attributes) {\n' +
    '            if (!isNamespaceAttributeName(attr.nodeName)) {\n' +
    '                nodeValue[attr.nodeName] = attr.nodeValue;\n' +
    '            }\n' +
    '        }\n' +
    '        // convert child nodes\n' +
    '        if (node.children.length > 0) {\n' +
    '            for (const child of node.children) {\n' +
    '                const childValue = parseXmlNode(child);\n' +
    '                if (childValue === undefined) {\n' +
    '                    continue;\n' +
    '                }\n' +
    '                const childName = child.nodeName;\n' +
    '                if (nodeValue[childName] === undefined) {\n' +
    '                    nodeValue[childName] = childValue;\n' +
    '                }\n' +
    '                else if (Array.isArray(nodeValue[childName])) {\n' +
    '                    nodeValue[childName].push(childValue);\n' +
    '                }\n' +
    '                else {\n' +
    '                    nodeValue[childName] = [nodeValue[childName], childValue];\n' +
    '                }\n' +
    '            }\n' +
    '        }\n' +
    '        // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n' +
    "        return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n" +
    '    }\n' +
    '};\n' +
    'const isElementNode = (node) => node.nodeType === Node.ELEMENT_NODE;\n' +
    'const isDocumentNode = (node) => node.nodeType === Node.DOCUMENT_NODE;\n' +
    'const isTextOnlyElementNode = (node) => hasOnlyNamespaceAttributes(node) &&\n' +
    '    node.children.length === 0 &&\n' +
    '    node.firstChild?.nodeType === Node.TEXT_NODE;\n' +
    'const hasOnlyNamespaceAttributes = (node) => {\n' +
    '    for (const attr of node.attributes) {\n' +
    '        if (!isNamespaceAttributeName(attr.nodeName)) {\n' +
    '            return false;\n' +
    '        }\n' +
    '    }\n' +
    '    return true;\n' +
    '};\n' +
    "const isNamespaceAttributeName = (name) => name === 'xmlns' || name.startsWith('xmlns:');\n" +
    '\n' +
    'export { parser };\n' +
    '//# sourceMappingURL=dom.mjs.map\n'
} [Function: logger]
____9999999____ {
  code: "var baseAssignValue = require('./_baseAssignValue'),\n" +
    "    eq = require('./eq');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * Assigns `value` to `key` of `object` if the existing value is not equivalent\n' +
    ' * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n' +
    ' * for equality comparisons.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to modify.\n' +
    ' * @param {string} key The key of the property to assign.\n' +
    ' * @param {*} value The value to assign.\n' +
    ' */\n' +
    'function assignValue(object, key, value) {\n' +
    '  var objValue = object[key];\n' +
    '  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n' +
    '      (value === undefined && !(key in object))) {\n' +
    '    baseAssignValue(object, key, value);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = assignValue;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used as references for various `Number` constants. */\n' +
    'var MAX_SAFE_INTEGER = 9007199254740991;\n' +
    '\n' +
    '/** Used to detect unsigned integer values. */\n' +
    'var reIsUint = /^(?:0|[1-9]\\d*)$/;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is a valid array-like index.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n' +
    ' */\n' +
    'function isIndex(value, length) {\n' +
    '  var type = typeof value;\n' +
    '  length = length == null ? MAX_SAFE_INTEGER : length;\n' +
    '\n' +
    '  return !!length &&\n' +
    "    (type == 'number' ||\n" +
    "      (type != 'symbol' && reIsUint.test(value))) &&\n" +
    '        (value > -1 && value % 1 == 0 && value < length);\n' +
    '}\n' +
    '\n' +
    'module.exports = isIndex;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Appends the elements of `values` to `array`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} array The array to modify.\n' +
    ' * @param {Array} values The values to append.\n' +
    ' * @returns {Array} Returns `array`.\n' +
    ' */\n' +
    'function arrayPush(array, values) {\n' +
    '  var index = -1,\n' +
    '      length = values.length,\n' +
    '      offset = array.length;\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    array[offset + index] = values[index];\n' +
    '  }\n' +
    '  return array;\n' +
    '}\n' +
    '\n' +
    'module.exports = arrayPush;\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_root.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseTrim.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isSymbol.js";'
} [Function: logger]
____9999999____ {
  code: "var memoizeCapped = require('./_memoizeCapped');\n" +
    '\n' +
    '/** Used to match property names within property paths. */\n' +
    `var rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n` +
    '\n' +
    '/** Used to match backslashes in property paths. */\n' +
    'var reEscapeChar = /\\\\(\\\\)?/g;\n' +
    '\n' +
    '/**\n' +
    ' * Converts `string` to a property path array.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {string} string The string to convert.\n' +
    ' * @returns {Array} Returns the property path array.\n' +
    ' */\n' +
    'var stringToPath = memoizeCapped(function(string) {\n' +
    '  var result = [];\n' +
    '  if (string.charCodeAt(0) === 46 /* . */) {\n' +
    "    result.push('');\n" +
    '  }\n' +
    '  string.replace(rePropName, function(match, number, quote, subString) {\n' +
    "    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n" +
    '  });\n' +
    '  return result;\n' +
    '});\n' +
    '\n' +
    'module.exports = stringToPath;\n'
} [Function: logger]
____9999999____ {
  code: "var overArg = require('./_overArg');\n" +
    '\n' +
    '/** Built-in value references. */\n' +
    'var getPrototype = overArg(Object.getPrototypeOf, Object);\n' +
    '\n' +
    'module.exports = getPrototype;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * This method returns a new empty array.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.13.0\n' +
    ' * @category Util\n' +
    ' * @returns {Array} Returns the new empty array.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * var arrays = _.times(2, _.stubArray);\n' +
    ' *\n' +
    ' * console.log(arrays);\n' +
    ' * // => [[], []]\n' +
    ' *\n' +
    ' * console.log(arrays[0] === arrays[1]);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function stubArray() {\n' +
    '  return [];\n' +
    '}\n' +
    '\n' +
    'module.exports = stubArray;\n'
} [Function: logger]
____9999999____ {
  code: "var defineProperty = require('./_defineProperty');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `assignValue` and `assignMergeValue` without\n' +
    ' * value checks.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to modify.\n' +
    ' * @param {string} key The key of the property to assign.\n' +
    ' * @param {*} value The value to assign.\n' +
    ' */\n' +
    'function baseAssignValue(object, key, value) {\n' +
    "  if (key == '__proto__' && defineProperty) {\n" +
    '    defineProperty(object, key, {\n' +
    "      'configurable': true,\n" +
    "      'enumerable': true,\n" +
    "      'value': value,\n" +
    "      'writable': true\n" +
    '    });\n' +
    '  } else {\n' +
    '    object[key] = value;\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'module.exports = baseAssignValue;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {boolean} [fromRight] Specify iterating from right to left.\n' +
    ' * @returns {Function} Returns the new base function.\n' +
    ' */\n' +
    'function createBaseFor(fromRight) {\n' +
    '  return function(object, iteratee, keysFunc) {\n' +
    '    var index = -1,\n' +
    '        iterable = Object(object),\n' +
    '        props = keysFunc(object),\n' +
    '        length = props.length;\n' +
    '\n' +
    '    while (length--) {\n' +
    '      var key = props[fromRight ? length : ++index];\n' +
    '      if (iteratee(iterable[key], key, iterable) === false) {\n' +
    '        break;\n' +
    '      }\n' +
    '    }\n' +
    '    return object;\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = createBaseFor;\n'
} [Function: logger]
____9999999____ {
  code: "var baseTimes = require('./_baseTimes'),\n" +
    "    isArguments = require('./isArguments'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    isBuffer = require('./isBuffer'),\n" +
    "    isIndex = require('./_isIndex'),\n" +
    "    isTypedArray = require('./isTypedArray');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * Creates an array of the enumerable property names of the array-like `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to query.\n' +
    ' * @param {boolean} inherited Specify returning inherited property names.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' */\n' +
    'function arrayLikeKeys(value, inherited) {\n' +
    '  var isArr = isArray(value),\n' +
    '      isArg = !isArr && isArguments(value),\n' +
    '      isBuff = !isArr && !isArg && isBuffer(value),\n' +
    '      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n' +
    '      skipIndexes = isArr || isArg || isBuff || isType,\n' +
    '      result = skipIndexes ? baseTimes(value.length, String) : [],\n' +
    '      length = result.length;\n' +
    '\n' +
    '  for (var key in value) {\n' +
    '    if ((inherited || hasOwnProperty.call(value, key)) &&\n' +
    '        !(skipIndexes && (\n' +
    '           // Safari 9 has enumerable `arguments.length` in strict mode.\n' +
    "           key == 'length' ||\n" +
    '           // Node.js 0.10 has enumerable non-index properties on buffers.\n' +
    "           (isBuff && (key == 'offset' || key == 'parent')) ||\n" +
    '           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n' +
    "           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n" +
    '           // Skip index properties.\n' +
    '           isIndex(key, length)\n' +
    '        ))) {\n' +
    '      result.push(key);\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = arrayLikeKeys;\n'
} [Function: logger]
____9999999____ {
  code: "var isObject = require('./isObject'),\n" +
    "    isPrototype = require('./_isPrototype'),\n" +
    "    nativeKeysIn = require('./_nativeKeysIn');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' */\n' +
    'function baseKeysIn(object) {\n' +
    '  if (!isObject(object)) {\n' +
    '    return nativeKeysIn(object);\n' +
    '  }\n' +
    '  var isProto = isPrototype(object),\n' +
    '      result = [];\n' +
    '\n' +
    '  for (var key in object) {\n' +
    "    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n" +
    '      result.push(key);\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseKeysIn;\n'
} [Function: logger]
____9999999____ {
  code: "var isFunction = require('./isFunction'),\n" +
    "    isLength = require('./isLength');\n" +
    '\n' +
    '/**\n' +
    " * Checks if `value` is array-like. A value is considered array-like if it's\n" +
    " * not a function and has a `value.length` that's an integer greater than or\n" +
    ' * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isArrayLike([1, 2, 3]);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isArrayLike(document.body.children);\n' +
    ' * // => true\n' +
    ' *\n' +
    " * _.isArrayLike('abc');\n" +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isArrayLike(_.noop);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isArrayLike(value) {\n' +
    '  return value != null && isLength(value.length) && !isFunction(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = isArrayLike;\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root');\n" +
    '\n' +
    '/** Detect free variable `exports`. */\n' +
    "var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n" +
    '\n' +
    '/** Detect free variable `module`. */\n' +
    "var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n" +
    '\n' +
    '/** Detect the popular CommonJS extension `module.exports`. */\n' +
    'var moduleExports = freeModule && freeModule.exports === freeExports;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var Buffer = moduleExports ? root.Buffer : undefined,\n' +
    '    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n' +
    '\n' +
    '/**\n' +
    ' * Creates a clone of  `buffer`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Buffer} buffer The buffer to clone.\n' +
    ' * @param {boolean} [isDeep] Specify a deep clone.\n' +
    ' * @returns {Buffer} Returns the cloned buffer.\n' +
    ' */\n' +
    'function cloneBuffer(buffer, isDeep) {\n' +
    '  if (isDeep) {\n' +
    '    return buffer.slice();\n' +
    '  }\n' +
    '  var length = buffer.length,\n' +
    '      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n' +
    '\n' +
    '  buffer.copy(result);\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = cloneBuffer;\n'
} [Function: logger]
____9999999____ {
  code: "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a clone of `typedArray`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} typedArray The typed array to clone.\n' +
    ' * @param {boolean} [isDeep] Specify a deep clone.\n' +
    ' * @returns {Object} Returns the cloned typed array.\n' +
    ' */\n' +
    'function cloneTypedArray(typedArray, isDeep) {\n' +
    '  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n' +
    '  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n' +
    '}\n' +
    '\n' +
    'module.exports = cloneTypedArray;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Copies the values of `source` to `array`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} source The array to copy values from.\n' +
    ' * @param {Array} [array=[]] The array to copy values to.\n' +
    ' * @returns {Array} Returns `array`.\n' +
    ' */\n' +
    'function copyArray(source, array) {\n' +
    '  var index = -1,\n' +
    '      length = source.length;\n' +
    '\n' +
    '  array || (array = Array(length));\n' +
    '  while (++index < length) {\n' +
    '    array[index] = source[index];\n' +
    '  }\n' +
    '  return array;\n' +
    '}\n' +
    '\n' +
    'module.exports = copyArray;\n'
} [Function: logger]
____9999999____ {
  code: "var baseCreate = require('./_baseCreate'),\n" +
    "    getPrototype = require('./_getPrototype'),\n" +
    "    isPrototype = require('./_isPrototype');\n" +
    '\n' +
    '/**\n' +
    ' * Initializes an object clone.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to clone.\n' +
    ' * @returns {Object} Returns the initialized clone.\n' +
    ' */\n' +
    'function initCloneObject(object) {\n' +
    "  return (typeof object.constructor == 'function' && !isPrototype(object))\n" +
    '    ? baseCreate(getPrototype(object))\n' +
    '    : {};\n' +
    '}\n' +
    '\n' +
    'module.exports = initCloneObject;\n'
} [Function: logger]
____9999999____ {
  code: "var baseIsArguments = require('./_baseIsArguments'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/** Built-in value references. */\n' +
    'var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is likely an `arguments` object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n' +
    ' *  else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isArguments(function() { return arguments; }());\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isArguments([1, 2, 3]);\n' +
    ' * // => false\n' +
    ' */\n' +
    'var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n' +
    "  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n" +
    "    !propertyIsEnumerable.call(value, 'callee');\n" +
    '};\n' +
    '\n' +
    'module.exports = isArguments;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetTag = require('./_baseGetTag'),\n" +
    "    isObject = require('./isObject');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var asyncTag = '[object AsyncFunction]',\n" +
    "    funcTag = '[object Function]',\n" +
    "    genTag = '[object GeneratorFunction]',\n" +
    "    proxyTag = '[object Proxy]';\n" +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is classified as a `Function` object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isFunction(_);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isFunction(/abc/);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isFunction(value) {\n' +
    '  if (!isObject(value)) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  // The use of `Object#toString` avoids issues with the `typeof` operator\n' +
    "  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n" +
    '  var tag = baseGetTag(value);\n' +
    '  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n' +
    '}\n' +
    '\n' +
    'module.exports = isFunction;\n'
} [Function: logger]
____9999999____ {
  code: "var isArrayLike = require('./isArrayLike'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/**\n' +
    ' * This method is like `_.isArrayLike` except that it also checks if `value`\n' +
    ' * is an object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 4.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is an array-like object,\n' +
    ' *  else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * _.isArrayLikeObject([1, 2, 3]);\n' +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isArrayLikeObject(document.body.children);\n' +
    ' * // => true\n' +
    ' *\n' +
    " * _.isArrayLikeObject('abc');\n" +
    ' * // => false\n' +
    ' *\n' +
    ' * _.isArrayLikeObject(_.noop);\n' +
    ' * // => false\n' +
    ' */\n' +
    'function isArrayLikeObject(value) {\n' +
    '  return isObjectLike(value) && isArrayLike(value);\n' +
    '}\n' +
    '\n' +
    'module.exports = isArrayLikeObject;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetTag = require('./_baseGetTag'),\n" +
    "    getPrototype = require('./_getPrototype'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var objectTag = '[object Object]';\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var funcProto = Function.prototype,\n' +
    '    objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to resolve the decompiled source of functions. */\n' +
    'var funcToString = funcProto.toString;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/** Used to infer the `Object` constructor. */\n' +
    'var objectCtorString = funcToString.call(Object);\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is a plain object, that is, an object created by the\n' +
    ' * `Object` constructor or one with a `[[Prototype]]` of `null`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.8.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * function Foo() {\n' +
    ' *   this.a = 1;\n' +
    ' * }\n' +
    ' *\n' +
    ' * _.isPlainObject(new Foo);\n' +
    ' * // => false\n' +
    ' *\n' +
    ' * _.isPlainObject([1, 2, 3]);\n' +
    ' * // => false\n' +
    ' *\n' +
    " * _.isPlainObject({ 'x': 0, 'y': 0 });\n" +
    ' * // => true\n' +
    ' *\n' +
    ' * _.isPlainObject(Object.create(null));\n' +
    ' * // => true\n' +
    ' */\n' +
    'function isPlainObject(value) {\n' +
    '  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var proto = getPrototype(value);\n' +
    '  if (proto === null) {\n' +
    '    return true;\n' +
    '  }\n' +
    "  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n" +
    "  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n" +
    '    funcToString.call(Ctor) == objectCtorString;\n' +
    '}\n' +
    '\n' +
    'module.exports = isPlainObject;\n'
} [Function: logger]
____9999999____ {
  code: "var copyObject = require('./_copyObject'),\n" +
    "    keysIn = require('./keysIn');\n" +
    '\n' +
    '/**\n' +
    ' * Converts `value` to a plain object flattening inherited enumerable string\n' +
    ' * keyed properties of `value` to own properties of the plain object.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 3.0.0\n' +
    ' * @category Lang\n' +
    ' * @param {*} value The value to convert.\n' +
    ' * @returns {Object} Returns the converted plain object.\n' +
    ' * @example\n' +
    ' *\n' +
    ' * function Foo() {\n' +
    ' *   this.b = 2;\n' +
    ' * }\n' +
    ' *\n' +
    ' * Foo.prototype.c = 3;\n' +
    ' *\n' +
    " * _.assign({ 'a': 1 }, new Foo);\n" +
    " * // => { 'a': 1, 'b': 2 }\n" +
    ' *\n' +
    " * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n" +
    " * // => { 'a': 1, 'b': 2, 'c': 3 }\n" +
    ' */\n' +
    'function toPlainObject(value) {\n' +
    '  return copyObject(value, keysIn(value));\n' +
    '}\n' +
    '\n' +
    'module.exports = toPlainObject;\n'
} [Function: logger]
____9999999____ {
  code: "var baseSetToString = require('./_baseSetToString'),\n" +
    "    shortOut = require('./_shortOut');\n" +
    '\n' +
    '/**\n' +
    ' * Sets the `toString` method of `func` to return `string`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to modify.\n' +
    ' * @param {Function} string The `toString` result.\n' +
    ' * @returns {Function} Returns `func`.\n' +
    ' */\n' +
    'var setToString = shortOut(baseSetToString);\n' +
    '\n' +
    'module.exports = setToString;\n'
} [Function: logger]
____9999999____ {
  code: "var apply = require('./_apply');\n" +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeMax = Math.max;\n' +
    '\n' +
    '/**\n' +
    ' * A specialized version of `baseRest` which transforms the rest array.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to apply a rest parameter to.\n' +
    ' * @param {number} [start=func.length-1] The start position of the rest parameter.\n' +
    ' * @param {Function} transform The rest array transform.\n' +
    ' * @returns {Function} Returns the new function.\n' +
    ' */\n' +
    'function overRest(func, start, transform) {\n' +
    '  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n' +
    '  return function() {\n' +
    '    var args = arguments,\n' +
    '        index = -1,\n' +
    '        length = nativeMax(args.length - start, 0),\n' +
    '        array = Array(length);\n' +
    '\n' +
    '    while (++index < length) {\n' +
    '      array[index] = args[start + index];\n' +
    '    }\n' +
    '    index = -1;\n' +
    '    var otherArgs = Array(start + 1);\n' +
    '    while (++index < start) {\n' +
    '      otherArgs[index] = args[index];\n' +
    '    }\n' +
    '    otherArgs[start] = transform(array);\n' +
    '    return apply(func, this, otherArgs);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = overRest;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Assigns a value for a given ref, no matter of the ref format\n' +
    ' * @param {RefObject} ref - a callback function or ref object\n' +
    ' * @param value - a new value\n' +
    ' *\n' +
    ' * @see https://github.com/theKashey/use-callback-ref#assignref\n' +
    ' * @example\n' +
    ' * const refObject = useRef();\n' +
    ' * const refFn = (ref) => {....}\n' +
    ' *\n' +
    ' * assignRef(refObject, "refValue");\n' +
    ' * assignRef(refFn, "refValue");\n' +
    ' */\n' +
    'export function assignRef(ref, value) {\n' +
    "    if (typeof ref === 'function') {\n" +
    '        ref(value);\n' +
    '    }\n' +
    '    else if (ref) {\n' +
    '        ref.current = value;\n' +
    '    }\n' +
    '    return ref;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { useState } from 'react';\n" +
    '/**\n' +
    ' * creates a MutableRef with ref change callback\n' +
    ' * @param initialValue - initial ref value\n' +
    ' * @param {Function} callback - a callback to run when value changes\n' +
    ' *\n' +
    ' * @example\n' +
    " * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n" +
    ' * ref.current = 1;\n' +
    ' * // prints 0 -> 1\n' +
    ' *\n' +
    ' * @see https://reactjs.org/docs/hooks-reference.html#useref\n' +
    ' * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n' +
    ' * @returns {MutableRefObject}\n' +
    ' */\n' +
    'export function useCallbackRef(initialValue, callback) {\n' +
    '    var ref = useState(function () { return ({\n' +
    '        // value\n' +
    '        value: initialValue,\n' +
    '        // last callback\n' +
    '        callback: callback,\n' +
    '        // "memoized" public interface\n' +
    '        facade: {\n' +
    '            get current() {\n' +
    '                return ref.value;\n' +
    '            },\n' +
    '            set current(value) {\n' +
    '                var last = ref.value;\n' +
    '                if (last !== value) {\n' +
    '                    ref.value = value;\n' +
    '                    ref.callback(value, last);\n' +
    '                }\n' +
    '            },\n' +
    '        },\n' +
    '    }); })[0];\n' +
    '    // update callback\n' +
    '    ref.callback = callback;\n' +
    '    return ref.facade;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * creates a Ref object with on change callback\n' +
    ' * @param callback\n' +
    ' * @returns {RefObject}\n' +
    ' *\n' +
    ' * @see {@link useCallbackRef}\n' +
    ' * @see https://reactjs.org/docs/refs-and-the-dom.html#creating-refs\n' +
    ' */\n' +
    'export function createCallbackRef(callback) {\n' +
    '    var current = null;\n' +
    '    return {\n' +
    '        get current() {\n' +
    '            return current;\n' +
    '        },\n' +
    '        set current(value) {\n' +
    '            var last = current;\n' +
    '            if (last !== value) {\n' +
    '                current = value;\n' +
    '                callback(value, last);\n' +
    '            }\n' +
    '        },\n' +
    '    };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { assignRef } from './assignRef';\n" +
    "import { createCallbackRef } from './createRef';\n" +
    '/**\n' +
    ' * Merges two or more refs together providing a single interface to set their value\n' +
    ' * @param {RefObject|Ref} refs\n' +
    ' * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n' +
    ' *\n' +
    ' * @see {@link useMergeRefs} to be used in ReactComponents\n' +
    ' * @example\n' +
    ' * const Component = React.forwardRef((props, ref) => {\n' +
    ' *   const ownRef = useRef();\n' +
    ' *   const domRef = mergeRefs([ref, ownRef]); // 👈 merge together\n' +
    ' *   return <div ref={domRef}>...</div>\n' +
    ' * }\n' +
    ' */\n' +
    'export function mergeRefs(refs) {\n' +
    '    return createCallbackRef(function (newValue) { return refs.forEach(function (ref) { return assignRef(ref, newValue); }); });\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { assignRef } from './assignRef';\n" +
    "import { createCallbackRef } from './createRef';\n" +
    '/**\n' +
    ' * Transforms one ref to another\n' +
    ' * @example\n' +
    ' * ```tsx\n' +
    ' * const ResizableWithRef = forwardRef((props, ref) =>\n' +
    ' *   <Resizable {...props} ref={transformRef(ref, i => i ? i.resizable : null)}/>\n' +
    ' * );\n' +
    ' * ```\n' +
    ' */\n' +
    'export function transformRef(ref, transformer) {\n' +
    '    return createCallbackRef(function (value) { return assignRef(ref, transformer(value)); });\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { assignRef } from './assignRef';\n" +
    "import { useCallbackRef } from './useRef';\n" +
    'var currentValues = new WeakMap();\n' +
    '/**\n' +
    ' * Merges two or more refs together providing a single interface to set their value\n' +
    ' * @param {RefObject|Ref} refs\n' +
    ' * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n' +
    ' *\n' +
    ' * @see {@link mergeRefs} a version without buit-in memoization\n' +
    ' * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n' +
    ' * @example\n' +
    ' * const Component = React.forwardRef((props, ref) => {\n' +
    ' *   const ownRef = useRef();\n' +
    ' *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together\n' +
    ' *   return <div ref={domRef}>...</div>\n' +
    ' * }\n' +
    ' */\n' +
    'export function useMergeRefs(refs, defaultValue) {\n' +
    '    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n' +
    '        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n' +
    '    });\n' +
    '    // handle refs changes - added or removed\n' +
    '    React.useLayoutEffect(function () {\n' +
    '        var oldValue = currentValues.get(callbackRef);\n' +
    '        if (oldValue) {\n' +
    '            var prevRefs_1 = new Set(oldValue);\n' +
    '            var nextRefs_1 = new Set(refs);\n' +
    '            var current_1 = callbackRef.current;\n' +
    '            prevRefs_1.forEach(function (ref) {\n' +
    '                if (!nextRefs_1.has(ref)) {\n' +
    '                    assignRef(ref, null);\n' +
    '                }\n' +
    '            });\n' +
    '            nextRefs_1.forEach(function (ref) {\n' +
    '                if (!prevRefs_1.has(ref)) {\n' +
    '                    assignRef(ref, current_1);\n' +
    '                }\n' +
    '            });\n' +
    '        }\n' +
    '        currentValues.set(callbackRef, refs);\n' +
    '    }, [refs]);\n' +
    '    return callbackRef;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { assignRef } from './assignRef';\n" +
    "import { useCallbackRef } from './useRef';\n" +
    '/**\n' +
    ' * Create a _lense_ on Ref, making it possible to transform ref value\n' +
    ' * @param {ReactRef} ref\n' +
    ' * @param {Function} transformer. 👉 Ref would be __NOT updated__ on `transformer` update.\n' +
    ' * @returns {RefObject}\n' +
    ' *\n' +
    ' * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\n' +
    ' * @example\n' +
    ' *\n' +
    ' * const ResizableWithRef = forwardRef((props, ref) =>\n' +
    ' *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\n' +
    ' * );\n' +
    ' */\n' +
    'export function useTransformRef(ref, transformer) {\n' +
    '    return useCallbackRef(null, function (value) { return assignRef(ref, transformer(value)); });\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Unmemoized version of {@link useRefToCallback}\n' +
    ' * @see {@link useRefToCallback}\n' +
    ' * @param ref\n' +
    ' */\n' +
    'export function refToCallback(ref) {\n' +
    '    return function (newValue) {\n' +
    "        if (typeof ref === 'function') {\n" +
    '            ref(newValue);\n' +
    '        }\n' +
    '        else if (ref) {\n' +
    '            ref.current = newValue;\n' +
    '        }\n' +
    '    };\n' +
    '}\n' +
    'var nullCallback = function () { return null; };\n' +
    '// lets maintain a weak ref to, well, ref :)\n' +
    '// not using `kashe` to keep this package small\n' +
    'var weakMem = new WeakMap();\n' +
    'var weakMemoize = function (ref) {\n' +
    '    var usedRef = ref || nullCallback;\n' +
    '    var storedRef = weakMem.get(usedRef);\n' +
    '    if (storedRef) {\n' +
    '        return storedRef;\n' +
    '    }\n' +
    '    var cb = refToCallback(usedRef);\n' +
    '    weakMem.set(usedRef, cb);\n' +
    '    return cb;\n' +
    '};\n' +
    '/**\n' +
    ' * Transforms a given `ref` into `callback`.\n' +
    ' *\n' +
    ' * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\n' +
    ' *\n' +
    ' * @param {ReactRef} ref\n' +
    ' * @returns {Function}\n' +
    ' *\n' +
    ' * @see https://github.com/theKashey/use-callback-ref#reftocallback\n' +
    ' *\n' +
    ' * @example\n' +
    ' * const ref = useRef(0);\n' +
    ' * const setRef = useRefToCallback(ref);\n' +
    ' * 👉 setRef(10);\n' +
    ' * ✅ ref.current === 10\n' +
    ' */\n' +
    'export function useRefToCallback(ref) {\n' +
    '    return weakMemoize(ref);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * @license React\n' +
    ' * use-sync-external-store-shim.production.min.js\n' +
    ' *\n' +
    ' * Copyright (c) Facebook, Inc. and its affiliates.\n' +
    ' *\n' +
    ' * This source code is licensed under the MIT license found in the\n' +
    ' * LICENSE file in the root directory of this source tree.\n' +
    ' */\n' +
    `'use strict';var e=require("react");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k="function"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\n` +
    'function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u="undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    "import * as React from 'react';\n" +
    "import { useSidecar } from './hook';\n" +
    '// eslint-disable-next-line @typescript-eslint/ban-types\n' +
    'export function sidecar(importer, errorComponent) {\n' +
    '    var ErrorCase = function () { return errorComponent; };\n' +
    '    return function Sidecar(props) {\n' +
    '        var _a = useSidecar(importer, props.sideCar), Car = _a[0], error = _a[1];\n' +
    '        if (error && errorComponent) {\n' +
    '            return ErrorCase;\n' +
    '        }\n' +
    '        // @ts-expect-error type shenanigans\n' +
    '        return Car ? React.createElement(Car, __assign({}, props)) : null;\n' +
    '    };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import { useState, useEffect } from 'react';\n" +
    "import { env } from './env';\n" +
    'var cache = new WeakMap();\n' +
    'var NO_OPTIONS = {};\n' +
    'export function useSidecar(importer, effect) {\n' +
    '    var options = (effect && effect.options) || NO_OPTIONS;\n' +
    '    if (env.isNode && !options.ssr) {\n' +
    '        return [null, null];\n' +
    '    }\n' +
    '    // eslint-disable-next-line react-hooks/rules-of-hooks\n' +
    '    return useRealSidecar(importer, effect);\n' +
    '}\n' +
    'function useRealSidecar(importer, effect) {\n' +
    '    var options = (effect && effect.options) || NO_OPTIONS;\n' +
    '    var couldUseCache = env.forceCache || (env.isNode && !!options.ssr) || !options.async;\n' +
    '    var _a = useState(couldUseCache ? function () { return cache.get(importer); } : undefined), Car = _a[0], setCar = _a[1];\n' +
    '    var _b = useState(null), error = _b[0], setError = _b[1];\n' +
    '    useEffect(function () {\n' +
    '        if (!Car) {\n' +
    '            importer().then(function (car) {\n' +
    '                var resolved = effect ? effect.read() : car.default || car;\n' +
    '                if (!resolved) {\n' +
    "                    console.error('Sidecar error: with importer', importer);\n" +
    '                    var error_1;\n' +
    '                    if (effect) {\n' +
    "                        console.error('Sidecar error: with medium', effect);\n" +
    "                        error_1 = new Error('Sidecar medium was not found');\n" +
    '                    }\n' +
    '                    else {\n' +
    "                        error_1 = new Error('Sidecar was not found in exports');\n" +
    '                    }\n' +
    '                    setError(function () { return error_1; });\n' +
    '                    throw error_1;\n' +
    '                }\n' +
    '                cache.set(importer, resolved);\n' +
    '                setCar(function () { return resolved; });\n' +
    '            }, function (e) { return setError(function () { return e; }); });\n' +
    '        }\n' +
    '    }, []);\n' +
    '    return [Car, error];\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'export var config = {\n' +
    '    onError: function (e) { return console.error(e); },\n' +
    '};\n' +
    'export var setConfig = function (conf) {\n' +
    '    Object.assign(config, conf);\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    'function ItoI(a) {\n' +
    '    return a;\n' +
    '}\n' +
    'function innerCreateMedium(defaults, middleware) {\n' +
    '    if (middleware === void 0) { middleware = ItoI; }\n' +
    '    var buffer = [];\n' +
    '    var assigned = false;\n' +
    '    var medium = {\n' +
    '        read: function () {\n' +
    '            if (assigned) {\n' +
    "                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n" +
    '            }\n' +
    '            if (buffer.length) {\n' +
    '                return buffer[buffer.length - 1];\n' +
    '            }\n' +
    '            return defaults;\n' +
    '        },\n' +
    '        useMedium: function (data) {\n' +
    '            var item = middleware(data, assigned);\n' +
    '            buffer.push(item);\n' +
    '            return function () {\n' +
    '                buffer = buffer.filter(function (x) { return x !== item; });\n' +
    '            };\n' +
    '        },\n' +
    '        assignSyncMedium: function (cb) {\n' +
    '            assigned = true;\n' +
    '            while (buffer.length) {\n' +
    '                var cbs = buffer;\n' +
    '                buffer = [];\n' +
    '                cbs.forEach(cb);\n' +
    '            }\n' +
    '            buffer = {\n' +
    '                push: function (x) { return cb(x); },\n' +
    '                filter: function () { return buffer; },\n' +
    '            };\n' +
    '        },\n' +
    '        assignMedium: function (cb) {\n' +
    '            assigned = true;\n' +
    '            var pendingQueue = [];\n' +
    '            if (buffer.length) {\n' +
    '                var cbs = buffer;\n' +
    '                buffer = [];\n' +
    '                cbs.forEach(cb);\n' +
    '                pendingQueue = buffer;\n' +
    '            }\n' +
    '            var executeQueue = function () {\n' +
    '                var cbs = pendingQueue;\n' +
    '                pendingQueue = [];\n' +
    '                cbs.forEach(cb);\n' +
    '            };\n' +
    '            var cycle = function () { return Promise.resolve().then(executeQueue); };\n' +
    '            cycle();\n' +
    '            buffer = {\n' +
    '                push: function (x) {\n' +
    '                    pendingQueue.push(x);\n' +
    '                    cycle();\n' +
    '                },\n' +
    '                filter: function (filter) {\n' +
    '                    pendingQueue = pendingQueue.filter(filter);\n' +
    '                    return buffer;\n' +
    '                },\n' +
    '            };\n' +
    '        },\n' +
    '    };\n' +
    '    return medium;\n' +
    '}\n' +
    'export function createMedium(defaults, middleware) {\n' +
    '    if (middleware === void 0) { middleware = ItoI; }\n' +
    '    return innerCreateMedium(defaults, middleware);\n' +
    '}\n' +
    '// eslint-disable-next-line @typescript-eslint/ban-types\n' +
    'export function createSidecarMedium(options) {\n' +
    '    if (options === void 0) { options = {}; }\n' +
    '    var medium = innerCreateMedium(null);\n' +
    '    medium.options = __assign({ async: true, ssr: false }, options);\n' +
    '    return medium;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'import { __assign } from "tslib";\n' +
    "import * as React from 'react';\n" +
    "import { useState, useCallback, useEffect, useLayoutEffect } from 'react';\n" +
    'export function renderCar(WrappedComponent, defaults) {\n' +
    '    function State(_a) {\n' +
    '        var stateRef = _a.stateRef, props = _a.props;\n' +
    '        var renderTarget = useCallback(function SideTarget() {\n' +
    '            var args = [];\n' +
    '            for (var _i = 0; _i < arguments.length; _i++) {\n' +
    '                args[_i] = arguments[_i];\n' +
    '            }\n' +
    '            useLayoutEffect(function () {\n' +
    '                stateRef.current(args);\n' +
    '            });\n' +
    '            return null;\n' +
    '        }, []);\n' +
    '        // @ts-ignore\n' +
    '        return React.createElement(WrappedComponent, __assign({}, props, { children: renderTarget }));\n' +
    '    }\n' +
    '    var Children = React.memo(function (_a) {\n' +
    '        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;\n' +
    '        var _b = useState(defaultState.current), state = _b[0], setState = _b[1];\n' +
    '        useEffect(function () {\n' +
    '            stateRef.current = setState;\n' +
    '        }, []);\n' +
    '        return children.apply(void 0, state);\n' +
    '    }, function () { return true; });\n' +
    '    return function Combiner(props) {\n' +
    '        var defaultState = React.useRef(defaults(props));\n' +
    '        var ref = React.useRef(function (state) { return (defaultState.current = state); });\n' +
    '        return (React.createElement(React.Fragment, null,\n' +
    '            React.createElement(State, { stateRef: ref, props: props }),\n' +
    '            React.createElement(Children, { stateRef: ref, defaultState: defaultState, children: props.children })));\n' +
    '    };\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_createCompounder.js";'
} [Function: logger]
____9999999____ {
  code: 'var browser = {}; export {browser as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/can-promise.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/qrcode.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/renderer/canvas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/renderer/svg-tag.js";'
} [Function: logger]
____9999999____ {
  code: 'import { __assign, __rest } from "tslib";\n' +
    "import * as React from 'react';\n" +
    'var SideCar = function (_a) {\n' +
    '    var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);\n' +
    '    if (!sideCar) {\n' +
    "        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n" +
    '    }\n' +
    '    var Target = sideCar.read();\n' +
    '    if (!Target) {\n' +
    "        throw new Error('Sidecar medium not found');\n" +
    '    }\n' +
    '    return React.createElement(Target, __assign({}, rest));\n' +
    '};\n' +
    'SideCar.isSideCarExport = true;\n' +
    'export function exportSidecar(medium, exported) {\n' +
    '    medium.useMedium(exported);\n' +
    '    return SideCar;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "export { styleSingleton } from './component';\n" +
    "export { stylesheetSingleton } from './singleton';\n" +
    "export { styleHookSingleton } from './hook';\n"
} [Function: logger]
____9999999____ {
  code: "import { RemoveScrollBar } from './component';\n" +
    "import { zeroRightClassName, fullWidthClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\n" +
    "import { getGapWidth } from './utils';\n" +
    'export { RemoveScrollBar, zeroRightClassName, fullWidthClassName, noScrollbarsClassName, removedBarSizeVariable, getGapWidth, };\n'
} [Function: logger]
____9999999____ {
  code: 'var passiveSupported = false;\n' +
    "if (typeof window !== 'undefined') {\n" +
    '    try {\n' +
    "        var options = Object.defineProperty({}, 'passive', {\n" +
    '            get: function () {\n' +
    '                passiveSupported = true;\n' +
    '                return true;\n' +
    '            },\n' +
    '        });\n' +
    '        // @ts-ignore\n' +
    "        window.addEventListener('test', options, options);\n" +
    '        // @ts-ignore\n' +
    "        window.removeEventListener('test', options, options);\n" +
    '    }\n' +
    '    catch (err) {\n' +
    '        passiveSupported = false;\n' +
    '    }\n' +
    '}\n' +
    'export var nonPassive = passiveSupported ? { passive: false } : false;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    '/**\n' +
    ' * Determines whether the specified URL is absolute\n' +
    ' *\n' +
    ' * @param {string} url The URL to test\n' +
    ' *\n' +
    ' * @returns {boolean} True if the specified URL is absolute, otherwise false\n' +
    ' */\n' +
    'export default function isAbsoluteURL(url) {\n' +
    '  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).\n' +
    '  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n' +
    '  // by any combination of letters, digits, plus, period, or hyphen.\n' +
    '  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'var elementCouldBeVScrolled = function (node) {\n' +
    '    var styles = window.getComputedStyle(node);\n' +
    "    return (styles.overflowY !== 'hidden' && // not-not-scrollable\n" +
    "        !(styles.overflowY === styles.overflowX && styles.overflowY === 'visible') // scrollable\n" +
    '    );\n' +
    '};\n' +
    'var elementCouldBeHScrolled = function (node) {\n' +
    '    var styles = window.getComputedStyle(node);\n' +
    "    return (styles.overflowX !== 'hidden' && // not-not-scrollable\n" +
    "        !(styles.overflowY === styles.overflowX && styles.overflowX === 'visible') // scrollable\n" +
    '    );\n' +
    '};\n' +
    'export var locationCouldBeScrolled = function (axis, node) {\n' +
    '    var current = node;\n' +
    '    do {\n' +
    '        // Skip over shadow root\n' +
    "        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n" +
    '            current = current.host;\n' +
    '        }\n' +
    '        var isScrollable = elementCouldBeScrolled(axis, current);\n' +
    '        if (isScrollable) {\n' +
    '            var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];\n' +
    '            if (s > d) {\n' +
    '                return true;\n' +
    '            }\n' +
    '        }\n' +
    '        current = current.parentNode;\n' +
    '    } while (current && current !== document.body);\n' +
    '    return false;\n' +
    '};\n' +
    'var getVScrollVariables = function (_a) {\n' +
    '    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n' +
    '    return [\n' +
    '        scrollTop,\n' +
    '        scrollHeight,\n' +
    '        clientHeight,\n' +
    '    ];\n' +
    '};\n' +
    'var getHScrollVariables = function (_a) {\n' +
    '    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n' +
    '    return [\n' +
    '        scrollLeft,\n' +
    '        scrollWidth,\n' +
    '        clientWidth,\n' +
    '    ];\n' +
    '};\n' +
    'var elementCouldBeScrolled = function (axis, node) {\n' +
    "    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n" +
    '};\n' +
    'var getScrollVariables = function (axis, node) {\n' +
    "    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n" +
    '};\n' +
    'var getDirectionFactor = function (axis, direction) {\n' +
    '    /**\n' +
    "     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n" +
    '     * and then increasingly negative as you scroll towards the end of the content.\n' +
    '     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n' +
    '     */\n' +
    "    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n" +
    '};\n' +
    'export var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n' +
    '    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n' +
    '    var delta = directionFactor * sourceDelta;\n' +
    '    // find scrollable target\n' +
    '    var target = event.target;\n' +
    '    var targetInLock = endTarget.contains(target);\n' +
    '    var shouldCancelScroll = false;\n' +
    '    var isDeltaPositive = delta > 0;\n' +
    '    var availableScroll = 0;\n' +
    '    var availableScrollTop = 0;\n' +
    '    do {\n' +
    '        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n' +
    '        var elementScroll = scroll_1 - capacity - directionFactor * position;\n' +
    '        if (position || elementScroll) {\n' +
    '            if (elementCouldBeScrolled(axis, target)) {\n' +
    '                availableScroll += elementScroll;\n' +
    '                availableScrollTop += position;\n' +
    '            }\n' +
    '        }\n' +
    '        target = target.parentNode;\n' +
    '    } while (\n' +
    '    // portaled content\n' +
    '    (!targetInLock && target !== document.body) ||\n' +
    '        // self content\n' +
    '        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n' +
    '    if (isDeltaPositive && ((noOverscroll && availableScroll === 0) || (!noOverscroll && delta > availableScroll))) {\n' +
    '        shouldCancelScroll = true;\n' +
    '    }\n' +
    '    else if (!isDeltaPositive &&\n' +
    '        ((noOverscroll && availableScrollTop === 0) || (!noOverscroll && -delta > availableScrollTop))) {\n' +
    '        shouldCancelScroll = true;\n' +
    '    }\n' +
    '    return shouldCancelScroll;\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'var buffer = {}; export {buffer as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/base64-js/index.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/ieee754/index.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/isarray/index.js";'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import toFormData from './toFormData.js';\n" +
    '\n' +
    '/**\n' +
    ' * It encodes a string by replacing all characters that are not in the unreserved set with\n' +
    ' * their percent-encoded equivalents\n' +
    ' *\n' +
    ' * @param {string} str - The string to encode.\n' +
    ' *\n' +
    ' * @returns {string} The encoded string.\n' +
    ' */\n' +
    'function encode(str) {\n' +
    '  const charMap = {\n' +
    "    '!': '%21',\n" +
    `    "'": '%27',\n` +
    "    '(': '%28',\n" +
    "    ')': '%29',\n" +
    "    '~': '%7E',\n" +
    "    '%20': '+',\n" +
    "    '%00': '\\x00'\n" +
    '  };\n' +
    "  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n" +
    '    return charMap[match];\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    '/**\n' +
    ' * It takes a params object and converts it to a FormData object\n' +
    ' *\n' +
    ' * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n' +
    ' * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n' +
    ' *\n' +
    ' * @returns {void}\n' +
    ' */\n' +
    'function AxiosURLSearchParams(params, options) {\n' +
    '  this._pairs = [];\n' +
    '\n' +
    '  params && toFormData(params, this, options);\n' +
    '}\n' +
    '\n' +
    'const prototype = AxiosURLSearchParams.prototype;\n' +
    '\n' +
    'prototype.append = function append(name, value) {\n' +
    '  this._pairs.push([name, value]);\n' +
    '};\n' +
    '\n' +
    'prototype.toString = function toString(encoder) {\n' +
    '  const _encode = encoder ? function(value) {\n' +
    '    return encoder.call(this, value, encode);\n' +
    '  } : encode;\n' +
    '\n' +
    '  return this._pairs.map(function each(pair) {\n' +
    "    return _encode(pair[0]) + '=' + _encode(pair[1]);\n" +
    "  }, '').join('&');\n" +
    '};\n' +
    '\n' +
    'export default AxiosURLSearchParams;\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    "import defaults from '../defaults/index.js';\n" +
    "import AxiosHeaders from '../core/AxiosHeaders.js';\n" +
    '\n' +
    '/**\n' +
    ' * Transform the data for a request or a response\n' +
    ' *\n' +
    ' * @param {Array|Function} fns A single function or Array of functions\n' +
    ' * @param {?Object} response The response object\n' +
    ' *\n' +
    ' * @returns {*} The resulting transformed data\n' +
    ' */\n' +
    'export default function transformData(fns, response) {\n' +
    '  const config = this || defaults;\n' +
    '  const context = response || config;\n' +
    '  const headers = AxiosHeaders.from(context.headers);\n' +
    '  let data = context.data;\n' +
    '\n' +
    '  utils.forEach(fns, function transform(fn) {\n' +
    '    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n' +
    '  });\n' +
    '\n' +
    '  headers.normalize();\n' +
    '\n' +
    '  return data;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    '/**\n' +
    ' * Creates a new URL by combining the specified URLs\n' +
    ' *\n' +
    ' * @param {string} baseURL The base URL\n' +
    ' * @param {string} relativeURL The relative URL\n' +
    ' *\n' +
    ' * @returns {string} The combined URL\n' +
    ' */\n' +
    'export default function combineURLs(baseURL, relativeURL) {\n' +
    '  return relativeURL\n' +
    "    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n" +
    '    : baseURL;\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "import URLSearchParams from './classes/URLSearchParams.js'\n" +
    "import FormData from './classes/FormData.js'\n" +
    "import Blob from './classes/Blob.js'\n" +
    '\n' +
    'export default {\n' +
    '  isBrowser: true,\n' +
    '  classes: {\n' +
    '    URLSearchParams,\n' +
    '    FormData,\n' +
    '    Blob\n' +
    '  },\n' +
    "  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n" +
    '};\n'
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;\n' +
    'var convertToBuffer_1 = require("./convertToBuffer");\n' +
    'Object.defineProperty(exports, "convertToBuffer", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });\n' +
    'var isEmptyData_1 = require("./isEmptyData");\n' +
    'Object.defineProperty(exports, "isEmptyData", { enumerable: true, get: function () { return isEmptyData_1.isEmptyData; } });\n' +
    'var numToUint8_1 = require("./numToUint8");\n' +
    'Object.defineProperty(exports, "numToUint8", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });\n' +
    'var uint32ArrayFrom_1 = require("./uint32ArrayFrom");\n' +
    'Object.defineProperty(exports, "uint32ArrayFrom", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9FQUFvRTtBQUNwRSxzQ0FBc0M7OztBQUV0QyxxREFBb0Q7QUFBM0Msa0hBQUEsZUFBZSxPQUFBO0FBQ3hCLDZDQUE0QztBQUFuQywwR0FBQSxXQUFXLE9BQUE7QUFDcEIsMkNBQTBDO0FBQWpDLHdHQUFBLFVBQVUsT0FBQTtBQUNuQixxREFBa0Q7QUFBMUMsa0hBQUEsZUFBZSxPQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEFtYXpvbi5jb20gSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG5cbmV4cG9ydCB7IGNvbnZlcnRUb0J1ZmZlciB9IGZyb20gXCIuL2NvbnZlcnRUb0J1ZmZlclwiO1xuZXhwb3J0IHsgaXNFbXB0eURhdGEgfSBmcm9tIFwiLi9pc0VtcHR5RGF0YVwiO1xuZXhwb3J0IHsgbnVtVG9VaW50OCB9IGZyb20gXCIuL251bVRvVWludDhcIjtcbmV4cG9ydCB7dWludDMyQXJyYXlGcm9tfSBmcm9tICcuL3VpbnQzMkFycmF5RnJvbSc7XG4iXX0='
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'exports.BLOCK_SIZE = 64;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'exports.DIGEST_LENGTH = 32;\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'exports.KEY = new Uint32Array([\n' +
    '    0x428a2f98,\n' +
    '    0x71374491,\n' +
    '    0xb5c0fbcf,\n' +
    '    0xe9b5dba5,\n' +
    '    0x3956c25b,\n' +
    '    0x59f111f1,\n' +
    '    0x923f82a4,\n' +
    '    0xab1c5ed5,\n' +
    '    0xd807aa98,\n' +
    '    0x12835b01,\n' +
    '    0x243185be,\n' +
    '    0x550c7dc3,\n' +
    '    0x72be5d74,\n' +
    '    0x80deb1fe,\n' +
    '    0x9bdc06a7,\n' +
    '    0xc19bf174,\n' +
    '    0xe49b69c1,\n' +
    '    0xefbe4786,\n' +
    '    0x0fc19dc6,\n' +
    '    0x240ca1cc,\n' +
    '    0x2de92c6f,\n' +
    '    0x4a7484aa,\n' +
    '    0x5cb0a9dc,\n' +
    '    0x76f988da,\n' +
    '    0x983e5152,\n' +
    '    0xa831c66d,\n' +
    '    0xb00327c8,\n' +
    '    0xbf597fc7,\n' +
    '    0xc6e00bf3,\n' +
    '    0xd5a79147,\n' +
    '    0x06ca6351,\n' +
    '    0x14292967,\n' +
    '    0x27b70a85,\n' +
    '    0x2e1b2138,\n' +
    '    0x4d2c6dfc,\n' +
    '    0x53380d13,\n' +
    '    0x650a7354,\n' +
    '    0x766a0abb,\n' +
    '    0x81c2c92e,\n' +
    '    0x92722c85,\n' +
    '    0xa2bfe8a1,\n' +
    '    0xa81a664b,\n' +
    '    0xc24b8b70,\n' +
    '    0xc76c51a3,\n' +
    '    0xd192e819,\n' +
    '    0xd6990624,\n' +
    '    0xf40e3585,\n' +
    '    0x106aa070,\n' +
    '    0x19a4c116,\n' +
    '    0x1e376c08,\n' +
    '    0x2748774c,\n' +
    '    0x34b0bcb5,\n' +
    '    0x391c0cb3,\n' +
    '    0x4ed8aa4a,\n' +
    '    0x5b9cca4f,\n' +
    '    0x682e6ff3,\n' +
    '    0x748f82ee,\n' +
    '    0x78a5636f,\n' +
    '    0x84c87814,\n' +
    '    0x8cc70208,\n' +
    '    0x90befffa,\n' +
    '    0xa4506ceb,\n' +
    '    0xbef9a3f7,\n' +
    '    0xc67178f2\n' +
    ']);\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'exports.INIT = [\n' +
    '    0x6a09e667,\n' +
    '    0xbb67ae85,\n' +
    '    0x3c6ef372,\n' +
    '    0xa54ff53a,\n' +
    '    0x510e527f,\n' +
    '    0x9b05688c,\n' +
    '    0x1f83d9ab,\n' +
    '    0x5be0cd19\n' +
    '];\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'exports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNVLFFBQUEsVUFBVSxHQUFXLEVBQUUsQ0FBQztBQUVyQzs7R0FFRztBQUNVLFFBQUEsYUFBYSxHQUFXLEVBQUUsQ0FBQztBQUV4Qzs7R0FFRztBQUNVLFFBQUEsR0FBRyxHQUFHLElBQUksV0FBVyxDQUFDO0lBQ2pDLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7Q0FDWCxDQUFDLENBQUM7QUFFSDs7R0FFRztBQUNVLFFBQUEsSUFBSSxHQUFHO0lBQ2xCLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0NBQ1gsQ0FBQztBQUVGOztHQUVHO0FBQ1UsUUFBQSxtQkFBbUIsR0FBRyxTQUFBLENBQUMsRUFBSSxFQUFFLENBQUEsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgQkxPQ0tfU0laRTogbnVtYmVyID0gNjQ7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBESUdFU1RfTEVOR1RIOiBudW1iZXIgPSAzMjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IEtFWSA9IG5ldyBVaW50MzJBcnJheShbXG4gIDB4NDI4YTJmOTgsXG4gIDB4NzEzNzQ0OTEsXG4gIDB4YjVjMGZiY2YsXG4gIDB4ZTliNWRiYTUsXG4gIDB4Mzk1NmMyNWIsXG4gIDB4NTlmMTExZjEsXG4gIDB4OTIzZjgyYTQsXG4gIDB4YWIxYzVlZDUsXG4gIDB4ZDgwN2FhOTgsXG4gIDB4MTI4MzViMDEsXG4gIDB4MjQzMTg1YmUsXG4gIDB4NTUwYzdkYzMsXG4gIDB4NzJiZTVkNzQsXG4gIDB4ODBkZWIxZmUsXG4gIDB4OWJkYzA2YTcsXG4gIDB4YzE5YmYxNzQsXG4gIDB4ZTQ5YjY5YzEsXG4gIDB4ZWZiZTQ3ODYsXG4gIDB4MGZjMTlkYzYsXG4gIDB4MjQwY2ExY2MsXG4gIDB4MmRlOTJjNmYsXG4gIDB4NGE3NDg0YWEsXG4gIDB4NWNiMGE5ZGMsXG4gIDB4NzZmOTg4ZGEsXG4gIDB4OTgzZTUxNTIsXG4gIDB4YTgzMWM2NmQsXG4gIDB4YjAwMzI3YzgsXG4gIDB4YmY1OTdmYzcsXG4gIDB4YzZlMDBiZjMsXG4gIDB4ZDVhNzkxNDcsXG4gIDB4MDZjYTYzNTEsXG4gIDB4MTQyOTI5NjcsXG4gIDB4MjdiNzBhODUsXG4gIDB4MmUxYjIxMzgsXG4gIDB4NGQyYzZkZmMsXG4gIDB4NTMzODBkMTMsXG4gIDB4NjUwYTczNTQsXG4gIDB4NzY2YTBhYmIsXG4gIDB4ODFjMmM5MmUsXG4gIDB4OTI3MjJjODUsXG4gIDB4YTJiZmU4YTEsXG4gIDB4YTgxYTY2NGIsXG4gIDB4YzI0YjhiNzAsXG4gIDB4Yzc2YzUxYTMsXG4gIDB4ZDE5MmU4MTksXG4gIDB4ZDY5OTA2MjQsXG4gIDB4ZjQwZTM1ODUsXG4gIDB4MTA2YWEwNzAsXG4gIDB4MTlhNGMxMTYsXG4gIDB4MWUzNzZjMDgsXG4gIDB4Mjc0ODc3NGMsXG4gIDB4MzRiMGJjYjUsXG4gIDB4MzkxYzBjYjMsXG4gIDB4NGVkOGFhNGEsXG4gIDB4NWI5Y2NhNGYsXG4gIDB4NjgyZTZmZjMsXG4gIDB4NzQ4ZjgyZWUsXG4gIDB4NzhhNTYzNmYsXG4gIDB4ODRjODc4MTQsXG4gIDB4OGNjNzAyMDgsXG4gIDB4OTBiZWZmZmEsXG4gIDB4YTQ1MDZjZWIsXG4gIDB4YmVmOWEzZjcsXG4gIDB4YzY3MTc4ZjJcbl0pO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgSU5JVCA9IFtcbiAgMHg2YTA5ZTY2NyxcbiAgMHhiYjY3YWU4NSxcbiAgMHgzYzZlZjM3MixcbiAgMHhhNTRmZjUzYSxcbiAgMHg1MTBlNTI3ZixcbiAgMHg5YjA1Njg4YyxcbiAgMHgxZjgzZDlhYixcbiAgMHg1YmUwY2QxOVxuXTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IE1BWF9IQVNIQUJMRV9MRU5HVEggPSAyICoqIDUzIC0gMTtcbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.RawSha256 = void 0;\n' +
    'var constants_1 = require("./constants");\n' +
    '/**\n' +
    ' * @internal\n' +
    ' */\n' +
    'var RawSha256 = /** @class */ (function () {\n' +
    '    function RawSha256() {\n' +
    '        this.state = Int32Array.from(constants_1.INIT);\n' +
    '        this.temp = new Int32Array(64);\n' +
    '        this.buffer = new Uint8Array(64);\n' +
    '        this.bufferLength = 0;\n' +
    '        this.bytesHashed = 0;\n' +
    '        /**\n' +
    '         * @internal\n' +
    '         */\n' +
    '        this.finished = false;\n' +
    '    }\n' +
    '    RawSha256.prototype.update = function (data) {\n' +
    '        if (this.finished) {\n' +
    '            throw new Error("Attempted to update an already finished hash.");\n' +
    '        }\n' +
    '        var position = 0;\n' +
    '        var byteLength = data.byteLength;\n' +
    '        this.bytesHashed += byteLength;\n' +
    '        if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {\n' +
    '            throw new Error("Cannot hash more than 2^53 - 1 bits");\n' +
    '        }\n' +
    '        while (byteLength > 0) {\n' +
    '            this.buffer[this.bufferLength++] = data[position++];\n' +
    '            byteLength--;\n' +
    '            if (this.bufferLength === constants_1.BLOCK_SIZE) {\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '        }\n' +
    '    };\n' +
    '    RawSha256.prototype.digest = function () {\n' +
    '        if (!this.finished) {\n' +
    '            var bitsHashed = this.bytesHashed * 8;\n' +
    '            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n' +
    '            var undecoratedLength = this.bufferLength;\n' +
    '            bufferView.setUint8(this.bufferLength++, 0x80);\n' +
    '            // Ensure the final block has enough room for the hashed length\n' +
    '            if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {\n' +
    '                for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {\n' +
    '                    bufferView.setUint8(i, 0);\n' +
    '                }\n' +
    '                this.hashBuffer();\n' +
    '                this.bufferLength = 0;\n' +
    '            }\n' +
    '            for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {\n' +
    '                bufferView.setUint8(i, 0);\n' +
    '            }\n' +
    '            bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n' +
    '            bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);\n' +
    '            this.hashBuffer();\n' +
    '            this.finished = true;\n' +
    '        }\n' +
    '        // The value in state is little-endian rather than big-endian, so flip\n' +
    '        // each word into a new Uint8Array\n' +
    '        var out = new Uint8Array(constants_1.DIGEST_LENGTH);\n' +
    '        for (var i = 0; i < 8; i++) {\n' +
    '            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n' +
    '            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n' +
    '            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n' +
    '            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n' +
    '        }\n' +
    '        return out;\n' +
    '    };\n' +
    '    RawSha256.prototype.hashBuffer = function () {\n' +
    '        var _a = this, buffer = _a.buffer, state = _a.state;\n' +
    '        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n' +
    '        for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n' +
    '            if (i < 16) {\n' +
    '                this.temp[i] =\n' +
    '                    ((buffer[i * 4] & 0xff) << 24) |\n' +
    '                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n' +
    '                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n' +
    '                        (buffer[i * 4 + 3] & 0xff);\n' +
    '            }\n' +
    '            else {\n' +
    '                var u = this.temp[i - 2];\n' +
    '                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n' +
    '                u = this.temp[i - 15];\n' +
    '                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n' +
    '                this.temp[i] =\n' +
    '                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n' +
    '            }\n' +
    '            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n' +
    '                ((state4 >>> 11) | (state4 << 21)) ^\n' +
    '                ((state4 >>> 25) | (state4 << 7))) +\n' +
    '                ((state4 & state5) ^ (~state4 & state6))) |\n' +
    '                0) +\n' +
    '                ((state7 + ((constants_1.KEY[i] + this.temp[i]) | 0)) | 0)) |\n' +
    '                0;\n' +
    '            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n' +
    '                ((state0 >>> 13) | (state0 << 19)) ^\n' +
    '                ((state0 >>> 22) | (state0 << 10))) +\n' +
    '                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n' +
    '                0;\n' +
    '            state7 = state6;\n' +
    '            state6 = state5;\n' +
    '            state5 = state4;\n' +
    '            state4 = (state3 + t1) | 0;\n' +
    '            state3 = state2;\n' +
    '            state2 = state1;\n' +
    '            state1 = state0;\n' +
    '            state0 = (t1 + t2) | 0;\n' +
    '        }\n' +
    '        state[0] += state0;\n' +
    '        state[1] += state1;\n' +
    '        state[2] += state2;\n' +
    '        state[3] += state3;\n' +
    '        state[4] += state4;\n' +
    '        state[5] += state5;\n' +
    '        state[6] += state6;\n' +
    '        state[7] += state7;\n' +
    '    };\n' +
    '    return RawSha256;\n' +
    '}());\n' +
    'exports.RawSha256 = RawSha256;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmF3U2hhMjU2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1Jhd1NoYTI1Ni50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FNcUI7QUFFckI7O0dBRUc7QUFDSDtJQUFBO1FBQ1UsVUFBSyxHQUFlLFVBQVUsQ0FBQyxJQUFJLENBQUMsZ0JBQUksQ0FBQyxDQUFDO1FBQzFDLFNBQUksR0FBZSxJQUFJLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0QyxXQUFNLEdBQWUsSUFBSSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDeEMsaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDekIsZ0JBQVcsR0FBVyxDQUFDLENBQUM7UUFFaEM7O1dBRUc7UUFDSCxhQUFRLEdBQVksS0FBSyxDQUFDO0lBOEk1QixDQUFDO0lBNUlDLDBCQUFNLEdBQU4sVUFBTyxJQUFnQjtRQUNyQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO1NBQ2xFO1FBRUQsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBQSxVQUFVLEdBQUssSUFBSSxXQUFULENBQVU7UUFDMUIsSUFBSSxDQUFDLFdBQVcsSUFBSSxVQUFVLENBQUM7UUFFL0IsSUFBSSxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsR0FBRywrQkFBbUIsRUFBRTtZQUM5QyxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7U0FDeEQ7UUFFRCxPQUFPLFVBQVUsR0FBRyxDQUFDLEVBQUU7WUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUNwRCxVQUFVLEVBQUUsQ0FBQztZQUViLElBQUksSUFBSSxDQUFDLFlBQVksS0FBSyxzQkFBVSxFQUFFO2dCQUNwQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7Z0JBQ2xCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO2FBQ3ZCO1NBQ0Y7SUFDSCxDQUFDO0lBRUQsMEJBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1lBQ3hDLElBQU0sVUFBVSxHQUFHLElBQUksUUFBUSxDQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFDbEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQ3RCLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUN2QixDQUFDO1lBRUYsSUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQzVDLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBRS9DLCtEQUErRDtZQUMvRCxJQUFJLGlCQUFpQixHQUFHLHNCQUFVLElBQUksc0JBQVUsR0FBRyxDQUFDLEVBQUU7Z0JBQ3BELEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEdBQUcsc0JBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDbkQsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQzNCO2dCQUNELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7YUFDdkI7WUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxHQUFHLHNCQUFVLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN2RCxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUMzQjtZQUNELFVBQVUsQ0FBQyxTQUFTLENBQ2xCLHNCQUFVLEdBQUcsQ0FBQyxFQUNkLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLFdBQVcsQ0FBQyxFQUNwQyxJQUFJLENBQ0wsQ0FBQztZQUNGLFVBQVUsQ0FBQyxTQUFTLENBQUMsc0JBQVUsR0FBRyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFFakQsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBRWxCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1NBQ3RCO1FBRUQsc0VBQXNFO1FBQ3RFLGtDQUFrQztRQUNsQyxJQUFNLEdBQUcsR0FBRyxJQUFJLFVBQVUsQ0FBQyx5QkFBYSxDQUFDLENBQUM7UUFDMUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQixHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDM0MsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQztZQUMvQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQzlDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDL0M7UUFFRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFTyw4QkFBVSxHQUFsQjtRQUNRLElBQUEsS0FBb0IsSUFBSSxFQUF0QixNQUFNLFlBQUEsRUFBRSxLQUFLLFdBQVMsQ0FBQztRQUUvQixJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ25CLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQ2pCLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLHNCQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUNWLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQzt3QkFDOUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQzt3QkFDbEMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDakMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQzthQUM5QjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDekIsSUFBTSxJQUFFLEdBQ04sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUF'... 8781 more characters
} [Function: logger]
____9999999____ {
  code: "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n" +
    '\n' +
    '/**\n' +
    " * Determine if we're running in a standard browser environment\n" +
    ' *\n' +
    ' * This allows axios to run in a web worker, and react-native.\n' +
    ' * Both environments support XMLHttpRequest, but not fully standard globals.\n' +
    ' *\n' +
    ' * web workers:\n' +
    ' *  typeof window -> undefined\n' +
    ' *  typeof document -> undefined\n' +
    ' *\n' +
    ' * react-native:\n' +
    " *  navigator.product -> 'ReactNative'\n" +
    ' * nativescript\n' +
    " *  navigator.product -> 'NativeScript' or 'NS'\n" +
    ' *\n' +
    ' * @returns {boolean}\n' +
    ' */\n' +
    'const hasStandardBrowserEnv = (\n' +
    '  (product) => {\n' +
    "    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n" +
    "  })(typeof navigator !== 'undefined' && navigator.product);\n" +
    '\n' +
    '/**\n' +
    " * Determine if we're running in a standard browser webWorker environment\n" +
    ' *\n' +
    ' * Although the `isStandardBrowserEnv` method indicates that\n' +
    ' * `allows axios to run in a web worker`, the WebWorker will still be\n' +
    ' * filtered out due to its judgment standard\n' +
    " * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n" +
    ' * This leads to a problem when axios post `FormData` in webWorker\n' +
    ' */\n' +
    'const hasStandardBrowserWebWorkerEnv = (() => {\n' +
    '  return (\n' +
    "    typeof WorkerGlobalScope !== 'undefined' &&\n" +
    '    // eslint-disable-next-line no-undef\n' +
    '    self instanceof WorkerGlobalScope &&\n' +
    "    typeof self.importScripts === 'function'\n" +
    '  );\n' +
    '})();\n' +
    '\n' +
    'export {\n' +
    '  hasBrowserEnv,\n' +
    '  hasStandardBrowserWebWorkerEnv,\n' +
    '  hasStandardBrowserEnv\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import AxiosError from './AxiosError.js';\n" +
    '\n' +
    '/**\n' +
    ' * Resolve or reject a Promise based on response status.\n' +
    ' *\n' +
    ' * @param {Function} resolve A function that resolves the promise.\n' +
    ' * @param {Function} reject A function that rejects the promise.\n' +
    ' * @param {object} response The response.\n' +
    ' *\n' +
    ' * @returns {object} The response.\n' +
    ' */\n' +
    'export default function settle(resolve, reject, response) {\n' +
    '  const validateStatus = response.config.validateStatus;\n' +
    '  if (!response.status || !validateStatus || validateStatus(response.status)) {\n' +
    '    resolve(response);\n' +
    '  } else {\n' +
    '    reject(new AxiosError(\n' +
    "      'Request failed with status code ' + response.status,\n" +
    '      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n' +
    '      response.config,\n' +
    '      response.request,\n' +
    '      response\n' +
    '    ));\n' +
    '  }\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_freeGlobal.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_trimmedEndIndex.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseGetTag.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isObjectLike.js";'
} [Function: logger]
____9999999____ {
  code: "import utils from './../utils.js';\n" +
    "import platform from '../platform/index.js';\n" +
    '\n' +
    'export default platform.hasStandardBrowserEnv ?\n' +
    '\n' +
    '  // Standard browser envs support document.cookie\n' +
    '  {\n' +
    '    write(name, value, expires, path, domain, secure) {\n' +
    "      const cookie = [name + '=' + encodeURIComponent(value)];\n" +
    '\n' +
    "      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n" +
    '\n' +
    "      utils.isString(path) && cookie.push('path=' + path);\n" +
    '\n' +
    "      utils.isString(domain) && cookie.push('domain=' + domain);\n" +
    '\n' +
    "      secure === true && cookie.push('secure');\n" +
    '\n' +
    "      document.cookie = cookie.join('; ');\n" +
    '    },\n' +
    '\n' +
    '    read(name) {\n' +
    "      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n" +
    '      return (match ? decodeURIComponent(match[3]) : null);\n' +
    '    },\n' +
    '\n' +
    '    remove(name) {\n' +
    "      this.write(name, '', Date.now() - 86400000);\n" +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  :\n' +
    '\n' +
    '  // Non-standard browser env (web workers, react-native) lack needed support.\n' +
    '  {\n' +
    '    write() {},\n' +
    '    read() {\n' +
    '      return null;\n' +
    '    },\n' +
    '    remove() {}\n' +
    '  };\n' +
    '\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import utils from './../utils.js';\n" +
    "import platform from '../platform/index.js';\n" +
    '\n' +
    'export default platform.hasStandardBrowserEnv ?\n' +
    '\n' +
    '// Standard browser envs have full support of the APIs needed to test\n' +
    '// whether the request URL is of the same origin as current location.\n' +
    '  (function standardBrowserEnv() {\n' +
    '    const msie = /(msie|trident)/i.test(navigator.userAgent);\n' +
    "    const urlParsingNode = document.createElement('a');\n" +
    '    let originURL;\n' +
    '\n' +
    '    /**\n' +
    '    * Parse a URL to discover its components\n' +
    '    *\n' +
    '    * @param {String} url The URL to be parsed\n' +
    '    * @returns {Object}\n' +
    '    */\n' +
    '    function resolveURL(url) {\n' +
    '      let href = url;\n' +
    '\n' +
    '      if (msie) {\n' +
    '        // IE needs attribute set twice to normalize properties\n' +
    "        urlParsingNode.setAttribute('href', href);\n" +
    '        href = urlParsingNode.href;\n' +
    '      }\n' +
    '\n' +
    "      urlParsingNode.setAttribute('href', href);\n" +
    '\n' +
    '      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n' +
    '      return {\n' +
    '        href: urlParsingNode.href,\n' +
    "        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n" +
    '        host: urlParsingNode.host,\n' +
    "        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n" +
    "        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n" +
    '        hostname: urlParsingNode.hostname,\n' +
    '        port: urlParsingNode.port,\n' +
    "        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n" +
    '          urlParsingNode.pathname :\n' +
    "          '/' + urlParsingNode.pathname\n" +
    '      };\n' +
    '    }\n' +
    '\n' +
    '    originURL = resolveURL(window.location.href);\n' +
    '\n' +
    '    /**\n' +
    '    * Determine if a URL shares the same origin as the current location\n' +
    '    *\n' +
    '    * @param {String} requestURL The URL to test\n' +
    '    * @returns {boolean} True if URL shares the same origin, otherwise false\n' +
    '    */\n' +
    '    return function isURLSameOrigin(requestURL) {\n' +
    '      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n' +
    '      return (parsed.protocol === originURL.protocol &&\n' +
    '          parsed.host === originURL.host);\n' +
    '    };\n' +
    '  })() :\n' +
    '\n' +
    '  // Non standard browser envs (web workers, react-native) lack needed support.\n' +
    '  (function nonStandardBrowserEnv() {\n' +
    '    return function isURLSameOrigin() {\n' +
    '      return true;\n' +
    '    };\n' +
    '  })();\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    'export default function parseProtocol(url) {\n' +
    '  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n' +
    "  return match && match[1] || '';\n" +
    '}\n'
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    '/**\n' +
    ' * Calculate data maxRate\n' +
    ' * @param {Number} [samplesCount= 10]\n' +
    ' * @param {Number} [min= 1000]\n' +
    ' * @returns {Function}\n' +
    ' */\n' +
    'function speedometer(samplesCount, min) {\n' +
    '  samplesCount = samplesCount || 10;\n' +
    '  const bytes = new Array(samplesCount);\n' +
    '  const timestamps = new Array(samplesCount);\n' +
    '  let head = 0;\n' +
    '  let tail = 0;\n' +
    '  let firstSampleTS;\n' +
    '\n' +
    '  min = min !== undefined ? min : 1000;\n' +
    '\n' +
    '  return function push(chunkLength) {\n' +
    '    const now = Date.now();\n' +
    '\n' +
    '    const startedAt = timestamps[tail];\n' +
    '\n' +
    '    if (!firstSampleTS) {\n' +
    '      firstSampleTS = now;\n' +
    '    }\n' +
    '\n' +
    '    bytes[head] = chunkLength;\n' +
    '    timestamps[head] = now;\n' +
    '\n' +
    '    let i = tail;\n' +
    '    let bytesCount = 0;\n' +
    '\n' +
    '    while (i !== head) {\n' +
    '      bytesCount += bytes[i++];\n' +
    '      i = i % samplesCount;\n' +
    '    }\n' +
    '\n' +
    '    head = (head + 1) % samplesCount;\n' +
    '\n' +
    '    if (head === tail) {\n' +
    '      tail = (tail + 1) % samplesCount;\n' +
    '    }\n' +
    '\n' +
    '    if (now - firstSampleTS < min) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    const passed = startedAt && now - startedAt;\n' +
    '\n' +
    '    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'export default speedometer;\n'
} [Function: logger]
____9999999____ {
  code: "var eq = require('./eq');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the index at which the `key` is found in `array` of key-value pairs.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} array The array to inspect.\n' +
    ' * @param {*} key The key to search for.\n' +
    ' * @returns {number} Returns the index of the matched value, else `-1`.\n' +
    ' */\n' +
    'function assocIndexOf(array, key) {\n' +
    '  var length = array.length;\n' +
    '  while (length--) {\n' +
    '    if (eq(array[length][0], key)) {\n' +
    '      return length;\n' +
    '    }\n' +
    '  }\n' +
    '  return -1;\n' +
    '}\n' +
    '\n' +
    'module.exports = assocIndexOf;\n'
} [Function: logger]
____9999999____ {
  code: "var Hash = require('./_Hash'),\n" +
    "    ListCache = require('./_ListCache'),\n" +
    "    Map = require('./_Map');\n" +
    '\n' +
    '/**\n' +
    ' * Removes all key-value entries from the map.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name clear\n' +
    ' * @memberOf MapCache\n' +
    ' */\n' +
    'function mapCacheClear() {\n' +
    '  this.size = 0;\n' +
    '  this.__data__ = {\n' +
    "    'hash': new Hash,\n" +
    "    'map': new (Map || ListCache),\n" +
    "    'string': new Hash\n" +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = mapCacheClear;\n'
} [Function: logger]
____9999999____ {
  code: "var getMapData = require('./_getMapData');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the map value for `key`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name get\n' +
    ' * @memberOf MapCache\n' +
    ' * @param {string} key The key of the value to get.\n' +
    ' * @returns {*} Returns the entry value.\n' +
    ' */\n' +
    'function mapCacheGet(key) {\n' +
    '  return getMapData(this, key).get(key);\n' +
    '}\n' +
    '\n' +
    'module.exports = mapCacheGet;\n'
} [Function: logger]
____9999999____ {
  code: "var getMapData = require('./_getMapData');\n" +
    '\n' +
    '/**\n' +
    ' * Removes `key` and its value from the map.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name delete\n' +
    ' * @memberOf MapCache\n' +
    ' * @param {string} key The key of the value to remove.\n' +
    ' * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n' +
    ' */\n' +
    'function mapCacheDelete(key) {\n' +
    "  var result = getMapData(this, key)['delete'](key);\n" +
    '  this.size -= result ? 1 : 0;\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = mapCacheDelete;\n'
} [Function: logger]
____9999999____ {
  code: "var getMapData = require('./_getMapData');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if a map value for `key` exists.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name has\n' +
    ' * @memberOf MapCache\n' +
    ' * @param {string} key The key of the entry to check.\n' +
    ' * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n' +
    ' */\n' +
    'function mapCacheHas(key) {\n' +
    '  return getMapData(this, key).has(key);\n' +
    '}\n' +
    '\n' +
    'module.exports = mapCacheHas;\n'
} [Function: logger]
____9999999____ {
  code: "var getMapData = require('./_getMapData');\n" +
    '\n' +
    '/**\n' +
    ' * Sets the map `key` to `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name set\n' +
    ' * @memberOf MapCache\n' +
    ' * @param {string} key The key of the value to set.\n' +
    ' * @param {*} value The value to set.\n' +
    ' * @returns {Object} Returns the map cache instance.\n' +
    ' */\n' +
    'function mapCacheSet(key, value) {\n' +
    '  var data = getMapData(this, key),\n' +
    '      size = data.size;\n' +
    '\n' +
    '  data.set(key, value);\n' +
    '  this.size += data.size == size ? 0 : 1;\n' +
    '  return this;\n' +
    '}\n' +
    '\n' +
    'module.exports = mapCacheSet;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A specialized version of `_.filter` for arrays without support for\n' +
    ' * iteratee shorthands.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Array} [array] The array to iterate over.\n' +
    ' * @param {Function} predicate The function invoked per iteration.\n' +
    ' * @returns {Array} Returns the new filtered array.\n' +
    ' */\n' +
    'function arrayFilter(array, predicate) {\n' +
    '  var index = -1,\n' +
    '      length = array == null ? 0 : array.length,\n' +
    '      resIndex = 0,\n' +
    '      result = [];\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    var value = array[index];\n' +
    '    if (predicate(value, index, array)) {\n' +
    '      result[resIndex++] = value;\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = arrayFilter;\n'
} [Function: logger]
____9999999____ {
  code: 'export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||"get",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+","+t:t}),t(a())},s.onerror=r,s.withCredentials="include"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n' +
    '//# sourceMappingURL=unfetch.module.js.map\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arrayReduce.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/deburr.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/words.js";'
} [Function: logger]
____9999999____ {
  code: 'var qrcode = {}; export {qrcode as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/utils.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/error-correction-level.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/bit-buffer.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/bit-matrix.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/alignment-pattern.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/finder-pattern.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/mask-pattern.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/error-correction-code.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/reed-solomon-encoder.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/version.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/format-info.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/mode.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/segments.js";'
} [Function: logger]
____9999999____ {
  code: 'var canvas = {}; export {canvas as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/renderer/utils.js";'
} [Function: logger]
____9999999____ {
  code: 'var svgTag = {}; export {svgTag as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "var isPrototype = require('./_isPrototype'),\n" +
    "    nativeKeys = require('./_nativeKeys');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    " * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n" +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' */\n' +
    'function baseKeys(object) {\n' +
    '  if (!isPrototype(object)) {\n' +
    '    return nativeKeys(object);\n' +
    '  }\n' +
    '  var result = [];\n' +
    '  for (var key in Object(object)) {\n' +
    "    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n" +
    '      result.push(key);\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseKeys;\n'
} [Function: logger]
____9999999____ {
  code: "var isFunction = require('./isFunction'),\n" +
    "    isMasked = require('./_isMasked'),\n" +
    "    isObject = require('./isObject'),\n" +
    "    toSource = require('./_toSource');\n" +
    '\n' +
    '/**\n' +
    ' * Used to match `RegExp`\n' +
    ' * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n' +
    ' */\n' +
    'var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n' +
    '\n' +
    '/** Used to detect host constructors (Safari). */\n' +
    'var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n' +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var funcProto = Function.prototype,\n' +
    '    objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to resolve the decompiled source of functions. */\n' +
    'var funcToString = funcProto.toString;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/** Used to detect if a method is native. */\n' +
    "var reIsNative = RegExp('^' +\n" +
    "  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n" +
    "  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n" +
    ');\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.isNative` without bad shim checks.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a native function,\n' +
    ' *  else `false`.\n' +
    ' */\n' +
    'function baseIsNative(value) {\n' +
    '  if (!isObject(value) || isMasked(value)) {\n' +
    '    return false;\n' +
    '  }\n' +
    '  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n' +
    '  return pattern.test(toSource(value));\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsNative;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Gets the value at `key` of `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} [object] The object to query.\n' +
    ' * @param {string} key The key of the property to get.\n' +
    ' * @returns {*} Returns the property value.\n' +
    ' */\n' +
    'function getValue(object, key) {\n' +
    '  return object == null ? undefined : object[key];\n' +
    '}\n' +
    '\n' +
    'module.exports = getValue;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * The base implementation of `_.hasIn` without support for deep paths.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} [object] The object to query.\n' +
    ' * @param {Array|string} key The key to check.\n' +
    ' * @returns {boolean} Returns `true` if `key` exists, else `false`.\n' +
    ' */\n' +
    'function baseHasIn(object, key) {\n' +
    '  return object != null && key in Object(object);\n' +
    '}\n' +
    '\n' +
    'module.exports = baseHasIn;\n'
} [Function: logger]
____9999999____ {
  code: "var memoize = require('./memoize');\n" +
    '\n' +
    '/** Used as the maximum memoize cache size. */\n' +
    'var MAX_MEMOIZE_SIZE = 500;\n' +
    '\n' +
    '/**\n' +
    " * A specialized version of `_.memoize` which clears the memoized function's\n" +
    ' * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to have its output memoized.\n' +
    ' * @returns {Function} Returns the new memoized function.\n' +
    ' */\n' +
    'function memoizeCapped(func) {\n' +
    '  var result = memoize(func, function(key) {\n' +
    '    if (cache.size === MAX_MEMOIZE_SIZE) {\n' +
    '      cache.clear();\n' +
    '    }\n' +
    '    return key;\n' +
    '  });\n' +
    '\n' +
    '  var cache = result.cache;\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = memoizeCapped;\n'
} [Function: logger]
____9999999____ {
  code: 'var base64Js = {}; export {base64Js as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var ieee754 = {}; export {ieee754 as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Creates a unary function that invokes `func` with its argument transformed.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to wrap.\n' +
    ' * @param {Function} transform The argument transform.\n' +
    ' * @returns {Function} Returns the new function.\n' +
    ' */\n' +
    'function overArg(func, transform) {\n' +
    '  return function(arg) {\n' +
    '    return func(transform(arg));\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = overArg;\n'
} [Function: logger]
____9999999____ {
  code: "var castPath = require('./_castPath'),\n" +
    "    isArguments = require('./isArguments'),\n" +
    "    isArray = require('./isArray'),\n" +
    "    isIndex = require('./_isIndex'),\n" +
    "    isLength = require('./isLength'),\n" +
    "    toKey = require('./_toKey');\n" +
    '\n' +
    '/**\n' +
    ' * Checks if `path` exists on `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @param {Array|string} path The path to check.\n' +
    ' * @param {Function} hasFunc The function to check properties.\n' +
    ' * @returns {boolean} Returns `true` if `path` exists, else `false`.\n' +
    ' */\n' +
    'function hasPath(object, path, hasFunc) {\n' +
    '  path = castPath(path, object);\n' +
    '\n' +
    '  var index = -1,\n' +
    '      length = path.length,\n' +
    '      result = false;\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    var key = toKey(path[index]);\n' +
    '    if (!(result = object != null && hasFunc(object, key))) {\n' +
    '      break;\n' +
    '    }\n' +
    '    object = object[key];\n' +
    '  }\n' +
    '  if (result || ++index != length) {\n' +
    '    return result;\n' +
    '  }\n' +
    '  length = object == null ? 0 : object.length;\n' +
    '  return !!length && isLength(length) && isIndex(key, length) &&\n' +
    '    (isArray(object) || isArguments(object));\n' +
    '}\n' +
    '\n' +
    'module.exports = hasPath;\n'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative');\n" +
    '\n' +
    'var defineProperty = (function() {\n' +
    '  try {\n' +
    "    var func = getNative(Object, 'defineProperty');\n" +
    "    func({}, '', {});\n" +
    '    return func;\n' +
    '  } catch (e) {}\n' +
    '}());\n' +
    '\n' +
    'module.exports = defineProperty;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * The base implementation of `_.times` without support for iteratee shorthands\n' +
    ' * or max array length checks.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {number} n The number of times to invoke `iteratee`.\n' +
    ' * @param {Function} iteratee The function invoked per iteration.\n' +
    ' * @returns {Array} Returns the array of results.\n' +
    ' */\n' +
    'function baseTimes(n, iteratee) {\n' +
    '  var index = -1,\n' +
    '      result = Array(n);\n' +
    '\n' +
    '  while (++index < n) {\n' +
    '    result[index] = iteratee(index);\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseTimes;\n'
} [Function: logger]
____9999999____ {
  code: 'var withSelector = {exports: {}}; export {withSelector as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js";'
} [Function: logger]
____9999999____ {
  code: '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `value` is likely a prototype object.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n' +
    ' */\n' +
    'function isPrototype(value) {\n' +
    '  var Ctor = value && value.constructor,\n' +
    "      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n" +
    '\n' +
    '  return value === proto;\n' +
    '}\n' +
    '\n' +
    'module.exports = isPrototype;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * This function is like\n' +
    ' * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n' +
    ' * except that it includes inherited enumerable properties.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} object The object to query.\n' +
    ' * @returns {Array} Returns the array of property names.\n' +
    ' */\n' +
    'function nativeKeysIn(object) {\n' +
    '  var result = [];\n' +
    '  if (object != null) {\n' +
    '    for (var key in Object(object)) {\n' +
    '      result.push(key);\n' +
    '    }\n' +
    '  }\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = nativeKeysIn;\n'
} [Function: logger]
____9999999____ {
  code: "var Uint8Array = require('./_Uint8Array');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a clone of `arrayBuffer`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n' +
    ' * @returns {ArrayBuffer} Returns the cloned array buffer.\n' +
    ' */\n' +
    'function cloneArrayBuffer(arrayBuffer) {\n' +
    '  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n' +
    '  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = cloneArrayBuffer;\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Symbol.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getRawTag.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_objectToString.js";'
} [Function: logger]
____9999999____ {
  code: "var isObject = require('./isObject');\n" +
    '\n' +
    '/** Built-in value references. */\n' +
    'var objectCreate = Object.create;\n' +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.create` without support for assigning\n' +
    ' * properties to the created object.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} proto The object to inherit from.\n' +
    ' * @returns {Object} Returns the new object.\n' +
    ' */\n' +
    'var baseCreate = (function() {\n' +
    '  function object() {}\n' +
    '  return function(proto) {\n' +
    '    if (!isObject(proto)) {\n' +
    '      return {};\n' +
    '    }\n' +
    '    if (objectCreate) {\n' +
    '      return objectCreate(proto);\n' +
    '    }\n' +
    '    object.prototype = proto;\n' +
    '    var result = new object;\n' +
    '    object.prototype = undefined;\n' +
    '    return result;\n' +
    '  };\n' +
    '}());\n' +
    '\n' +
    'module.exports = baseCreate;\n'
} [Function: logger]
____9999999____ {
  code: "var baseGetTag = require('./_baseGetTag'),\n" +
    "    isObjectLike = require('./isObjectLike');\n" +
    '\n' +
    '/** `Object#toString` result references. */\n' +
    "var argsTag = '[object Arguments]';\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `_.isArguments`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n' +
    ' */\n' +
    'function baseIsArguments(value) {\n' +
    '  return isObjectLike(value) && baseGetTag(value) == argsTag;\n' +
    '}\n' +
    '\n' +
    'module.exports = baseIsArguments;\n'
} [Function: logger]
____9999999____ {
  code: "var constant = require('./constant'),\n" +
    "    defineProperty = require('./_defineProperty'),\n" +
    "    identity = require('./identity');\n" +
    '\n' +
    '/**\n' +
    ' * The base implementation of `setToString` without support for hot loop shorting.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to modify.\n' +
    ' * @param {Function} string The `toString` result.\n' +
    ' * @returns {Function} Returns `func`.\n' +
    ' */\n' +
    'var baseSetToString = !defineProperty ? identity : function(func, string) {\n' +
    "  return defineProperty(func, 'toString', {\n" +
    "    'configurable': true,\n" +
    "    'enumerable': false,\n" +
    "    'value': constant(string),\n" +
    "    'writable': true\n" +
    '  });\n' +
    '};\n' +
    '\n' +
    'module.exports = baseSetToString;\n'
} [Function: logger]
____9999999____ {
  code: '/** Used to detect hot functions by number of calls within a span of milliseconds. */\n' +
    'var HOT_COUNT = 800,\n' +
    '    HOT_SPAN = 16;\n' +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeNow = Date.now;\n' +
    '\n' +
    '/**\n' +
    " * Creates a function that'll short out and invoke `identity` instead\n" +
    " * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n" +
    ' * milliseconds.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to restrict.\n' +
    ' * @returns {Function} Returns the new shortable function.\n' +
    ' */\n' +
    'function shortOut(func) {\n' +
    '  var count = 0,\n' +
    '      lastCalled = 0;\n' +
    '\n' +
    '  return function() {\n' +
    '    var stamp = nativeNow(),\n' +
    '        remaining = HOT_SPAN - (stamp - lastCalled);\n' +
    '\n' +
    '    lastCalled = stamp;\n' +
    '    if (remaining > 0) {\n' +
    '      if (++count >= HOT_COUNT) {\n' +
    '        return arguments[0];\n' +
    '      }\n' +
    '    } else {\n' +
    '      count = 0;\n' +
    '    }\n' +
    '    return func.apply(undefined, arguments);\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = shortOut;\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_deburrLetter.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/toString.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_asciiWords.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hasUnicodeWord.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_unicodeWords.js";'
} [Function: logger]
____9999999____ {
  code: 'var utils = {}; export {utils as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var errorCorrectionLevel = {}; export {errorCorrectionLevel as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var alignmentPattern = {}; export {alignmentPattern as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var finderPattern = {}; export {finderPattern as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var maskPattern = {}; export {maskPattern as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var errorCorrectionCode = {}; export {errorCorrectionCode as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/polynomial.js";'
} [Function: logger]
____9999999____ {
  code: 'var version = {}; export {version as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/version-check.js";'
} [Function: logger]
____9999999____ {
  code: 'var formatInfo = {}; export {formatInfo as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var mode = {}; export {mode as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/regex.js";'
} [Function: logger]
____9999999____ {
  code: 'var segments = {}; export {segments as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/numeric-data.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/alphanumeric-data.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/byte-data.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/kanji-data.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/dijkstrajs/dijkstra.js";'
} [Function: logger]
____9999999____ {
  code: 'var utils = {}; export {utils as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "var assignValue = require('./_assignValue'),\n" +
    "    baseAssignValue = require('./_baseAssignValue');\n" +
    '\n' +
    '/**\n' +
    ' * Copies properties of `source` to `object`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} source The object to copy properties from.\n' +
    ' * @param {Array} props The property identifiers to copy.\n' +
    ' * @param {Object} [object={}] The object to copy properties to.\n' +
    ' * @param {Function} [customizer] The function to customize copied values.\n' +
    ' * @returns {Object} Returns `object`.\n' +
    ' */\n' +
    'function copyObject(source, props, object, customizer) {\n' +
    '  var isNew = !object;\n' +
    '  object || (object = {});\n' +
    '\n' +
    '  var index = -1,\n' +
    '      length = props.length;\n' +
    '\n' +
    '  while (++index < length) {\n' +
    '    var key = props[index];\n' +
    '\n' +
    '    var newValue = customizer\n' +
    '      ? customizer(object[key], source[key], key, object, source)\n' +
    '      : undefined;\n' +
    '\n' +
    '    if (newValue === undefined) {\n' +
    '      newValue = source[key];\n' +
    '    }\n' +
    '    if (isNew) {\n' +
    '      baseAssignValue(object, key, newValue);\n' +
    '    } else {\n' +
    '      assignValue(object, key, newValue);\n' +
    '    }\n' +
    '  }\n' +
    '  return object;\n' +
    '}\n' +
    '\n' +
    'module.exports = copyObject;\n'
} [Function: logger]
____9999999____ {
  code: 'import { getAugmentedNamespace } from "\x00commonjsHelpers.js"; import * as unfetch_module from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/unfetch/dist/unfetch.module.js"; export default /*@__PURE__*/getAugmentedNamespace(unfetch_module);'
} [Function: logger]
____9999999____ {
  code: 'var withSelector_production_min = {}; export {withSelector_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/use-sync-external-store/shim/index.js";'
} [Function: logger]
____9999999____ {
  code: "import { isNode } from 'detect-node-es';\n" +
    'export var env = {\n' +
    '    isNode: isNode,\n' +
    '    forceCache: false,\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * A faster alternative to `Function#apply`, this function invokes `func`\n' +
    ' * with the `this` binding of `thisArg` and the arguments of `args`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to invoke.\n' +
    ' * @param {*} thisArg The `this` binding of `func`.\n' +
    ' * @param {Array} args The arguments to invoke `func` with.\n' +
    ' * @returns {*} Returns the result of `func`.\n' +
    ' */\n' +
    'function apply(func, thisArg, args) {\n' +
    '  switch (args.length) {\n' +
    '    case 0: return func.call(thisArg);\n' +
    '    case 1: return func.call(thisArg, args[0]);\n' +
    '    case 2: return func.call(thisArg, args[0], args[1]);\n' +
    '    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n' +
    '  }\n' +
    '  return func.apply(thisArg, args);\n' +
    '}\n' +
    '\n' +
    'module.exports = apply;\n'
} [Function: logger]
____9999999____ {
  code: "import { styleHookSingleton } from './hook';\n" +
    '/**\n' +
    ' * create a Component to add styles on demand\n' +
    ' * - styles are added when first instance is mounted\n' +
    ' * - styles are removed when the last instance is unmounted\n' +
    ' * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n' +
    ' */\n' +
    'export var styleSingleton = function () {\n' +
    '    var useStyle = styleHookSingleton();\n' +
    '    var Sheet = function (_a) {\n' +
    '        var styles = _a.styles, dynamic = _a.dynamic;\n' +
    '        useStyle(styles, dynamic);\n' +
    '        return null;\n' +
    '    };\n' +
    '    return Sheet;\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "import { getNonce } from 'get-nonce';\n" +
    'function makeStyleTag() {\n' +
    '    if (!document)\n' +
    '        return null;\n' +
    "    var tag = document.createElement('style');\n" +
    "    tag.type = 'text/css';\n" +
    '    var nonce = getNonce();\n' +
    '    if (nonce) {\n' +
    "        tag.setAttribute('nonce', nonce);\n" +
    '    }\n' +
    '    return tag;\n' +
    '}\n' +
    'function injectStyles(tag, css) {\n' +
    '    // @ts-ignore\n' +
    '    if (tag.styleSheet) {\n' +
    '        // @ts-ignore\n' +
    '        tag.styleSheet.cssText = css;\n' +
    '    }\n' +
    '    else {\n' +
    '        tag.appendChild(document.createTextNode(css));\n' +
    '    }\n' +
    '}\n' +
    'function insertStyleTag(tag) {\n' +
    "    var head = document.head || document.getElementsByTagName('head')[0];\n" +
    '    head.appendChild(tag);\n' +
    '}\n' +
    'export var stylesheetSingleton = function () {\n' +
    '    var counter = 0;\n' +
    '    var stylesheet = null;\n' +
    '    return {\n' +
    '        add: function (style) {\n' +
    '            if (counter == 0) {\n' +
    '                if ((stylesheet = makeStyleTag())) {\n' +
    '                    injectStyles(stylesheet, style);\n' +
    '                    insertStyleTag(stylesheet);\n' +
    '                }\n' +
    '            }\n' +
    '            counter++;\n' +
    '        },\n' +
    '        remove: function () {\n' +
    '            counter--;\n' +
    '            if (!counter && stylesheet) {\n' +
    '                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n' +
    '                stylesheet = null;\n' +
    '            }\n' +
    '        },\n' +
    '    };\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_basePropertyOf.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseToString.js";'
} [Function: logger]
____9999999____ {
  code: 'var polynomial = {}; export {polynomial as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/qrcode/lib/core/galois-field.js";'
} [Function: logger]
____9999999____ {
  code: 'var versionCheck = {}; export {versionCheck as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var regex = {}; export {regex as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/encode-utf8/index.js";'
} [Function: logger]
____9999999____ {
  code: 'var dijkstra = {exports: {}}; export {dijkstra as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var shim = {exports: {}}; export {shim as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js";'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { stylesheetSingleton } from './singleton';\n" +
    '/**\n' +
    ' * creates a hook to control style singleton\n' +
    ' * @see {@link styleSingleton} for a safer component version\n' +
    ' * @example\n' +
    ' * ```tsx\n' +
    ' * const useStyle = styleHookSingleton();\n' +
    ' * ///\n' +
    " * useStyle('body { overflow: hidden}');\n" +
    ' */\n' +
    'export var styleHookSingleton = function () {\n' +
    '    var sheet = stylesheetSingleton();\n' +
    '    return function (styles, isDynamic) {\n' +
    '        React.useEffect(function () {\n' +
    '            sheet.add(styles);\n' +
    '            return function () {\n' +
    '                sheet.remove();\n' +
    '            };\n' +
    '        }, [styles && isDynamic]);\n' +
    '    };\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "import * as React from 'react';\n" +
    "import { styleSingleton } from 'react-style-singleton';\n" +
    "import { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\n" +
    "import { getGapWidth } from './utils';\n" +
    'var Style = styleSingleton();\n' +
    "export var lockAttribute = 'data-scroll-locked';\n" +
    '// important tip - once we measure scrollBar width and remove them\n' +
    '// we could not repeat this operation\n' +
    '// thus we are using style-singleton - only the first "yet correct" style will be applied.\n' +
    'var getStyles = function (_a, allowRelative, gapMode, important) {\n' +
    '    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n' +
    "    if (gapMode === void 0) { gapMode = 'margin'; }\n" +
    '    return "\\n  .".concat(noScrollbarsClassName, " {\\n   overflow: hidden ").concat(important, ";\\n   padding-right: ").concat(gap, "px ").concat(important, ";\\n  }\\n  body[").concat(lockAttribute, "] {\\n    overflow: hidden ").concat(important, ";\\n    overscroll-behavior: contain;\\n    ").concat([\n' +
    '        allowRelative && "position: relative ".concat(important, ";"),\n' +
    "        gapMode === 'margin' &&\n" +
    '            "\\n    padding-left: ".concat(left, "px;\\n    padding-top: ").concat(top, "px;\\n    padding-right: ").concat(right, "px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: ").concat(gap, "px ").concat(important, ";\\n    "),\n' +
    `        gapMode === 'padding' && "padding-right: ".concat(gap, "px ").concat(important, ";"),\n` +
    '    ]\n' +
    '        .filter(Boolean)\n' +
    `        .join(''), "\\n  }\\n  \\n  .").concat(zeroRightClassName, " {\\n    right: ").concat(gap, "px ").concat(important, ";\\n  }\\n  \\n  .").concat(fullWidthClassName, " {\\n    margin-right: ").concat(gap, "px ").concat(important, ";\\n  }\\n  \\n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\\n    right: 0 ").concat(important, ";\\n  }\\n  \\n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\\n    margin-right: 0 ").concat(important, ";\\n  }\\n  \\n  body[").concat(lockAttribute, "] {\\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\\n  }\\n");\n` +
    '};\n' +
    '/**\n' +
    ' * Removes page scrollbar and blocks page scroll when mounted\n' +
    ' */\n' +
    'export var RemoveScrollBar = function (props) {\n' +
    "    var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? 'margin' : _a;\n" +
    '    /*\n' +
    '     gap will be measured on every component mount\n' +
    '     however it will be used only by the "first" invocation\n' +
    '     due to singleton nature of <Style\n' +
    '     */\n' +
    '    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n' +
    '    React.useEffect(function () {\n' +
    "        document.body.setAttribute(lockAttribute, '');\n" +
    '        return function () {\n' +
    '            document.body.removeAttribute(lockAttribute);\n' +
    '        };\n' +
    '    }, []);\n' +
    "    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n" +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'export var zeroGap = {\n' +
    '    left: 0,\n' +
    '    top: 0,\n' +
    '    right: 0,\n' +
    '    gap: 0,\n' +
    '};\n' +
    "var parse = function (x) { return parseInt(x || '', 10) || 0; };\n" +
    'var getOffset = function (gapMode) {\n' +
    '    var cs = window.getComputedStyle(document.body);\n' +
    "    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n" +
    "    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n" +
    "    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n" +
    '    return [parse(left), parse(top), parse(right)];\n' +
    '};\n' +
    'export var getGapWidth = function (gapMode) {\n' +
    "    if (gapMode === void 0) { gapMode = 'margin'; }\n" +
    "    if (typeof window === 'undefined') {\n" +
    '        return zeroGap;\n' +
    '    }\n' +
    '    var offsets = getOffset(gapMode);\n' +
    '    var documentWidth = document.documentElement.clientWidth;\n' +
    '    var windowWidth = window.innerWidth;\n' +
    '    return {\n' +
    '        left: offsets[0],\n' +
    '        top: offsets[1],\n' +
    '        right: offsets[2],\n' +
    '        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n' +
    '    };\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.convertToBuffer = void 0;\n' +
    'var util_utf8_browser_1 = require("@aws-sdk/util-utf8-browser");\n' +
    '// Quick polyfill\n' +
    'var fromUtf8 = typeof Buffer !== "undefined" && Buffer.from\n' +
    '    ? function (input) { return Buffer.from(input, "utf8"); }\n' +
    '    : util_utf8_browser_1.fromUtf8;\n' +
    'function convertToBuffer(data) {\n' +
    '    // Already a Uint8, do nothing\n' +
    '    if (data instanceof Uint8Array)\n' +
    '        return data;\n' +
    '    if (typeof data === "string") {\n' +
    '        return fromUtf8(data);\n' +
    '    }\n' +
    '    if (ArrayBuffer.isView(data)) {\n' +
    '        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n' +
    '    }\n' +
    '    return new Uint8Array(data);\n' +
    '}\n' +
    'exports.convertToBuffer = convertToBuffer;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydFRvQnVmZmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbnZlcnRUb0J1ZmZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsb0VBQW9FO0FBQ3BFLHNDQUFzQzs7O0FBR3RDLGdFQUF5RTtBQUV6RSxpQkFBaUI7QUFDakIsSUFBTSxRQUFRLEdBQ1osT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLE1BQU0sQ0FBQyxJQUFJO0lBQzFDLENBQUMsQ0FBQyxVQUFDLEtBQWEsSUFBSyxPQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUExQixDQUEwQjtJQUMvQyxDQUFDLENBQUMsNEJBQWUsQ0FBQztBQUV0QixTQUFnQixlQUFlLENBQUMsSUFBZ0I7SUFDOUMsOEJBQThCO0lBQzlCLElBQUksSUFBSSxZQUFZLFVBQVU7UUFBRSxPQUFPLElBQUksQ0FBQztJQUU1QyxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN2QjtJQUVELElBQUksV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUM1QixPQUFPLElBQUksVUFBVSxDQUNuQixJQUFJLENBQUMsTUFBTSxFQUNYLElBQUksQ0FBQyxVQUFVLEVBQ2YsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQy9DLENBQUM7S0FDSDtJQUVELE9BQU8sSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDOUIsQ0FBQztBQWpCRCwwQ0FpQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgQW1hem9uLmNvbSBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcblxuaW1wb3J0IHsgU291cmNlRGF0YSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgZnJvbVV0ZjggYXMgZnJvbVV0ZjhCcm93c2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXRmOC1icm93c2VyXCI7XG5cbi8vIFF1aWNrIHBvbHlmaWxsXG5jb25zdCBmcm9tVXRmOCA9XG4gIHR5cGVvZiBCdWZmZXIgIT09IFwidW5kZWZpbmVkXCIgJiYgQnVmZmVyLmZyb21cbiAgICA/IChpbnB1dDogc3RyaW5nKSA9PiBCdWZmZXIuZnJvbShpbnB1dCwgXCJ1dGY4XCIpXG4gICAgOiBmcm9tVXRmOEJyb3dzZXI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9CdWZmZXIoZGF0YTogU291cmNlRGF0YSk6IFVpbnQ4QXJyYXkge1xuICAvLyBBbHJlYWR5IGEgVWludDgsIGRvIG5vdGhpbmdcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSByZXR1cm4gZGF0YTtcblxuICBpZiAodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gZnJvbVV0ZjgoZGF0YSk7XG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGRhdGEpKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFxuICAgICAgZGF0YS5idWZmZXIsXG4gICAgICBkYXRhLmJ5dGVPZmZzZXQsXG4gICAgICBkYXRhLmJ5dGVMZW5ndGggLyBVaW50OEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVWludDhBcnJheShkYXRhKTtcbn1cbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.numToUint8 = void 0;\n' +
    'function numToUint8(num) {\n' +
    '    return new Uint8Array([\n' +
    '        (num & 0xff000000) >> 24,\n' +
    '        (num & 0x00ff0000) >> 16,\n' +
    '        (num & 0x0000ff00) >> 8,\n' +
    '        num & 0x000000ff,\n' +
    '    ]);\n' +
    '}\n' +
    'exports.numToUint8 = numToUint8;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtVG9VaW50OC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9udW1Ub1VpbnQ4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvRUFBb0U7QUFDcEUsc0NBQXNDOzs7QUFFdEMsU0FBZ0IsVUFBVSxDQUFDLEdBQVc7SUFDcEMsT0FBTyxJQUFJLFVBQVUsQ0FBQztRQUNwQixDQUFDLEdBQUcsR0FBRyxVQUFVLENBQUMsSUFBSSxFQUFFO1FBQ3hCLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUU7UUFDeEIsQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQztRQUN2QixHQUFHLEdBQUcsVUFBVTtLQUNqQixDQUFDLENBQUM7QUFDTCxDQUFDO0FBUEQsZ0NBT0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgQW1hem9uLmNvbSBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcblxuZXhwb3J0IGZ1bmN0aW9uIG51bVRvVWludDgobnVtOiBudW1iZXIpIHtcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFtcbiAgICAobnVtICYgMHhmZjAwMDAwMCkgPj4gMjQsXG4gICAgKG51bSAmIDB4MDBmZjAwMDApID4+IDE2LFxuICAgIChudW0gJiAweDAwMDBmZjAwKSA+PiA4LFxuICAgIG51bSAmIDB4MDAwMDAwZmYsXG4gIF0pO1xufVxuIl19'
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.isEmptyData = void 0;\n' +
    'function isEmptyData(data) {\n' +
    '    if (typeof data === "string") {\n' +
    '        return data.length === 0;\n' +
    '    }\n' +
    '    return data.byteLength === 0;\n' +
    '}\n' +
    'exports.isEmptyData = isEmptyData;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNFbXB0eURhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaXNFbXB0eURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9FQUFvRTtBQUNwRSxzQ0FBc0M7OztBQUl0QyxTQUFnQixXQUFXLENBQUMsSUFBZ0I7SUFDMUMsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztLQUMxQjtJQUVELE9BQU8sSUFBSSxDQUFDLFVBQVUsS0FBSyxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQU5ELGtDQU1DIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEFtYXpvbi5jb20gSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG5cbmltcG9ydCB7IFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHlEYXRhKGRhdGE6IFNvdXJjZURhdGEpOiBib29sZWFuIHtcbiAgaWYgKHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGRhdGEubGVuZ3RoID09PSAwO1xuICB9XG5cbiAgcmV0dXJuIGRhdGEuYnl0ZUxlbmd0aCA9PT0gMDtcbn1cbiJdfQ=='
} [Function: logger]
____9999999____ {
  code: '"use strict";\n' +
    '// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n' +
    '// SPDX-License-Identifier: Apache-2.0\n' +
    'Object.defineProperty(exports, "__esModule", { value: true });\n' +
    'exports.uint32ArrayFrom = void 0;\n' +
    '// IE 11 does not support Array.from, so we do it manually\n' +
    'function uint32ArrayFrom(a_lookUpTable) {\n' +
    '    if (!Array.from) {\n' +
    '        var return_array = new Uint32Array(a_lookUpTable.length);\n' +
    '        var a_index = 0;\n' +
    '        while (a_index < a_lookUpTable.length) {\n' +
    '            return_array[a_index] = a_lookUpTable[a_index];\n' +
    '        }\n' +
    '        return return_array;\n' +
    '    }\n' +
    '    return Uint32Array.from(a_lookUpTable);\n' +
    '}\n' +
    'exports.uint32ArrayFrom = uint32ArrayFrom;\n' +
    '//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWludDMyQXJyYXlGcm9tLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3VpbnQzMkFycmF5RnJvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsb0VBQW9FO0FBQ3BFLHNDQUFzQzs7O0FBRXRDLDBEQUEwRDtBQUMxRCxTQUFnQixlQUFlLENBQUMsYUFBNEI7SUFDMUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUU7UUFDZixJQUFNLFlBQVksR0FBRyxJQUFJLFdBQVcsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDMUQsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFBO1FBQ2YsT0FBTyxPQUFPLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRTtZQUNyQyxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1NBQy9DO1FBQ0QsT0FBTyxZQUFZLENBQUE7S0FDcEI7SUFDRCxPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7QUFDeEMsQ0FBQztBQVZELDBDQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEFtYXpvbi5jb20gSW5jLiBvciBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG5cbi8vIElFIDExIGRvZXMgbm90IHN1cHBvcnQgQXJyYXkuZnJvbSwgc28gd2UgZG8gaXQgbWFudWFsbHlcbmV4cG9ydCBmdW5jdGlvbiB1aW50MzJBcnJheUZyb20oYV9sb29rVXBUYWJsZTogQXJyYXk8bnVtYmVyPik6IFVpbnQzMkFycmF5IHtcbiAgaWYgKCFBcnJheS5mcm9tKSB7XG4gICAgY29uc3QgcmV0dXJuX2FycmF5ID0gbmV3IFVpbnQzMkFycmF5KGFfbG9va1VwVGFibGUubGVuZ3RoKVxuICAgIGxldCBhX2luZGV4ID0gMFxuICAgIHdoaWxlIChhX2luZGV4IDwgYV9sb29rVXBUYWJsZS5sZW5ndGgpIHtcbiAgICAgIHJldHVybl9hcnJheVthX2luZGV4XSA9IGFfbG9va1VwVGFibGVbYV9pbmRleF1cbiAgICB9XG4gICAgcmV0dXJuIHJldHVybl9hcnJheVxuICB9XG4gIHJldHVybiBVaW50MzJBcnJheS5mcm9tKGFfbG9va1VwVGFibGUpXG59XG4iXX0='
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "import AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\n" +
    "export default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n"
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arrayMap.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isArray.js";'
} [Function: logger]
____9999999____ {
  code: 'var galoisField = {}; export {galoisField as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "'use strict';\n" +
    '\n' +
    "export default typeof FormData !== 'undefined' ? FormData : null;\n"
} [Function: logger]
____9999999____ {
  code: 'var useSyncExternalStoreShim_production_min = {}; export {useSyncExternalStoreShim_production_min as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n"
} [Function: logger]
____9999999____ {
  code: "var hashClear = require('./_hashClear'),\n" +
    "    hashDelete = require('./_hashDelete'),\n" +
    "    hashGet = require('./_hashGet'),\n" +
    "    hashHas = require('./_hashHas'),\n" +
    "    hashSet = require('./_hashSet');\n" +
    '\n' +
    '/**\n' +
    ' * Creates a hash object.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @constructor\n' +
    ' * @param {Array} [entries] The key-value pairs to cache.\n' +
    ' */\n' +
    'function Hash(entries) {\n' +
    '  var index = -1,\n' +
    '      length = entries == null ? 0 : entries.length;\n' +
    '\n' +
    '  this.clear();\n' +
    '  while (++index < length) {\n' +
    '    var entry = entries[index];\n' +
    '    this.set(entry[0], entry[1]);\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    '// Add methods to `Hash`.\n' +
    'Hash.prototype.clear = hashClear;\n' +
    "Hash.prototype['delete'] = hashDelete;\n" +
    'Hash.prototype.get = hashGet;\n' +
    'Hash.prototype.has = hashHas;\n' +
    'Hash.prototype.set = hashSet;\n' +
    '\n' +
    'module.exports = Hash;\n'
} [Function: logger]
____9999999____ {
  code: "var isKeyable = require('./_isKeyable');\n" +
    '\n' +
    '/**\n' +
    ' * Gets the data for `map`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Object} map The map to query.\n' +
    ' * @param {string} key The reference key.\n' +
    ' * @returns {*} Returns the map data.\n' +
    ' */\n' +
    'function getMapData(map, key) {\n' +
    '  var data = map.__data__;\n' +
    '  return isKeyable(key)\n' +
    "    ? data[typeof key == 'string' ? 'string' : 'hash']\n" +
    '    : data.map;\n' +
    '}\n' +
    '\n' +
    'module.exports = getMapData;\n'
} [Function: logger]
____9999999____ {
  code: "var overArg = require('./_overArg');\n" +
    '\n' +
    '/* Built-in method references for those with the same name as other `lodash` methods. */\n' +
    'var nativeKeys = overArg(Object.keys, Object);\n' +
    '\n' +
    'module.exports = nativeKeys;\n'
} [Function: logger]
____9999999____ {
  code: "var coreJsData = require('./_coreJsData');\n" +
    '\n' +
    '/** Used to detect methods masquerading as native. */\n' +
    'var maskSrcKey = (function() {\n' +
    "  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n" +
    "  return uid ? ('Symbol(src)_1.' + uid) : '';\n" +
    '}());\n' +
    '\n' +
    '/**\n' +
    ' * Checks if `func` has its source masked.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {Function} func The function to check.\n' +
    ' * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n' +
    ' */\n' +
    'function isMasked(func) {\n' +
    '  return !!maskSrcKey && (maskSrcKey in func);\n' +
    '}\n' +
    '\n' +
    'module.exports = isMasked;\n'
} [Function: logger]
____9999999____ {
  code: "var MapCache = require('./_MapCache');\n" +
    '\n' +
    '/** Error message constants. */\n' +
    "var FUNC_ERROR_TEXT = 'Expected a function';\n" +
    '\n' +
    '/**\n' +
    ' * Creates a function that memoizes the result of `func`. If `resolver` is\n' +
    ' * provided, it determines the cache key for storing the result based on the\n' +
    ' * arguments provided to the memoized function. By default, the first argument\n' +
    ' * provided to the memoized function is used as the map cache key. The `func`\n' +
    ' * is invoked with the `this` binding of the memoized function.\n' +
    ' *\n' +
    ' * **Note:** The cache is exposed as the `cache` property on the memoized\n' +
    ' * function. Its creation may be customized by replacing the `_.memoize.Cache`\n' +
    ' * constructor with one whose instances implement the\n' +
    ' * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n' +
    ' * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 0.1.0\n' +
    ' * @category Function\n' +
    ' * @param {Function} func The function to have its output memoized.\n' +
    ' * @param {Function} [resolver] The function to resolve the cache key.\n' +
    ' * @returns {Function} Returns the new memoized function.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var object = { 'a': 1, 'b': 2 };\n" +
    " * var other = { 'c': 3, 'd': 4 };\n" +
    ' *\n' +
    ' * var values = _.memoize(_.values);\n' +
    ' * values(object);\n' +
    ' * // => [1, 2]\n' +
    ' *\n' +
    ' * values(other);\n' +
    ' * // => [3, 4]\n' +
    ' *\n' +
    ' * object.a = 2;\n' +
    ' * values(object);\n' +
    ' * // => [1, 2]\n' +
    ' *\n' +
    ' * // Modify the result cache.\n' +
    " * values.cache.set(object, ['a', 'b']);\n" +
    ' * values(object);\n' +
    " * // => ['a', 'b']\n" +
    ' *\n' +
    ' * // Replace `_.memoize.Cache`.\n' +
    ' * _.memoize.Cache = WeakMap;\n' +
    ' */\n' +
    'function memoize(func, resolver) {\n' +
    "  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n" +
    '    throw new TypeError(FUNC_ERROR_TEXT);\n' +
    '  }\n' +
    '  var memoized = function() {\n' +
    '    var args = arguments,\n' +
    '        key = resolver ? resolver.apply(this, args) : args[0],\n' +
    '        cache = memoized.cache;\n' +
    '\n' +
    '    if (cache.has(key)) {\n' +
    '      return cache.get(key);\n' +
    '    }\n' +
    '    var result = func.apply(this, args);\n' +
    '    memoized.cache = cache.set(key, result) || cache;\n' +
    '    return result;\n' +
    '  };\n' +
    '  memoized.cache = new (memoize.Cache || MapCache);\n' +
    '  return memoized;\n' +
    '}\n' +
    '\n' +
    '// Expose `MapCache`.\n' +
    'memoize.Cache = MapCache;\n' +
    '\n' +
    'module.exports = memoize;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Creates a function that returns `value`.\n' +
    ' *\n' +
    ' * @static\n' +
    ' * @memberOf _\n' +
    ' * @since 2.4.0\n' +
    ' * @category Util\n' +
    ' * @param {*} value The value to return from the new function.\n' +
    ' * @returns {Function} Returns the new constant function.\n' +
    ' * @example\n' +
    ' *\n' +
    " * var objects = _.times(2, _.constant({ 'a': 1 }));\n" +
    ' *\n' +
    ' * console.log(objects);\n' +
    " * // => [{ 'a': 1 }, { 'a': 1 }]\n" +
    ' *\n' +
    ' * console.log(objects[0] === objects[1]);\n' +
    ' * // => true\n' +
    ' */\n' +
    'function constant(value) {\n' +
    '  return function() {\n' +
    '    return value;\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'module.exports = constant;\n'
} [Function: logger]
____9999999____ { code: 'export const isNode = false;\n\n' } [Function: logger]
____9999999____ {
  code: 'import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from "./pureJs";\n' +
    'import { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from "./whatwgEncodingApi";\n' +
    'export const fromUtf8 = (input) => typeof TextEncoder === "function" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\n' +
    'export const toUtf8 = (input) => typeof TextDecoder === "function" ? textEncoderToUtf8(input) : jsToUtf8(input);\n'
} [Function: logger]
____9999999____ {
  code: 'var currentNonce;\n' +
    'export var setNonce = function (nonce) {\n' +
    '    currentNonce = nonce;\n' +
    '};\n' +
    'export var getNonce = function () {\n' +
    '    if (currentNonce) {\n' +
    '        return currentNonce;\n' +
    '    }\n' +
    "    if (typeof __webpack_nonce__ !== 'undefined') {\n" +
    '        return __webpack_nonce__;\n' +
    '    }\n' +
    '    return undefined;\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: "var nativeCreate = require('./_nativeCreate');\n" +
    '\n' +
    '/**\n' +
    ' * Removes all key-value entries from the hash.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name clear\n' +
    ' * @memberOf Hash\n' +
    ' */\n' +
    'function hashClear() {\n' +
    '  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n' +
    '  this.size = 0;\n' +
    '}\n' +
    '\n' +
    'module.exports = hashClear;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Removes `key` and its value from the hash.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name delete\n' +
    ' * @memberOf Hash\n' +
    ' * @param {Object} hash The hash to modify.\n' +
    ' * @param {string} key The key of the value to remove.\n' +
    ' * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n' +
    ' */\n' +
    'function hashDelete(key) {\n' +
    '  var result = this.has(key) && delete this.__data__[key];\n' +
    '  this.size -= result ? 1 : 0;\n' +
    '  return result;\n' +
    '}\n' +
    '\n' +
    'module.exports = hashDelete;\n'
} [Function: logger]
____9999999____ {
  code: "var nativeCreate = require('./_nativeCreate');\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * Checks if a hash value for `key` exists.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name has\n' +
    ' * @memberOf Hash\n' +
    ' * @param {string} key The key of the entry to check.\n' +
    ' * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n' +
    ' */\n' +
    'function hashHas(key) {\n' +
    '  var data = this.__data__;\n' +
    '  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n' +
    '}\n' +
    '\n' +
    'module.exports = hashHas;\n'
} [Function: logger]
____9999999____ {
  code: "var nativeCreate = require('./_nativeCreate');\n" +
    '\n' +
    '/** Used to stand-in for `undefined` hash values. */\n' +
    "var HASH_UNDEFINED = '__lodash_hash_undefined__';\n" +
    '\n' +
    '/**\n' +
    ' * Sets the hash `key` to `value`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name set\n' +
    ' * @memberOf Hash\n' +
    ' * @param {string} key The key of the value to set.\n' +
    ' * @param {*} value The value to set.\n' +
    ' * @returns {Object} Returns the hash instance.\n' +
    ' */\n' +
    'function hashSet(key, value) {\n' +
    '  var data = this.__data__;\n' +
    '  this.size += this.has(key) ? 0 : 1;\n' +
    '  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n' +
    '  return this;\n' +
    '}\n' +
    '\n' +
    'module.exports = hashSet;\n'
} [Function: logger]
____9999999____ {
  code: "var nativeCreate = require('./_nativeCreate');\n" +
    '\n' +
    '/** Used to stand-in for `undefined` hash values. */\n' +
    "var HASH_UNDEFINED = '__lodash_hash_undefined__';\n" +
    '\n' +
    '/** Used for built-in method references. */\n' +
    'var objectProto = Object.prototype;\n' +
    '\n' +
    '/** Used to check objects for own properties. */\n' +
    'var hasOwnProperty = objectProto.hasOwnProperty;\n' +
    '\n' +
    '/**\n' +
    ' * Gets the hash value for `key`.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @name get\n' +
    ' * @memberOf Hash\n' +
    ' * @param {string} key The key of the value to get.\n' +
    ' * @returns {*} Returns the entry value.\n' +
    ' */\n' +
    'function hashGet(key) {\n' +
    '  var data = this.__data__;\n' +
    '  if (nativeCreate) {\n' +
    '    var result = data[key];\n' +
    '    return result === HASH_UNDEFINED ? undefined : result;\n' +
    '  }\n' +
    '  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n' +
    '}\n' +
    '\n' +
    'module.exports = hashGet;\n'
} [Function: logger]
____9999999____ {
  code: '/**\n' +
    ' * Checks if `value` is suitable for use as unique object key.\n' +
    ' *\n' +
    ' * @private\n' +
    ' * @param {*} value The value to check.\n' +
    ' * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n' +
    ' */\n' +
    'function isKeyable(value) {\n' +
    '  var type = typeof value;\n' +
    "  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n" +
    "    ? (value !== '__proto__')\n" +
    '    : (value === null);\n' +
    '}\n' +
    '\n' +
    'module.exports = isKeyable;\n'
} [Function: logger]
____9999999____ {
  code: "var root = require('./_root');\n" +
    '\n' +
    '/** Used to detect overreaching core-js shims. */\n' +
    "var coreJsData = root['__core-js_shared__'];\n" +
    '\n' +
    'module.exports = coreJsData;\n'
} [Function: logger]
____9999999____ {
  code: 'export function fromUtf8(input) {\n' +
    '    return new TextEncoder().encode(input);\n' +
    '}\n' +
    'export function toUtf8(input) {\n' +
    '    return new TextDecoder("utf-8").decode(input);\n' +
    '}\n'
} [Function: logger]
____9999999____ {
  code: 'export const fromUtf8 = (input) => {\n' +
    '    const bytes = [];\n' +
    '    for (let i = 0, len = input.length; i < len; i++) {\n' +
    '        const value = input.charCodeAt(i);\n' +
    '        if (value < 0x80) {\n' +
    '            bytes.push(value);\n' +
    '        }\n' +
    '        else if (value < 0x800) {\n' +
    '            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n' +
    '        }\n' +
    '        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n' +
    '            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n' +
    '            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n' +
    '        }\n' +
    '        else {\n' +
    '            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n' +
    '        }\n' +
    '    }\n' +
    '    return Uint8Array.from(bytes);\n' +
    '};\n' +
    'export const toUtf8 = (input) => {\n' +
    '    let decoded = "";\n' +
    '    for (let i = 0, len = input.length; i < len; i++) {\n' +
    '        const byte = input[i];\n' +
    '        if (byte < 0x80) {\n' +
    '            decoded += String.fromCharCode(byte);\n' +
    '        }\n' +
    '        else if (0b11000000 <= byte && byte < 0b11100000) {\n' +
    '            const nextByte = input[++i];\n' +
    '            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n' +
    '        }\n' +
    '        else if (0b11110000 <= byte && byte < 0b101101101) {\n' +
    '            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n' +
    '            const encoded = "%" + surrogatePair.map((byteValue) => byteValue.toString(16)).join("%");\n' +
    '            decoded += decodeURIComponent(encoded);\n' +
    '        }\n' +
    '        else {\n' +
    '            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n' +
    '        }\n' +
    '    }\n' +
    '    return decoded;\n' +
    '};\n'
} [Function: logger]
____9999999____ {
  code: 'var build = {}; export {build as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'import { getAugmentedNamespace } from "\x00commonjsHelpers.js"; import * as tslib_es6 from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/tslib/tslib.es6.js"; export default /*@__PURE__*/getAugmentedNamespace(tslib_es6);'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/sha256-js/build/jsSha256.js";'
} [Function: logger]
____9999999____ {
  code: "var getNative = require('./_getNative');\n" +
    '\n' +
    '/* Built-in method references that are verified to be native. */\n' +
    "var nativeCreate = getNative(Object, 'create');\n" +
    '\n' +
    'module.exports = nativeCreate;\n'
} [Function: logger]
____9999999____ {
  code: 'var jsSha256 = {}; export {jsSha256 as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/sha256-js/build/constants.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/sha256-js/build/RawSha256.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/util/build/index.js";'
} [Function: logger]
____9999999____ {
  code: 'var constants = {}; export {constants as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var RawSha256 = {}; export {RawSha256 as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var build = {}; export {build as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/util/build/convertToBuffer.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/util/build/isEmptyData.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/util/build/numToUint8.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/amazon-cognito-identity-js/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js";'
} [Function: logger]
____9999999____ {
  code: 'var convertToBuffer = {}; export {convertToBuffer as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'import { getAugmentedNamespace } from "\x00commonjsHelpers.js"; import * as distEs from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js"; export default /*@__PURE__*/getAugmentedNamespace(distEs);'
} [Function: logger]
____9999999____ {
  code: 'var isEmptyData = {}; export {isEmptyData as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var numToUint8 = {}; export {numToUint8 as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'var uint32ArrayFrom = {}; export {uint32ArrayFrom as __exports}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseMerge.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_createAssigner.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Stack.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_assignMergeValue.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseFor.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseMergeDeep.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/keysIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_safeGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseRest.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isIterateeCall.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsEqual.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_ListCache.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stackClear.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stackDelete.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stackGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stackHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stackSet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseAssignValue.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/eq.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_createBaseFor.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_cloneBuffer.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_cloneTypedArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_copyArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_initCloneObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isArguments.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isArrayLikeObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isBuffer.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isFunction.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isPlainObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isTypedArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/toPlainObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arrayLikeKeys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseKeysIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isArrayLike.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/identity.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_overRest.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_setToString.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isIndex.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsEqualDeep.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_listCacheClear.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_listCacheDelete.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_listCacheGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_listCacheHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_listCacheSet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Map.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_MapCache.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_defineProperty.js";'
} [Function: logger]
____9999999____ {
  code: 'var _cloneBuffer = {exports: {}}; export {_cloneBuffer as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_cloneArrayBuffer.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseCreate.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getPrototype.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isPrototype.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsArguments.js";'
} [Function: logger]
____9999999____ {
  code: 'var isBuffer = {exports: {}}; export {isBuffer as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/stubFalse.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsTypedArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseUnary.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_nodeUtil.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_copyObject.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseTimes.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_nativeKeysIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/isLength.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_apply.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseSetToString.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_shortOut.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_equalArrays.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_equalByTag.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_equalObjects.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getTag.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_assocIndexOf.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getNative.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapCacheClear.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapCacheDelete.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapCacheGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapCacheHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapCacheSet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Uint8Array.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_overArg.js";'
} [Function: logger]
____9999999____ {
  code: 'var _nodeUtil = {exports: {}}; export {_nodeUtil as __module}',
  meta: { commonjs: { isCommonJS: false } }
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_assignValue.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/constant.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_SetCache.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arraySome.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_cacheHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_mapToArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_setToArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getAllKeys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_DataView.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Promise.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Set.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_WeakMap.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_toSource.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsNative.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getValue.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_Hash.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getMapData.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIteratee.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_basePickBy.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getAllKeysIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_setCacheAdd.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_setCacheHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseGetAllKeys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getSymbols.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/keys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isMasked.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hashClear.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hashDelete.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hashGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hashHas.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hashSet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isKeyable.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseMatches.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseMatchesProperty.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/property.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseGet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseSet.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_castPath.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getSymbolsIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arrayPush.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_arrayFilter.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/stubArray.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseKeys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_coreJsData.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_nativeCreate.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseIsMatch.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_getMatchData.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_matchesStrictComparable.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/get.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/hasIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isKey.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_isStrictComparable.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_toKey.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseProperty.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_basePropertyDeep.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_stringToPath.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_nativeKeys.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_baseHasIn.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_hasPath.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/_memoizeCapped.js";'
} [Function: logger]
____9999999____ {
  code: 'export { __moduleExports as default } from "F:/ws2/middle_earth/paycode-customer-v2/node_modules/lodash/memoize.js";'
} [Function: logger]
[32m✓[39m 1619 modules transformed.
rendering chunks...
computing gzip size...
[2mdist/[22m[32mindex.html                 [39m[1m[2m  0.46 kB[22m[1m[22m[2m │ gzip:   0.29 kB[22m
[2mdist/[22m[35massets/index-BXAokFsk.css  [39m[1m[2m  2.44 kB[22m[1m[22m[2m │ gzip:   0.97 kB[22m
[2mdist/[22m[36massets/index-BdCQIkpO.js   [39m[1m[33m695.04 kB[39m[22m[2m │ gzip: 202.13 kB[22m
[32m✓ built in 21.22s[39m

> @paycode-customer-v2/web-ui@0.0.1 postbuild
> npm run deploy


> @paycode-customer-v2/web-ui@0.0.1 deploy
> node scripts/deploy.js

Updated .env

Waiting for changeset to be created..

No changes to deploy. Stack web-ui-v0-dev-3024 is up to date
Deployment process exited with code 0

> @paycode-customer-v2/web-ui@0.0.1 postdeploy
> node scripts/postdeploy.js

Updated .env
{
  bucketName: 'web-ui-v0-dev-3024-sitebucket-4strpqovkrqq',
  distributionId: 'E33SLCMJFJEPH8'
}
Invalidation request sent for distribution E33SLCMJFJEPH8
Completed 2.4 KiB/681.8 KiB (4.4 KiB/s) with 3 file(s) remainingupload: dist\assets\index-BXAokFsk.css to s3://web-ui-v0-dev-3024-sitebucket-4strpqovkrqq/assets/index-BXAokFsk.css
Completed 2.4 KiB/681.8 KiB (4.4 KiB/s) with 2 file(s) remainingCompleted 2.8 KiB/681.8 KiB (1.9 KiB/s) with 2 file(s) remainingupload: dist\index.html to s3://web-ui-v0-dev-3024-sitebucket-4strpqovkrqq/index.html
Completed 2.8 KiB/681.8 KiB (1.9 KiB/s) with 1 file(s) remainingCompleted 258.8 KiB/681.8 KiB (138.0 KiB/s) with 1 file(s) remainingCompleted 514.8 KiB/681.8 KiB (234.8 KiB/s) with 1 file(s) remainingCompleted 681.8 KiB/681.8 KiB (264.4 KiB/s) with 1 file(s) remainingupload: dist\assets\index-BdCQIkpO.js to s3://web-ui-v0-dev-3024-sitebucket-4strpqovkrqq/assets/index-BdCQIkpO.js
