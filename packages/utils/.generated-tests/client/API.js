"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAxiosInstance = exports.postPayment = exports.getTransactionById = exports.getTransactions = exports.getBalance = void 0;
/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * PayCodeProxy API
 * OpenAPI spec version: 1.0.0
 */
var axios_1 = require("axios");
/**
* @summary Get balance for a user
*/
var getBalance = function (params, options) {
    return axios_1.default.get("/balance", __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.getBalance = getBalance;
/**
 * @summary Get transactions for a user
 */
var getTransactions = function (params, options) {
    return axios_1.default.get("/transactions", __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.getTransactions = getTransactions;
/**
 * @summary Get transaction by ID and username
 */
var getTransactionById = function (params, options) {
    return axios_1.default.get("/transaction", __assign(__assign({}, options), { params: __assign(__assign({}, params), options === null || options === void 0 ? void 0 : options.params) }));
};
exports.getTransactionById = getTransactionById;
/**
 * @summary Post a payment
 */
var postPayment = function (postPaymentBody, options) {
    return axios_1.default.post("/payment", postPaymentBody, options);
};
exports.postPayment = postPayment;
var getAxiosInstance = function () { return axios_1.default; };
exports.getAxiosInstance = getAxiosInstance;
